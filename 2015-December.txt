From wdunlap at tibco.com  Tue Dec  1 00:09:03 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Mon, 30 Nov 2015 15:09:03 -0800
Subject: [Rd] Inconsistency in treating NaN-results?
In-Reply-To: <CAFEqCdzQP1cY1xQtK-ko_Eo_Brji4mET7ZDSL+A7+etK5aCnsQ@mail.gmail.com>
References: <CAOKDuOgd4PsfS+wDFS56m=9g_8ULBj0dxxMKbUg7iKJP1GQbrA@mail.gmail.com>
	<CAFEqCdzQP1cY1xQtK-ko_Eo_Brji4mET7ZDSL+A7+etK5aCnsQ@mail.gmail.com>
Message-ID: <CAF8bMcZt4EFL0Zg0LeLGV8k8Sk8bxdT94oc_-jZjJMi-sx_OUg@mail.gmail.com>

As a side note, Splus makes sin(x) NA, with a warning, for
abs(x)>1.6*2^48 (about
4.51e+14) because more than half the digits are incorrect in sin(x)
for such x.  E.g.,
in R we get:

> options(digits=16)
> library(Rmpfr)
> sin(4.6e14)
[1] -0.792253849684354
> sin(mpfr(4.6e14, precBits=500))
1 'mpfr' number of precision  500   bits
[1] -0.7922542110462653250609291646717356496505801794010...

If R did make sin(4.6e14) NaN, would you want a warning?

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Nov 30, 2015 at 2:38 PM, Greg Snow <538280 at gmail.com> wrote:
> R and the S language that it is based on has evolved as much as it has
> been designed, so there are often inconsistencies due similar
> functionality evolving from different paths.  In some cases these
> inconsistencies are resolved, but generally only once someone notices
> and care enough to do something about it.  In some other cases the
> inconsistencies are left for historical reasons and for back
> compatibility (for example some functions use the na.rm option and
> other use the na.action option for how to deal with missing values).
>
> That said, your report inconsistencies in some function calls, but
> your calls are not completely consistent.  Consider:
>
>> sin(NaN)
> [1] NaN
>
> See, no warning, just like your other cases.  Also consider the
> difference between log(-1) and log(NaN).  It looks like the warning
> comes mainly when going from one type of exception (Inf) to another
> (NaN), but not when propagating an NaN.
>
> The 'sin' function (and others) do not know whether the argument was
> typed in as Inf, or if it is the result of another function returning
> Inf (well technically it could be made to figure out some common
> cases, but I for one don't see it worth the effort).  So you could
> have typed something like 'sin(myfun(x))' and sin looks like it
> assumes that if myfun would have warned about creating an NaN value,
> so a second warning is not needed, but myfun may legitimately return
> Inf, so sin feels it helpful to warn in that case.  And warnings can
> always be turned off and/or ignored.
>
> The only real exception that you show is 0/0 is does not start with
> NaN, but produces NaN.  But infix operator functions tend to behave a
> bit differently.
>
> On Thu, Nov 26, 2015 at 2:07 AM, Mark van der Loo
> <mark.vanderloo at gmail.com> wrote:
>> This question is more out of curiosity than a complaint or suggestion, but
>> I'm just wondering.
>>
>> The behavior of R on calculations that result in NaN seems a bit
>> inconsistent.
>>
>> # this is expected:
>>> 0/0
>> [1] NaN
>>
>> # but this gives a warning
>>> sin(Inf)
>> [1] NaN
>> Warning message:
>> In sin(Inf) : NaNs produced
>>
>> # and this again does not
>>> exp(NaN)
>> [1] NaN
>>
>>
>> Conceptually, I like to think that R computes over the real line augmented
>> with NaN, Inf, -Inf, NaN, and NA (which is technically also NaN). As far as
>> I know, this set is closed under R's arithmetic operations and mathematical
>> functions (following the IEEE standard on double precision). If that's the
>> case, the result sin(Inf)=NaN seems normal to me and a warning is
>> unnecessary.
>>
>> So why the choice to have warning on sin(Inf), but not on 0/0 or exp(Nan)?
>> Is it just historical or am I missing a reasoning or some standard?
>>
>>
>> Best,
>> Mark
>>
>>> sessionInfo()
>> R version 3.2.2 (2015-08-14)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 14.04.3 LTS
>>
>> locale:
>>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>  [3] LC_TIME=nl_NL.UTF-8        LC_COLLATE=en_US.UTF-8
>>  [5] LC_MONETARY=nl_NL.UTF-8    LC_MESSAGES=en_US.UTF-8
>>  [7] LC_PAPER=nl_NL.UTF-8       LC_NAME=C
>>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=nl_NL.UTF-8 LC_IDENTIFICATION=C
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>
> --
> Gregory (Greg) L. Snow Ph.D.
> 538280 at gmail.com
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From mark.vanderloo at gmail.com  Tue Dec  1 10:43:15 2015
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Tue, 01 Dec 2015 09:43:15 +0000
Subject: [Rd] Inconsistency in treating NaN-results?
In-Reply-To: <CAF8bMcZt4EFL0Zg0LeLGV8k8Sk8bxdT94oc_-jZjJMi-sx_OUg@mail.gmail.com>
References: <CAOKDuOgd4PsfS+wDFS56m=9g_8ULBj0dxxMKbUg7iKJP1GQbrA@mail.gmail.com>
	<CAFEqCdzQP1cY1xQtK-ko_Eo_Brji4mET7ZDSL+A7+etK5aCnsQ@mail.gmail.com>
	<CAF8bMcZt4EFL0Zg0LeLGV8k8Sk8bxdT94oc_-jZjJMi-sx_OUg@mail.gmail.com>
Message-ID: <CAOKDuOhxu7Of7ZgBHZAEu-t18sjnv3jMzfV=B1Z7Y3_ek2OyFQ@mail.gmail.com>

Thank you very much, Greg and Bill for clearing things up.

As said, it was more out of curiosity then anything else.

I think my examples were not completely inconsistent (as Greg mentioned)
since arithmetic operations that generate NaN's do so without warning:

> Inf - Inf
[1] NaN
> 0/0
[1] NaN,

while mathematical functions generating NaN's do (as noted by Greg):

> sin(Inf)
[1] NaN
Warning message:
In sin(Inf) : NaNs produced
> log(-1)
[1] NaN
> gamma(-1)
[1] NaN
Warning message:
In gamma(-1) : NaNs produced

And this was what surprised me. The rule thus seems to be: arithmetic
operations do it without warning, standard math functions do it with a
warning. I think that is totally fine. As long as we can reason about what
to expect, we're good.

To answer Bill's question

>> If R did make sin(4.6e14) NaN, would you want a warning?

I think I like the behavior as it is (not producing NaN), but that's
because I feel I have a reasonable working knowledge about numerical
precision issues. I'm not an expert, but I believe that at least my
internal alarm bells start ringing at the right time, and my old copy of
Stoer and Bulirsch[1] is never much more then an arm's length away. So it
all depends on what user you're aiming at when implementing such things. A
(switchable) warning about loss of precision without returning NaN would
probably be a reasonable compromise.

Best,
Mark

[1] https://books.google.nl/books?id=1oDXWLb9qEkC



Op di 1 dec. 2015 om 00:09 schreef William Dunlap <wdunlap at tibco.com>:

> As a side note, Splus makes sin(x) NA, with a warning, for
> abs(x)>1.6*2^48 (about
> 4.51e+14) because more than half the digits are incorrect in sin(x)
> for such x.  E.g.,
> in R we get:
>
> > options(digits=16)
> > library(Rmpfr)
> > sin(4.6e14)
> [1] -0.792253849684354
> > sin(mpfr(4.6e14, precBits=500))
> 1 'mpfr' number of precision  500   bits
> [1] -0.7922542110462653250609291646717356496505801794010...
>
> If R did make sin(4.6e14) NaN, would you want a warning?
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Mon, Nov 30, 2015 at 2:38 PM, Greg Snow <538280 at gmail.com> wrote:
> > R and the S language that it is based on has evolved as much as it has
> > been designed, so there are often inconsistencies due similar
> > functionality evolving from different paths.  In some cases these
> > inconsistencies are resolved, but generally only once someone notices
> > and care enough to do something about it.  In some other cases the
> > inconsistencies are left for historical reasons and for back
> > compatibility (for example some functions use the na.rm option and
> > other use the na.action option for how to deal with missing values).
> >
> > That said, your report inconsistencies in some function calls, but
> > your calls are not completely consistent.  Consider:
> >
> >> sin(NaN)
> > [1] NaN
> >
> > See, no warning, just like your other cases.  Also consider the
> > difference between log(-1) and log(NaN).  It looks like the warning
> > comes mainly when going from one type of exception (Inf) to another
> > (NaN), but not when propagating an NaN.
> >
> > The 'sin' function (and others) do not know whether the argument was
> > typed in as Inf, or if it is the result of another function returning
> > Inf (well technically it could be made to figure out some common
> > cases, but I for one don't see it worth the effort).  So you could
> > have typed something like 'sin(myfun(x))' and sin looks like it
> > assumes that if myfun would have warned about creating an NaN value,
> > so a second warning is not needed, but myfun may legitimately return
> > Inf, so sin feels it helpful to warn in that case.  And warnings can
> > always be turned off and/or ignored.
> >
> > The only real exception that you show is 0/0 is does not start with
> > NaN, but produces NaN.  But infix operator functions tend to behave a
> > bit differently.
> >
> > On Thu, Nov 26, 2015 at 2:07 AM, Mark van der Loo
> > <mark.vanderloo at gmail.com> wrote:
> >> This question is more out of curiosity than a complaint or suggestion,
> but
> >> I'm just wondering.
> >>
> >> The behavior of R on calculations that result in NaN seems a bit
> >> inconsistent.
> >>
> >> # this is expected:
> >>> 0/0
> >> [1] NaN
> >>
> >> # but this gives a warning
> >>> sin(Inf)
> >> [1] NaN
> >> Warning message:
> >> In sin(Inf) : NaNs produced
> >>
> >> # and this again does not
> >>> exp(NaN)
> >> [1] NaN
> >>
> >>
> >> Conceptually, I like to think that R computes over the real line
> augmented
> >> with NaN, Inf, -Inf, NaN, and NA (which is technically also NaN). As
> far as
> >> I know, this set is closed under R's arithmetic operations and
> mathematical
> >> functions (following the IEEE standard on double precision). If that's
> the
> >> case, the result sin(Inf)=NaN seems normal to me and a warning is
> >> unnecessary.
> >>
> >> So why the choice to have warning on sin(Inf), but not on 0/0 or
> exp(Nan)?
> >> Is it just historical or am I missing a reasoning or some standard?
> >>
> >>
> >> Best,
> >> Mark
> >>
> >>> sessionInfo()
> >> R version 3.2.2 (2015-08-14)
> >> Platform: x86_64-pc-linux-gnu (64-bit)
> >> Running under: Ubuntu 14.04.3 LTS
> >>
> >> locale:
> >>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> >>  [3] LC_TIME=nl_NL.UTF-8        LC_COLLATE=en_US.UTF-8
> >>  [5] LC_MONETARY=nl_NL.UTF-8    LC_MESSAGES=en_US.UTF-8
> >>  [7] LC_PAPER=nl_NL.UTF-8       LC_NAME=C
> >>  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> >> [11] LC_MEASUREMENT=nl_NL.UTF-8 LC_IDENTIFICATION=C
> >>
> >>         [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >
> >
> > --
> > Gregory (Greg) L. Snow Ph.D.
> > 538280 at gmail.com
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From pauljohn32 at gmail.com  Tue Dec  1 20:19:30 2015
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Tue, 1 Dec 2015 13:19:30 -0600
Subject: [Rd] Package Dependency
Message-ID: <CAErODj96vDuuKVNa06-Dd=FKsV7=fHP4_0gSYm9v70mwOdFKgA@mail.gmail.com>

Lately, I see a dependency problem with R-3.2 systems.
install.packages allows dependencies, but they are not installed so
the install fails.

I see this a lot with students who are able to install packages like
ggplot2 but then can't load it because a dependency "stringi" is
missing.  Those students are generally using Windows, but today I
reproduced the same on RedHat Linux with R-3.2.2.

desiredPackages is a big vector of packages to install. This is using
a trick that one of R Core taught me about 15 years ago...




> installedPackages <- rownames (installed.packages() )

> alreadyHave <- desiredPackages %in% installedPackages


> install.packages(desiredPackages[!alreadyHave],
+                                             dependencies = c("Depends"),
+                                             lib = TARGETLIB)
trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/DiagrammeR_0.8.1.tar.gz'
Content type 'application/x-gzip' length 3438156 bytes (3.3 MB)
==================================================
downloaded 3.3 MB

trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/emplik_1.0-2.tar.gz'
Content type 'application/x-gzip' length 199124 bytes (194 KB)
==================================================
downloaded 194 KB

trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/glmc_0.2-4.tar.gz'
Content type 'application/x-gzip' length 19721 bytes (19 KB)
==================================================
downloaded 19 KB

trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/sem_3.1-6.tar.gz'
Content type 'application/x-gzip' length 156194 bytes (152 KB)
==================================================
downloaded 152 KB

trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/OpenMx_2.3.1.tar.gz'
Content type 'application/x-gzip' length 2537264 bytes (2.4 MB)
==================================================
downloaded 2.4 MB

ERROR: dependency 'visNetwork' is not available for package 'DiagrammeR'
* removing '/panfs/pfs.acf.ku.edu/crmda/tools/lib64/R/3.2/site-library/DiagrammeR'


However, I can manually install that individual package



> install.packages("visNetwork",
+                                             dependencies = c("Depends"),
+                                             lib = TARGETLIB)
trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/visNetwork_0.1.2.tar.gz'
Content type 'application/x-gzip' length 1828012 bytes (1.7 MB)
==================================================
downloaded 1.7 MB

* installing *source* package 'visNetwork' ...
** package 'visNetwork' successfully unpacked and MD5 sums checked
** R
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded
* DONE (visNetwork)

The downloaded source packages are in
    '/library/tmp/RtmpBImblN/downloaded_packages'


After that, I start over,  the install of the desiredPackages vector
proceeds, but hits another snag:

install.packages(desiredPackages[!alreadyHave],
                                            dependencies = c("Depends"),
+ +                                             lib = TARGETLIB)
trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/DiagrammeR_0.8.1.tar.gz'
Content type 'application/x-gzip' length 3438156 bytes (3.3 MB)
==================================================
downloaded 3.3 MB

trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/sem_3.1-6.tar.gz'
Content type 'application/x-gzip' length 156194 bytes (152 KB)
==================================================
downloaded 152 KB

trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/OpenMx_2.3.1.tar.gz'
Content type 'application/x-gzip' length 2537264 bytes (2.4 MB)
==================================================
downloaded 2.4 MB

* installing *source* package 'DiagrammeR' ...
** package 'DiagrammeR' successfully unpacked and MD5 sums checked
** R
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (DiagrammeR)
ERROR: dependency 'StanHeaders' is not available for package 'OpenMx'


Go back, install just that one

> install.packages("StanHeaders", dependencies = c("Depends"), lib = TARGETLIB)
trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/StanHeaders_2.8.0.tar.gz'
Content type 'application/x-gzip' length 479231 bytes (467 KB)
==================================================
downloaded 467 KB

* installing *source* package 'StanHeaders' ...
** package 'StanHeaders' successfully unpacked and MD5 sums checked
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (StanHeaders)

The downloaded source packages are in
    '/library/tmp/RtmpBImblN/downloaded_packages'

I don't recall seeing this problem until the last few months.

-- 
Paul E. Johnson
Professor, Political Science        Director
1541 Lilac Lane, Room 504      Center for Research Methods
University of Kansas                 University of Kansas
http://pj.freefaculty.org              http://crmda.ku.edu


From murdoch.duncan at gmail.com  Tue Dec  1 20:27:27 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 1 Dec 2015 14:27:27 -0500
Subject: [Rd] Package Dependency
In-Reply-To: <CAErODj96vDuuKVNa06-Dd=FKsV7=fHP4_0gSYm9v70mwOdFKgA@mail.gmail.com>
References: <CAErODj96vDuuKVNa06-Dd=FKsV7=fHP4_0gSYm9v70mwOdFKgA@mail.gmail.com>
Message-ID: <565DF49F.4040600@gmail.com>

On 01/12/2015 2:19 PM, Paul Johnson wrote:
> Lately, I see a dependency problem with R-3.2 systems.
> install.packages allows dependencies, but they are not installed so
> the install fails.

You are saying you only want dependencies listed in the "Depends" field 
of DESCRIPTION.  Many packages nowadays have dependencies listed in 
"Imports", because that's now the recommended way to do it.  Those are 
not optional.

Imports are loaded, but don't affect the search path, so that's why 
they're preferred over Depends, which are both loaded and attached to 
the search path.  Modifying the search path can break user scripts.

Duncan Murdoch

>
> I see this a lot with students who are able to install packages like
> ggplot2 but then can't load it because a dependency "stringi" is
> missing.  Those students are generally using Windows, but today I
> reproduced the same on RedHat Linux with R-3.2.2.
>
> desiredPackages is a big vector of packages to install. This is using
> a trick that one of R Core taught me about 15 years ago...
>
>
>
>
> > installedPackages <- rownames (installed.packages() )
>
> > alreadyHave <- desiredPackages %in% installedPackages
>
>
> > install.packages(desiredPackages[!alreadyHave],
> +                                             dependencies = c("Depends"),
> +                                             lib = TARGETLIB)
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/DiagrammeR_0.8.1.tar.gz'
> Content type 'application/x-gzip' length 3438156 bytes (3.3 MB)
> ==================================================
> downloaded 3.3 MB
>
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/emplik_1.0-2.tar.gz'
> Content type 'application/x-gzip' length 199124 bytes (194 KB)
> ==================================================
> downloaded 194 KB
>
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/glmc_0.2-4.tar.gz'
> Content type 'application/x-gzip' length 19721 bytes (19 KB)
> ==================================================
> downloaded 19 KB
>
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/sem_3.1-6.tar.gz'
> Content type 'application/x-gzip' length 156194 bytes (152 KB)
> ==================================================
> downloaded 152 KB
>
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/OpenMx_2.3.1.tar.gz'
> Content type 'application/x-gzip' length 2537264 bytes (2.4 MB)
> ==================================================
> downloaded 2.4 MB
>
> ERROR: dependency 'visNetwork' is not available for package 'DiagrammeR'
> * removing '/panfs/pfs.acf.ku.edu/crmda/tools/lib64/R/3.2/site-library/DiagrammeR'
>
>
> However, I can manually install that individual package
>
>
>
> > install.packages("visNetwork",
> +                                             dependencies = c("Depends"),
> +                                             lib = TARGETLIB)
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/visNetwork_0.1.2.tar.gz'
> Content type 'application/x-gzip' length 1828012 bytes (1.7 MB)
> ==================================================
> downloaded 1.7 MB
>
> * installing *source* package 'visNetwork' ...
> ** package 'visNetwork' successfully unpacked and MD5 sums checked
> ** R
> ** inst
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
> ** testing if installed package can be loaded
> * DONE (visNetwork)
>
> The downloaded source packages are in
>      '/library/tmp/RtmpBImblN/downloaded_packages'
>
>
> After that, I start over,  the install of the desiredPackages vector
> proceeds, but hits another snag:
>
> install.packages(desiredPackages[!alreadyHave],
>                                              dependencies = c("Depends"),
> + +                                             lib = TARGETLIB)
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/DiagrammeR_0.8.1.tar.gz'
> Content type 'application/x-gzip' length 3438156 bytes (3.3 MB)
> ==================================================
> downloaded 3.3 MB
>
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/sem_3.1-6.tar.gz'
> Content type 'application/x-gzip' length 156194 bytes (152 KB)
> ==================================================
> downloaded 152 KB
>
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/OpenMx_2.3.1.tar.gz'
> Content type 'application/x-gzip' length 2537264 bytes (2.4 MB)
> ==================================================
> downloaded 2.4 MB
>
> * installing *source* package 'DiagrammeR' ...
> ** package 'DiagrammeR' successfully unpacked and MD5 sums checked
> ** R
> ** inst
> ** preparing package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** testing if installed package can be loaded
> * DONE (DiagrammeR)
> ERROR: dependency 'StanHeaders' is not available for package 'OpenMx'
>
>
> Go back, install just that one
>
> > install.packages("StanHeaders", dependencies = c("Depends"), lib = TARGETLIB)
> trying URL 'http://rweb.crmda.ku.edu/cran/src/contrib/StanHeaders_2.8.0.tar.gz'
> Content type 'application/x-gzip' length 479231 bytes (467 KB)
> ==================================================
> downloaded 467 KB
>
> * installing *source* package 'StanHeaders' ...
> ** package 'StanHeaders' successfully unpacked and MD5 sums checked
> ** inst
> ** help
> *** installing help indices
> ** building package indices
> ** testing if installed package can be loaded
> * DONE (StanHeaders)
>
> The downloaded source packages are in
>      '/library/tmp/RtmpBImblN/downloaded_packages'
>
> I don't recall seeing this problem until the last few months.
>


From joshmobrien at gmail.com  Fri Dec  4 18:56:13 2015
From: joshmobrien at gmail.com (Josh O'Brien)
Date: Fri, 4 Dec 2015 09:56:13 -0800
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
Message-ID: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>

Here's the surprising behavior:

   x <- 1L
   xx <- as(x, "numeric")
   class(xx)
   ## [1] "integer"

It occurs because the call to `as(x, "numeric")` dispatches the coerce
S4 method for the signature `c("integer", "numeric")`, whose body is
copied in below.

    function (from, to = "numeric", strict = TRUE)
    if (strict) {
        class(from) <- "numeric"
        from
    } else from

This in turn does nothing, even when strict=TRUE, because that
assignment to class "numeric" has no effect:

    x <- 10L
    class(x) <- "numeric"
    class(x)
    [1] "integer"

Is this the desired behavior for `as(x, "numeric")`?


From 081024015 at fudan.edu.cn  Sat Dec  5 14:35:16 2015
From: 081024015 at fudan.edu.cn (=?UTF-8?B?5p2O55Cl?=)
Date: Sat, 5 Dec 2015 21:35:16 +0800 (GMT+08:00)
Subject: [Rd] Compile error about using RInside on windows enviroment
Message-ID: <426ffd62.b22f.151725a90f2.Coremail.081024015@fudan.edu.cn>

  I'm going to using RInside on windows enviroment. I installed all tools and packages according to Dirk's instruction.
   My R installation reside in d:\hli\programfiles\R-3.2.2. There's no problems with folders with spaces.

    The rtools is installed in d:\hli\programfiles\Rtools and MinGW in d: \hli\programfiles\MinGW.
    The R_HOME is set to   d:\hli\programfiles\R-3.2.2.
    I have installed the Rcpp and RInside package in R.

     When i compile the rinside_sample0.cpp, it gives following error:

D:\hli\Programfiles\R-3.2.2\library\RInside\examples\standard>make -f Makefile.w
in rinside_sample0
g++ -m32 -ID:/hli/Programfiles/R-3.2.2/include -ID:/hli/Programfiles/R-3.2.2/inc
lude/i386 -ID:/hli/Programfiles/R-3.2.2/library/Rcpp/include -ID:/hli/Programfil
es/R-3.2.2/library/RInside/include -O2 -Wall -mtune=core2 -Wall  -s  rinside_sam
ple0.cpp    -LD:/hli/Programfiles/R-3.2.2/bin/i386 -lR -lm -LD:/hli/Programfiles
/R-3.2.2/bin/i386 -lRblas -LD:/hli/Programfiles/R-3.2.2/bin/i386 -lRlapack "D:/h
li/Programfiles/R-3.2.2/library/RInside/lib/i386/libRInside.a"  -o rinside_sampl
e0
rinside_sample0.cpp:1: error: bad value (core2) for -mtune= switch
make: *** [rinside_sample0] Error 1

    Dose anyone know how to fix this error? Thanks.
           
                                                 Eric.
                                                 12.5.2015


From edd at debian.org  Sat Dec  5 16:32:25 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 5 Dec 2015 09:32:25 -0600
Subject: [Rd] Compile error about using RInside on windows enviroment
In-Reply-To: <426ffd62.b22f.151725a90f2.Coremail.081024015@fudan.edu.cn>
References: <426ffd62.b22f.151725a90f2.Coremail.081024015@fudan.edu.cn>
Message-ID: <22115.905.306490.586611@max.nulle.part>


On 5 December 2015 at 21:35, ?? wrote:
|   I'm going to using RInside on windows enviroment. I installed all tools and packages according to Dirk's instruction.
|    My R installation reside in d:\hli\programfiles\R-3.2.2. There's no problems with folders with spaces.
| 
|     The rtools is installed in d:\hli\programfiles\Rtools and MinGW in d: \hli\programfiles\MinGW.
|     The R_HOME is set to   d:\hli\programfiles\R-3.2.2.
|     I have installed the Rcpp and RInside package in R.
| 
|      When i compile the rinside_sample0.cpp, it gives following error:
| 
| D:\hli\Programfiles\R-3.2.2\library\RInside\examples\standard>make -f Makefile.w
| in rinside_sample0
| g++ -m32 -ID:/hli/Programfiles/R-3.2.2/include -ID:/hli/Programfiles/R-3.2.2/inc
| lude/i386 -ID:/hli/Programfiles/R-3.2.2/library/Rcpp/include -ID:/hli/Programfil
| es/R-3.2.2/library/RInside/include -O2 -Wall -mtune=core2 -Wall  -s  rinside_sam
                                               ^^^^^^^^^^^^
                                               
| ple0.cpp    -LD:/hli/Programfiles/R-3.2.2/bin/i386 -lR -lm -LD:/hli/Programfiles
| /R-3.2.2/bin/i386 -lRblas -LD:/hli/Programfiles/R-3.2.2/bin/i386 -lRlapack "D:/h
| li/Programfiles/R-3.2.2/library/RInside/lib/i386/libRInside.a"  -o rinside_sampl
| e0
| rinside_sample0.cpp:1: error: bad value (core2) for -mtune= switch
| make: *** [rinside_sample0] Error 1
| 
|     Dose anyone know how to fix this error? Thanks.

Something somewhere (maybe $RHOME/etc/Makeconf, maybe your environment, maybe
something else) sets -mtune=core2 yet the compiler tells you he doesn't like
it.

You need to find and remove that setting.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From arnaud.gaboury at gmail.com  Sat Dec  5 18:07:45 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Sat, 5 Dec 2015 18:07:45 +0100
Subject: [Rd] R_PROFILE_USER
Message-ID: <CAK1hC9sf6Uehr10TZECun5KtQTQN==ArkfxhkHEXiHGbihgBCQ@mail.gmail.com>

In my shell environment, I have set a path to R_PROFILE_USER. The
file, Rprofile.R, is a collection of small hacks.

I want to build rstudio-server from source. Best is to $ unset
R_PROFILE_USER before. Unfortunately, this has no effect on my system.

-----------------------------------------------
poisonivy at poppy ?? ~ % R

*** Successfully loaded .Rprofile ***

Welcome back poisonivy
working directory is: /home/poisonivy
poisonivy at poppy [R]
-------------------------------------

As you can see, R is still behaving like the profile is used. What is
annoying, is that Cmake will at one point not find my LibR. Error
message: missing LIBR_LIBRARIES). The Cmake command is this one:

-----------------------------------------
% R --slave --no-save -e "cat(R.home('lib'))"

*** Successfully loaded .Rprofile ***

/usr/lib64/R/libGoodbye poisonivy Sat Dec  5 18:03:06 2015
----------------------------------------------

and as you can see, the result is polluated by my profile. I can't
edit Cmake file to add "--vanilla" as they are generated each time I
start cmake.

Even deleting my Rprofile.R file, the environment still persists. I
have no idea why this behavior.

Any hints why I can't unset my profile user ?

Thank you.
-- 

google.com/+arnaudgabourygabx


From pdalgd at gmail.com  Sat Dec  5 21:39:34 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Sat, 5 Dec 2015 21:39:34 +0100
Subject: [Rd] R_PROFILE_USER
In-Reply-To: <CAK1hC9sf6Uehr10TZECun5KtQTQN==ArkfxhkHEXiHGbihgBCQ@mail.gmail.com>
References: <CAK1hC9sf6Uehr10TZECun5KtQTQN==ArkfxhkHEXiHGbihgBCQ@mail.gmail.com>
Message-ID: <97D19D40-B74E-48F5-8FFA-E8D10584E07F@gmail.com>


> On 05 Dec 2015, at 18:07 , arnaud gaboury <arnaud.gaboury at gmail.com> wrote:
> 
> In my shell environment, I have set a path to R_PROFILE_USER. The
> file, Rprofile.R, is a collection of small hacks.
> 
> I want to build rstudio-server from source. Best is to $ unset
> R_PROFILE_USER before. Unfortunately, this has no effect on my system.
> 
> -----------------------------------------------
> poisonivy at poppy ?? ~ % R
> 
> *** Successfully loaded .Rprofile ***
> 
> Welcome back poisonivy
> working directory is: /home/poisonivy
> poisonivy at poppy [R]
> -------------------------------------
> 
> As you can see, R is still behaving like the profile is used. What is
> annoying, is that Cmake will at one point not find my LibR. Error
> message: missing LIBR_LIBRARIES). The Cmake command is this one:
> 
> -----------------------------------------
> % R --slave --no-save -e "cat(R.home('lib'))"
> 
> *** Successfully loaded .Rprofile ***
> 
> /usr/lib64/R/libGoodbye poisonivy Sat Dec  5 18:03:06 2015
> ----------------------------------------------
> 
> and as you can see, the result is polluated by my profile. I can't
> edit Cmake file to add "--vanilla" as they are generated each time I
> start cmake.
> 
> Even deleting my Rprofile.R file, the environment still persists. I
> have no idea why this behavior.
> 
> Any hints why I can't unset my profile user ?


Umm, it said that it loaded .Rprofile, not Rprofile.R. Any chance that you have similar code in two places? (~/.Rprofile and ./.Rprofile being the most obvious suspects).

-pd

> 
> Thank you.
> -- 
> 
> google.com/+arnaudgabourygabx
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From arnaud.gaboury at gmail.com  Sat Dec  5 21:43:29 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Sat, 05 Dec 2015 20:43:29 +0000
Subject: [Rd] R_PROFILE_USER
In-Reply-To: <97D19D40-B74E-48F5-8FFA-E8D10584E07F@gmail.com>
References: <CAK1hC9sf6Uehr10TZECun5KtQTQN==ArkfxhkHEXiHGbihgBCQ@mail.gmail.com>
	<97D19D40-B74E-48F5-8FFA-E8D10584E07F@gmail.com>
Message-ID: <CAK1hC9v3BdPbR=OJUB9FqtrM7e6yUdi5OT3eM5tv_FQ_NQhpLA@mail.gmail.com>

On Sat, Dec 5, 2015, 9:39 PM peter dalgaard <pdalgd at gmail.com> wrote:


> On 05 Dec 2015, at 18:07 , arnaud gaboury <arnaud.gaboury at gmail.com>
wrote:
>
> In my shell environment, I have set a path to R_PROFILE_USER. The
> file, Rprofile.R, is a collection of small hacks.
>
> I want to build rstudio-server from source. Best is to $ unset
> R_PROFILE_USER before. Unfortunately, this has no effect on my system.
>
> -----------------------------------------------
> poisonivy at poppy ?? ~ % R
>
> *** Successfully loaded .Rprofile ***
>
> Welcome back poisonivy
> working directory is: /home/poisonivy
> poisonivy at poppy [R]
> -------------------------------------
>
> As you can see, R is still behaving like the profile is used. What is
> annoying, is that Cmake will at one point not find my LibR. Error
> message: missing LIBR_LIBRARIES). The Cmake command is this one:
>
> -----------------------------------------
> % R --slave --no-save -e "cat(R.home('lib'))"
>
> *** Successfully loaded .Rprofile ***
>
> /usr/lib64/R/libGoodbye poisonivy Sat Dec  5 18:03:06 2015
> ----------------------------------------------
>
> and as you can see, the result is polluated by my profile. I can't
> edit Cmake file to add "--vanilla" as they are generated each time I
> start cmake.
>
> Even deleting my Rprofile.R file, the environment still persists. I
> have no idea why this behavior.
>
> Any hints why I can't unset my profile user ?

Umm, it said that it loaded .Rprofile, not Rprofile.R. Any chance that you
have similar code in two places? (~/.Rprofile and ./.Rprofile being the
most obvious suspects).

That is my first thought. As for the file, I made a typo in my post. It is
indeed Rprofile.r ( r lower case). That could explain the welcome message.


-pd

>
> Thank you.
> --
>
> google.com/+ <http://google.com/+arnaudgabourygabx>arnaudgabourygabx
<http://google.com/+arnaudgabourygabx>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https <https://stat.ethz.ch/mailman/listinfo/r-devel>://
<https://stat.ethz.ch/mailman/listinfo/r-devel>stat.ethz.ch
<https://stat.ethz.ch/mailman/listinfo/r-devel>/mailman/
<https://stat.ethz.ch/mailman/listinfo/r-devel>listinfo
<https://stat.ethz.ch/mailman/listinfo/r-devel>/
<https://stat.ethz.ch/mailman/listinfo/r-devel>r-devel
<https://stat.ethz.ch/mailman/listinfo/r-devel>

--
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com

	[[alternative HTML version deleted]]


From arnaud.gaboury at gmail.com  Sun Dec  6 10:43:10 2015
From: arnaud.gaboury at gmail.com (arnaud gaboury)
Date: Sun, 6 Dec 2015 10:43:10 +0100
Subject: [Rd] R_PROFILE_USER
In-Reply-To: <CAK1hC9v3BdPbR=OJUB9FqtrM7e6yUdi5OT3eM5tv_FQ_NQhpLA@mail.gmail.com>
References: <CAK1hC9sf6Uehr10TZECun5KtQTQN==ArkfxhkHEXiHGbihgBCQ@mail.gmail.com>
	<97D19D40-B74E-48F5-8FFA-E8D10584E07F@gmail.com>
	<CAK1hC9v3BdPbR=OJUB9FqtrM7e6yUdi5OT3eM5tv_FQ_NQhpLA@mail.gmail.com>
Message-ID: <CAK1hC9t47XM2Qx5pgCQn=iaU+Hf068=+o76W30E7a_EUywo2Mw@mail.gmail.com>

On Sat, Dec 5, 2015 at 9:43 PM, arnaud gaboury <arnaud.gaboury at gmail.com> wrote:
>
> On Sat, Dec 5, 2015, 9:39 PM peter dalgaard <pdalgd at gmail.com> wrote:
>
>
>> On 05 Dec 2015, at 18:07 , arnaud gaboury <arnaud.gaboury at gmail.com>
>> wrote:
>>
>> In my shell environment, I have set a path to R_PROFILE_USER. The
>> file, Rprofile.R, is a collection of small hacks.
>>
>> I want to build rstudio-server from source. Best is to $ unset
>> R_PROFILE_USER before. Unfortunately, this has no effect on my system.
>>
>> -----------------------------------------------
>> poisonivy at poppy ?? ~ % R
>>
>> *** Successfully loaded .Rprofile ***
>>
>> Welcome back poisonivy
>> working directory is: /home/poisonivy
>> poisonivy at poppy [R]
>> -------------------------------------
>>
>> As you can see, R is still behaving like the profile is used. What is
>> annoying, is that Cmake will at one point not find my LibR. Error
>> message: missing LIBR_LIBRARIES). The Cmake command is this one:
>>
>> -----------------------------------------
>> % R --slave --no-save -e "cat(R.home('lib'))"
>>
>> *** Successfully loaded .Rprofile ***
>>
>> /usr/lib64/R/libGoodbye poisonivy Sat Dec  5 18:03:06 2015
>> ----------------------------------------------
>>
>> and as you can see, the result is polluated by my profile. I can't
>> edit Cmake file to add "--vanilla" as they are generated each time I
>> start cmake.
>>
>> Even deleting my Rprofile.R file, the environment still persists. I
>> have no idea why this behavior.
>>
>> Any hints why I can't unset my profile user ?
>
> Umm, it said that it loaded .Rprofile, not Rprofile.R. Any chance that you
> have similar code in two places? (~/.Rprofile and ./.Rprofile being the most
> obvious suspects).
>
> That is my first thought. As for the file, I made a typo in my post. It is
> indeed Rprofile.r ( r lower case). That could explain the welcome message.

I finally found the culprite:

/usr/lib64/R/etc/Rprofile.site

:-)
>
>
> -pd
>
>>
>> Thank you.
>> --
>>
>> google.com/+arnaudgabourygabx
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>



-- 

google.com/+arnaudgabourygabx


From jaroslav.kuchar at fit.cvut.cz  Sun Dec  6 18:36:16 2015
From: jaroslav.kuchar at fit.cvut.cz (=?UTF-8?Q?Ing=2E_Jaroslav_Kucha=C5=99?=)
Date: Sun, 06 Dec 2015 18:36:16 +0100
Subject: [Rd] How to efficiently share data (a dataframe) between R and Java
Message-ID: <466cd25ef41dbefc2ee18c725a581e78@imap.fit.cvut.cz>

Dear all,

in our ongoing project we use Java implementations of several
algorithms. We also provide a ?wrapper? implemented as an R package
using rJava (https://github.com/jaroslav-kuchar/rCBA). Based on our
recent experiments, the significant portion of time is spent on copying
a dataframe from R to Java. The Java implementation needs access to the
source dataframe. 

I have tested several approaches: calling Java method row-by-row;
serialize the whole data-frame to a temp file and parsing in Java; or
row binding to a single vector and calling a single Java method. Each
approach has its limitations e.g. time-consuming row-by-row copying,
serialization and parsing performance or memory limitations of a single
vector. 

Is there an efficient approach how to copy a dataframe from R to Java
and another one from Java to R?

Thanks for any help you can provide...

Regards,
Jaroslav


From edd at debian.org  Sun Dec  6 19:56:22 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 6 Dec 2015 12:56:22 -0600
Subject: [Rd] How to efficiently share data (a dataframe) between R and
	Java
In-Reply-To: <466cd25ef41dbefc2ee18c725a581e78@imap.fit.cvut.cz>
References: <466cd25ef41dbefc2ee18c725a581e78@imap.fit.cvut.cz>
Message-ID: <22116.34006.897439.639480@max.nulle.part>


On 6 December 2015 at 18:36, Ing. Jaroslav Kucha? wrote:
| in our ongoing project we use Java implementations of several
| algorithms. We also provide a ?wrapper? implemented as an R package
| using rJava (https://github.com/jaroslav-kuchar/rCBA). Based on our
| recent experiments, the significant portion of time is spent on copying
| a dataframe from R to Java. The Java implementation needs access to the
| source dataframe. 
| 
| I have tested several approaches: calling Java method row-by-row;
| serialize the whole data-frame to a temp file and parsing in Java; or
| row binding to a single vector and calling a single Java method. Each
| approach has its limitations e.g. time-consuming row-by-row copying,
| serialization and parsing performance or memory limitations of a single
| vector. 
| 
| Is there an efficient approach how to copy a dataframe from R to Java
| and another one from Java to R?
| 
| Thanks for any help you can provide...

Have you looked at the gold standard that is Rserve and its dedicated
clients, starting with the Java one?

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From simon.urbanek at r-project.org  Mon Dec  7 03:19:38 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Sun, 6 Dec 2015 21:19:38 -0500
Subject: [Rd] How to efficiently share data (a dataframe) between R and
	Java
In-Reply-To: <466cd25ef41dbefc2ee18c725a581e78@imap.fit.cvut.cz>
References: <466cd25ef41dbefc2ee18c725a581e78@imap.fit.cvut.cz>
Message-ID: <8F33B5D6-5D3D-4FD1-9830-9575094D4890@r-project.org>

On Dec 6, 2015, at 12:36 PM, Ing. Jaroslav Kucha? <jaroslav.kuchar at fit.cvut.cz> wrote:

> Dear all,
> 
> in our ongoing project we use Java implementations of several
> algorithms. We also provide a ?wrapper? implemented as an R package
> using rJava (https://github.com/jaroslav-kuchar/rCBA). Based on our
> recent experiments, the significant portion of time is spent on copying
> a dataframe from R to Java. The Java implementation needs access to the
> source dataframe. 
> 
> I have tested several approaches: calling Java method row-by-row;
> serialize the whole data-frame to a temp file and parsing in Java; or
> row binding to a single vector and calling a single Java method. Each
> approach has its limitations e.g. time-consuming row-by-row copying,
> serialization and parsing performance or memory limitations of a single
> vector. 
> 
> Is there an efficient approach how to copy a dataframe from R to Java
> and another one from Java to R?
> 
> Thanks for any help you can provide...
> 

You can natively access structures on each side. The fastest way is to use R representation (column-oriented) in Java - that is much faster than any kind of serialization or anything you mention above since you pass the variables as a whole.

Typically, the bottleneck are Java applications which may require very inefficient data structures. If you have control over the algorithms, you can simply use proper data structures and avoid that problem. If you don't have control, you'll have to add Java code that converts to whatever structure is needed by the Java code form the data frame pushed to the Java side. The main point here is that you do NOT want to do any conversion on the R side.

Cheers,
?imon


From aixtools at gmail.com  Mon Dec  7 14:09:48 2015
From: aixtools at gmail.com (Michael Felt)
Date: Mon, 07 Dec 2015 14:09:48 +0100
Subject: [Rd] compile question
In-Reply-To: <56535263.4010706@gmail.com>
References: <56535263.4010706@gmail.com>
Message-ID: <5665851C.4030503@gmail.com>

On 2015-11-23 18:52, aixtools wrote:
> Starting all over again with R-devel of 22-11-2015.
Actually, reverting back to R-3.1.3 as that has built better, and I 
shall apply lessons learned as I move along.

I have had a number of e-mail exchanges with people who support gcc for 
POWER, and have learned - read was told bluntly - that -bexpall, while 
getting the job done in many cases - is very inefficient (read - has a 
negative impact on performance) AND can lead to duplicate symbol errors 
as imported symbols are also exported.

Based on this, and other things I have run accross my focus at the 
moment is changes to ./configure (for later modification to 
./configure.ac and m4/* - as appropriate.

I understand that having R on AIX may not be anyone's priority (if even 
concern). Comments here are welcome. I will always take them seriously. 
I request, especially if I have not acknowledged a reply, to (also) post 
to http://forums.rootvg.net/aixtools/r-for-aix/ - as I read/check those 
forums much more often than I am able to check mail.

Regards,
Michael


From 081024015 at fudan.edu.cn  Mon Dec  7 15:14:11 2015
From: 081024015 at fudan.edu.cn (=?UTF-8?B?5p2O55Cl?=)
Date: Mon, 7 Dec 2015 22:14:11 +0800 (GMT+08:00)
Subject: [Rd] Can intel c++ compiler be used to compile RInside on windows?
Message-ID: <5991b859.166c6.1517ccae7c9.Coremail.081024015@fudan.edu.cn>

Hi,

    We know that the visual c++ can not compile RInside on windows environment. I have compiled RInside 
using MinGW on windows successfully. I also find that someone is using QT sdk. My question is, can intel
c++ compiler be used to compile RInside on window? If so, it will be very convenient. Thanks.

                                                                    Eric


From 081024015 at fudan.edu.cn  Mon Dec  7 15:33:29 2015
From: 081024015 at fudan.edu.cn (=?UTF-8?B?5p2O55Cl?=)
Date: Mon, 7 Dec 2015 22:33:29 +0800 (GMT+08:00)
Subject: [Rd] Is there a way to call R functions in multithread environment?
Message-ID: <2fbee40e.16793.1517cdc9631.Coremail.081024015@fudan.edu.cn>


   I'm developing program in c++ and R on windows environment. The program is mainly writen using c++ and call R
interface to do some statistic work. The program is multithreaded. However, R can only be initiated once in a process.
Is there a way to call R functions in multithread environment such as start a server to respond the call in local machine? 
Thanks.


From lorenz at usgs.gov  Mon Dec  7 21:32:20 2015
From: lorenz at usgs.gov (Lorenz, David)
Date: Mon, 7 Dec 2015 14:32:20 -0600
Subject: [Rd] inconsistency in POSIXlt
Message-ID: <CALxY2Lc1vNT_92fHid7bPmLyd-twYrjRbfBqV6xf7=WctW=omw@mail.gmail.com>

The documentation for the POSIXlt class states '"POSIXlt" objects will
often have an attribute "tzone", a character vector of length 3 giving the
time zone name from the TZ environment variable and the names of the base
time zone and the alternate (daylight-saving) time zone. Sometimes this may
just be of length one, giving the time zone
<http://127.0.0.1:25207/library/base/help/time%20zone> name.' But the
 constructor for the class, as.POSIXlt, accepts only a single value for the
tz argument--an error is generated if, for example the tzone value of
length 3 is extracted from a POSIXlt object and used as the tz argument.

It would seem to me that to be consistent, the as.POSIXlt function should
accept a vector of length 3 as the tz argument.

	[[alternative HTML version deleted]]


From gmbecker at ucdavis.edu  Mon Dec  7 22:23:17 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Mon, 7 Dec 2015 13:23:17 -0800
Subject: [Rd] inconsistency in POSIXlt
In-Reply-To: <CALxY2Lc1vNT_92fHid7bPmLyd-twYrjRbfBqV6xf7=WctW=omw@mail.gmail.com>
References: <CALxY2Lc1vNT_92fHid7bPmLyd-twYrjRbfBqV6xf7=WctW=omw@mail.gmail.com>
Message-ID: <CADwqtCNMA6VS0u7si5SwpHVEF_Jm7N-EZDAYQmLqzOximthsZA@mail.gmail.com>

David,

I didn't have time to dig through the code completely, but those other two
are being set automatically in the C code as far as I can tell, in
particular in the code

    // localtime may change tzname.
    if (isgmt) {
	PROTECT(tzone = mkString(tz));
    } else {
	PROTECT(tzone = allocVector(STRSXP, 3));
	SET_STRING_ELT(tzone, 0, mkChar(tz));
	SET_STRING_ELT(tzone, 1, mkChar(R_tzname[0]));
	SET_STRING_ELT(tzone, 2, mkChar(R_tzname[1]));
    }


In the file https://svn.r-project.org/R/trunk/src/main/datetime.c
(function do_asPOSIXlt)

R_tzname is an extern char pointer. I can't say exactly where it is
populated, but the code assumes it will be and that it will take care
of what passing a length 3 vector would.

Also, note that AFAICT the second and third are not freeform text,
only very specific values are valid.

Long story short, I think the answer is R doesn't let you do that
because it takes care of it for you. (Unless someone more familiar
with date handling in R pops in and points out how I've completely
missed something).

Best,

~G


-- 
Gabriel Becker, PhD
Associate Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From btyner at gmail.com  Tue Dec  8 00:37:08 2015
From: btyner at gmail.com (Benjamin Tyner)
Date: Mon, 7 Dec 2015 18:37:08 -0500
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
Message-ID: <56661824.9020707@gmail.com>

Perhaps it is not that surprising, given that

     > mode(1L)
     [1] "numeric"

and

     > is.numeric(1L)
     [1] TRUE

On the other hand, this is curious, to say the least:

     > is.double(as(1L, "double"))
     [1] FALSE

> Here's the surprising behavior:
>
>     x <- 1L
>     xx <- as(x, "numeric")
>     class(xx)
>     ## [1] "integer"
>
> It occurs because the call to `as(x, "numeric")` dispatches the coerce
> S4 method for the signature `c("integer", "numeric")`, whose body is
> copied in below.
>
>      function (from, to = "numeric", strict = TRUE)
>      if (strict) {
>          class(from) <- "numeric"
>          from
>      } else from
>
> This in turn does nothing, even when strict=TRUE, because that
> assignment to class "numeric" has no effect:
>
>      x <- 10L
>      class(x) <- "numeric"
>      class(x)
>      [1] "integer"
>
> Is this the desired behavior for `as(x, "numeric")`?


From jmc at r-project.org  Tue Dec  8 01:05:59 2015
From: jmc at r-project.org (John Chambers)
Date: Mon, 7 Dec 2015 16:05:59 -0800
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <56661824.9020707@gmail.com>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
Message-ID: <16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>

We do need an explicit method here, I think.

The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").

Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:

> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
[1] "coerce"
> typeof(as(1L, "numeric"))
[1] "double"

Seems like a reasonable addition to the code, unless someone sees a problem.

John


On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:

> Perhaps it is not that surprising, given that
> 
>    > mode(1L)
>    [1] "numeric"
> 
> and
> 
>    > is.numeric(1L)
>    [1] TRUE
> 
> On the other hand, this is curious, to say the least:
> 
>    > is.double(as(1L, "double"))
>    [1] FALSE
> 
>> Here's the surprising behavior:
>> 
>>    x <- 1L
>>    xx <- as(x, "numeric")
>>    class(xx)
>>    ## [1] "integer"
>> 
>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
>> S4 method for the signature `c("integer", "numeric")`, whose body is
>> copied in below.
>> 
>>     function (from, to = "numeric", strict = TRUE)
>>     if (strict) {
>>         class(from) <- "numeric"
>>         from
>>     } else from
>> 
>> This in turn does nothing, even when strict=TRUE, because that
>> assignment to class "numeric" has no effect:
>> 
>>     x <- 10L
>>     class(x) <- "numeric"
>>     class(x)
>>     [1] "integer"
>> 
>> Is this the desired behavior for `as(x, "numeric")`?
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From lorenz at usgs.gov  Tue Dec  8 14:31:57 2015
From: lorenz at usgs.gov (Lorenz, David)
Date: Tue, 8 Dec 2015 07:31:57 -0600
Subject: [Rd] inconsistency in POSIXlt
In-Reply-To: <CADwqtCNMA6VS0u7si5SwpHVEF_Jm7N-EZDAYQmLqzOximthsZA@mail.gmail.com>
References: <CALxY2Lc1vNT_92fHid7bPmLyd-twYrjRbfBqV6xf7=WctW=omw@mail.gmail.com>
	<CADwqtCNMA6VS0u7si5SwpHVEF_Jm7N-EZDAYQmLqzOximthsZA@mail.gmail.com>
Message-ID: <CALxY2LeC=oti8aNggUqm831Jm7UJqwu4wv-NbTujw1M3uHt8Lw@mail.gmail.com>

Gabriel,
  Thanks. I'm just frustrated by the inconsistencies in what I see in
POSIXlt. I'm not even sure what the tzone attribute does. Here's an example
that show behavior different from POSIXct.

> tl <- as.POSIXlt("2001-04-05 12:00", tz="America/Chicago")
> tl
[1] "2001-04-05 12:00:00 CDT"
> attr(tl, "tzone")
[1] "America/Chicago"
> attr(tl, "tzone") <- "America/Denver"
> tl
[1] "2001-04-05 12:00:00 CDT"
> tc <- as.POSIXct("2001-04-05 12:00", tz="America/Chicago")
> tc
[1] "2001-04-05 12:00:00 CDT"
> attr(tc, "tzone")
[1] "America/Chicago"
> attr(tc, "tzone") <- "America/Denver"
> tc
[1] "2001-04-05 11:00:00 MDT"

  From what I can see, changing the tzone attribute does nothing to the
display. But it does take effect when converting to POSIXct:

> as.POSIXct(tl)
[1] "2001-04-05 12:00:00 MDT"

  I think that was expected, knowing that POSIXlt is specifically local
time and if the tzone says Mountain time, then report in Mountain time. But
then what useful information is in the zone component in POSIXlt.



On Mon, Dec 7, 2015 at 3:23 PM, Gabriel Becker <gmbecker at ucdavis.edu> wrote:

> David,
>
> I didn't have time to dig through the code completely, but those other two
> are being set automatically in the C code as far as I can tell, in
> particular in the code
>
>     // localtime may change tzname.
>     if (isgmt) {
> 	PROTECT(tzone = mkString(tz));
>     } else {
> 	PROTECT(tzone = allocVector(STRSXP, 3));
> 	SET_STRING_ELT(tzone, 0, mkChar(tz));
> 	SET_STRING_ELT(tzone, 1, mkChar(R_tzname[0]));
> 	SET_STRING_ELT(tzone, 2, mkChar(R_tzname[1]));
>     }
>
>
> In the file https://svn.r-project.org/R/trunk/src/main/datetime.c (function do_asPOSIXlt)
>
> R_tzname is an extern char pointer. I can't say exactly where it is populated, but the code assumes it will be and that it will take care of what passing a length 3 vector would.
>
> Also, note that AFAICT the second and third are not freeform text, only very specific values are valid.
>
> Long story short, I think the answer is R doesn't let you do that because it takes care of it for you. (Unless someone more familiar with date handling in R pops in and points out how I've completely missed something).
>
> Best,
>
> ~G
>
>
> --
> Gabriel Becker, PhD
> Associate Scientist (Bioinformatics)
> Genentech Research
>

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Tue Dec  8 15:25:21 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 8 Dec 2015 15:25:21 +0100
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
Message-ID: <22118.59473.654693.639907@stat.math.ethz.ch>

>>>>> John Chambers <jmc at r-project.org>
>>>>>     on Mon, 7 Dec 2015 16:05:59 -0800 writes:

    > We do need an explicit method here, I think.
    > The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").

    > Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:

    >> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
    > [1] "coerce"
    >> typeof(as(1L, "numeric"))
    > [1] "double"

    > Seems like a reasonable addition to the code, unless someone sees a problem.
    > John

I guess that that some package checks (in CRAN + Bioc + ... -
land) will break,
but I still think we should add such a coercion to R.

Martin



    > On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:

    >> Perhaps it is not that surprising, given that
    >> 
    >> > mode(1L)
    >> [1] "numeric"
    >> 
    >> and
    >> 
    >> > is.numeric(1L)
    >> [1] TRUE
    >> 
    >> On the other hand, this is curious, to say the least:
    >> 
    >> > is.double(as(1L, "double"))
    >> [1] FALSE
    >> 
    >>> Here's the surprising behavior:
    >>> 
    >>> x <- 1L
    >>> xx <- as(x, "numeric")
    >>> class(xx)
    >>> ## [1] "integer"
    >>> 
    >>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
    >>> S4 method for the signature `c("integer", "numeric")`, whose body is
    >>> copied in below.
    >>> 
    >>> function (from, to = "numeric", strict = TRUE)
    >>> if (strict) {
    >>> class(from) <- "numeric"
    >>> from
    >>> } else from
    >>> 
    >>> This in turn does nothing, even when strict=TRUE, because that
    >>> assignment to class "numeric" has no effect:
    >>> 
    >>> x <- 10L
    >>> class(x) <- "numeric"
    >>> class(x)
    >>> [1] "integer"
    >>> 
    >>> Is this the desired behavior for `as(x, "numeric")`?
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From konrad.rudolph+r-devel at gmail.com  Fri Dec 11 00:49:50 2015
From: konrad.rudolph+r-devel at gmail.com (Konrad Rudolph)
Date: Thu, 10 Dec 2015 23:49:50 +0000
Subject: [Rd] How do I reliably and efficiently hash a function?
Message-ID: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>

I?ve got the following scenario: I need to store information about an
R function, and retrieve it at a later point. In other programming
languages I?d implement this using a dictionary with the functions as
keys. In R, I?d usually use `attr(f, 'some-name')`. However, for my
purposes I do not want to use `attr` because the information that I
want to store is an implementation detail that should be hidden from
the user of the function (and, just as importantly, it shouldn?t
clutter the display when the function is printed on the console).

`comment` would be almost perfect since it?s hidden from the output
when printing a function ? unfortunately, the information I?m storing
is not a character string (it?s in fact an environment), so I cannot
use `comment`.

How can this be achieved?

For reference, I?ve considered the following two alternatives:

1. Use `attr`, and override `print.function` to not print my
attribute. However, I?m wary of overriding a core function just to
implement such a little thing, and overriding this function would
obviously clash with other overrides, if somebody else happens to have
a similarly harebrain idea.

2. Use C++ to retrieve the SEXP to the body of the CLOSXP that
represents a function, and use that as a key in a dictionary. I
*think* that this robustly and efficiently identifies functions in R.
However, this relies quite heavily on R internal implementation
details, and in particular on the fact that the GC will not move
objects around in memory. The current GC doesn?t do this but G?bor
Cs?rdi rightfully pointed out to me that this might change.

On the chance that I?m trying to solve the wrong Y to an X/Y problem,
the full context to the above problem is explained in [1]. In a
nutshell, I am hooking a new environment into a function?s parent.env
chain, by re-assigning the function?s `parent.env` (naughty, I know):

```
parent.env(my_new_env) = parent.env(f)
parent.env(f) = my_new_env
```

This is done so that the function `f` finds objects defined inside
that environment without having to attach it globally. However, for
bookkeeping purposes I need to preserve the original parent
environment ? hence the question.

[1]: https://github.com/klmr/modules/issues/66


From ccberry at ucsd.edu  Fri Dec 11 03:24:52 2015
From: ccberry at ucsd.edu (Charles C. Berry)
Date: Thu, 10 Dec 2015 18:24:52 -0800
Subject: [Rd] How do I reliably and efficiently hash a function?
In-Reply-To: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
References: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
Message-ID: <alpine.OSX.2.20.1512101810510.2980@charles-berrys-macbook.local>

On Thu, 10 Dec 2015, Konrad Rudolph wrote:

> I?ve got the following scenario: I need to store information about an
> R function, and retrieve it at a later point. In other programming
> languages I?d implement this using a dictionary with the functions as
> keys. In R, I?d usually use `attr(f, 'some-name')`. However, for my
> purposes I do not want to use `attr` because the information that I
> want to store is an implementation detail that should be hidden from
> the user of the function (and, just as importantly, it shouldn?t
> clutter the display when the function is printed on the console).
>
> `comment` would be almost perfect since it?s hidden from the output
> when printing a function ? unfortunately, the information I?m storing
> is not a character string (it?s in fact an environment), so I cannot
> use `comment`.
>
> How can this be achieved?
>

See

https://cran.r-project.org/doc/manuals/r-release/R-intro.html#Scope

For example, these commands:

foo <- function() {info <- "abc";function(x) x+1}
func <- foo()
find("func")
func(1)
ls(envir=environment(func))
get("info",environment(func))
func

Yield these printed results:

: [1] ".GlobalEnv"
: [1] 2
: [1] "info"
: [1] "abc"
: function (x)
: x + 1
: <environment: 0x7fbd5c86bc60>

The environment of the function gets printed, but 'info' and other
objects that might exist in that environment do not get printed unless
you explicitly call for them.

HTH,

Chuck

p.s. 'environment(func)$info' also works.

From maechler at stat.math.ethz.ch  Fri Dec 11 10:25:29 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 11 Dec 2015 10:25:29 +0100
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <22118.59473.654693.639907@stat.math.ethz.ch>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
	<22118.59473.654693.639907@stat.math.ethz.ch>
Message-ID: <22122.38537.382484.644230@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 8 Dec 2015 15:25:21 +0100 writes:

>>>>> John Chambers <jmc at r-project.org>
>>>>>     on Mon, 7 Dec 2015 16:05:59 -0800 writes:

    >> We do need an explicit method here, I think.
    >> The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").

    >> Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:

    >>> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
    >> [1] "coerce"
    >>> typeof(as(1L, "numeric"))
    >> [1] "double"

    >> Seems like a reasonable addition to the code, unless someone sees a problem.
    >> John

    > I guess that that some package checks (in CRAN + Bioc + ... -
    > land) will break,
    > but I still think we should add such a coercion to R.

    > Martin

Hmm...  I've tried to add the above to R
and do notice that there are consequences that may be larger than
anticipated:

Here is example code:

   myN   <- setClass("myN",   contains="numeric")
   myNid <- setClass("myNid", contains="numeric", representation(id="character"))
   NN <-    setClass("NN", representation(x="numeric"))

   (m1 <- myN  (1:3))
   (m2 <- myNid(1:3, id = "i3"))
   tools::assertError(NN (1:3))# in all R versions

   ##                     # current R  |  new R
   ##                     # -----------|----------
   class(getDataPart(m1)) # integer    |  numeric
   class(getDataPart(m2)) # integer    |  numeric


In other words, with the above setting, the traditional
gentleperson's agreement in S and R,

  __ "numeric" sometimes conveniently means "integer" or "double"  __

will be slightly less often used ... which of course may be a
very good thing.

However, it breaks strict back compatibility also in cases where
the previous behavior may have been preferable:
After all integer vectors need only have the space of doubles.

Shall we still go ahead and do apply this change to R-devel
and then all package others will be willing to update where necessary?

As this may affect the many hundreds of bioconductor packages
using S4 classes, I am -- exceptionally -- cross posting to the
bioc-devel list.

Martin Maechler


    >> On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:

    >>> Perhaps it is not that surprising, given that
    >>> 
    >>> > mode(1L)
    >>> [1] "numeric"
    >>> 
    >>> and
    >>> 
    >>> > is.numeric(1L)
    >>> [1] TRUE
    >>> 
    >>> On the other hand, this is curious, to say the least:
    >>> 
    >>> > is.double(as(1L, "double"))
    >>> [1] FALSE
    >>> 
    >>>> Here's the surprising behavior:
    >>>> 
    >>>> x <- 1L
    >>>> xx <- as(x, "numeric")
    >>>> class(xx)
    >>>> ## [1] "integer"
    >>>> 
    >>>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
    >>>> S4 method for the signature `c("integer", "numeric")`, whose body is
    >>>> copied in below.
    >>>> 
    >>>> function (from, to = "numeric", strict = TRUE)
    >>>> if (strict) {
    >>>> class(from) <- "numeric"
    >>>> from
    >>>> } else from
    >>>> 
    >>>> This in turn does nothing, even when strict=TRUE, because that
    >>>> assignment to class "numeric" has no effect:
    >>>> 
    >>>> x <- 10L
    >>>> class(x) <- "numeric"
    >>>> class(x)
    >>>> [1] "integer"
    >>>> 
    >>>> Is this the desired behavior for `as(x, "numeric")`?
    >>> 
    >>> ______________________________________________
    >>> R-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-devel

    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From mark.vanderloo at gmail.com  Fri Dec 11 11:49:17 2015
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Fri, 11 Dec 2015 10:49:17 +0000
Subject: [Rd] How do I reliably and efficiently hash a function?
In-Reply-To: <alpine.OSX.2.20.1512101810510.2980@charles-berrys-macbook.local>
References: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
	<alpine.OSX.2.20.1512101810510.2980@charles-berrys-macbook.local>
Message-ID: <CAOKDuOivxrh_Ti8U+AwvNeAq5a3Snz4=WSftSMgEiW2bA4aoRg@mail.gmail.com>

In addition to what Charles wrote, you can also use 'local' if you don't
want a function that creates another function.

> f <- local({info <- 10; function(x) x + info})
> f(3)
[1] 13

best,
Mark


Op vr 11 dec. 2015 om 03:27 schreef Charles C. Berry <ccberry at ucsd.edu>:

> On Thu, 10 Dec 2015, Konrad Rudolph wrote:
>
> > I?ve got the following scenario: I need to store information about an
> > R function, and retrieve it at a later point. In other programming
> > languages I?d implement this using a dictionary with the functions as
> > keys. In R, I?d usually use `attr(f, 'some-name')`. However, for my
> > purposes I do not want to use `attr` because the information that I
> > want to store is an implementation detail that should be hidden from
> > the user of the function (and, just as importantly, it shouldn?t
> > clutter the display when the function is printed on the console).
> >
> > `comment` would be almost perfect since it?s hidden from the output
> > when printing a function ? unfortunately, the information I?m storing
> > is not a character string (it?s in fact an environment), so I cannot
> > use `comment`.
> >
> > How can this be achieved?
> >
>
> See
>
> https://cran.r-project.org/doc/manuals/r-release/R-intro.html#Scope
>
> For example, these commands:
>
> foo <- function() {info <- "abc";function(x) x+1}
> func <- foo()
> find("func")
> func(1)
> ls(envir=environment(func))
> get("info",environment(func))
> func
>
> Yield these printed results:
>
> : [1] ".GlobalEnv"
> : [1] 2
> : [1] "info"
> : [1] "abc"
> : function (x)
> : x + 1
> : <environment: 0x7fbd5c86bc60>
>
> The environment of the function gets printed, but 'info' and other
> objects that might exist in that environment do not get printed unless
> you explicitly call for them.
>
> HTH,
>
> Chuck
>
> p.s. 'environment(func)$info' also works.
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From aixtools at gmail.com  Fri Dec 11 13:21:54 2015
From: aixtools at gmail.com (Michael Felt)
Date: Fri, 11 Dec 2015 13:21:54 +0100
Subject: [Rd] R-devel, autotools and libtool
Message-ID: <566ABFE2.3000409@gmail.com>

Hello all,

I have spent the last week going through the configure/configure.ac 
file, basically line-by-line.
I am finding things related to AIX that have not been working well 
(i.e., cleanly) for 32-bit builds and are a "root-cause" for 64-bit 
builds to finish cleanly.

Trying to keep this short - you can also just skip to end to see my 
question!

With regard to AIX, there is a lot of difficulty re: 64-bit and default 
libraries.
a) AIX aka IBM built-libraries contain both 32 and 64 bit members, so 
there is no need for lib64
b) AIX Toolbox (-like) distros, built on GCC do have 32 and 64 bit 
directories, and while they may use lib64 the gcc compiler uses ppc64 
for it's 64-bit libraries. "Happy standardization"
c) IMHO - as I cannot speak for IBM - the "preference" for AIX is to not 
use /usr/local (Someone, maybe it
was BULL, opted for /opt/freeware as a prefix. That is where AIXTOOLBOX 
(family) install files. And the fun here is - some packages have mixed 
32 and 64 bit members, others use the lib64 convention.
In any case, forcing /usr/local (when $prefix is defined to something 
else) may break things (it has in earlier 'package' builds at least.) 
and the way it is now, /usr/local gets put in front of anything else).

${rhome} - not 'simple' to find where it is defined (not in config.ac, 
not in m4/R.m4 - that I understand)

Guessing here, but for 64-bit I expect this may be introducing one of 
the problems I have had:

## As from R 3.2.0 split up -L... and -lR
if test "${want_R_shlib}" = yes; then
   LIBR0="-L\$(R_HOME)/lib\$(R_ARCH)"
   LIBR1=-lR
else
   LIBR0=
   LIBR1=
fi


And then, ignoring the rest until I get to:

## <FIXME>
## Completely disable using libtool for building shlibs until libtool
## fully supports Fortran and C++.
## AC_ARG_WITH([libtool],
## [AS_HELP_STRING([--with-libtool],[use libtool for building shared 
libraries [yes]])],
## [use_libtool="${withval}"],
## [use_libtool=yes])
## AM_CONDITIONAL(USE_LIBTOOL, [test "x${use_libtool}" = xyes])
## </FIXME>

Hence the question - is there a real interest on someone (like me) to 
examine libtool usage on a slightly used platform?

Michael


From 081024015 at fudan.edu.cn  Fri Dec 11 13:50:24 2015
From: 081024015 at fudan.edu.cn (=?UTF-8?B?5p2O55Cl?=)
Date: Fri, 11 Dec 2015 20:50:24 +0800 (GMT+08:00)
Subject: [Rd] Runtime error when run a RInside program compiled by intel c++
 on windows
Message-ID: <6de3156a.15428.1519117a3f5.Coremail.081024015@fudan.edu.cn>


  I have intstalled R-3.2.2,Rcpp-0.12.2,RInside-0.2.13 on windows. I compiled the example1 of RInside in the 
example directory which create a RInside instance and prints "hello world". The compiler is intel c++. I included
the RInside source files in the project and fixed the compile and link errors. But when run the executable file it
prints some error message and quites. 
   I debug into the code.The error messages come from the RInside::initialize() function. It gives following  message after
Rf_initEmbeddedR():

    Warning message:
    In local(( :bytecode version mismatch: using eval
    Error in objects(db.pos, all.name = TRUE) :
       3 arguments passed to .Internal(ls) which requres 2
    
    And it gives following error after Rf_eval(Rf_lang2(suppressMessagesSymbol,Rf_lang2(requireSymbol, Rf_mkString("Rcpp"))),R_GlobalEnv)

    Error in .Internal(getOption(x)):
         there is no  .Internal function 'getOption'
    Execution halted.

    Does anyone know how to fix this error? Thanks.

                                                                     Eric


From konrad.rudolph+r-devel at gmail.com  Fri Dec 11 13:56:18 2015
From: konrad.rudolph+r-devel at gmail.com (Konrad Rudolph)
Date: Fri, 11 Dec 2015 12:56:18 +0000
Subject: [Rd] How do I reliably and efficiently hash a function?
In-Reply-To: <CAOKDuOivxrh_Ti8U+AwvNeAq5a3Snz4=WSftSMgEiW2bA4aoRg@mail.gmail.com>
References: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
	<alpine.OSX.2.20.1512101810510.2980@charles-berrys-macbook.local>
	<CAOKDuOivxrh_Ti8U+AwvNeAq5a3Snz4=WSftSMgEiW2bA4aoRg@mail.gmail.com>
Message-ID: <CAM2gKPa2YpWh_umEzNeUP=E9oLwnkY2pEtSDaAkOmEMSH846eA@mail.gmail.com>

Thanks. I know about `local` (and functions within functions). In
fact, the functions are *already* defined inside their own environment
(same as what `local` does). But unfortunately this doesn?t solve my
problem, since the functions? parent environment gets changed during
the function?s execution, and I need to retrieve my stored data
*after* that point, inside the function.

I?ve tried to create a more exact example of what?s going on ?
unfortunately it?s really hard to simplify the problem without losing
crucial details. Since the code is just a tad too long, I?ve posted it
as a Github Gist:

https://gist.github.com/klmr/53c9400e832d7fd9ea5c

The function `f` in the example calls `get_meta()` twice, and gets
different results before and after calling an ancillary function that
modifies the function?s `parent.env`. I want it to return the same
information (?original?) both times.

On Fri, Dec 11, 2015 at 10:49 AM, Mark van der Loo
<mark.vanderloo at gmail.com> wrote:
> In addition to what Charles wrote, you can also use 'local' if you don't
> want a function that creates another function.
>
>> f <- local({info <- 10; function(x) x + info})
>> f(3)
> [1] 13
>
> best,
> Mark
>
>
> Op vr 11 dec. 2015 om 03:27 schreef Charles C. Berry <ccberry at ucsd.edu>:
>>
>> On Thu, 10 Dec 2015, Konrad Rudolph wrote:
>>
>> > I?ve got the following scenario: I need to store information about an
>> > R function, and retrieve it at a later point. In other programming
>> > languages I?d implement this using a dictionary with the functions as
>> > keys. In R, I?d usually use `attr(f, 'some-name')`. However, for my
>> > purposes I do not want to use `attr` because the information that I
>> > want to store is an implementation detail that should be hidden from
>> > the user of the function (and, just as importantly, it shouldn?t
>> > clutter the display when the function is printed on the console).
>> >
>> > `comment` would be almost perfect since it?s hidden from the output
>> > when printing a function ? unfortunately, the information I?m storing
>> > is not a character string (it?s in fact an environment), so I cannot
>> > use `comment`.
>> >
>> > How can this be achieved?
>> >
>>
>> See
>>
>> https://cran.r-project.org/doc/manuals/r-release/R-intro.html#Scope
>>
>> For example, these commands:
>>
>> foo <- function() {info <- "abc";function(x) x+1}
>> func <- foo()
>> find("func")
>> func(1)
>> ls(envir=environment(func))
>> get("info",environment(func))
>> func
>>
>> Yield these printed results:
>>
>> : [1] ".GlobalEnv"
>> : [1] 2
>> : [1] "info"
>> : [1] "abc"
>> : function (x)
>> : x + 1
>> : <environment: 0x7fbd5c86bc60>
>>
>> The environment of the function gets printed, but 'info' and other
>> objects that might exist in that environment do not get printed unless
>> you explicitly call for them.
>>
>> HTH,
>>
>> Chuck
>>
>> p.s. 'environment(func)$info' also works.
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From h.wickham at gmail.com  Fri Dec 11 14:26:03 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 11 Dec 2015 07:26:03 -0600
Subject: [Rd] How do I reliably and efficiently hash a function?
In-Reply-To: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
References: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
Message-ID: <CABdHhvGzA9atxR2Mrei_T+0h9L3u2LKaDu3GwAi5tr71Q0=Omw@mail.gmail.com>

On Thu, Dec 10, 2015 at 5:49 PM, Konrad Rudolph
<konrad.rudolph+r-devel at gmail.com> wrote:
> I?ve got the following scenario: I need to store information about an
> R function, and retrieve it at a later point. In other programming
> languages I?d implement this using a dictionary with the functions as
> keys. In R, I?d usually use `attr(f, 'some-name')`. However, for my
> purposes I do not want to use `attr` because the information that I
> want to store is an implementation detail that should be hidden from
> the user of the function (and, just as importantly, it shouldn?t
> clutter the display when the function is printed on the console).
>
> `comment` would be almost perfect since it?s hidden from the output
> when printing a function ? unfortunately, the information I?m storing
> is not a character string (it?s in fact an environment), so I cannot
> use `comment`.
>
> How can this be achieved?
>
> For reference, I?ve considered the following two alternatives:
>
> 1. Use `attr`, and override `print.function` to not print my
> attribute. However, I?m wary of overriding a core function just to
> implement such a little thing, and overriding this function would
> obviously clash with other overrides, if somebody else happens to have
> a similarly harebrain idea.

Why not use your own S3 class?

Hadley

-- 
http://had.co.nz/


From edd at debian.org  Fri Dec 11 14:26:42 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 11 Dec 2015 07:26:42 -0600
Subject: [Rd] Runtime error when run a RInside program compiled by intel
 c++ on windows
In-Reply-To: <6de3156a.15428.1519117a3f5.Coremail.081024015@fudan.edu.cn>
References: <6de3156a.15428.1519117a3f5.Coremail.081024015@fudan.edu.cn>
Message-ID: <22122.53010.338055.973795@max.nulle.part>


Eric,

This must now be your third or fourth email on this matter (counting the one
to me directly, and to be clear I much prefer this on list). I'll be brief:

On 11 December 2015 at 20:50, ?? wrote:
| 
|   I have intstalled R-3.2.2,Rcpp-0.12.2,RInside-0.2.13 on windows. I compiled the example1 of RInside in the 
| example directory which create a RInside instance and prints "hello world". The compiler is intel c++. I included
| the RInside source files in the project and fixed the compile and link errors. But when run the executable file it
| prints some error message and quites. 
|    I debug into the code.The error messages come from the RInside::initialize() function. It gives following  message after
| Rf_initEmbeddedR():
| 
|     Warning message:
|     In local(( :bytecode version mismatch: using eval
|     Error in objects(db.pos, all.name = TRUE) :
|        3 arguments passed to .Internal(ls) which requres 2
|     
|     And it gives following error after Rf_eval(Rf_lang2(suppressMessagesSymbol,Rf_lang2(requireSymbol, Rf_mkString("Rcpp"))),R_GlobalEnv)
| 
|     Error in .Internal(getOption(x)):
|          there is no  .Internal function 'getOption'
|     Execution halted.
| 
|     Does anyone know how to fix this error? Thanks.

This is rather indicative of an unsuccessful build.

You may have managed to link this in some, but R clearly does not instantiate
right and does not start right.  getOption() is part of the base package. If
that goes astray you have /a lot more/ problems to expect.

So if I were you, I'd reverse course and forget icc. R, Rcpp, RInside are all
tested against a well known set of compilers __and work with those__. So on
Windows I would stick with MinGW.

Lastly, as the Rcpp + RInside documentation says in several places: please
ask on the rcpp-devel list.

R-devel is not the correct forum for questions with particular packages.

Thanks,  Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jeroenooms at gmail.com  Fri Dec 11 14:44:12 2015
From: jeroenooms at gmail.com (Jeroen Ooms)
Date: Fri, 11 Dec 2015 14:44:12 +0100
Subject: [Rd] How do I reliably and efficiently hash a function?
In-Reply-To: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
References: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
Message-ID: <CABFfbXupq48SULO6AVMhPMucC5Jzc5oznz+HXUjyjEJkhwFA8Q@mail.gmail.com>

On Fri, Dec 11, 2015 at 12:49 AM, Konrad Rudolph
<konrad.rudolph+r-devel at gmail.com> wrote:
>
> On the chance that I?m trying to solve the wrong Y to an X/Y problem,
> the full context to the above problem is explained in [1]. In a
> nutshell, I am hooking a new environment into a function?s parent.env
> chain, by re-assigning the function?s `parent.env` (naughty, I know).
> This is done so that the function `f` finds objects defined inside
> that environment without having to attach it globally.

Not sure if this is helpful, but you can implement this more naturally
using closures without hacking on environments. As I understand it,
your functions have some shared state, and some private. So each
function needs a private parent env, which all share a common
grand-parent that holds your shared objects. Maybe this example helps:

new_closure <- (function(shared = 0){
  function(name, priv = 0){
    function(){
      priv <<- priv +1
      shared <<- shared +1
      print(sprintf("Total:%d; %s:%d", shared, name, priv))
    }
  }
})()

fun1 <- new_closure("erik")
fun2 <- new_closure("anna")

fun1()
fun1()
fun1()
fun2()
fun1()
fun1()
fun2()


From konrad.rudolph+r-devel at gmail.com  Fri Dec 11 15:25:56 2015
From: konrad.rudolph+r-devel at gmail.com (Konrad Rudolph)
Date: Fri, 11 Dec 2015 14:25:56 +0000
Subject: [Rd] How do I reliably and efficiently hash a function?
In-Reply-To: <CABFfbXupq48SULO6AVMhPMucC5Jzc5oznz+HXUjyjEJkhwFA8Q@mail.gmail.com>
References: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
	<CABFfbXupq48SULO6AVMhPMucC5Jzc5oznz+HXUjyjEJkhwFA8Q@mail.gmail.com>
Message-ID: <CAM2gKPZAxpyM81GjXewr1y2YLMizUO-n-naNHb1QqyNaskSCMw@mail.gmail.com>

@Jeroen, here?s what I?m solving with my hacking the parent
environment chain: I?m essentially re-implementing `base::attach` ?
except that I?m attaching objects *locally* in the function instead of
globally. I don?t think this can be done in any way except by
modifying the parent environment chain. Incidentally, package
namespaces do largely the same thing. The difference is that they only
need to do it *once* (when loaded), and subsequent function calls do
not modify this chain.


From konrad.rudolph+r-devel at gmail.com  Fri Dec 11 15:33:40 2015
From: konrad.rudolph+r-devel at gmail.com (Konrad Rudolph)
Date: Fri, 11 Dec 2015 14:33:40 +0000
Subject: [Rd] How do I reliably and efficiently hash a function?
In-Reply-To: <CABdHhvGzA9atxR2Mrei_T+0h9L3u2LKaDu3GwAi5tr71Q0=Omw@mail.gmail.com>
References: <CAM2gKPbSZjLUpVW87iaKczF-2eDHiT6GReu28SBJ98mSt8Djcg@mail.gmail.com>
	<CABdHhvGzA9atxR2Mrei_T+0h9L3u2LKaDu3GwAi5tr71Q0=Omw@mail.gmail.com>
Message-ID: <CAM2gKPbMVdu89LMqP5JPcho5Vq=2SYk0ZAbwof3vpEGbzSp57Q@mail.gmail.com>

On Fri, Dec 11, 2015 at 1:26 PM, Hadley Wickham <h.wickham at gmail.com> wrote:
> Why not use your own S3 class?

Yes, I?ll probably do that. Thanks. I honestly don?t know why I hadn?t
thought of that before, since I?m doing the exact same thing in
another context [1].

[1]: https://github.com/klmr/decorator/blob/2742b398c841bac53acb6607a4d220aedf10c26b/decorate.r#L24-L36


From jmc at r-project.org  Fri Dec 11 19:11:05 2015
From: jmc at r-project.org (John Chambers)
Date: Fri, 11 Dec 2015 10:11:05 -0800
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <22122.38537.382484.644230@stat.math.ethz.ch>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
	<22118.59473.654693.639907@stat.math.ethz.ch>
	<22122.38537.382484.644230@stat.math.ethz.ch>
Message-ID: <C5017517-991F-4C5B-A098-6DE85CBE0927@r-project.org>

Somehow, the most obvious fixes are always back-incompatible these days.

The example intrigued me, so I looked into it a bit (should have been doing something else, but ....)

You're right that this is the proverbial thin-edge-of-the-wedge.

The problem is in setDataPart(), which will be called whenever a class extends one of the vector types.

It does
	as(value, dataClass)
The key point is that the third argument to as(), strict=TRUE by default.  So, yes, the change will cause all integer vectors to become double when the class extends "numeric".  Generally, strict=TRUE makes sense here and of course changing THAT would open up yet more incompatibilities.

For back compatibility, one would have to have some special code in setDataPart() for the case of integer/numeric.

John

(Historically, the original sin was probably not making a distinction between "numeric" as a virtual class and "double" as a type/class.)


On Dec 11, 2015, at 1:25 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>    on Tue, 8 Dec 2015 15:25:21 +0100 writes:
> 
>>>>>> John Chambers <jmc at r-project.org>
>>>>>>    on Mon, 7 Dec 2015 16:05:59 -0800 writes:
> 
>>> We do need an explicit method here, I think.
>>> The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").
> 
>>> Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:
> 
>>>> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
>>> [1] "coerce"
>>>> typeof(as(1L, "numeric"))
>>> [1] "double"
> 
>>> Seems like a reasonable addition to the code, unless someone sees a problem.
>>> John
> 
>> I guess that that some package checks (in CRAN + Bioc + ... -
>> land) will break,
>> but I still think we should add such a coercion to R.
> 
>> Martin
> 
> Hmm...  I've tried to add the above to R
> and do notice that there are consequences that may be larger than
> anticipated:
> 
> Here is example code:
> 
>   myN   <- setClass("myN",   contains="numeric")
>   myNid <- setClass("myNid", contains="numeric", representation(id="character"))
>   NN <-    setClass("NN", representation(x="numeric"))
> 
>   (m1 <- myN  (1:3))
>   (m2 <- myNid(1:3, id = "i3"))
>   tools::assertError(NN (1:3))# in all R versions
> 
>   ##                     # current R  |  new R
>   ##                     # -----------|----------
>   class(getDataPart(m1)) # integer    |  numeric
>   class(getDataPart(m2)) # integer    |  numeric
> 
> 
> In other words, with the above setting, the traditional
> gentleperson's agreement in S and R,
> 
>  __ "numeric" sometimes conveniently means "integer" or "double"  __
> 
> will be slightly less often used ... which of course may be a
> very good thing.
> 
> However, it breaks strict back compatibility also in cases where
> the previous behavior may have been preferable:
> After all integer vectors need only have the space of doubles.
> 
> Shall we still go ahead and do apply this change to R-devel
> and then all package others will be willing to update where necessary?
> 
> As this may affect the many hundreds of bioconductor packages
> using S4 classes, I am -- exceptionally -- cross posting to the
> bioc-devel list.
> 
> Martin Maechler
> 
> 
>>> On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:
> 
>>>> Perhaps it is not that surprising, given that
>>>> 
>>>>> mode(1L)
>>>> [1] "numeric"
>>>> 
>>>> and
>>>> 
>>>>> is.numeric(1L)
>>>> [1] TRUE
>>>> 
>>>> On the other hand, this is curious, to say the least:
>>>> 
>>>>> is.double(as(1L, "double"))
>>>> [1] FALSE
>>>> 
>>>>> Here's the surprising behavior:
>>>>> 
>>>>> x <- 1L
>>>>> xx <- as(x, "numeric")
>>>>> class(xx)
>>>>> ## [1] "integer"
>>>>> 
>>>>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
>>>>> S4 method for the signature `c("integer", "numeric")`, whose body is
>>>>> copied in below.
>>>>> 
>>>>> function (from, to = "numeric", strict = TRUE)
>>>>> if (strict) {
>>>>> class(from) <- "numeric"
>>>>> from
>>>>> } else from
>>>>> 
>>>>> This in turn does nothing, even when strict=TRUE, because that
>>>>> assignment to class "numeric" has no effect:
>>>>> 
>>>>> x <- 10L
>>>>> class(x) <- "numeric"
>>>>> class(x)
>>>>> [1] "integer"
>>>>> 
>>>>> Is this the desired behavior for `as(x, "numeric")`?
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


	[[alternative HTML version deleted]]


From Martin.Morgan at roswellpark.org  Fri Dec 11 23:10:34 2015
From: Martin.Morgan at roswellpark.org (Morgan, Martin)
Date: Fri, 11 Dec 2015 22:10:34 +0000
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <22122.38537.382484.644230@stat.math.ethz.ch>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
	<22118.59473.654693.639907@stat.math.ethz.ch>,
	<22122.38537.382484.644230@stat.math.ethz.ch>
Message-ID: <DF23DAC5A53912408040FF04D8B780AAE3D387@EXMB3RSC.roswellpark.org>

From the Bioconductor side of things, the general feeling is that this is a step in the right direction and worth the broken packages. Martin Morgan
________________________________________
From: R-devel [r-devel-bounces at r-project.org] on behalf of Martin Maechler [maechler at stat.math.ethz.ch]
Sent: Friday, December 11, 2015 4:25 AM
To: John Chambers; r-devel at r-project.org; bioc-devel list; Benjamin Tyner
Cc: Martin Maechler
Subject: Re: [Rd] For integer vectors, `as(x, "numeric")` has no effect.

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 8 Dec 2015 15:25:21 +0100 writes:

>>>>> John Chambers <jmc at r-project.org>
>>>>>     on Mon, 7 Dec 2015 16:05:59 -0800 writes:

    >> We do need an explicit method here, I think.
    >> The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").

    >> Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:

    >>> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
    >> [1] "coerce"
    >>> typeof(as(1L, "numeric"))
    >> [1] "double"

    >> Seems like a reasonable addition to the code, unless someone sees a problem.
    >> John

    > I guess that that some package checks (in CRAN + Bioc + ... -
    > land) will break,
    > but I still think we should add such a coercion to R.

    > Martin

Hmm...  I've tried to add the above to R
and do notice that there are consequences that may be larger than
anticipated:

Here is example code:

   myN   <- setClass("myN",   contains="numeric")
   myNid <- setClass("myNid", contains="numeric", representation(id="character"))
   NN <-    setClass("NN", representation(x="numeric"))

   (m1 <- myN  (1:3))
   (m2 <- myNid(1:3, id = "i3"))
   tools::assertError(NN (1:3))# in all R versions

   ##                     # current R  |  new R
   ##                     # -----------|----------
   class(getDataPart(m1)) # integer    |  numeric
   class(getDataPart(m2)) # integer    |  numeric


In other words, with the above setting, the traditional
gentleperson's agreement in S and R,

  __ "numeric" sometimes conveniently means "integer" or "double"  __

will be slightly less often used ... which of course may be a
very good thing.

However, it breaks strict back compatibility also in cases where
the previous behavior may have been preferable:
After all integer vectors need only have the space of doubles.

Shall we still go ahead and do apply this change to R-devel
and then all package others will be willing to update where necessary?

As this may affect the many hundreds of bioconductor packages
using S4 classes, I am -- exceptionally -- cross posting to the
bioc-devel list.

Martin Maechler


    >> On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:

    >>> Perhaps it is not that surprising, given that
    >>>
    >>> > mode(1L)
    >>> [1] "numeric"
    >>>
    >>> and
    >>>
    >>> > is.numeric(1L)
    >>> [1] TRUE
    >>>
    >>> On the other hand, this is curious, to say the least:
    >>>
    >>> > is.double(as(1L, "double"))
    >>> [1] FALSE
    >>>
    >>>> Here's the surprising behavior:
    >>>>
    >>>> x <- 1L
    >>>> xx <- as(x, "numeric")
    >>>> class(xx)
    >>>> ## [1] "integer"
    >>>>
    >>>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
    >>>> S4 method for the signature `c("integer", "numeric")`, whose body is
    >>>> copied in below.
    >>>>
    >>>> function (from, to = "numeric", strict = TRUE)
    >>>> if (strict) {
    >>>> class(from) <- "numeric"
    >>>> from
    >>>> } else from
    >>>>
    >>>> This in turn does nothing, even when strict=TRUE, because that
    >>>> assignment to class "numeric" has no effect:
    >>>>
    >>>> x <- 10L
    >>>> class(x) <- "numeric"
    >>>> class(x)
    >>>> [1] "integer"
    >>>>
    >>>> Is this the desired behavior for `as(x, "numeric")`?
    >>>
    >>> ______________________________________________
    >>> R-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-devel

    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


This email message may contain legally privileged and/or confidential information.  If you are not the intended recipient(s), or the employee or agent responsible for the delivery of this message to the intended recipient(s), you are hereby notified that any disclosure, copying, distribution, or use of this email message is prohibited.  If you have received this message in error, please notify the sender immediately by e-mail and delete this email message from your computer. Thank you.

From maechler at stat.math.ethz.ch  Sat Dec 12 10:32:51 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 12 Dec 2015 10:32:51 +0100
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <C5017517-991F-4C5B-A098-6DE85CBE0927@r-project.org>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
	<22118.59473.654693.639907@stat.math.ethz.ch>
	<22122.38537.382484.644230@stat.math.ethz.ch>
	<C5017517-991F-4C5B-A098-6DE85CBE0927@r-project.org>
Message-ID: <22123.59843.873290.235837@stat.math.ethz.ch>

>>>>> John Chambers <jmc at r-project.org>
>>>>>     on Fri, 11 Dec 2015 10:11:05 -0800 writes:

    > Somehow, the most obvious fixes are always back-incompatible these days.
    > The example intrigued me, so I looked into it a bit (should have been doing something else, but ....)

    > You're right that this is the proverbial thin-edge-of-the-wedge.

    > The problem is in setDataPart(), which will be called whenever a class extends one of the vector types.

    > It does
    > as(value, dataClass)
    > The key point is that the third argument to as(), strict=TRUE by default.  So, yes, the change will cause all integer vectors to become double when the class extends "numeric".  Generally, strict=TRUE makes sense here and of course changing THAT would open up yet more incompatibilities.

    > For back compatibility, one would have to have some special code in setDataPart() for the case of integer/numeric.

    > John

    > (Historically, the original sin was probably not making a distinction between "numeric" as a virtual class and "double" as a type/class.)

Yes, indeed.  In the mean time, I've seen more cases where
  "the change will cause all integer vectors to become double when the class  extends "numeric". 
seems detrimental.

OTOH, I still think we could go in the right direction ---
hopefully along the wishes of bioconductor S4 development, see
Martin Morgan's e-mail:

[This is all S4 - only; should not much affect base R / S3]
Currently,   "integer" is a subclass of "numeric"  and so the
"integer become double" part seems unwanted to me.
OTOH,  it would really make sense to more formally
have the basic subclasses of  "numeric" to be "integer" and "double",
and  to let  as(*, "double") to become different to as(*, "numeric")
[Again, this is just for the S4 classes and as() coercions, *not* e.g. 
 for as.numeric() / as.double() !]

In the DEPRECATED part of the NEWS for R 2.7.0 (April 2008) we
have had

    o	The S4 pseudo-classes "single" and double have been removed.
	(The S4 class for a REALSXP is "numeric": for back-compatibility
	as(x, "double") coerces to "numeric".)

I think the removal of "single" was fine, but in hindsight,
maybe the removal of "double" -- which was partly broken then --
possibly could rather have been a fixup of "double" along the
following

   Current "thought experiment proposal" :

   1) "numeric" := {"integer", "double"}   { class - subclasses }
   2) as(1L, "numeric")  continues to return 1L .. since integer is
			 one case of "numeric"
   3) as(1L, "double")  newly returns 1.0   {and in fact would be
					     "equivalent" to   as.double(1L)}

After the above change,  S4  as(*, "double") would correspond to S3 as.double
but  as(*, "numeric")  would continue to differ from
as.numeric(*), the former *not* changing integers to double.

Martin

    > On Dec 11, 2015, at 1:25 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

    >>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
    >>>>>>> on Tue, 8 Dec 2015 15:25:21 +0100 writes:
    >> 
    >>>>>>> John Chambers <jmc at r-project.org>
    >>>>>>> on Mon, 7 Dec 2015 16:05:59 -0800 writes:
    >> 
    >>>> We do need an explicit method here, I think.
    >>>> The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").
    >> 
    >>>> Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:
    >> 
    >>>>> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
    >>>> [1] "coerce"
    >>>>> typeof(as(1L, "numeric"))
    >>>> [1] "double"
    >> 
    >>>> Seems like a reasonable addition to the code, unless someone sees a problem.
    >>>> John
    >> 
    >>> I guess that that some package checks (in CRAN + Bioc + ... -
    >>> land) will break,
    >>> but I still think we should add such a coercion to R.
    >> 
    >>> Martin
    >> 
    >> Hmm...  I've tried to add the above to R
    >> and do notice that there are consequences that may be larger than
    >> anticipated:
    >> 
    >> Here is example code:
    >> 
    >> myN   <- setClass("myN",   contains="numeric")
    >> myNid <- setClass("myNid", contains="numeric", representation(id="character"))
    >> NN <-    setClass("NN", representation(x="numeric"))
    >> 
    >> (m1 <- myN  (1:3))
    >> (m2 <- myNid(1:3, id = "i3"))
    >> tools::assertError(NN (1:3))# in all R versions
    >> 
    >> ##                     # current R  |  new R
    >> ##                     # -----------|----------
    >> class(getDataPart(m1)) # integer    |  numeric
    >> class(getDataPart(m2)) # integer    |  numeric
    >> 
    >> 
    >> In other words, with the above setting, the traditional
    >> gentleperson's agreement in S and R,
    >> 
    >> __ "numeric" sometimes conveniently means "integer" or "double"  __
    >> 
    >> will be slightly less often used ... which of course may be a
    >> very good thing.
    >> 
    >> However, it breaks strict back compatibility also in cases where
    >> the previous behavior may have been preferable:
    >> After all integer vectors need only have the space of doubles.
    >> 
    >> Shall we still go ahead and do apply this change to R-devel
    >> and then all package others will be willing to update where necessary?
    >> 
    >> As this may affect the many hundreds of bioconductor packages
    >> using S4 classes, I am -- exceptionally -- cross posting to the
    >> bioc-devel list.
    >> 
    >> Martin Maechler
    >> 
    >> 
    >>>> On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:
    >> 
    >>>>> Perhaps it is not that surprising, given that
    >>>>> 
>>>>> mode(1L)
    >>>>> [1] "numeric"
    >>>>> 
    >>>>> and
    >>>>> 
>>>>> is.numeric(1L)
    >>>>> [1] TRUE
    >>>>> 
    >>>>> On the other hand, this is curious, to say the least:
    >>>>> 
>>>>> is.double(as(1L, "double"))
    >>>>> [1] FALSE
    >>>>> 
>>>>> Here's the surprising behavior:
>>>>> 
>>>>> x <- 1L
>>>>> xx <- as(x, "numeric")
>>>>> class(xx)
>>>>> ## [1] "integer"
>>>>> 
>>>>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
>>>>> S4 method for the signature `c("integer", "numeric")`, whose body is
>>>>> copied in below.
>>>>> 
>>>>> function (from, to = "numeric", strict = TRUE)
>>>>> if (strict) {
>>>>> class(from) <- "numeric"
>>>>> from
>>>>> } else from
>>>>> 
>>>>> This in turn does nothing, even when strict=TRUE, because that
>>>>> assignment to class "numeric" has no effect:
>>>>> 
>>>>> x <- 10L
>>>>> class(x) <- "numeric"
>>>>> class(x)
>>>>> [1] "integer"
>>>>> 
>>>>> Is this the desired behavior for `as(x, "numeric")`?
    >>>>> 
    >>>>> ______________________________________________
    >>>>> R-devel at r-project.org mailing list
    >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >>>> ______________________________________________
    >>>> R-devel at r-project.org mailing list
    >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >>> ______________________________________________
    >>> R-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-devel


From mikko.korpela at aalto.fi  Mon Dec 14 18:45:35 2015
From: mikko.korpela at aalto.fi (Mikko Korpela)
Date: Mon, 14 Dec 2015 19:45:35 +0200
Subject: [Rd] [patch] Fix automatic domain in ngettext(), Bug 14605
Message-ID: <566F003F.6090509@aalto.fi>

A short overview of the problem: Automatic domain in ngettext() does not
work when used inside a package.

How to test:
1. Download the small test package "minimal_1.0-0.tar.gz" attached to
the bug report.
2. As the package contains Finnish translations, start R with Finnish
language settings. Prepending "LANGUAGE=fi " to the command line that
starts R works for me on Linux, if there are no conflicting settings in
the R startup files.
3. Run the following commands:
   library(minimal)
   test.with.domain()
   test.without.domain()
4. If all the text you see is in English, the language setting was not
applied correctly. Otherwise, if the test functions produced different
output, the problem has been demonstrated.

After applying the change in the attached file, the test functions
produce identical output, which means that ngettext() uses the package
translation domain if no other domain is specified.

I also think that ?ngettext? should probably be mentioned in this
paragraph of the ?gettext manual:

>     If ?domain? is ?NULL? or ?""?, and ?gettext? is called from a
>     function in the namespace of package ?pkg? the domain is set to
>     ?"R-pkg"?.  Otherwise there is no default domain.

At least "1.8.2 R messages" in R-exts implies that automatic domain
applies to ngettext(), too.

Tested on "R Under development (unstable) (2015-12-14 r69773)",
Platform: x86_64-pc-linux-gnu (64-bit).

-- 
Mikko Korpela
Aalto University School of Science
Department of Computer Science
-------------- next part --------------
A non-text attachment was scrubbed...
Name: errors.diff
Type: text/x-patch
Size: 375 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20151214/88ef03d3/attachment.bin>

From jaroslav.kuchar at fit.cvut.cz  Tue Dec 15 18:50:44 2015
From: jaroslav.kuchar at fit.cvut.cz (=?UTF-8?Q?Ing=2E_Jaroslav_Kucha=C5=99?=)
Date: Tue, 15 Dec 2015 18:50:44 +0100
Subject: [Rd] How to efficiently share data (a dataframe) between R and
 Java
In-Reply-To: <8F33B5D6-5D3D-4FD1-9830-9575094D4890@r-project.org>
References: <466cd25ef41dbefc2ee18c725a581e78@imap.fit.cvut.cz>
	<8F33B5D6-5D3D-4FD1-9830-9575094D4890@r-project.org>
Message-ID: <1d7e60b7eb54fcbb94bfdde18942a22b@imap.fit.cvut.cz>

Dear all,

thank you for your hints. I would prefer to do not use Rserve as Dirk
mentioned. 

@Simon
I have full control over the Java implementation - I can adapt the code
that I use for the communication R <-> Java. 

> You can natively access structures on each side. The fastest way is to
> use R representation (column-oriented) in Java - that is much faster
> than any kind of serialization or anything you mention above since you
> pass the variables as a whole.

Could you please send any reference to more examples or documentation
that can help me? 
The main goal is to copy a full dataframe from R to Java.

Best regards,
Jaroslav

On 2015-12-07 03:19, Simon Urbanek wrote:
> On Dec 6, 2015, at 12:36 PM, Ing. Jaroslav Kucha?
> <jaroslav.kuchar at fit.cvut.cz> wrote:
> 
>> Dear all,
>>
>> in our ongoing project we use Java implementations of several
>> algorithms. We also provide a ?wrapper? implemented as an R package
>> using rJava (https://github.com/jaroslav-kuchar/rCBA). Based on our
>> recent experiments, the significant portion of time is spent on copying
>> a dataframe from R to Java. The Java implementation needs access to the
>> source dataframe.
>>
>> I have tested several approaches: calling Java method row-by-row;
>> serialize the whole data-frame to a temp file and parsing in Java; or
>> row binding to a single vector and calling a single Java method. Each
>> approach has its limitations e.g. time-consuming row-by-row copying,
>> serialization and parsing performance or memory limitations of a single
>> vector.
>>
>> Is there an efficient approach how to copy a dataframe from R to Java
>> and another one from Java to R?
>>
>> Thanks for any help you can provide...
>>
> 
> You can natively access structures on each side. The fastest way is to
> use R representation (column-oriented) in Java - that is much faster
> than any kind of serialization or anything you mention above since you
> pass the variables as a whole.
> 
> Typically, the bottleneck are Java applications which may require very
> inefficient data structures. If you have control over the algorithms,
> you can simply use proper data structures and avoid that problem. If
> you don't have control, you'll have to add Java code that converts to
> whatever structure is needed by the Java code form the data frame
> pushed to the Java side. The main point here is that you do NOT want
> to do any conversion on the R side.
> 
> Cheers,
> ?imon


From simon.urbanek at r-project.org  Tue Dec 15 23:15:36 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 15 Dec 2015 17:15:36 -0500
Subject: [Rd] How to efficiently share data (a dataframe) between R and
	Java
In-Reply-To: <1d7e60b7eb54fcbb94bfdde18942a22b@imap.fit.cvut.cz>
References: <466cd25ef41dbefc2ee18c725a581e78@imap.fit.cvut.cz>
	<8F33B5D6-5D3D-4FD1-9830-9575094D4890@r-project.org>
	<1d7e60b7eb54fcbb94bfdde18942a22b@imap.fit.cvut.cz>
Message-ID: <630C80A0-9799-4F70-82B3-A3216AC6813F@r-project.org>

You can pass the entire df, example:

> data(iris)
> iris$sp = as.character(iris$Species)
> o=.jarray(lapply(iris, .jarray))
> .jcall("C",,"df",o)
df, 6 variables
[0]: double[150]
[1]: double[150]
[2]: double[150]
[3]: double[150]
[4]: int[150]
[5]: String[150]


Java code:

public class C {
       static void df(Object df[]) {
       	      int n;
       	      System.out.println("df, " + (n = df.length) + " variables");
	      int i = 0;
	      while (i < n) {
	      	    if (df[i] instanceof double[]) {
		    	double d[] = (double[]) df[i];
		        System.out.println("["+i+"]: double["+d.length+"]");
		    } else if (df[i] instanceof int[]) {
		    	int d[] = (int[]) df[i];
		        System.out.println("["+i+"]: int["+d.length+"]");
		    } else if (df[i] instanceof String[]) {
		        String s[] = (String[]) df[i];
			System.out.println("["+i+"]: String["+s.length+"]");
		    } else {
		        System.out.println("["+i+"]: some other type...");
		    }
		    i++;
	      }
        }
}

Normally, you wouldn't pass the entire df but instead have methods for the types you care about as the modeling function - that's more Java-like approach, but either is valid and there is no difference in efficiency.

Cheers,
Simon



> On Dec 15, 2015, at 12:50 PM, Ing. Jaroslav Kucha? <jaroslav.kuchar at fit.cvut.cz> wrote:
> 
> Dear all,
> 
> thank you for your hints. I would prefer to do not use Rserve as Dirk
> mentioned. 
> 
> @Simon
> I have full control over the Java implementation - I can adapt the code
> that I use for the communication R <-> Java. 
> 
>> You can natively access structures on each side. The fastest way is to
>> use R representation (column-oriented) in Java - that is much faster
>> than any kind of serialization or anything you mention above since you
>> pass the variables as a whole.
> 
> Could you please send any reference to more examples or documentation
> that can help me? 
> The main goal is to copy a full dataframe from R to Java.
> 
> Best regards,
> Jaroslav
> 
> On 2015-12-07 03:19, Simon Urbanek wrote:
>> On Dec 6, 2015, at 12:36 PM, Ing. Jaroslav Kucha?
>> <jaroslav.kuchar at fit.cvut.cz> wrote:
>> 
>>> Dear all,
>>> 
>>> in our ongoing project we use Java implementations of several
>>> algorithms. We also provide a ?wrapper? implemented as an R package
>>> using rJava (https://github.com/jaroslav-kuchar/rCBA). Based on our
>>> recent experiments, the significant portion of time is spent on copying
>>> a dataframe from R to Java. The Java implementation needs access to the
>>> source dataframe.
>>> 
>>> I have tested several approaches: calling Java method row-by-row;
>>> serialize the whole data-frame to a temp file and parsing in Java; or
>>> row binding to a single vector and calling a single Java method. Each
>>> approach has its limitations e.g. time-consuming row-by-row copying,
>>> serialization and parsing performance or memory limitations of a single
>>> vector.
>>> 
>>> Is there an efficient approach how to copy a dataframe from R to Java
>>> and another one from Java to R?
>>> 
>>> Thanks for any help you can provide...
>>> 
>> 
>> You can natively access structures on each side. The fastest way is to
>> use R representation (column-oriented) in Java - that is much faster
>> than any kind of serialization or anything you mention above since you
>> pass the variables as a whole.
>> 
>> Typically, the bottleneck are Java applications which may require very
>> inefficient data structures. If you have control over the algorithms,
>> you can simply use proper data structures and avoid that problem. If
>> you don't have control, you'll have to add Java code that converts to
>> whatever structure is needed by the Java code form the data frame
>> pushed to the Java side. The main point here is that you do NOT want
>> to do any conversion on the R side.
>> 
>> Cheers,
>> ?imon
> 


From aixtools at gmail.com  Wed Dec 16 09:31:39 2015
From: aixtools at gmail.com (Michael Felt)
Date: Wed, 16 Dec 2015 09:31:39 +0100
Subject: [Rd] Question about bug reporting, and the followup process
Message-ID: <5671216B.5090906@gmail.com>

Hi,

I sent in three bug-reports (maybe should have been 4, because the 
second contains an "enhancement" as well as well as a bug).

I do not set "Importance", ever - or, is that the custom here?

Regards,
Michael

p.s. - maybe related - is it best practice to add [Rd] in the subject 
line, or is there a program doing that instead?


From g.h.m.van.valkenhoef at rug.nl  Wed Dec 16 12:06:51 2015
From: g.h.m.van.valkenhoef at rug.nl (Gert van Valkenhoef)
Date: Wed, 16 Dec 2015 12:06:51 +0100
Subject: [Rd] Mystifying SEGFAULT on 3.2.3 but not 3.2.2
Message-ID: <CAGB9c4B3KFGWd371+7DJb84zKw3X3L28qtSyappPY9CZA57y2w@mail.gmail.com>

Dear R developers,

(Apologies about previous incomplete e-mail, I fat-fingered a keyboard
shortcut)??

I recently upgraded to 3.2.3 and am getting mystifying errors with my
in-development code (available at
https://github.com/gertvv/gemtc/tree/feature/regression). Every few hundred
LPs that I solve using the rcdd package will result in a SEGFAULT in the
garbage collector (address 0x10, cause 'memory not mapped') or an error
about a list not existing. Downgrading to 3.2.2 works, but *only* after
completely removing my local R packages and re-installing them. A
subsequent upgrade to 3.2.3 will again be broken, and even more
mysteriously it will also break a re-downgrade to 3.2.2 until I again purge
my local packages and re-install them.

To downgrade I am using (with the CRAN ubuntu mirror enabled):
sudo apt-get purge r-base-core
sudo rm -rf ~/R
sudo apt-get install r-base-core=3.2.2-1trusty0 r-base-dev=3.2.2-1trusty0
r-recommended=3.2.2-1trusty0
sudo apt-get install r-cran-rjags
R -e "install.packages(c('devtools','igraph','meta','truncnorm','rcdd'))"

The code that produces a SEGFAULT (usually after 5-15 iterations) under
3.2.3, but not 3.2.2:
library(devtools)
load_all('gemtc')
for (i in 1:100) { print(i); mtc.model(thrombolytic) }
(note that the SEGFAULT also happens without devtools)

The sessionInfo() in 3.2.2:

R version 3.2.2 (2015-08-14)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.3 LTS

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=nl_NL.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=nl_NL.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=nl_NL.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=nl_NL.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] gemtc_0.8       coda_0.16-1     lattice_0.20-33 devtools_1.9.1

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.2     roxygen2_5.0.1  rcdd_1.1-9      digest_0.6.8
 [5] truncnorm_1.0-7 grid_3.2.2      plyr_1.8.3      meta_4.3-2
 [9] magrittr_1.5    stringi_1.0-1   rjags_4-4       tools_3.2.2
[13] stringr_1.0.0   igraph_1.0.1    memoise_0.2.1

A core dump is here:
https://drive.google.com/a/rug.nl/file/d/0BxhVLNPmwLrycTYtOHNxNXZTMEk/view?usp=drive_web

I have tried debugging this but am stumped. Any help would be greatly
appreciated!

Kind regards,

Gert van Valkenhoef

	[[alternative HTML version deleted]]


From aixtools at gmail.com  Wed Dec 16 13:03:01 2015
From: aixtools at gmail.com (Michael Felt)
Date: Wed, 16 Dec 2015 13:03:01 +0100
Subject: [Rd] Building R in 64-bit mode
Message-ID: <567152F5.1020009@gmail.com>

Hope I am not sounding too much like a broken record - as far as 64-bit 
build on AIX is concerned.

** Short - 32-bit builds complete normally, 64-bit builds stop at 
"installing 'sysdata.rda'" with message:
Error: Line starting 'Package: tools ...' is malformed!
Execution halted

*** Longer...

I could file a bug - Importance, showstopper - but I would prefer to 
better understand how to dig a bit deeper into why it is failing - and 
work with (or for) you to make R easier to install and use on AIX.

As there are at least two ways to find 64-bit shared libraries (AIX-way; 
GNU/Linux-way; "Solaris-way .so files"?) I am trying to keep it simpler 
and and starting with the recently released R-3.2.3 distribution.

I made the following changes - to clean up many Duplicate Symbol 
warnings :happy me!:

diff -ru R-3.2.3.orig/configure R-3.2.3/configure
--- R-3.2.3.orig/configure      2015-12-02 23:16:46 +0000
+++ R-3.2.3/configure   2015-12-16 10:52:15 +0000
@@ -26339,11 +26339,11 @@
      ##ADD: However, for example, symbol in libc of memcpy is 
__memmove,__memmove64.
      ##ADD: This black magic puts lc before lR and pockets this.
      if test "x${OBJECT_MODE}" = "x64"; then
-      main_ldflags="${wl}-brtl ${wl}-bexpall ${wl}-bpT:0x100000000 
${wl}-bpD:0x110000000 -lc"
+      main_ldflags="${wl}-brtl ${wl}-bpT:0x100000000 
${wl}-bpD:0x110000000 -lc"
      else
-      main_ldflags="${wl}-brtl ${wl}-bexpall -lc"
+      main_ldflags="${wl}-brtl ${wl}-bmaxdata:0xd0000000/dsa -lc"
      fi
-    shlib_ldflags="${wl}-brtl ${wl}-G ${wl}-bexpall ${wl}-bnoentry -lc"
+    shlib_ldflags="${wl}-G ${wl}-bnoentry -lc"
      SHLIB_LIBADD="\$(LIBM)"
      shlib_cxxldflags="${shlib_ldflags}"
      if test "${GCC}" = yes; then
diff -ru R-3.2.3.orig/src/include/Defn.h R-3.2.3/src/include/Defn.h
--- R-3.2.3.orig/src/include/Defn.h     2015-08-25 22:15:24 +0000
+++ R-3.2.3/src/include/Defn.h  2015-12-16 10:53:08 +0000
@@ -1271,7 +1271,7 @@
  void invalidate_cached_recodings(void);  /* from sysutils.c */
  void resetICUcollator(void); /* from util.c */
  void dt_invalidate_locale(); /* from Rstrptime.h */
-int R_OutputCon; /* from connections.c */
+extern int R_OutputCon; /* from connections.c */
  extern int R_InitReadItemDepth, R_ReadItemDepth; /* from serialize.c */
  void get_current_mem(size_t *,size_t *,size_t *); /* from memory.c */
  unsigned long get_duplicate_counter(void);  /* from duplicate.c */

A 32-bit build completes
...
make[3]: Leaving directory '/tmp/RtmpcvzNTA/R.INSTALL7e05458d74e28/mgcv/src'
installing to /data/prj/cran/32/R-3.2.3/library/mgcv/libs
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (mgcv)
make[2]: Leaving directory 
'/data/prj/cran/32/R-3.2.3/src/library/Recommended'
make[1]: Leaving directory 
'/data/prj/cran/32/R-3.2.3/src/library/Recommended'
make[1]: Entering directory '/data/prj/cran/32/R-3.2.3/src/library'
'pdflatex' is needed to make vignettes but is missing on your system.
make[1]: Leaving directory '/data/prj/cran/32/R-3.2.3/src/library'
root at x065:[/data/prj/cran/32/R-3.2.3]

The same command, but as 64-bit stops at:

gcc -maix64 -mcpu=power5 -std=gnu99 -shared -Wl,-G -Wl,-bnoentry -lc 
-L../../../../lib -L/opt/lib -o tools.so text.o init.o Rmd5.o md5.o 
signals.o install.o getfmts.o http.
o gramLatex.o gramRd.o -lm -L../../../../lib -lR /opt/lib/libintl.a 
/opt/lib/libiconv.a -lpthread -lc
ld: 0711-224 WARNING: Duplicate symbol: Rf_yylval
ld: 0711-224 WARNING: Duplicate symbol: Rf_yychar
ld: 0711-224 WARNING: Duplicate symbol: Rf_yynerrs
ld: 0711-345 Use the -bloadmap or -bnoquiet option to obtain more 
information.
make[6]: Entering directory '/data/prj/cran/64/R/src/library/tools/src'
make[6]: Warning: File 'Makefile' has modification time 5.9 s in the future
mkdir ../../../../library/tools/libs
make[6]: warning:  Clock skew detected.  Your build may be incomplete.
make[6]: Leaving directory '/data/prj/cran/64/R/src/library/tools/src'
make[5]: Leaving directory '/data/prj/cran/64/R/src/library/tools/src'
make[4]: Leaving directory '/data/prj/cran/64/R/src/library/tools'
make[4]: Entering directory '/data/prj/cran/64/R/src/library/tools'
installing 'sysdata.rda'
Error: Line starting 'Package: tools ...' is malformed!
Execution halted
/data/prj/cran/R-3.2.3/share/make/basepkg.mk:150: recipe for target 
'sysdata' failed
make[4]: *** [sysdata] Error 1
make[4]: Leaving directory '/data/prj/cran/64/R/src/library/tools'
Makefile:30: recipe for target 'all' failed
make[3]: *** [all] Error 2
make[3]: Leaving directory '/data/prj/cran/64/R/src/library/tools'
Makefile:36: recipe for target 'R' failed
make[2]: *** [R] Error 1
make[2]: Leaving directory '/data/prj/cran/64/R/src/library'
Makefile:28: recipe for target 'R' failed
make[1]: *** [R] Error 1
make[1]: Leaving directory '/data/prj/cran/64/R/src'
Makefile:60: recipe for target 'R' failed
make: *** [R] Error 1
root at x065:[/data/prj/cran/64/R]

## *** Commands

root at x065:[/data/prj/cran/32/R-3.2.3]cat ../../bin/my_shared.ksh
#!/usr/bin/ksh
# my_config_test
#       --with-cairo=no --with-libpng=no --with-jpeglib=no 
--with-libtiff=no \
#       --with-cairo=no --with-libpng=yes --with-jpeglib=yes 
--with-libtiff=yes \
#       --with-libpth-prefix=/opt \
#       --with-aix-soname=aix
HOST=$1
RELEASE=$2

. ../${HOST}.env || exit -1

/data/prj/cran/${RELEASE}/configure --disable-lto --prefix=/opt \
         --enable-R-shlib \
         --with-cairo=no --with-libpng=no --with-jpeglib=no 
--with-libtiff=no \
         --with-readline=no --with-x=no
root at x065:[/data/prj/cran/32/R-3.2.3]

root at x065:[/data/prj/cran/32/R-3.2.3]sdiff ../../??/aix.env
export OBJECT_MODE=32                                           | 
export OBJECT_MODE=64
export CC="gcc -maix32 -mcpu=power5"                            | 
export AR="ar -X64"
export CXX="g++ -maix32 -mcpu=power5"                           | 
export CC="gcc -maix64 -mcpu=power5"
export F77="gfortran -maix32 -mcpu=power5"                      | 
export CXX="g++ -maix64 -mcpu=power5"
export FC="gfortran -maix32 -mcpu=power5"                       | 
export F77="gfortran -maix64 -mcpu=power5"
                                                                 > 
export FC="gfortran -maix64 -mcpu=power5"
export LDFLAGS="-L/opt/lib" 
export LDFLAGS="-L/opt/lib"
root at x065:[/data/prj/cran/32/R-3.2.3]

Thanks,
Michael


From aixtools at gmail.com  Wed Dec 16 16:02:44 2015
From: aixtools at gmail.com (Michael Felt)
Date: Wed, 16 Dec 2015 16:02:44 +0100
Subject: [Rd] Building R in 64-bit mode
In-Reply-To: <567152F5.1020009@gmail.com>
References: <567152F5.1020009@gmail.com>
Message-ID: <56717D14.3070101@gmail.com>

I have been looking further and need some help with:

  tools:::sysdata2LazyLoadDB("/data/prj/cran/R-3.2.3/src/library/tools/R/sysdata.rda","../../../library/tools/R")
Error: Line starting 'Package: tools ...' is malformed!

Details:
root at x065:[/data/prj/cran/64/R-3.2.3/src/library/tools]export | egrep 
"PATH|HOME"
HOME=/
LIBPATH=/data/prj/cran/64/R/lib:/opt/lib
LOCPATH=/usr/lib/nls/loc
NLSPATH=/usr/lib/nls/msg/%L/%N:/usr/lib/nls/msg/%L/%N.cat
PATH=/opt/bin:/usr/bin:/etc:/usr/sbin:/usr/ucb:/usr/bin/X11:/sbin:/usr/java14/jre/bin:/usr/java14/bin:/usr/vacpp/bin:
R_HOME=/data/prj/cran/64/R

root at x065:[/data/prj/cran/64/R-3.2.3/src/library/tools]/data/prj/cran/64/R-3.2.3/bin/exec/R

R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: powerpc-ibm-aix5.3.7.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

   Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - There were 12 warnings (use warnings() to see them)
 >
tools:::sysdata2LazyLoadDB("/data/prj/cran/R-3.2.3/src/library/tools/R/sysdata.rda","../../../library/tools/R")
Error: Line starting 'Package: tools ...' is malformed!
 > warnings()
Warning messages:
1: package "methods" in options("defaultPackages") was not found
2: package 'datasets' in options("defaultPackages") was not found
3: package 'utils' in options("defaultPackages") was not found
4: package 'grDevices' in options("defaultPackages") was not found
5: package 'graphics' in options("defaultPackages") was not found
6: package 'stats' in options("defaultPackages") was not found
7: package 'methods' in options("defaultPackages") was not found
8: Setting LC_CTYPE failed, using "C"
9: Setting LC_COLLATE failed, using "C"
10: Setting LC_TIME failed, using "C"
11: Setting LC_MESSAGES failed, using "C"
12: Setting LC_MONETARY failed, using "C"
 > q()
Save workspace image? [y/n/c]: n

However, in 32-bit mode I see NULL warnings...
root at x065:[/data/prj/cran/32/R-3.2.3/src/library/tools]/data/prj/cran/32/R-3.2.3/bin/exec/R

R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: powerpc-ibm-aix5.3.7.0 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

   Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

 > warnings()
NULL
q()

Ideas?

Thanks,
Michael


On 16-Dec-15 13:03, Michael Felt wrote:
> Hope I am not sounding too much like a broken record - as far as 
> 64-bit build on AIX is concerned.
>
> ** Short - 32-bit builds complete normally, 64-bit builds stop at 
> "installing 'sysdata.rda'" with message:
> Error: Line starting 'Package: tools ...' is malformed!
> Execution halted
>
> *** Longer...
>
> I could file a bug - Importance, showstopper - but I would prefer to 
> better understand how to dig a bit deeper into why it is failing - and 
> work with (or for) you to make R easier to install and use on AIX.
>
> As there are at least two ways to find 64-bit shared libraries 
> (AIX-way; GNU/Linux-way; "Solaris-way .so files"?) I am trying to keep 
> it simpler and and starting with the recently released R-3.2.3 
> distribution.
>
> I made the following changes - to clean up many Duplicate Symbol 
> warnings :happy me!:
>
> diff -ru R-3.2.3.orig/configure R-3.2.3/configure
> --- R-3.2.3.orig/configure      2015-12-02 23:16:46 +0000
> +++ R-3.2.3/configure   2015-12-16 10:52:15 +0000
> @@ -26339,11 +26339,11 @@
>      ##ADD: However, for example, symbol in libc of memcpy is 
> __memmove,__memmove64.
>      ##ADD: This black magic puts lc before lR and pockets this.
>      if test "x${OBJECT_MODE}" = "x64"; then
> -      main_ldflags="${wl}-brtl ${wl}-bexpall ${wl}-bpT:0x100000000 
> ${wl}-bpD:0x110000000 -lc"
> +      main_ldflags="${wl}-brtl ${wl}-bpT:0x100000000 
> ${wl}-bpD:0x110000000 -lc"
>      else
> -      main_ldflags="${wl}-brtl ${wl}-bexpall -lc"
> +      main_ldflags="${wl}-brtl ${wl}-bmaxdata:0xd0000000/dsa -lc"
>      fi
> -    shlib_ldflags="${wl}-brtl ${wl}-G ${wl}-bexpall ${wl}-bnoentry -lc"
> +    shlib_ldflags="${wl}-G ${wl}-bnoentry -lc"
>      SHLIB_LIBADD="\$(LIBM)"
>      shlib_cxxldflags="${shlib_ldflags}"
>      if test "${GCC}" = yes; then
> diff -ru R-3.2.3.orig/src/include/Defn.h R-3.2.3/src/include/Defn.h
> --- R-3.2.3.orig/src/include/Defn.h     2015-08-25 22:15:24 +0000
> +++ R-3.2.3/src/include/Defn.h  2015-12-16 10:53:08 +0000
> @@ -1271,7 +1271,7 @@
>  void invalidate_cached_recodings(void);  /* from sysutils.c */
>  void resetICUcollator(void); /* from util.c */
>  void dt_invalidate_locale(); /* from Rstrptime.h */
> -int R_OutputCon; /* from connections.c */
> +extern int R_OutputCon; /* from connections.c */
>  extern int R_InitReadItemDepth, R_ReadItemDepth; /* from serialize.c */
>  void get_current_mem(size_t *,size_t *,size_t *); /* from memory.c */
>  unsigned long get_duplicate_counter(void);  /* from duplicate.c */
>
> A 32-bit build completes
> ...
> make[3]: Leaving directory 
> '/tmp/RtmpcvzNTA/R.INSTALL7e05458d74e28/mgcv/src'
> installing to /data/prj/cran/32/R-3.2.3/library/mgcv/libs
> ** R
> ** data
> ** inst
> ** byte-compile and prepare package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** testing if installed package can be loaded
> * DONE (mgcv)
> make[2]: Leaving directory 
> '/data/prj/cran/32/R-3.2.3/src/library/Recommended'
> make[1]: Leaving directory 
> '/data/prj/cran/32/R-3.2.3/src/library/Recommended'
> make[1]: Entering directory '/data/prj/cran/32/R-3.2.3/src/library'
> 'pdflatex' is needed to make vignettes but is missing on your system.
> make[1]: Leaving directory '/data/prj/cran/32/R-3.2.3/src/library'
> root at x065:[/data/prj/cran/32/R-3.2.3]
>
> The same command, but as 64-bit stops at:
>
> gcc -maix64 -mcpu=power5 -std=gnu99 -shared -Wl,-G -Wl,-bnoentry -lc 
> -L../../../../lib -L/opt/lib -o tools.so text.o init.o Rmd5.o md5.o 
> signals.o install.o getfmts.o http.
> o gramLatex.o gramRd.o -lm -L../../../../lib -lR /opt/lib/libintl.a 
> /opt/lib/libiconv.a -lpthread -lc
> ld: 0711-224 WARNING: Duplicate symbol: Rf_yylval
> ld: 0711-224 WARNING: Duplicate symbol: Rf_yychar
> ld: 0711-224 WARNING: Duplicate symbol: Rf_yynerrs
> ld: 0711-345 Use the -bloadmap or -bnoquiet option to obtain more 
> information.
> make[6]: Entering directory '/data/prj/cran/64/R/src/library/tools/src'
> make[6]: Warning: File 'Makefile' has modification time 5.9 s in the 
> future
> mkdir ../../../../library/tools/libs
> make[6]: warning:  Clock skew detected.  Your build may be incomplete.
> make[6]: Leaving directory '/data/prj/cran/64/R/src/library/tools/src'
> make[5]: Leaving directory '/data/prj/cran/64/R/src/library/tools/src'
> make[4]: Leaving directory '/data/prj/cran/64/R/src/library/tools'
> make[4]: Entering directory '/data/prj/cran/64/R/src/library/tools'
> installing 'sysdata.rda'
> Error: Line starting 'Package: tools ...' is malformed!
> Execution halted
> /data/prj/cran/R-3.2.3/share/make/basepkg.mk:150: recipe for target 
> 'sysdata' failed
> make[4]: *** [sysdata] Error 1
> make[4]: Leaving directory '/data/prj/cran/64/R/src/library/tools'
> Makefile:30: recipe for target 'all' failed
> make[3]: *** [all] Error 2
> make[3]: Leaving directory '/data/prj/cran/64/R/src/library/tools'
> Makefile:36: recipe for target 'R' failed
> make[2]: *** [R] Error 1
> make[2]: Leaving directory '/data/prj/cran/64/R/src/library'
> Makefile:28: recipe for target 'R' failed
> make[1]: *** [R] Error 1
> make[1]: Leaving directory '/data/prj/cran/64/R/src'
> Makefile:60: recipe for target 'R' failed
> make: *** [R] Error 1
> root at x065:[/data/prj/cran/64/R]
>
> ## *** Commands
>
> root at x065:[/data/prj/cran/32/R-3.2.3]cat ../../bin/my_shared.ksh
> #!/usr/bin/ksh
> # my_config_test
> #       --with-cairo=no --with-libpng=no --with-jpeglib=no 
> --with-libtiff=no \
> #       --with-cairo=no --with-libpng=yes --with-jpeglib=yes 
> --with-libtiff=yes \
> #       --with-libpth-prefix=/opt \
> #       --with-aix-soname=aix
> HOST=$1
> RELEASE=$2
>
> . ../${HOST}.env || exit -1
>
> /data/prj/cran/${RELEASE}/configure --disable-lto --prefix=/opt \
>         --enable-R-shlib \
>         --with-cairo=no --with-libpng=no --with-jpeglib=no 
> --with-libtiff=no \
>         --with-readline=no --with-x=no
> root at x065:[/data/prj/cran/32/R-3.2.3]
>
> root at x065:[/data/prj/cran/32/R-3.2.3]sdiff ../../??/aix.env
> export OBJECT_MODE=32                                           | 
> export OBJECT_MODE=64
> export CC="gcc -maix32 -mcpu=power5"                            | 
> export AR="ar -X64"
> export CXX="g++ -maix32 -mcpu=power5"                           | 
> export CC="gcc -maix64 -mcpu=power5"
> export F77="gfortran -maix32 -mcpu=power5"                      | 
> export CXX="g++ -maix64 -mcpu=power5"
> export FC="gfortran -maix32 -mcpu=power5"                       | 
> export F77="gfortran -maix64 -mcpu=power5"
> > export FC="gfortran -maix64 -mcpu=power5"
> export LDFLAGS="-L/opt/lib" export LDFLAGS="-L/opt/lib"
> root at x065:[/data/prj/cran/32/R-3.2.3]
>
> Thanks,
> Michael


From edd at debian.org  Wed Dec 16 16:28:54 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 16 Dec 2015 09:28:54 -0600
Subject: [Rd] Mystifying SEGFAULT on 3.2.3 but not 3.2.2
In-Reply-To: <CAGB9c4B3KFGWd371+7DJb84zKw3X3L28qtSyappPY9CZA57y2w@mail.gmail.com>
References: <CAGB9c4B3KFGWd371+7DJb84zKw3X3L28qtSyappPY9CZA57y2w@mail.gmail.com>
Message-ID: <22129.33590.119064.973586@max.nulle.part>


Gert,

On 16 December 2015 at 12:06, Gert van Valkenhoef wrote:
| I recently upgraded to 3.2.3 and am getting mystifying errors with my
| in-development code (available at
| https://github.com/gertvv/gemtc/tree/feature/regression). Every few hundred
| LPs that I solve using the rcdd package will result in a SEGFAULT in the
| garbage collector (address 0x10, cause 'memory not mapped') or an error
| about a list not existing. Downgrading to 3.2.2 works, but *only* after
| completely removing my local R packages and re-installing them. A

I wish I could tell you something more encouraging -- but this _sometimes_
happens with prebuilt R, or prebuilt packages.  We try try chase this, and
when we do batch runs of R CMD check over all reverse depends we end up
rebuilding.

I was just bitten by this when upgrading to Ubuntu 15.10 as it brings in
g++-5.2 which has a _known_ ABI transition for C++11/14.  About 15% of
packages got 'random' (but repeatable) seg.faults when there were none
before.  And that went away with a proper R version also built with a gcc-5.2
toolchain.

So in short: check your toolchain. Things may then go away. If they don't
then there may be a real bug.

| subsequent upgrade to 3.2.3 will again be broken, and even more
| mysteriously it will also break a re-downgrade to 3.2.2 until I again purge
| my local packages and re-install them.
| 
| To downgrade I am using (with the CRAN ubuntu mirror enabled):
| sudo apt-get purge r-base-core
| sudo rm -rf ~/R

[ I am mildly opposed to ~/R. I unset R_LIBS_USER in /etc/R/Renviron and just
make sure I am part of the group owning /usr/local/lib/R/site-library. Then
an ordinary users can install there. ] 

| sudo apt-get install r-base-core=3.2.2-1trusty0 r-base-dev=3.2.2-1trusty0
| r-recommended=3.2.2-1trusty0
| sudo apt-get install r-cran-rjags
| R -e "install.packages(c('devtools','igraph','meta','truncnorm','rcdd'))"

[ I am very partial to using 'install.r devtools igraph meta truncnorm rcdd'
on the command-line where install.r is a part of r-cran-littler, or littler
now on CRAN, which I link into /usr/local/bin. ]

| The code that produces a SEGFAULT (usually after 5-15 iterations) under
| 3.2.3, but not 3.2.2:
| library(devtools)
| load_all('gemtc')
| for (i in 1:100) { print(i); mtc.model(thrombolytic) }
| (note that the SEGFAULT also happens without devtools)
| 
| The sessionInfo() in 3.2.2:
| 
| R version 3.2.2 (2015-08-14)
| Platform: x86_64-pc-linux-gnu (64-bit)
| Running under: Ubuntu 14.04.3 LTS

We have a dedicated list for running R on Debian/Ubuntu/... systems:
r-sig-debian.  Consider lurking/posting there.

Cheers,  Dirk

 
| locale:
|  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
|  [3] LC_TIME=nl_NL.UTF-8        LC_COLLATE=en_US.UTF-8
|  [5] LC_MONETARY=nl_NL.UTF-8    LC_MESSAGES=en_US.UTF-8
|  [7] LC_PAPER=nl_NL.UTF-8       LC_NAME=C
|  [9] LC_ADDRESS=C               LC_TELEPHONE=C
| [11] LC_MEASUREMENT=nl_NL.UTF-8 LC_IDENTIFICATION=C
| 
| attached base packages:
| [1] stats     graphics  grDevices utils     datasets  methods   base
| 
| other attached packages:
| [1] gemtc_0.8       coda_0.16-1     lattice_0.20-33 devtools_1.9.1
| 
| loaded via a namespace (and not attached):
|  [1] Rcpp_0.12.2     roxygen2_5.0.1  rcdd_1.1-9      digest_0.6.8
|  [5] truncnorm_1.0-7 grid_3.2.2      plyr_1.8.3      meta_4.3-2
|  [9] magrittr_1.5    stringi_1.0-1   rjags_4-4       tools_3.2.2
| [13] stringr_1.0.0   igraph_1.0.1    memoise_0.2.1
| 
| A core dump is here:
| https://drive.google.com/a/rug.nl/file/d/0BxhVLNPmwLrycTYtOHNxNXZTMEk/view?usp=drive_web
| 
| I have tried debugging this but am stumped. Any help would be greatly
| appreciated!
| 
| Kind regards,
| 
| Gert van Valkenhoef
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel
-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Wed Dec 16 16:40:44 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 16 Dec 2015 07:40:44 -0800
Subject: [Rd] Question about bug reporting, and the followup process
In-Reply-To: <5671216B.5090906@gmail.com>
References: <5671216B.5090906@gmail.com>
Message-ID: <567185FC.2050501@gmail.com>

On 16/12/2015 12:31 AM, Michael Felt wrote:
> Hi,
>
> I sent in three bug-reports (maybe should have been 4, because the
> second contains an "enhancement" as well as well as a bug).
>
> I do not set "Importance", ever - or, is that the custom here?

We generally ignore it, so your current practice is fine.  The problem 
is that none of the core developers use AIX, so it's unlikely anyone 
will be able to test and fix your problems.  You'll need to find an AIX 
expert, or fix them yourself.

Duncan Murdoch

>
> Regards,
> Michael
>
> p.s. - maybe related - is it best practice to add [Rd] in the subject
> line, or is there a program doing that instead?
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From aixtools at gmail.com  Wed Dec 16 22:39:45 2015
From: aixtools at gmail.com (Michael Felt)
Date: Wed, 16 Dec 2015 22:39:45 +0100
Subject: [Rd] Question about bug reporting, and the followup process
In-Reply-To: <567185FC.2050501@gmail.com>
References: <5671216B.5090906@gmail.com> <567185FC.2050501@gmail.com>
Message-ID: <5671DA21.2040706@gmail.com>

On 2015-12-16 16:40, Duncan Murdoch wrote:
> We generally ignore it, so your current practice is fine.  The problem 
> is that none of the core developers use AIX, so it's unlikely anyone 
> will be able to test and fix your problems.  You'll need to find an 
> AIX expert, or fix them yourself.
>
> Duncan Murdoch 
I have answered this twice, but still do not see it.

A) I am an AIX expert, not an R expert. I am willing to assist, 
longish-term for matters re: R on AIX.

B) If I fix something (e.g., the suggestions in the bug-reports, in 
particular for configure.ac related "stuff" - how do I submit a patch? 
(Did not find anything suitable in R-forge.)

C) Bug 16633 - https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16633 
is all platforms, not just AIX. And I am not attempting to fix it on my 
own, because there is an architectural element involved (namely, does 
the library, or libR own the symbol.

Thanks,
Michael

p.s. Duncan, maybe my previous replies were to you only - my mistake and 
please forgive the double emails.


From aixtools at gmail.com  Wed Dec 16 22:45:25 2015
From: aixtools at gmail.com (Michael Felt)
Date: Wed, 16 Dec 2015 22:45:25 +0100
Subject: [Rd] Building R in 64-bit mode
In-Reply-To: <56717D14.3070101@gmail.com>
References: <567152F5.1020009@gmail.com> <56717D14.3070101@gmail.com>
Message-ID: <5671DB75.4020602@gmail.com>

On 2015-12-16 16:02, Michael Felt wrote:
> tools:::sysdata2LazyLoadDB("/data/prj/cran/R-3.2.3/src/library/tools/R/sysdata.rda","../../../library/tools/R") 
>
> Error: Line starting 'Package: tools ...' is malformed!
> > warnings()
> Warning messages:
> 1: package "methods" in options("defaultPackages") was not found
> 2: package 'datasets' in options("defaultPackages") was not found
> 3: package 'utils' in options("defaultPackages") was not found
> 4: package 'grDevices' in options("defaultPackages") was not found
> 5: package 'graphics' in options("defaultPackages") was not found
> 6: package 'stats' in options("defaultPackages") was not found
> 7: package 'methods' in options("defaultPackages") was not found
> 8: Setting LC_CTYPE failed, using "C"
> 9: Setting LC_COLLATE failed, using "C"
> 10: Setting LC_TIME failed, using "C"
> 11: Setting LC_MESSAGES failed, using "C"
> 12: Setting LC_MONETARY failed, using "C"
> > q() 
I guess I would like a suggestion on how to expand/create debug 
messages. This is being started --vanallia --clone.
Also, I am wondering the Duplicate Symbols are 'harmless' in 32-bit 
mode, but causing confusion in the 64-bit mode.

Other suggestions? Ideas?

Thanks,
Michael


From jaroslav.kuchar at fit.cvut.cz  Thu Dec 17 07:53:56 2015
From: jaroslav.kuchar at fit.cvut.cz (=?UTF-8?Q?Ing=2E_Jaroslav_Kucha=C5=99?=)
Date: Thu, 17 Dec 2015 07:53:56 +0100
Subject: [Rd] How to efficiently share data (a dataframe) between R and
 Java
In-Reply-To: <630C80A0-9799-4F70-82B3-A3216AC6813F@r-project.org>
References: <466cd25ef41dbefc2ee18c725a581e78@imap.fit.cvut.cz>
	<8F33B5D6-5D3D-4FD1-9830-9575094D4890@r-project.org>
	<1d7e60b7eb54fcbb94bfdde18942a22b@imap.fit.cvut.cz>
	<630C80A0-9799-4F70-82B3-A3216AC6813F@r-project.org>
Message-ID: <c9ccf2ab045607c650811243449cc447@imap.fit.cvut.cz>

Thank you for the example. Based on my recent experiments, this solution
is the most efficient.

Cheers,
Jaroslav

On 2015-12-15 23:15, Simon Urbanek wrote:
> You can pass the entire df, example:
> 
>> data(iris)
>> iris$sp = as.character(iris$Species)
>> o=.jarray(lapply(iris, .jarray))
>> .jcall("C",,"df",o)
> df, 6 variables
> [0]: double[150]
> [1]: double[150]
> [2]: double[150]
> [3]: double[150]
> [4]: int[150]
> [5]: String[150]
> 
> 
> Java code:
> 
> public class C {
>        static void df(Object df[]) {
>        	      int n;
>        	      System.out.println("df, " + (n = df.length) + " variables");
> 	      int i = 0;
> 	      while (i < n) {
> 	      	    if (df[i] instanceof double[]) {
> 		    	double d[] = (double[]) df[i];
> 		        System.out.println("["+i+"]: double["+d.length+"]");
> 		    } else if (df[i] instanceof int[]) {
> 		    	int d[] = (int[]) df[i];
> 		        System.out.println("["+i+"]: int["+d.length+"]");
> 		    } else if (df[i] instanceof String[]) {
> 		        String s[] = (String[]) df[i];
> 			System.out.println("["+i+"]: String["+s.length+"]");
> 		    } else {
> 		        System.out.println("["+i+"]: some other type...");
> 		    }
> 		    i++;
> 	      }
>         }
> }
> 
> Normally, you wouldn't pass the entire df but instead have methods for
> the types you care about as the modeling function - that's more
> Java-like approach, but either is valid and there is no difference in
> efficiency.
> 
> Cheers,
> Simon
> 
> 
> 
>> On Dec 15, 2015, at 12:50 PM, Ing. Jaroslav Kucha? <jaroslav.kuchar at fit.cvut.cz> wrote:
>>
>> Dear all,
>>
>> thank you for your hints. I would prefer to do not use Rserve as Dirk
>> mentioned.
>>
>> @Simon
>> I have full control over the Java implementation - I can adapt the code
>> that I use for the communication R <-> Java.
>>
>>> You can natively access structures on each side. The fastest way is to
>>> use R representation (column-oriented) in Java - that is much faster
>>> than any kind of serialization or anything you mention above since you
>>> pass the variables as a whole.
>>
>> Could you please send any reference to more examples or documentation
>> that can help me?
>> The main goal is to copy a full dataframe from R to Java.
>>
>> Best regards,
>> Jaroslav
>>
>> On 2015-12-07 03:19, Simon Urbanek wrote:
>>> On Dec 6, 2015, at 12:36 PM, Ing. Jaroslav Kucha?
>>> <jaroslav.kuchar at fit.cvut.cz> wrote:
>>>
>>>> Dear all,
>>>>
>>>> in our ongoing project we use Java implementations of several
>>>> algorithms. We also provide a ?wrapper? implemented as an R package
>>>> using rJava (https://github.com/jaroslav-kuchar/rCBA). Based on our
>>>> recent experiments, the significant portion of time is spent on copying
>>>> a dataframe from R to Java. The Java implementation needs access to the
>>>> source dataframe.
>>>>
>>>> I have tested several approaches: calling Java method row-by-row;
>>>> serialize the whole data-frame to a temp file and parsing in Java; or
>>>> row binding to a single vector and calling a single Java method. Each
>>>> approach has its limitations e.g. time-consuming row-by-row copying,
>>>> serialization and parsing performance or memory limitations of a single
>>>> vector.
>>>>
>>>> Is there an efficient approach how to copy a dataframe from R to Java
>>>> and another one from Java to R?
>>>>
>>>> Thanks for any help you can provide...
>>>>
>>>
>>> You can natively access structures on each side. The fastest way is to
>>> use R representation (column-oriented) in Java - that is much faster
>>> than any kind of serialization or anything you mention above since you
>>> pass the variables as a whole.
>>>
>>> Typically, the bottleneck are Java applications which may require very
>>> inefficient data structures. If you have control over the algorithms,
>>> you can simply use proper data structures and avoid that problem. If
>>> you don't have control, you'll have to add Java code that converts to
>>> whatever structure is needed by the Java code form the data frame
>>> pushed to the Java side. The main point here is that you do NOT want
>>> to do any conversion on the R side.
>>>
>>> Cheers,
>>> ?imon
>>


From g.h.m.van.valkenhoef at rug.nl  Thu Dec 17 12:10:40 2015
From: g.h.m.van.valkenhoef at rug.nl (Gert van Valkenhoef)
Date: Thu, 17 Dec 2015 12:10:40 +0100
Subject: [Rd] Mystifying SEGFAULT on 3.2.3 but not 3.2.2
In-Reply-To: <22129.33590.119064.973586@max.nulle.part>
References: <CAGB9c4B3KFGWd371+7DJb84zKw3X3L28qtSyappPY9CZA57y2w@mail.gmail.com>
	<22129.33590.119064.973586@max.nulle.part>
Message-ID: <CAGB9c4C1Y6Cf0n9C2YQsr06zd5e8YQpYvPTM1L3dHvaE6L2s8A@mail.gmail.com>

Dear Dirk,

Thank you for the analysis and the hints. I hadn't heard of install.r but
it sounds like it might be helpful for us in automated deploy situations so
thanks! For now my immediate problem has been solved by switching from rcdd
to Rglpk. I was afraid it would be problematic because of the system
dependency on libglpk, but it seems that it gets shipped (static linked)
with the binary on Windows. Is that also true on OS X?

How do I know what toolchain was used to build the R I got from CRAN so
that I can check this hypothesis?

Best,

Gert

On Wed, Dec 16, 2015 at 4:28 PM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Gert,
>
> On 16 December 2015 at 12:06, Gert van Valkenhoef wrote:
> | I recently upgraded to 3.2.3 and am getting mystifying errors with my
> | in-development code (available at
> | https://github.com/gertvv/gemtc/tree/feature/regression). Every few
> hundred
> | LPs that I solve using the rcdd package will result in a SEGFAULT in the
> | garbage collector (address 0x10, cause 'memory not mapped') or an error
> | about a list not existing. Downgrading to 3.2.2 works, but *only* after
> | completely removing my local R packages and re-installing them. A
>
> I wish I could tell you something more encouraging -- but this _sometimes_
> happens with prebuilt R, or prebuilt packages.  We try try chase this, and
> when we do batch runs of R CMD check over all reverse depends we end up
> rebuilding.
>
> I was just bitten by this when upgrading to Ubuntu 15.10 as it brings in
> g++-5.2 which has a _known_ ABI transition for C++11/14.  About 15% of
> packages got 'random' (but repeatable) seg.faults when there were none
> before.  And that went away with a proper R version also built with a
> gcc-5.2
> toolchain.
>
> So in short: check your toolchain. Things may then go away. If they don't
> then there may be a real bug.
>
> | subsequent upgrade to 3.2.3 will again be broken, and even more
> | mysteriously it will also break a re-downgrade to 3.2.2 until I again
> purge
> | my local packages and re-install them.
> |
> | To downgrade I am using (with the CRAN ubuntu mirror enabled):
> | sudo apt-get purge r-base-core
> | sudo rm -rf ~/R
>
> [ I am mildly opposed to ~/R. I unset R_LIBS_USER in /etc/R/Renviron and
> just
> make sure I am part of the group owning /usr/local/lib/R/site-library. Then
> an ordinary users can install there. ]
>
> | sudo apt-get install r-base-core=3.2.2-1trusty0 r-base-dev=3.2.2-1trusty0
> | r-recommended=3.2.2-1trusty0
> | sudo apt-get install r-cran-rjags
> | R -e "install.packages(c('devtools','igraph','meta','truncnorm','rcdd'))"
>
> [ I am very partial to using 'install.r devtools igraph meta truncnorm
> rcdd'
> on the command-line where install.r is a part of r-cran-littler, or littler
> now on CRAN, which I link into /usr/local/bin. ]
>
> | The code that produces a SEGFAULT (usually after 5-15 iterations) under
> | 3.2.3, but not 3.2.2:
> | library(devtools)
> | load_all('gemtc')
> | for (i in 1:100) { print(i); mtc.model(thrombolytic) }
> | (note that the SEGFAULT also happens without devtools)
> |
> | The sessionInfo() in 3.2.2:
> |
> | R version 3.2.2 (2015-08-14)
> | Platform: x86_64-pc-linux-gnu (64-bit)
> | Running under: Ubuntu 14.04.3 LTS
>
> We have a dedicated list for running R on Debian/Ubuntu/... systems:
> r-sig-debian.  Consider lurking/posting there.
>
> Cheers,  Dirk
>
>
> | locale:
> |  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
> |  [3] LC_TIME=nl_NL.UTF-8        LC_COLLATE=en_US.UTF-8
> |  [5] LC_MONETARY=nl_NL.UTF-8    LC_MESSAGES=en_US.UTF-8
> |  [7] LC_PAPER=nl_NL.UTF-8       LC_NAME=C
> |  [9] LC_ADDRESS=C               LC_TELEPHONE=C
> | [11] LC_MEASUREMENT=nl_NL.UTF-8 LC_IDENTIFICATION=C
> |
> | attached base packages:
> | [1] stats     graphics  grDevices utils     datasets  methods   base
> |
> | other attached packages:
> | [1] gemtc_0.8       coda_0.16-1     lattice_0.20-33 devtools_1.9.1
> |
> | loaded via a namespace (and not attached):
> |  [1] Rcpp_0.12.2     roxygen2_5.0.1  rcdd_1.1-9      digest_0.6.8
> |  [5] truncnorm_1.0-7 grid_3.2.2      plyr_1.8.3      meta_4.3-2
> |  [9] magrittr_1.5    stringi_1.0-1   rjags_4-4       tools_3.2.2
> | [13] stringr_1.0.0   igraph_1.0.1    memoise_0.2.1
> |
> | A core dump is here:
> |
> https://drive.google.com/a/rug.nl/file/d/0BxhVLNPmwLrycTYtOHNxNXZTMEk/view?usp=drive_web
> |
> | I have tried debugging this but am stumped. Any help would be greatly
> | appreciated!
> |
> | Kind regards,
> |
> | Gert van Valkenhoef
> |
> |       [[alternative HTML version deleted]]
> |
> | ______________________________________________
> | R-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-devel
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From dusa.adrian at unibuc.ro  Thu Dec 17 16:02:00 2015
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Thu, 17 Dec 2015 17:02:00 +0200
Subject: [Rd] integer
Message-ID: <CAJ=0CtDxVZzpNbE2ZvBK3Ki2TCuO929Hi_MvLwRH2aOGU7OxTQ@mail.gmail.com>

In the help page for ?is.integer, there is this function

is.wholenumber <-
    function(x, tol = .Machine$double.eps^0.5)  abs(x - round(x)) < tol

A quick question: is there a case where this alternative function will not
work?
    function(x) x %% 1 == 0

Best,
Adrian

-- 
Adrian Dusa
University of Bucharest
Romanian Social Data Archive
Soseaua Panduri nr.90
050663 Bucharest sector 5
Romania

	[[alternative HTML version deleted]]


From gmbecker at ucdavis.edu  Thu Dec 17 16:15:45 2015
From: gmbecker at ucdavis.edu (Gabriel Becker)
Date: Thu, 17 Dec 2015 07:15:45 -0800
Subject: [Rd] integer
In-Reply-To: <CAJ=0CtDxVZzpNbE2ZvBK3Ki2TCuO929Hi_MvLwRH2aOGU7OxTQ@mail.gmail.com>
References: <CAJ=0CtDxVZzpNbE2ZvBK3Ki2TCuO929Hi_MvLwRH2aOGU7OxTQ@mail.gmail.com>
Message-ID: <CADwqtCNpTc5WWNjq04y2kb8S3vijS+uVrw5R8yfOMXkckyJnsQ@mail.gmail.com>

Adrian,

Yes, any "whole" number coming out of a computation bitten by floating
point issues, I think.

> x = 1/49*49
> x
[1] 1
> x%%1
[1] 1
> is.wholenumber <-
+     function(x, tol = .Machine$double.eps^0.5)  abs(x - round(x)) < tol
> is.wholenumber(x)
[1] TRUE

Best,
~G

P.S Credit to Hadley Wickham for recently pointing out on twitter that 49
is the first number like this. I would have had to have gone searching for
one otherwise.


On Thu, Dec 17, 2015 at 7:02 AM, Adrian Du?a <dusa.adrian at unibuc.ro> wrote:

> In the help page for ?is.integer, there is this function
>
> is.wholenumber <-
>     function(x, tol = .Machine$double.eps^0.5)  abs(x - round(x)) < tol
>
> A quick question: is there a case where this alternative function will not
> work?
>     function(x) x %% 1 == 0
>
> Best,
> Adrian
>
> --
> Adrian Dusa
> University of Bucharest
> Romanian Social Data Archive
> Soseaua Panduri nr.90
> 050663 Bucharest sector 5
> Romania
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Gabriel Becker, PhD
Associate Scientist (Bioinformatics)
Genentech Research

	[[alternative HTML version deleted]]


From aixtools at gmail.com  Thu Dec 17 18:02:11 2015
From: aixtools at gmail.com (Michael Felt)
Date: Thu, 17 Dec 2015 18:02:11 +0100
Subject: [Rd] Assistance much appreciated
Message-ID: <5672EA93.104@gmail.com>

I have been struggling with this error message - and think I finally 
understand it's context.

Start

Line by line debugging shows me the function works:

...
 > saveRDS(val, mapfile)
 > val
$variables
$variables$IANA_HTTP_status_code_db
[1]    0 1256

$variables$IANA_URI_scheme_db
[1] 1256 3458

$variables$table_of_HTTP_status_codes
[1] 4714  830


$references
named list()

$compressed
[1] TRUE

 > mapfile
[1] "./library/tools/R/sysdata.rdx"
 > [1] + Stopped (SIGTSTP)         R_DEFAULT_PACKAGES=NULL LC_ALL=C 
./bin/R --vanilla
root at x065:[/data/prj/cran/64/R-3.2.3]ls -l ./library/tools/R/sysdata.rdx
-rw-r--r--   1 root     33              193 Dec 17 16:49 
./library/tools/R/sysdata.rdx
root at x065:[/data/prj/cran/64/R-3.2.3]cat ./library/tools/R/sysdata.rdx
?b```b`fbf" SH0#h^?<??@?Al?&_(
                               ??(R?????        ?Y?sS
C7?PG3@??j/D                                        ?aA 
OG??x??????????$??X>4?3?89#5IF?$1)'5>?
?00F??,?(dA1T?(5-?(5/![PZ\2?$?<root at x065:[/data/prj/cran/64/R-3.2.3]
root at x065:[/data/prj/cran/64/R-3.2.3]
root at x065:[/data/prj/cran/64/R-3.2.3]gzip -dc ./library/tools/R/sysdata.rdx
X
j>      names   IANA_HTTP_status_code_db IANA_URI_scheme_db      
table_of_HTTP_status_codes???
?               variables
references
compressed?root at x065:[/data/prj/cran/64/R-3.2.3]fg
  R_DEFAULT_PACKAGES=NULL LC_ALL=C ./bin/R --vanilla

 >
 > e
<environment: 110dbf620>
 > destDir
[1] "./library/tools/R"
 > compress
[1] TRUE
 > debug(tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"), 
compress = compress))
Error: Line starting 'Package: tools ...' is malformed!
 > tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress = 
compress)
Error: Line starting 'Package: tools ...' is malformed!
 >

So, at the end - my gut-feeling is that the error messages is not about 
the arguments, but us related to the "tools:::foo".

Where should I look next? It goes a bit beyond me to know where in R 
"tools:::foo" is being parsed.
Guessing here - but might be related to the switch from 32-bit to 64-bit 
AND that PowerPC is BigEndian rather than LittleEndian? Could also be 
absolutely wrong, way off base, etc. --> shoot me down!

Thanks,
Michael


From aixtools at gmail.com  Thu Dec 17 18:06:58 2015
From: aixtools at gmail.com (Michael Felt)
Date: Thu, 17 Dec 2015 18:06:58 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <5672EA93.104@gmail.com>
References: <5672EA93.104@gmail.com>
Message-ID: <5672EBB2.5090705@gmail.com>

More experimenting with calling commands:
 > tools:::foobar()
Error: Line starting 'Package: tools ...' is malformed!
 > tools::foobar()
Error: Line starting 'Package: tools ...' is malformed!
 > Tools:::foobar()
Error in loadNamespace(name) : there is no package called 'Tools'
 > loadNamespace(tools)
Error in loadNamespace(tools) : object 'tools' not found
 > loadNamespace("tools")
Error: Line starting 'Package: tools ...' is malformed!
 >


On 17-Dec-15 18:02, Michael Felt wrote:
> I have been struggling with this error message - and think I finally 
> understand it's context.
>
> Start
>
> Line by line debugging shows me the function works:
>
> ...
> > saveRDS(val, mapfile)
> > val
> $variables
> $variables$IANA_HTTP_status_code_db
> [1]    0 1256
>
> $variables$IANA_URI_scheme_db
> [1] 1256 3458
>
> $variables$table_of_HTTP_status_codes
> [1] 4714  830
>
>
> $references
> named list()
>
> $compressed
> [1] TRUE
>
> > mapfile
> [1] "./library/tools/R/sysdata.rdx"
> > [1] + Stopped (SIGTSTP)         R_DEFAULT_PACKAGES=NULL LC_ALL=C 
> ./bin/R --vanilla
> root at x065:[/data/prj/cran/64/R-3.2.3]ls -l ./library/tools/R/sysdata.rdx
> -rw-r--r--   1 root     33              193 Dec 17 16:49 
> ./library/tools/R/sysdata.rdx
> root at x065:[/data/prj/cran/64/R-3.2.3]cat ./library/tools/R/sysdata.rdx
> ?b```b`fbf" SH0#h^?<??@?Al?&_(
>                               ??(R?????        ?Y?sS
> C7?PG3@??j/D                                        ?aA 
> OG??x??????????$??X>4?3?89#5IF?$1)'5>?
> ?00F??,?(dA1T?(5-?(5/![PZ\2?$?<root at x065:[/data/prj/cran/64/R-3.2.3]
> root at x065:[/data/prj/cran/64/R-3.2.3]
> root at x065:[/data/prj/cran/64/R-3.2.3]gzip -dc 
> ./library/tools/R/sysdata.rdx
> X
> j>      names   IANA_HTTP_status_code_db IANA_URI_scheme_db      
> table_of_HTTP_status_codes???
> ?               variables
> references
> compressed?root at x065:[/data/prj/cran/64/R-3.2.3]fg
>  R_DEFAULT_PACKAGES=NULL LC_ALL=C ./bin/R --vanilla
>
> >
> > e
> <environment: 110dbf620>
> > destDir
> [1] "./library/tools/R"
> > compress
> [1] TRUE
> > debug(tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"), 
> compress = compress))
> Error: Line starting 'Package: tools ...' is malformed!
> > tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress = 
> compress)
> Error: Line starting 'Package: tools ...' is malformed!
> >
>
> So, at the end - my gut-feeling is that the error messages is not 
> about the arguments, but us related to the "tools:::foo".
>
> Where should I look next? It goes a bit beyond me to know where in R 
> "tools:::foo" is being parsed.
> Guessing here - but might be related to the switch from 32-bit to 
> 64-bit AND that PowerPC is BigEndian rather than LittleEndian? Could 
> also be absolutely wrong, way off base, etc. --> shoot me down!
>
> Thanks,
> Michael


From murdoch.duncan at gmail.com  Thu Dec 17 18:56:28 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 17 Dec 2015 09:56:28 -0800
Subject: [Rd] Assistance much appreciated
In-Reply-To: <5672EBB2.5090705@gmail.com>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
Message-ID: <5672F74C.70905@gmail.com>

On 17/12/2015 9:06 AM, Michael Felt wrote:
> More experimenting with calling commands:
>   > tools:::foobar()
> Error: Line starting 'Package: tools ...' is malformed!
>   > tools::foobar()
> Error: Line starting 'Package: tools ...' is malformed!

These both do a loadNamespace("tools").

>   > Tools:::foobar()
> Error in loadNamespace(name) : there is no package called 'Tools'
>   > loadNamespace(tools)
> Error in loadNamespace(tools) : object 'tools' not found

Those are expected, and unrelated.

>   > loadNamespace("tools")
> Error: Line starting 'Package: tools ...' is malformed!

This shouldn't happen.  In a previous post you listed a long list of 
warnings about packages not being loaded; that's likely a serious 
problem, but I don't know if it is the cause or a consequence of this 
one.  Something is seriously wrong with the startup.  You could try 
debugging setup_Rmainloop in <src/main/main.c>.  to see if any warnings 
are being generated there.  There shouldn't be any.

Duncan Murdoch

>   >
>
>
> On 17-Dec-15 18:02, Michael Felt wrote:
>> I have been struggling with this error message - and think I finally
>> understand it's context.
>>
>> Start
>>
>> Line by line debugging shows me the function works:
>>
>> ...
>>> saveRDS(val, mapfile)
>>> val
>> $variables
>> $variables$IANA_HTTP_status_code_db
>> [1]    0 1256
>>
>> $variables$IANA_URI_scheme_db
>> [1] 1256 3458
>>
>> $variables$table_of_HTTP_status_codes
>> [1] 4714  830
>>
>>
>> $references
>> named list()
>>
>> $compressed
>> [1] TRUE
>>
>>> mapfile
>> [1] "./library/tools/R/sysdata.rdx"
>>> [1] + Stopped (SIGTSTP)         R_DEFAULT_PACKAGES=NULL LC_ALL=C
>> ./bin/R --vanilla
>> root at x065:[/data/prj/cran/64/R-3.2.3]ls -l ./library/tools/R/sysdata.rdx
>> -rw-r--r--   1 root     33              193 Dec 17 16:49
>> ./library/tools/R/sysdata.rdx
>> root at x065:[/data/prj/cran/64/R-3.2.3]cat ./library/tools/R/sysdata.rdx
>> ?b```b`fbf" SH0#h^?<??@?Al?&_(
>>                                ??(R?????        ?Y?sS
>> C7?PG3@??j/D                                        ?aA
>> OG??x??????????$??X>4?3?89#5IF?$1)'5>?
>> ?00F??,?(dA1T?(5-?(5/![PZ\2?$?<root at x065:[/data/prj/cran/64/R-3.2.3]
>> root at x065:[/data/prj/cran/64/R-3.2.3]
>> root at x065:[/data/prj/cran/64/R-3.2.3]gzip -dc
>> ./library/tools/R/sysdata.rdx
>> X
>> j>      names   IANA_HTTP_status_code_db IANA_URI_scheme_db
>> table_of_HTTP_status_codes???
>> ?               variables
>> references
>> compressed?root at x065:[/data/prj/cran/64/R-3.2.3]fg
>>   R_DEFAULT_PACKAGES=NULL LC_ALL=C ./bin/R --vanilla
>>
>>>
>>> e
>> <environment: 110dbf620>
>>> destDir
>> [1] "./library/tools/R"
>>> compress
>> [1] TRUE
>>> debug(tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"),
>> compress = compress))
>> Error: Line starting 'Package: tools ...' is malformed!
>>> tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress =
>> compress)
>> Error: Line starting 'Package: tools ...' is malformed!
>>>
>>
>> So, at the end - my gut-feeling is that the error messages is not
>> about the arguments, but us related to the "tools:::foo".
>>
>> Where should I look next? It goes a bit beyond me to know where in R
>> "tools:::foo" is being parsed.
>> Guessing here - but might be related to the switch from 32-bit to
>> 64-bit AND that PowerPC is BigEndian rather than LittleEndian? Could
>> also be absolutely wrong, way off base, etc. --> shoot me down!
>>
>> Thanks,
>> Michael
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From pdalgd at gmail.com  Thu Dec 17 19:30:38 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 17 Dec 2015 19:30:38 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <5672F74C.70905@gmail.com>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
	<5672F74C.70905@gmail.com>
Message-ID: <651A9020-C94C-4B10-9164-8CC660D13BF0@gmail.com>

Presumably the file in question is one of

Peter-Dalgaards-MacBook-Air:BUILD pd$ grep -r "^Package: tools" *
library/tools/DESCRIPTION:Package: tools
src/library/tools/DESCRIPTION:Package: tools

so the first thing I'd do is to have a good look at those files and see if they got somehow corrupted.

If they look sane, presumably the bit of code that checks it isn't... So that would be my next thing to check.

-pd

> On 17 Dec 2015, at 18:56 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 17/12/2015 9:06 AM, Michael Felt wrote:
>> More experimenting with calling commands:
>>  > tools:::foobar()
>> Error: Line starting 'Package: tools ...' is malformed!
>>  > tools::foobar()
>> Error: Line starting 'Package: tools ...' is malformed!
> 
> These both do a loadNamespace("tools").
> 
>>  > Tools:::foobar()
>> Error in loadNamespace(name) : there is no package called 'Tools'
>>  > loadNamespace(tools)
>> Error in loadNamespace(tools) : object 'tools' not found
> 
> Those are expected, and unrelated.
> 
>>  > loadNamespace("tools")
>> Error: Line starting 'Package: tools ...' is malformed!
> 
> This shouldn't happen.  In a previous post you listed a long list of warnings about packages not being loaded; that's likely a serious problem, but I don't know if it is the cause or a consequence of this one. Something is seriously wrong with the startup.  You could try debugging setup_Rmainloop in <src/main/main.c>. to see if any warnings are being generated there.  There shouldn't be any.
> 
> Duncan Murdoch
> 
>>  >
>> 
>> 
>> On 17-Dec-15 18:02, Michael Felt wrote:
>>> I have been struggling with this error message - and think I finally
>>> understand it's context.
>>> 
>>> Start
>>> 
>>> Line by line debugging shows me the function works:
>>> 
>>> ...
>>>> saveRDS(val, mapfile)
>>>> val
>>> $variables
>>> $variables$IANA_HTTP_status_code_db
>>> [1]    0 1256
>>> 
>>> $variables$IANA_URI_scheme_db
>>> [1] 1256 3458
>>> 
>>> $variables$table_of_HTTP_status_codes
>>> [1] 4714  830
>>> 
>>> 
>>> $references
>>> named list()
>>> 
>>> $compressed
>>> [1] TRUE
>>> 
>>>> mapfile
>>> [1] "./library/tools/R/sysdata.rdx"
>>>> [1] + Stopped (SIGTSTP)         R_DEFAULT_PACKAGES=NULL LC_ALL=C
>>> ./bin/R --vanilla
>>> root at x065:[/data/prj/cran/64/R-3.2.3]ls -l ./library/tools/R/sysdata.rdx
>>> -rw-r--r--   1 root     33              193 Dec 17 16:49
>>> ./library/tools/R/sysdata.rdx
>>> root at x065:[/data/prj/cran/64/R-3.2.3]cat ./library/tools/R/sysdata.rdx
>>> ?b```b`fbf" SH0#h^?<??@?Al?&_(
>>>                               ??(R?????        ?Y?sS
>>> C7?PG3@??j/D                                        ?aA
>>> OG??x??????????$??X>4?3?89#5IF?$1)'5>?
>>> ?00F??,?(dA1T?(5-?(5/![PZ\2?$?<root at x065:[/data/prj/cran/64/R-3.2.3]
>>> root at x065:[/data/prj/cran/64/R-3.2.3]
>>> root at x065:[/data/prj/cran/64/R-3.2.3]gzip -dc
>>> ./library/tools/R/sysdata.rdx
>>> X
>>> j>      names   IANA_HTTP_status_code_db IANA_URI_scheme_db
>>> table_of_HTTP_status_codes???
>>> ?               variables
>>> references
>>> compressed?root at x065:[/data/prj/cran/64/R-3.2.3]fg
>>>  R_DEFAULT_PACKAGES=NULL LC_ALL=C ./bin/R --vanilla
>>> 
>>>> 
>>>> e
>>> <environment: 110dbf620>
>>>> destDir
>>> [1] "./library/tools/R"
>>>> compress
>>> [1] TRUE
>>>> debug(tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"),
>>> compress = compress))
>>> Error: Line starting 'Package: tools ...' is malformed!
>>>> tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress =
>>> compress)
>>> Error: Line starting 'Package: tools ...' is malformed!
>>>> 
>>> 
>>> So, at the end - my gut-feeling is that the error messages is not
>>> about the arguments, but us related to the "tools:::foo".
>>> 
>>> Where should I look next? It goes a bit beyond me to know where in R
>>> "tools:::foo" is being parsed.
>>> Guessing here - but might be related to the switch from 32-bit to
>>> 64-bit AND that PowerPC is BigEndian rather than LittleEndian? Could
>>> also be absolutely wrong, way off base, etc. --> shoot me down!
>>> 
>>> Thanks,
>>> Michael
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From aixtools at gmail.com  Thu Dec 17 19:47:17 2015
From: aixtools at gmail.com (Michael Felt)
Date: Thu, 17 Dec 2015 19:47:17 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <5672F74C.70905@gmail.com>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
	<5672F74C.70905@gmail.com>
Message-ID: <56730335.2010403@gmail.com>

On 2015-12-17 18:56, Duncan Murdoch wrote:
>> Error: Line starting 'Package: tools ...' is malformed!
>
> These both do a loadNamespace("tools").
>
>> > Tools:::foobar()
>> Error in loadNamespace(name) : there is no package called 'Tools'
>> > loadNamespace(tools)
>> Error in loadNamespace(tools) : object 'tools' not found
>
> Those are expected, and unrelated.
Actually, it is what helped me realize that the problem was with the 
parsing of the call, rather than the arguments.
>
>> > loadNamespace("tools")
>> Error: Line starting 'Package: tools ...' is malformed!
>
> This shouldn't happen.  In a previous post you listed a long list of 
> warnings about packages not being loaded; that's likely a serious 
> problem, but I don't know if it is the cause or a consequence of this 
> one.  Something is seriously wrong with the startup.  You could try 
> debugging setup_Rmainloop in <src/main/main.c>.  to see if any 
> warnings are being generated there.  There shouldn't be any.
>
> Duncan Murdoch
>
This is during make - so there is very little - and the messages was 
because I was forgetting to set LC_ALL=CC before starting ./bin/R

The file I am looking at is src/main/dcf.c (where the message is 
generated) - your file suggestion may be better - skipping over a few 
bread crumbs so to speak.

More in my reply to Peter's comments.
>> >


From aixtools at gmail.com  Thu Dec 17 19:58:14 2015
From: aixtools at gmail.com (Michael Felt)
Date: Thu, 17 Dec 2015 19:58:14 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <651A9020-C94C-4B10-9164-8CC660D13BF0@gmail.com>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
	<5672F74C.70905@gmail.com>
	<651A9020-C94C-4B10-9164-8CC660D13BF0@gmail.com>
Message-ID: <567305C6.8050808@gmail.com>

On 2015-12-17 19:30, peter dalgaard wrote:
> Presumably the file in question is one of
>
> Peter-Dalgaards-MacBook-Air:BUILD pd$ grep -r "^Package: tools" *
> library/tools/DESCRIPTION:Package: tools
> src/library/tools/DESCRIPTION:Package: tools
>
> so the first thing I'd do is to have a good look at those files and see if they got somehow corrupted.
>
> If they look sane, presumably the bit of code that checks it isn't... So that would be my next thing to check.
>
> -pd
I had just gotten here, and tried comparing them with the 32-bit build 
(as I do not know what sane is yet).

Sources are in:
/data/prj/cran/R-3.2.3

Builds are in:
/data/prj/cran/32/R-3.2.3 and
/data/prj/cran/64/R-3.2.3

The files, in the build directories look "sane", at least comparable

root at x065:[/data/prj/cran/R-3.2.3]sdiff -w 132 
/data/prj/cran/??/R-3.2.3/library/tools/DESCRIPTION
Package: tools                                                      
Package: tools
Version: 3.2.3                                                      
Version: 3.2.3
Priority: base                                                      
Priority: base
Title: Tools for Package Development                                
Title: Tools for Package Development
Author: R Core Team                                                 
Author: R Core Team
Maintainer: R Core Team <R-core at r-project.org>                      
Maintainer: R Core Team <R-core at r-project.org>
Description: Tools for package development, administration and      
Description: Tools for package development, administration and
License: Part of R 3.2.3                                            
License: Part of R 3.2.3
Suggests: XML, codetools, methods                                   
Suggests: XML, codetools, methods
Built: R 3.2.3; powerpc-ibm-aix5.3.7.0; 2015-12-17 12:02:34 UTC  |  
Built: R 3.2.3; ; Thu Dec 17 17:39:55 UTC 2015; unix

As the 32-bit build completes, while the 64-bit stops at "tools" there 
is a difference in what they have available:

root at x065:[/data/prj/cran/R-3.2.3]ls -l 
/data/prj/cran/??/R-3.2.3/library/tools
/data/prj/cran/32/R-3.2.3/library/tools:
total 72
-rw-r--r--   1 root     33              356 Dec 17 12:02 DESCRIPTION
-rw-r--r--   1 root     33             3665 Dec 16 11:37 INDEX
drwxr-sr-x   2 root     33             4096 Dec 17 08:45 Meta
-rw-r--r--   1 root     33             7112 Dec 17 12:02 NAMESPACE
drwxr-sr-x   2 root     33             4096 Dec 17 12:02 R
drwxr-sr-x   2 root     33             4096 Dec 16 11:37 help
drwxr-sr-x   2 root     33             4096 Dec 16 11:37 html
drwxr-sr-x   2 root     33             4096 Dec 16 11:34 libs

/data/prj/cran/64/R-3.2.3/library/tools:
total 40
-rw-r--r--   1 root     33              339 Dec 17 17:40 DESCRIPTION
-rw-r--r--   1 root     33             7112 Dec 17 17:40 NAMESPACE
drwxr-sr-x   2 root     33             4096 Dec 17 17:19 R
drwxr-sr-x   2 root     33             4096 Dec 17 05:58 libs

So, is dcf.c, or main.c the better place to check. dcf.c does not look 
like "fun" - all those lexical arguments at the start:

SEXP attribute_hidden do_readDCF(SEXP call, SEXP op, SEXP args, SEXP env)
{
.... man many lines ....
                                } else {
                                        /* Must be a regular line with 
no tag ... */
                                        line[20] = '\0';
                                        error(_("Line starting '%s ...' 
is malformed!"), line);
                                }
                        }
                }
        }
... more lines to go...

Thanks for the assistance!

Michael


From pdalgd at gmail.com  Thu Dec 17 21:37:15 2015
From: pdalgd at gmail.com (peter dalgaard)
Date: Thu, 17 Dec 2015 21:37:15 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <567305C6.8050808@gmail.com>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
	<5672F74C.70905@gmail.com>
	<651A9020-C94C-4B10-9164-8CC660D13BF0@gmail.com>
	<567305C6.8050808@gmail.com>
Message-ID: <960B4F41-6E0D-4947-8559-977A0360A6D4@gmail.com>


> On 17 Dec 2015, at 19:58 , Michael Felt <aixtools at gmail.com> wrote:
> 
> On 2015-12-17 19:30, peter dalgaard wrote:
>> Presumably the file in question is one of
>> 
>> Peter-Dalgaards-MacBook-Air:BUILD pd$ grep -r "^Package: tools" *
>> library/tools/DESCRIPTION:Package: tools
>> src/library/tools/DESCRIPTION:Package: tools
>> 
>> so the first thing I'd do is to have a good look at those files and see if they got somehow corrupted.
>> 
>> If they look sane, presumably the bit of code that checks it isn't... So that would be my next thing to check.
>> 
>> -pd
> I had just gotten here, and tried comparing them with the 32-bit build (as I do not know what sane is yet).
> 
> Sources are in:
> /data/prj/cran/R-3.2.3
> 
> Builds are in:
> /data/prj/cran/32/R-3.2.3 and
> /data/prj/cran/64/R-3.2.3
> 
> The files, in the build directories look "sane", at least comparable

OK. Perhaps a check for special characters with a hex editor, just to be sure? But probably not the cause.

> 
> root at x065:[/data/prj/cran/R-3.2.3]sdiff -w 132 /data/prj/cran/??/R-3.2.3/library/tools/DESCRIPTION
> Package: tools                                                      Package: tools
> Version: 3.2.3                                                      Version: 3.2.3
> Priority: base                                                      Priority: base
> Title: Tools for Package Development                                Title: Tools for Package Development
> Author: R Core Team                                                 Author: R Core Team
> Maintainer: R Core Team <R-core at r-project.org>                      Maintainer: R Core Team <R-core at r-project.org>
> Description: Tools for package development, administration and      Description: Tools for package development, administration and
> License: Part of R 3.2.3                                            License: Part of R 3.2.3
> Suggests: XML, codetools, methods                                   Suggests: XML, codetools, methods
> Built: R 3.2.3; powerpc-ibm-aix5.3.7.0; 2015-12-17 12:02:34 UTC  |  Built: R 3.2.3; ; Thu Dec 17 17:39:55 UTC 2015; unix
> 
> As the 32-bit build completes, while the 64-bit stops at "tools" there is a difference in what they have available:
> 
> root at x065:[/data/prj/cran/R-3.2.3]ls -l /data/prj/cran/??/R-3.2.3/library/tools
> /data/prj/cran/32/R-3.2.3/library/tools:
> total 72
> -rw-r--r--   1 root     33              356 Dec 17 12:02 DESCRIPTION
> -rw-r--r--   1 root     33             3665 Dec 16 11:37 INDEX
> drwxr-sr-x   2 root     33             4096 Dec 17 08:45 Meta
> -rw-r--r--   1 root     33             7112 Dec 17 12:02 NAMESPACE
> drwxr-sr-x   2 root     33             4096 Dec 17 12:02 R
> drwxr-sr-x   2 root     33             4096 Dec 16 11:37 help
> drwxr-sr-x   2 root     33             4096 Dec 16 11:37 html
> drwxr-sr-x   2 root     33             4096 Dec 16 11:34 libs
> 
> /data/prj/cran/64/R-3.2.3/library/tools:
> total 40
> -rw-r--r--   1 root     33              339 Dec 17 17:40 DESCRIPTION
> -rw-r--r--   1 root     33             7112 Dec 17 17:40 NAMESPACE
> drwxr-sr-x   2 root     33             4096 Dec 17 17:19 R
> drwxr-sr-x   2 root     33             4096 Dec 17 05:58 libs
> 
> So, is dcf.c, or main.c the better place to check. dcf.c does not look like "fun" - all those lexical arguments at the start:

Cue story of looking for keys under lamppost...

> 
> SEXP attribute_hidden do_readDCF(SEXP call, SEXP op, SEXP args, SEXP env)
> {
> .... man many lines ....
>                               } else {
>                                       /* Must be a regular line with no tag ... */
>                                       line[20] = '\0';
>                                       error(_("Line starting '%s ...' is malformed!"), line);
>                               }
>                       }
>               }
>       }
> ... more lines to go...
> 

As you're dying in an else clause, a previous if () must contain the clue. Unfortunately not necessarily the matching one.

My guess is that your TRE library is broken. The line should have matched the RE "regline" defined as

   tre_regcomp(&regline, "^[^:]+:[[:blank:]]*", REG_EXTENDED);
...and used here:
                if(tre_regexecb(&regline, line, 1, regmatch, 0) == 0) { 

but apparently does not.



> Thanks for the assistance!
> 
> Michael

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From wdunlap at tibco.com  Thu Dec 17 23:40:18 2015
From: wdunlap at tibco.com (William Dunlap)
Date: Thu, 17 Dec 2015 14:40:18 -0800
Subject: [Rd] array() ignores illegal non-list dimnames
Message-ID: <CAF8bMcZxbppcD8M2Eu4c0wBiNXH11z=Xjcto=kJRpATOtK5hYw@mail.gmail.com>

Is there a reason that array() silently ignores dimnames that are not
a list but matrix() gives an error?

  > str(matrix(11:14, 2, 2, dimnames=c("Rows","Cols")))
  Error in matrix(11:14, 2, 2, dimnames = c("Rows", "Cols")) :
    'dimnames' must be a list
  > str(array(11:14, dim=c(2, 2), dimnames=c("Rows","Cols")))
   int [1:2, 1:2] 11 12 13 14

I noticed this in lhs:::geneticLHS, which has the line
            J <- array(NA, dim = c(n, k, pop), dimnames = c("points",
"variables", "hypercubes"))
where the non-list dimnames has no effect, and no warning or error.

Bill Dunlap
TIBCO Software
wdunlap tibco.com


From simon.urbanek at r-project.org  Fri Dec 18 02:29:37 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 17 Dec 2015 20:29:37 -0500
Subject: [Rd] Assistance much appreciated
In-Reply-To: <5672EA93.104@gmail.com>
References: <5672EA93.104@gmail.com>
Message-ID: <DCB5B35F-85DD-4078-8F02-940C368DCE95@r-project.org>

Michael,

I got access to PDP AIX so I can try to replicate your problem. Can you, please, share exactly your setup - AIX version and well as how exactly you installed the compilers (=where from)? I can then try to replicate it. AFAICS there is no official binary for gfortran nor gcc 4.7 so it must be some 3rd party - which could also be a problem.

Thanks,
Simon


On Dec 17, 2015, at 12:02 PM, Michael Felt <aixtools at gmail.com> wrote:

> I have been struggling with this error message - and think I finally understand it's context.
> 
> Start
> 
> Line by line debugging shows me the function works:
> 
> ...
> > saveRDS(val, mapfile)
> > val
> $variables
> $variables$IANA_HTTP_status_code_db
> [1]    0 1256
> 
> $variables$IANA_URI_scheme_db
> [1] 1256 3458
> 
> $variables$table_of_HTTP_status_codes
> [1] 4714  830
> 
> 
> $references
> named list()
> 
> $compressed
> [1] TRUE
> 
> > mapfile
> [1] "./library/tools/R/sysdata.rdx"
> > [1] + Stopped (SIGTSTP)         R_DEFAULT_PACKAGES=NULL LC_ALL=C ./bin/R --vanilla
> root at x065:[/data/prj/cran/64/R-3.2.3]ls -l ./library/tools/R/sysdata.rdx
> -rw-r--r--   1 root     33              193 Dec 17 16:49 ./library/tools/R/sysdata.rdx
> root at x065:[/data/prj/cran/64/R-3.2.3]cat ./library/tools/R/sysdata.rdx
> ?b```b`fbf" SH0#h^?<??@?Al?&_(
>                              ??(R?????        ?Y?sS
> C7?PG3@??j/D                                        ?aA OG??x??????????$??X>4?3?89#5IF?$1)'5>?
> ?00F??,?(dA1T?(5-?(5/![PZ\2?$?<root at x065:[/data/prj/cran/64/R-3.2.3]
> root at x065:[/data/prj/cran/64/R-3.2.3]
> root at x065:[/data/prj/cran/64/R-3.2.3]gzip -dc ./library/tools/R/sysdata.rdx
> X
> j>      names   IANA_HTTP_status_code_db IANA_URI_scheme_db      table_of_HTTP_status_codes???
> ?               variables
> references
> compressed?root at x065:[/data/prj/cran/64/R-3.2.3]fg
> R_DEFAULT_PACKAGES=NULL LC_ALL=C ./bin/R --vanilla
> 
> >
> > e
> <environment: 110dbf620>
> > destDir
> [1] "./library/tools/R"
> > compress
> [1] TRUE
> > debug(tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress = compress))
> Error: Line starting 'Package: tools ...' is malformed!
> > tools:::makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress = compress)
> Error: Line starting 'Package: tools ...' is malformed!
> >
> 
> So, at the end - my gut-feeling is that the error messages is not about the arguments, but us related to the "tools:::foo".
> 
> Where should I look next? It goes a bit beyond me to know where in R "tools:::foo" is being parsed.
> Guessing here - but might be related to the switch from 32-bit to 64-bit AND that PowerPC is BigEndian rather than LittleEndian? Could also be absolutely wrong, way off base, etc. --> shoot me down!
> 
> Thanks,
> Michael
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From simon.urbanek at r-project.org  Fri Dec 18 04:30:01 2015
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Thu, 17 Dec 2015 22:30:01 -0500
Subject: [Rd] Assistance much appreciated
In-Reply-To: <960B4F41-6E0D-4947-8559-977A0360A6D4@gmail.com>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
	<5672F74C.70905@gmail.com>
	<651A9020-C94C-4B10-9164-8CC660D13BF0@gmail.com>
	<567305C6.8050808@gmail.com>
	<960B4F41-6E0D-4947-8559-977A0360A6D4@gmail.com>
Message-ID: <5812A02D-01B0-4C96-A45E-F3A1B7B9FC6F@r-project.org>

FWIW I was able to replicate the problem using AIX7.1 on Power8, R 3.2.3, vac/xlc 11.1, xlf 13.1 in 64-bit mode. Indeed, Peter's analysis is correct re_regexecb(&regline, line..) returns REG_NOMATCH even though the string is literally "Package: tools" - no special characters anywhere.

On Dec 17, 2015, at 3:37 PM, peter dalgaard <pdalgd at gmail.com> wrote:

> 
>> On 17 Dec 2015, at 19:58 , Michael Felt <aixtools at gmail.com> wrote:
>> 
>> On 2015-12-17 19:30, peter dalgaard wrote:
>>> Presumably the file in question is one of
>>> 
>>> Peter-Dalgaards-MacBook-Air:BUILD pd$ grep -r "^Package: tools" *
>>> library/tools/DESCRIPTION:Package: tools
>>> src/library/tools/DESCRIPTION:Package: tools
>>> 
>>> so the first thing I'd do is to have a good look at those files and see if they got somehow corrupted.
>>> 
>>> If they look sane, presumably the bit of code that checks it isn't... So that would be my next thing to check.
>>> 
>>> -pd
>> I had just gotten here, and tried comparing them with the 32-bit build (as I do not know what sane is yet).
>> 
>> Sources are in:
>> /data/prj/cran/R-3.2.3
>> 
>> Builds are in:
>> /data/prj/cran/32/R-3.2.3 and
>> /data/prj/cran/64/R-3.2.3
>> 
>> The files, in the build directories look "sane", at least comparable
> 
> OK. Perhaps a check for special characters with a hex editor, just to be sure? But probably not the cause.
> 
>> 
>> root at x065:[/data/prj/cran/R-3.2.3]sdiff -w 132 /data/prj/cran/??/R-3.2.3/library/tools/DESCRIPTION
>> Package: tools                                                      Package: tools
>> Version: 3.2.3                                                      Version: 3.2.3
>> Priority: base                                                      Priority: base
>> Title: Tools for Package Development                                Title: Tools for Package Development
>> Author: R Core Team                                                 Author: R Core Team
>> Maintainer: R Core Team <R-core at r-project.org>                      Maintainer: R Core Team <R-core at r-project.org>
>> Description: Tools for package development, administration and      Description: Tools for package development, administration and
>> License: Part of R 3.2.3                                            License: Part of R 3.2.3
>> Suggests: XML, codetools, methods                                   Suggests: XML, codetools, methods
>> Built: R 3.2.3; powerpc-ibm-aix5.3.7.0; 2015-12-17 12:02:34 UTC  |  Built: R 3.2.3; ; Thu Dec 17 17:39:55 UTC 2015; unix
>> 
>> As the 32-bit build completes, while the 64-bit stops at "tools" there is a difference in what they have available:
>> 
>> root at x065:[/data/prj/cran/R-3.2.3]ls -l /data/prj/cran/??/R-3.2.3/library/tools
>> /data/prj/cran/32/R-3.2.3/library/tools:
>> total 72
>> -rw-r--r--   1 root     33              356 Dec 17 12:02 DESCRIPTION
>> -rw-r--r--   1 root     33             3665 Dec 16 11:37 INDEX
>> drwxr-sr-x   2 root     33             4096 Dec 17 08:45 Meta
>> -rw-r--r--   1 root     33             7112 Dec 17 12:02 NAMESPACE
>> drwxr-sr-x   2 root     33             4096 Dec 17 12:02 R
>> drwxr-sr-x   2 root     33             4096 Dec 16 11:37 help
>> drwxr-sr-x   2 root     33             4096 Dec 16 11:37 html
>> drwxr-sr-x   2 root     33             4096 Dec 16 11:34 libs
>> 
>> /data/prj/cran/64/R-3.2.3/library/tools:
>> total 40
>> -rw-r--r--   1 root     33              339 Dec 17 17:40 DESCRIPTION
>> -rw-r--r--   1 root     33             7112 Dec 17 17:40 NAMESPACE
>> drwxr-sr-x   2 root     33             4096 Dec 17 17:19 R
>> drwxr-sr-x   2 root     33             4096 Dec 17 05:58 libs
>> 
>> So, is dcf.c, or main.c the better place to check. dcf.c does not look like "fun" - all those lexical arguments at the start:
> 
> Cue story of looking for keys under lamppost...
> 
>> 
>> SEXP attribute_hidden do_readDCF(SEXP call, SEXP op, SEXP args, SEXP env)
>> {
>> .... man many lines ....
>>                              } else {
>>                                      /* Must be a regular line with no tag ... */
>>                                      line[20] = '\0';
>>                                      error(_("Line starting '%s ...' is malformed!"), line);
>>                              }
>>                      }
>>              }
>>      }
>> ... more lines to go...
>> 
> 
> As you're dying in an else clause, a previous if () must contain the clue. Unfortunately not necessarily the matching one.
> 
> My guess is that your TRE library is broken. The line should have matched the RE "regline" defined as
> 
>   tre_regcomp(&regline, "^[^:]+:[[:blank:]]*", REG_EXTENDED);
> ...and used here:
>                if(tre_regexecb(&regline, line, 1, regmatch, 0) == 0) { 
> 
> but apparently does not.
> 
> 
> 
>> Thanks for the assistance!
>> 
>> Michael
> 
> -- 
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From aixtools at gmail.com  Fri Dec 18 08:57:00 2015
From: aixtools at gmail.com (Michael Felt)
Date: Fri, 18 Dec 2015 08:57:00 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <5812A02D-01B0-4C96-A45E-F3A1B7B9FC6F@r-project.org>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
	<5672F74C.70905@gmail.com>
	<651A9020-C94C-4B10-9164-8CC660D13BF0@gmail.com>
	<567305C6.8050808@gmail.com>
	<960B4F41-6E0D-4947-8559-977A0360A6D4@gmail.com>
	<5812A02D-01B0-4C96-A45E-F3A1B7B9FC6F@r-project.org>
Message-ID: <5673BC4C.8060600@gmail.com>

On 2015-12-18 04:30, Simon Urbanek wrote:
> FWIW I was able to replicate the problem using AIX7.1 on Power8, R 3.2.3, vac/xlc 11.1, xlf 13.1 in 64-bit mode. Indeed, Peter's analysis is correct re_regexecb(&regline, line..) returns REG_NOMATCH even though the string is literally "Package: tools" - no special characters anywhere.
>
> On Dec 17, 2015, at 3:37 PM, peter dalgaard<pdalgd at gmail.com>  wrote:
Worth a great deal to me! Thank you both. Also glad it has been 
independently replicated. And using the IBM compilers. I was concerned 
it was a gcc/gfortran behavior difference.
As you are testing with the IBM compilers - are you also seeing the 
duplicate symbols from *yyl* (coming from in gramRd.y and gramLatex.y in 
tools). I have used both the gramRd.c and gramLatex.c provided, as well 
as new ones made with bison-3.0.8 and get the same problem on AIX 5.3 
(not gotten back to test on AIX 6.1 and AIX 7.1 - but the 32-bit 
version, built on AIX 5.3 runs fine on AIX 7.1).
I see a different behavior re: the definition of the "symbols" on AIX 
versus debian (wheezy) where debian just leaves it as an unitilised 
variable (.bss) but does not pre-define/establish it's global address.

p.s. are you also in a position to try on 64-bit Linux - and compare LE 
with BE (like AIX)?
And maybe it is a bug in bison/yacc that has never been properly explained.

So - we need to dissect re_regexecb() - looking in particular at 
differences that 32 versus 64-bit may have?!

Michael


From aixtools at gmail.com  Fri Dec 18 09:26:49 2015
From: aixtools at gmail.com (Michael Felt)
Date: Fri, 18 Dec 2015 09:26:49 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <960B4F41-6E0D-4947-8559-977A0360A6D4@gmail.com>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
	<5672F74C.70905@gmail.com>
	<651A9020-C94C-4B10-9164-8CC660D13BF0@gmail.com>
	<567305C6.8050808@gmail.com>
	<960B4F41-6E0D-4947-8559-977A0360A6D4@gmail.com>
Message-ID: <5673C349.5080805@gmail.com>

On 2015-12-17 21:37, peter dalgaard wrote:
> As you're dying in an else clause, a previous if () must contain the clue. Unfortunately not necessarily the matching one.
>
> My guess is that your TRE library is broken. The line should have matched the RE "regline" defined as
>
>     tre_regcomp(&regline, "^[^:]+:[[:blank:]]*", REG_EXTENDED);
> ...and used here:
>                  if(tre_regexecb(&regline, line, 1, regmatch, 0) == 0) {
>
> but apparently does not.
int
tre_regcomp(regex_t *preg, const char *regex, int cflags)
{
   return tre_regncomp(preg, regex, regex ? strlen(regex) : 0, cflags);
}

The code is a bit too 'string busy' for me to be comfortable - so I took 
a different approach to look for potential differences in how 32-bit 
versus 64-bit were viewing things. Again, it may not be that the root 
cause is here - but I hope looking at the diff -u of the .i files gives 
someone an good impression of how the data types are being swapped about.

For one example - I had a very old program that had a typedef for 
"typedef unsigned long long ulonglong_t;" that would not parse well. 
When I changed that to unit64_t (as defined in /usr/include/sys/stdint.h)

#ifndef _STD_UINT64_T
#ifdef  __64BIT__
typedef unsigned long           uint64_t;
#else   /* _ILP32 */
#if defined(_LONG_LONG)
typedef unsigned long long      uint64_t;
#endif
#endif
#endif /* _STD_UINT64_T */


All my compilers and os mix (gcc, xlc, AIX and linux) were happy!

So, I am hoping something triggers a thought in the following: (or the 
haystack gets smaller...)
root at x072:[/]diff -u /data/prj/cran/??/R-3.2.3/src/extra/tre/regcomp.i
--- /data/prj/cran/32/R-3.2.3/src/extra/tre/regcomp.i   2015-12-18 
08:10:25.000000000 +0000
+++ /data/prj/cran/64/R-3.2.3/src/extra/tre/regcomp.i   2015-12-18 
08:10:58.000000000 +0000
@@ -1,5 +1,5 @@
   # 1 "/data/prj/cran/R-3.2.3/src/extra/tre/regcomp.c"
- # 1 "/data/prj/cran/32/R-3.2.3/src/extra/tre//"
+ # 1 "/data/prj/cran/64/R-3.2.3/src/extra/tre//"
   # 1 "<command-line>"
   # 1 "/data/prj/cran/R-3.2.3/src/extra/tre/regcomp.c"
   # 10 "/data/prj/cran/R-3.2.3/src/extra/tre/regcomp.c"
@@ -171,18 +171,11 @@
   typedef long int ptrdiff_t;
   # 119 
"/opt/lib/gcc/powerpc-ibm-aix5.3.0.0/4.7.4/include-fixed/sys/types.h" 3 4
   typedef unsigned int wctype_t;
+ # 128 
"/opt/lib/gcc/powerpc-ibm-aix5.3.0.0/4.7.4/include-fixed/sys/types.h" 3 4
+ typedef long fpos_t;



-
-
-
- typedef long long fpos_t;
-
-
-
-
-
   typedef long long fpos64_t;
   # 145 
"/opt/lib/gcc/powerpc-ibm-aix5.3.0.0/4.7.4/include-fixed/sys/types.h" 3 4
   typedef int time_t;
@@ -258,9 +251,9 @@



- typedef long long off_t;


+ typedef long off_t;



@@ -2785,8 +2778,8 @@
   extern char *tmpnam(char *);
   extern int fclose(FILE *);
   extern int fflush(FILE *);
- extern FILE * fopen64(const char *restrict, const char *restrict);
- extern FILE * freopen64(const char *restrict, const char *restrict, 
FILE *restrict);
+ extern FILE * fopen(const char *restrict, const char *restrict);
+ extern FILE * freopen(const char *restrict, const char *restrict, FILE 
*restrict);
   extern void setbuf(FILE *restrict, char *restrict);
   extern int setvbuf(FILE *restrict, char *restrict, int, size_t);
   extern int fprintf(FILE *restrict, const char *restrict, ...);
@@ -2816,9 +2809,9 @@
   extern char *gets(char *);
   extern int puts(const char *);
   extern int ungetc(int, FILE *);
- extern int fgetpos64(FILE *restrict, fpos_t *restrict);
+ extern int fgetpos(FILE *restrict, fpos_t *restrict);
   extern int fseek(FILE *, long int, int);
- extern int fsetpos64(FILE *, const fpos_t *);
+ extern int fsetpos(FILE *, const fpos_t *);
   extern long ftell(FILE *);
   extern void rewind(FILE *);
   extern void perror(const char *);
@@ -2841,8 +2834,8 @@

   extern void flockfile(FILE *);
   extern void funlockfile(FILE *);
- extern int fseeko64(FILE *, off_t, int);
- extern off_t ftello64(FILE *);
+ extern int fseeko(FILE *, off_t, int);
+ extern off_t ftello(FILE *);
   extern int ftrylockfile(FILE *);
   extern void funlockfile(FILE *);
   # 470 
"/opt/lib/gcc/powerpc-ibm-aix5.3.0.0/4.7.4/include-fixed/stdio.h" 3 4


From aixtools at gmail.com  Fri Dec 18 10:58:05 2015
From: aixtools at gmail.com (Michael Felt)
Date: Fri, 18 Dec 2015 10:58:05 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <DCB5B35F-85DD-4078-8F02-940C368DCE95@r-project.org>
References: <5672EA93.104@gmail.com>
	<DCB5B35F-85DD-4078-8F02-940C368DCE95@r-project.org>
Message-ID: <5673D8AD.7030405@gmail.com>

On 2015-12-18 02:29, Simon Urbanek wrote:
> Michael,
>
> I got access to PDP AIX so I can try to replicate your problem. Can you, please, share exactly your setup - AIX version and well as how exactly you installed the compilers (=where from)? I can then try to replicate it. AFAICS there is no official binary for gfortran nor gcc 4.7 so it must be some 3rd party - which could also be a problem.
>
> Thanks,
> Simon
I built gcc and gfortran myself. Available via 
http://download.aixtools.net/test/aixtools.obj.gcc.4.7.4.0.aix537.I 
(still in the test directory because the fileset name should be 
aixtools.gnu.gcc) - other filesets and instructions are available at: 
http://download.aixtools.net/gnu/gcc/

Note, especially, I was not smart enough - then - to automatically run 
the mkheaders command (full command is either

  /opt/libexec/gcc/powerpc-ibm-aix5.3.7.0/4.7.4/install-tools/mkheaders or  /opt/libexec/gcc/powerpc-ibm-aix5.3.0.0/4.7.4/install-tools/mkheaders
depending on the version of libtool I had installed when packaging (the latest also looks at the TL level, hence 5.3.7.0 rather that 5.3.0.0)


Only looking at the rte (runtime) filesets - this is what I have added: 
All are available via http:://www.aixtools.net (wiki interface) or 
http://download.aixtools.net (self-service).

The AIXTOOLBOX approach uses rpm for packaging - which I did not 
understand when I got started several years back. And I am not switching 
to rpm - following in the footsteps of Perzl because:
a) Michael Perzl does an excellent job of keeping the AIXTOOLBOX where 
it should be - no need to replicate that
b) I hate the RPM dependency nightmare (e.g., installing three rpm -dev 
packages  just to get 5 include files)
c) The RPM.spec files often (well occaisionally, but once is once too 
many for me) overwrite AIX/IBM installp files - so updates of one damage 
the other
d) RPM and NIM did not work as well as NIM and INSTALLP

Almost end of soapbox --- In AIX 5.2 IBM included a tool called 
mkinstallp. I have a tool around that - that I call buildaix - that 
largely automates packaging OSS/FOSS, especially when the packaging 
follows GNU build guidelines.

root at x065:[/data/prj/cran/R-3.2.3/src/extra/tre] aixtools | grep rte <
   aixtools.32.R.rte          3.1.3.0    C     F    1548 1130 1457
   aixtools.bison.rte         3.0.4.0    C     F    bison 1504 0125 1445
   aixtools.buildaix.rte      2.0.3.1    C     F    1540 1007 2004
   aixtools.bzip2.rte         1.0.6.0    C     F    1543 1030 1351
   aixtools.curl.rte         7.45.0.0    C     F    1544 1106 1841
   aixtools.gmp.rte           5.0.5.0    C     F    gmp version 5.0.5 
for powerpc
   aixtools.gnu.bash.rte     4.3.42.0    C     F    1537 0913 1505
   aixtools.gnu.gettext.rte  0.19.5.0    C     F    1531 0807 0000
   aixtools.gnu.gzip.rte      1.6.0.0    C     F    1550 1216 1405
   aixtools.gnu.gzip.rte.64   1.6.0.0    C     F    1550 1216 1417
   aixtools.gnu.m4.rte       1.4.17.0    C     F    1523 0613 1221
   aixtools.gnu.make.rte      4.1.0.0    C     F    1523 0613 1158
   aixtools.libiconv.rte     1.14.0.0    C     F    libiconv 1447 1127 1728
   aixtools.libjpeg.rte       6.2.0.0    C     F    libjpeg version 
6.2.0 for
   aixtools.libpng.rte       1.5.12.0    C     F    libpng version 
1.5.12 for
   aixtools.mpc.rte           1.0.2.0    C     F    mpc 2014.Oct.31 
15.44 CUT
   aixtools.mpfr.rte          2.4.2.0    C     F    mpfr 2014.Oct.31 
15.19 CUT
   aixtools.obj.gcc.rte       4.7.4.0    C     F    1515 0416 2134
   aixtools.pcre.rte         8.37.0.0    C     F    1544 1106 1445
   aixtools.pkgconfig.gcc.rte
   aixtools.tiff.rte          4.0.6.0    C     F    1542 1024 2144
   aixtools.xz.rte            5.0.8.0    C     F    1522 0602 0809
   aixtools.zlib.rte          1.2.8.1    C     F    zlib 1505 0203 1627

In closing, I made the mistake of thinking people know installp as well 
as they know rpm (at command-line). If you do not know installp at the 
command line level
a) run rm -f /where/you/download/to/.toc after everytime you add a file
b) use "smit install" to install filesets

If you are comfortable with installp cli interface the standard commands 
to remember are:
a) inutoc /where/you/download/to
b) installp -d /where/you/download/to -L # to list filesets
c) installp -d /where/you/download/to -agX <what you want to install> | 
"all"

Part II

a) I download R-project files to /data/prj/cran/downloads
b) cd /data/prj/cran
     gzip -dc downloads/R-3.2.3.tar.gz | tar xf -
     cp -rp R-3.2.3 R-3.2.3.dist
c) ls -l 32/*.env 64/*.env

sdiff -w ??/aix.env
cat bin/my_shared.ksh

d) slibclean; rm -rf 32/R-3.2.3; rm -rf 64/R-3.2.3
     mkdir 32/R-3.2.3
     mkdir 64/R-3.2.3

e) note current diffs between R-3.2.3 and R-3.2.3.dist
root at x072:[/data/prj/cran]diff -ru R-3.2.3.dist R-3.2.3
diff -ru R-3.2.3.dist/configure R-3.2.3/configure
--- R-3.2.3.dist/configure      2015-12-02 23:16:46.000000000 +0000
+++ R-3.2.3/configure   2015-12-16 10:52:15.000000000 +0000
@@ -26339,11 +26339,11 @@
       ##ADD: However, for example, symbol in libc of memcpy is 
__memmove,__memmove64.
       ##ADD: This black magic puts lc before lR and pockets this.
       if test "x${OBJECT_MODE}" = "x64"; then
-       main_ldflags="${wl}-brtl ${wl}-bexpall ${wl}-bpT:0x100000000 
${wl}-bpD:0x110000000 -lc"
+       main_ldflags="${wl}-brtl ${wl}-bpT:0x100000000 
${wl}-bpD:0x110000000 -lc"
       else
-       main_ldflags="${wl}-brtl ${wl}-bexpall -lc"
+       main_ldflags="${wl}-brtl ${wl}-bmaxdata:0xd0000000/dsa -lc"
       fi
-     shlib_ldflags="${wl}-brtl ${wl}-G ${wl}-bexpall ${wl}-bnoentry -lc"
+     shlib_ldflags="${wl}-G ${wl}-bnoentry -lc"
       SHLIB_LIBADD="\$(LIBM)"
       shlib_cxxldflags="${shlib_ldflags}"
       if test "${GCC}" = yes; then
diff -ru R-3.2.3.dist/share/make/basepkg.mk R-3.2.3/share/make/basepkg.mk
--- R-3.2.3.dist/share/make/basepkg.mk  2015-03-18 23:04:12.000000000 +0000
+++ R-3.2.3/share/make/basepkg.mk       2015-12-17 12:01:02.000000000 +0000
@@ -148,7 +148,9 @@

   sysdata: $(srcdir)/R/sysdata.rda
         @$(ECHO) "installing 'sysdata.rda'"
-       @$(ECHO) 
"tools:::sysdata2LazyLoadDB(\"$(srcdir)/R/sysdata.rda\",\"$(top_builddir)/library/$(pkg)/R\")" 
| \
+       $(ECHO) "warnings()" | \
+         R_DEFAULT_PACKAGES=NULL LC_ALL=C $(R_EXE)
+       $(ECHO) 
"tools:::sysdata2LazyLoadDB(\"$(srcdir)/R/sysdata.rda\",\"$(top_builddir)/library/$(pkg)/R\")" 
| \
           R_DEFAULT_PACKAGES=NULL LC_ALL=C $(R_EXE)


diff -ru R-3.2.3.dist/src/include/Defn.h R-3.2.3/src/include/Defn.h
--- R-3.2.3.dist/src/include/Defn.h     2015-08-25 22:15:24.000000000 +0000
+++ R-3.2.3/src/include/Defn.h  2015-12-16 10:53:08.000000000 +0000
@@ -1271,7 +1271,7 @@
   void invalidate_cached_recodings(void);  /* from sysutils.c */
   void resetICUcollator(void); /* from util.c */
   void dt_invalidate_locale(); /* from Rstrptime.h */
- int R_OutputCon; /* from connections.c */
+ extern int R_OutputCon; /* from connections.c */
   extern int R_InitReadItemDepth, R_ReadItemDepth; /* from serialize.c */
   void get_current_mem(size_t *,size_t *,size_t *); /* from memory.c */
   unsigned long get_duplicate_counter(void);  /* from duplicate.c */
diff -ru R-3.2.3.dist/src/library/tools/R/makeLazyLoad.R 
R-3.2.3/src/library/tools/R/makeLazyLoad.R
--- R-3.2.3.dist/src/library/tools/R/makeLazyLoad.R     2015-08-25 
22:16:54.000000000 +0000
+++ R-3.2.3/src/library/tools/R/makeLazyLoad.R  2015-12-17 
06:53:34.000000000 +0000
@@ -38,9 +38,13 @@

   sysdata2LazyLoadDB <- function(srcFile, destDir, compress = TRUE)
   {
+ browser()
       e <- new.env(hash=TRUE)
+ # browser()
       load(srcFile, e)
+ # browser()
       makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress = compress)
+ # browser()
   }

   list_data_in_pkg <- function(package, lib.loc = NULL, dataDir = NULL)
diff -ru R-3.2.3.dist/src/library/tools/src/gramLatex.c 
R-3.2.3/src/library/tools/src/gramLatex.c
--- R-3.2.3.dist/src/library/tools/src/gramLatex.c      2015-12-09 
23:20:01.000000000 +0000
+++ R-3.2.3/src/library/tools/src/gramLatex.c   2015-12-17 
14:50:14.000000000 +0000
@@ -1358,7 +1358,7 @@


   /* The lookahead symbol.  */
- int yychar;
+ extern int yychar;


   #ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
@@ -1370,7 +1370,7 @@
   #endif

   /* The semantic value of the lookahead symbol.  */
- YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);
+ extern YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);

   /* Location data for the lookahead symbol.  */
   YYLTYPE yylloc
@@ -1381,7 +1381,7 @@


   /* Number of syntax errors so far.  */
- int yynerrs;
+ extern int yynerrs;


   /*----------.
diff -ru R-3.2.3.dist/src/library/tools/src/gramRd.c 
R-3.2.3/src/library/tools/src/gramRd.c
--- R-3.2.3.dist/src/library/tools/src/gramRd.c 2015-12-09 
23:20:01.000000000 +0000
+++ R-3.2.3/src/library/tools/src/gramRd.c      2015-12-17 
14:51:19.000000000 +0000
@@ -1972,7 +1972,7 @@


   /* The lookahead symbol.  */
- int yychar;
+ extern int yychar;


   #ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
@@ -1984,7 +1984,7 @@
   #endif

   /* The semantic value of the lookahead symbol.  */
- YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);
+ extern YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);

   /* Location data for the lookahead symbol.  */
   YYLTYPE yylloc
@@ -1995,7 +1995,7 @@


   /* Number of syntax errors so far.  */
- int yynerrs;
+ extern int yynerrs;


   /*----------.

+++++++++
The changes in /src/library/tools/R/makeLazyLoad.R are not relevant 
(initial learning...)

f) cd 32/R-3.2.3; ../../bin/my_shared.ksh aix R-3.2.3; export 
OBJECT_MODE=32; make -j4; cd -
g) cd 64/R-3.2.3; ../../bin/my_shared.ksh aix R-3.2.3; export 
OBJECT_MODE=64; make -j4 && cd -

Michael

p.s. please keep me posted on any difficulties - so I can add better 
instructions on the wiki.
p.p.s. - I am using R-3.2.3 to by-pass the removal of the src/extra packages


From aixtools at gmail.com  Fri Dec 18 11:02:03 2015
From: aixtools at gmail.com (Michael Felt)
Date: Fri, 18 Dec 2015 11:02:03 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <5673D8AD.7030405@gmail.com>
References: <5672EA93.104@gmail.com>
	<DCB5B35F-85DD-4078-8F02-940C368DCE95@r-project.org>
	<5673D8AD.7030405@gmail.com>
Message-ID: <5673D99B.3050904@gmail.com>

On 2015-12-18 10:58, Michael Felt wrote:
> c) ls -l 32/*.env 64/*.env
>
> sdiff -w ??/aix.env
> cat bin/my_shared.ksh 
Forgot this part:

2015-12-18 10:00                   32 and 64 bit aix 
environments                   Page 1


export OBJECT_MODE=32                        export OBJECT_MODE=64
export CC="gcc -maix32 -mcpu=power5"         export AR="ar -X64"
export CXX="g++ -maix32 -mcpu=power5"        export CC="gcc -maix64 
-mcpu=power5"
export F77="gfortran -maix32 -mcpu=power5"   export CXX="g++ -maix64 
-mcpu=power5"
export FC="gfortran -maix32 -mcpu=power5"    export F77="gfortran 
-maix64 -mcpu=power5"
export LDFLAGS="-L/opt/lib"                  export FC="gfortran -maix64 
-mcpu=power5"
                                              export LDFLAGS="-L/opt/lib"


2015-12-16 11:26                bin/my_shared.ksh                 Page 1


#!/usr/bin/ksh
# my_config_test
#       --with-cairo=no --with-libpng=no --with-jpeglib=no 
--with-libtiff=no \
#       --with-cairo=no --with-libpng=yes --with-jpeglib=yes 
--with-libtiff=yes \
#       --with-libpth-prefix=/opt \
#       --with-aix-soname=aix
HOST=$1
RELEASE=$2

. ../${HOST}.env || exit -1

/data/prj/cran/${RELEASE}/configure --disable-lto --prefix=/opt \
         --enable-R-shlib \
         --with-cairo=no --with-libpng=no --with-jpeglib=no 
--with-libtiff=no \
         --with-readline=no --with-x=no


From aixtools at gmail.com  Fri Dec 18 14:21:43 2015
From: aixtools at gmail.com (Michael Felt)
Date: Fri, 18 Dec 2015 14:21:43 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <DCB5B35F-85DD-4078-8F02-940C368DCE95@r-project.org>
References: <5672EA93.104@gmail.com>
	<DCB5B35F-85DD-4078-8F02-940C368DCE95@r-project.org>
Message-ID: <56740867.9000906@gmail.com>

On 2015-12-18 02:29, Simon Urbanek wrote:
> Michael,
>
> I got access to PDP AIX so I can try to replicate your problem. Can you, please, share exactly your setup - AIX version and well as how exactly you installed the compilers (=where from)? I can then try to replicate it. AFAICS there is no official binary for gfortran nor gcc 4.7 so it must be some 3rd party - which could also be a problem.
>
> Thanks,
> Simon
>
I installed a fresh system - AIX 6.1 TL5 this time, and built the system 
from scratch.

It is a long read, and I also made some discoveries about the contents 
of some of my newer packaging.
However, it you go through it you will see what is needed to make it all 
work.

The starting point are these filesets - available via my aixtools.net site:

root at x069:[/data/prj/cran/32/R-aix-3.2.3]ls -l /tmp/download
total 622400
-rw-r--r--    1 root     system        27482 Dec 18 12:34 .toc
-rwxrwxr--    1 199      33           828928 Sep 17 2012  
aixtools.gmp.5.0.5.0.I
-rw-r--r--    1 root     system      2102784 Jul 30 07:04 
aixtools.gnu.autoconf.2.69.0.0.aix537.I
-rw-r--r--    1 root     system      1461248 Jul 30 07:56 
aixtools.gnu.automake.1.15.0.0.aix537.I
-rw-r--r--    1 root     system      5321728 Sep 13 15:10 
aixtools.gnu.bash.4.3.42.0.aix537.I
-rw-r--r--    1 root     system     11640832 Aug 07 00:02 
aixtools.gnu.gettext.0.19.5.0.aix537.I
-rw-r--r--    1 root     system      1702912 Jul 30 08:08 
aixtools.gnu.libtool.2.4.6.0.aix537.I
-rw-r--r--    1 root     system       541184 Jun 13 2015  
aixtools.gnu.m4.1.4.17.0.aix537.I
-rw-r--r--    1 root     system      1229824 Jun 13 2015  
aixtools.gnu.make.4.1.0.0.aix537.I
-rw-r--r--    1 root     system      1348096 Nov 27 2014  
aixtools.libiconv.1.14.0.0.aix537.I
-rw-r--r--    1 199      33           265216 Oct 31 2014  
aixtools.mpc.1.0.2.0.I
-rw-r--r--    1 199      33           576512 Oct 31 2014  
aixtools.mpfr.2.4.2.0.I
-rw-r--r--    1 199      1954      290915328 Apr 16 2015  
aixtools.obj.gcc.4.7.4.0.aix537.I
-rw-r--r--    1 root     system       679424 Jun 02 2015  
aixtools.xz.5.0.8.0.aix537.I


Note: the aixtools.xz (lzma support) was a surprise, as the internal one 
did not link properly, for some reason (all in the file,
not included here, but available at: 
http://download.aixtools.net/test/R/build-freshstart.text (Trying to not 
overfill lots of mail boxes).

Also note, in the file there is a segmentation fault, core dump, but 
does not halt the build. Maybe this has been around on my previous 
builds on AIX 5.3 and 7.1 - but not noticed.

I did struggle for a few days with a buggy bos.adt.libm on AIX 7.1 
(installing an older version made my problem go away).

Segmentation error text:

  *** caught segfault ***
address 55544300, cause 'memory not mapped'

Traceback:
  1: format.POSIXlt(as.POSIXlt(x, tz), format, usetz, ...)
  2: structure(format.POSIXlt(as.POSIXlt(x, tz), format, usetz, 
...),     names = names(x))
  3: format.POSIXct(Sys.time(), "%Y-%m-%d at %H:%M:%S")
  4: format(Sys.time(), "%Y-%m-%d at %H:%M:%S")
  5: eval(expr, envir, enclos)
  6: eval(expr, env)
  7: withVisible(eval(expr, env))
  8: doTryCatch(return(expr), name, parentenv, handler)
  9: tryCatchOne(expr, names, parentenv, handlers[[1L]])
10: tryCatchList(expr, classes, parentenv, handlers)
11: tryCatch(withVisible(eval(expr, env)), error = function(e) e)
12: evalWithOpt(ce, options, env)
13: processRdChunk(block, stage, options, env, macros = macros)
14: recurse(block[[i]])
15: recurse(block[[i]])
16: recurse(block[[i]])
17: recurse(block)
18: getDynamicFlags(block)
19: recurse(block)
20: expandDynamicFlags(recurse(block), options)
21: processRdSexprs(Rd, stage, options, macros = attr(Rd, "macros"))
22: prepare_Rd(f, encoding = encoding, defines = os, stages = 
stages,     warningCalls = FALSE, stage2 = step > 1L, stage3 = step 
 >         2L, macros = macros)
23: FUN(X[[i]], ...)
24: lapply(files, .fetch_Rd_object)
25: .build_Rd_db(dir, manfiles, db_file = db_file, encoding = 
encoding,     built_file = built_file)
26: 
tools:::.install_package_Rd_objects("/data/prj/cran/R-3.2.3/src/library/tools",     
"../../library/tools")
aborting ...
/bin/sh[3]: 4915208 Segmentation fault(coredump)
Makefile:73: recipe for target 'tools.Rdts' failed
make[3]: *** [tools.Rdts] Error 1
make[3]: Leaving directory '/data/prj/cran/32/R-aix-3.2.3/src/library'
Makefile:79: recipe for target 'Rdobjects' failed
make[2]: *** [Rdobjects] Error 2
make[2]: Leaving directory '/data/prj/cran/32/R-aix-3.2.3/src/library'
Makefile:62: recipe for target 'docs' failed
make[1]: *** [docs] Error 2
make[1]: Leaving directory '/data/prj/cran/32/R-aix-3.2.3/src/library'
Makefile:72: recipe for target 'docs' failed
make: [docs] Error 2 (ignored)
make[1]: Entering directory 
'/data/prj/cran/32/R-aix-3.2.3/src/library/Recommended'
make[2]: Entering directory 
'/data/prj/cran/32/R-aix-3.2.3/src/library/Recommended'
begin installing recommended package MASS
* installing *source* package 'MASS' ...
** package 'MASS' successfully unpacked and MD5 sums checked
** libs
....

Simon - Thanks again for testing/checking,
Michael


From aixtools at gmail.com  Fri Dec 18 14:33:35 2015
From: aixtools at gmail.com (Michael Felt)
Date: Fri, 18 Dec 2015 14:33:35 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <56740867.9000906@gmail.com>
References: <5672EA93.104@gmail.com>
	<DCB5B35F-85DD-4078-8F02-940C368DCE95@r-project.org>
	<56740867.9000906@gmail.com>
Message-ID: <56740B2F.80407@gmail.com>

On 2015-12-18 14:21, Michael Felt wrote:
> root at x069:[/data/prj/cran/32/R-aix-3.2.3]ls -l /tmp/download
> total 622400
> -rw-r--r--    1 root     system        27482 Dec 18 12:34 .toc
> -rwxrwxr--    1 199      33           828928 Sep 17 2012  
> aixtools.gmp.5.0.5.0.I
> -rw-r--r--    1 root     system      2102784 Jul 30 07:04 
> aixtools.gnu.autoconf.2.69.0.0.aix537.I
> -rw-r--r--    1 root     system      1461248 Jul 30 07:56 
> aixtools.gnu.automake.1.15.0.0.aix537.I
> -rw-r--r--    1 root     system      5321728 Sep 13 15:10 
> aixtools.gnu.bash.4.3.42.0.aix537.I
> -rw-r--r--    1 root     system     11640832 Aug 07 00:02 
> aixtools.gnu.gettext.0.19.5.0.aix537.I
> -rw-r--r--    1 root     system      1702912 Jul 30 08:08 
> aixtools.gnu.libtool.2.4.6.0.aix537.I
> -rw-r--r--    1 root     system       541184 Jun 13 2015  
> aixtools.gnu.m4.1.4.17.0.aix537.I
> -rw-r--r--    1 root     system      1229824 Jun 13 2015  
> aixtools.gnu.make.4.1.0.0.aix537.I
> -rw-r--r--    1 root     system      1348096 Nov 27 2014  
> aixtools.libiconv.1.14.0.0.aix537.I
> -rw-r--r--    1 199      33           265216 Oct 31 2014  
> aixtools.mpc.1.0.2.0.I
> -rw-r--r--    1 199      33           576512 Oct 31 2014  
> aixtools.mpfr.2.4.2.0.I
> -rw-r--r--    1 199      1954      290915328 Apr 16 2015  
> aixtools.obj.gcc.4.7.4.0.aix537.I
> -rw-r--r--    1 root     system       679424 Jun 02 2015  
> aixtools.xz.5.0.8.0.aix537.I 
To simplify this, I put this is a compressed archive at: 
http://download.aixtools.net/test/R/download-aixtools.tar.bz2


From maechler at stat.math.ethz.ch  Sat Dec 19 12:24:56 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 19 Dec 2015 12:24:56 +0100
Subject: [Rd] array() ignores illegal non-list dimnames
In-Reply-To: <CAF8bMcZxbppcD8M2Eu4c0wBiNXH11z=Xjcto=kJRpATOtK5hYw@mail.gmail.com>
References: <CAF8bMcZxbppcD8M2Eu4c0wBiNXH11z=Xjcto=kJRpATOtK5hYw@mail.gmail.com>
Message-ID: <22133.16008.518364.131622@stat.math.ethz.ch>

>>>>> William Dunlap via R-devel <r-devel at r-project.org>
>>>>>     on Thu, 17 Dec 2015 14:40:18 -0800 writes:

    > Is there a reason that array() silently ignores dimnames
    > that are not a list but matrix() gives an error?

    >> str(matrix(11:14, 2, 2, dimnames=c("Rows","Cols")))
    > Error in matrix(11:14, 2, 2, dimnames = c("Rows", "Cols")) :
    > 'dimnames' must be a list

    >> str(array(11:14, dim=c(2, 2), dimnames=c("Rows","Cols")))
    > int [1:2, 1:2] 11 12 13 14

of course there must be a historical reason why this lapsus
happens, ;-)

but it is definitely not as intended, and I'll commit a fix for
R-devel and R-patched  "immediately".

    > I noticed this in lhs:::geneticLHS, which has the line
    > J <- array(NA, dim = c(n, k, pop), dimnames = c("points",
    > "variables", "hypercubes"))
    > where the non-list dimnames has no effect, and no warning or error.

so we will see some CRAN (and may off-CRAN) packages
producing errors after the change,
but indeed, these errors will be catching programming errors !

    > Bill Dunlap
    > TIBCO Software
    > wdunlap tibco.com

Thanks a lot, Bill!
Martin


From maechler at stat.math.ethz.ch  Sat Dec 19 12:32:26 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 19 Dec 2015 12:32:26 +0100
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <22123.59843.873290.235837@stat.math.ethz.ch>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
	<22118.59473.654693.639907@stat.math.ethz.ch>
	<22122.38537.382484.644230@stat.math.ethz.ch>
	<C5017517-991F-4C5B-A098-6DE85CBE0927@r-project.org>
	<22123.59843.873290.235837@stat.math.ethz.ch>
Message-ID: <22133.16458.461165.826979@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Sat, 12 Dec 2015 10:32:51 +0100 writes:

>>>>> John Chambers <jmc at r-project.org>
>>>>>     on Fri, 11 Dec 2015 10:11:05 -0800 writes:

    >> Somehow, the most obvious fixes are always back-incompatible these days.
    >> The example intrigued me, so I looked into it a bit (should have been doing something else, but ....)

    >> You're right that this is the proverbial thin-edge-of-the-wedge.

    >> The problem is in setDataPart(), which will be called whenever a class extends one of the vector types.

    >> It does
    >> as(value, dataClass)
    >> The key point is that the third argument to as(), strict=TRUE by default.  So, yes, the change will cause all integer vectors to become double when the class extends "numeric".  Generally, strict=TRUE makes sense here and of course changing THAT would open up yet more incompatibilities.

    >> For back compatibility, one would have to have some special code in setDataPart() for the case of integer/numeric.

    >> John

    >> (Historically, the original sin was probably not making a distinction between "numeric" as a virtual class and "double" as a type/class.)

    > Yes, indeed.  In the mean time, I've seen more cases where
    > "the change will cause all integer vectors to become double when the class  extends "numeric". 
    > seems detrimental.

    > OTOH, I still think we could go in the right direction ---
    > hopefully along the wishes of bioconductor S4 development, see
    > Martin Morgan's e-mail:

    > [This is all S4 - only; should not much affect base R / S3]
    > Currently,   "integer" is a subclass of "numeric"  and so the
    > "integer become double" part seems unwanted to me.
    > OTOH,  it would really make sense to more formally
    > have the basic subclasses of  "numeric" to be "integer" and "double",
    > and  to let  as(*, "double") to become different to as(*, "numeric")
    > [Again, this is just for the S4 classes and as() coercions, *not* e.g. 
    > for as.numeric() / as.double() !]

    > In the DEPRECATED part of the NEWS for R 2.7.0 (April 2008) we
    > have had

    > o	The S4 pseudo-classes "single" and double have been removed.
    > (The S4 class for a REALSXP is "numeric": for back-compatibility
    > as(x, "double") coerces to "numeric".)

    > I think the removal of "single" was fine, but in hindsight,
    > maybe the removal of "double" -- which was partly broken then --
    > possibly could rather have been a fixup of "double" along the
    > following

    > Current "thought experiment proposal" :

    > 1) "numeric" := {"integer", "double"}   { class - subclasses }
    > 2) as(1L, "numeric")  continues to return 1L .. since integer is
    > one case of "numeric"
    > 3) as(1L, "double")  newly returns 1.0   {and in fact would be
    > "equivalent" to   as.double(1L)}

    > After the above change,  S4  as(*, "double") would correspond to S3 as.double
    > but  as(*, "numeric")  would continue to differ from
    > as.numeric(*), the former *not* changing integers to double.

    > Martin

Also note that e.g.

    class(pi)    would return "double" instead of "numeric"

and this will break all the bad programming style usages of

  if(class(x) == "numeric")

which I tend to see in gazillions of user and even package codes
This bad (aka error prone !)  because "correct" usage would be

  if(inherits(x, "numeric"))

and that of course would *not* break after the change above.

- - - - 

A week later, I'm still pretty convinced it would be worth going
in the direction proposed above. 

But I was actually hoping for some encouragement or "mental support"...
or then to hear why you think the proposition is not good or not
viable ...


    >> On Dec 11, 2015, at 1:25 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

    >>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
    >>>>>>>> on Tue, 8 Dec 2015 15:25:21 +0100 writes:
    >>> 
    >>>>>>>> John Chambers <jmc at r-project.org>
    >>>>>>>> on Mon, 7 Dec 2015 16:05:59 -0800 writes:
    >>> 
    >>>>> We do need an explicit method here, I think.
    >>>>> The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").
    >>> 
    >>>>> Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:
    >>> 
    >>>>>> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
    >>>>> [1] "coerce"
    >>>>>> typeof(as(1L, "numeric"))
    >>>>> [1] "double"
    >>> 
    >>>>> Seems like a reasonable addition to the code, unless someone sees a problem.
    >>>>> John
    >>> 
    >>>> I guess that that some package checks (in CRAN + Bioc + ... -
    >>>> land) will break,
    >>>> but I still think we should add such a coercion to R.
    >>> 
    >>>> Martin
    >>> 
    >>> Hmm...  I've tried to add the above to R
    >>> and do notice that there are consequences that may be larger than
    >>> anticipated:
    >>> 
    >>> Here is example code:
    >>> 
    >>> myN   <- setClass("myN",   contains="numeric")
    >>> myNid <- setClass("myNid", contains="numeric", representation(id="character"))
    >>> NN <-    setClass("NN", representation(x="numeric"))
    >>> 
    >>> (m1 <- myN  (1:3))
    >>> (m2 <- myNid(1:3, id = "i3"))
    >>> tools::assertError(NN (1:3))# in all R versions
    >>> 
    >>> ##                     # current R  |  new R
    >>> ##                     # -----------|----------
    >>> class(getDataPart(m1)) # integer    |  numeric
    >>> class(getDataPart(m2)) # integer    |  numeric
    >>> 
    >>> 
    >>> In other words, with the above setting, the traditional
    >>> gentleperson's agreement in S and R,
    >>> 
    >>> __ "numeric" sometimes conveniently means "integer" or "double"  __
    >>> 
    >>> will be slightly less often used ... which of course may be a
    >>> very good thing.
    >>> 
    >>> However, it breaks strict back compatibility also in cases where
    >>> the previous behavior may have been preferable:
    >>> After all integer vectors need only have the space of doubles.
    >>> 
    >>> Shall we still go ahead and do apply this change to R-devel
    >>> and then all package others will be willing to update where necessary?
    >>> 
    >>> As this may affect the many hundreds of bioconductor packages
    >>> using S4 classes, I am -- exceptionally -- cross posting to the
    >>> bioc-devel list.
    >>> 
    >>> Martin Maechler
    >>> 
    >>> 
    >>>>> On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:
    >>> 
    >>>>>> Perhaps it is not that surprising, given that
    >>>>>> 
>>>>> mode(1L)
    >>>>>> [1] "numeric"
    >>>>>> 
    >>>>>> and
    >>>>>> 
>>>>> is.numeric(1L)
    >>>>>> [1] TRUE
    >>>>>> 
    >>>>>> On the other hand, this is curious, to say the least:
    >>>>>> 
>>>>> is.double(as(1L, "double"))
    >>>>>> [1] FALSE
    >>>>>> 
>>>>> Here's the surprising behavior:
>>>>> 
>>>>> x <- 1L
>>>>> xx <- as(x, "numeric")
>>>>> class(xx)
>>>>> ## [1] "integer"
>>>>> 
>>>>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
>>>>> S4 method for the signature `c("integer", "numeric")`, whose body is
>>>>> copied in below.
>>>>> 
>>>>> function (from, to = "numeric", strict = TRUE)
>>>>> if (strict) {
>>>>> class(from) <- "numeric"
>>>>> from
>>>>> } else from
>>>>> 
>>>>> This in turn does nothing, even when strict=TRUE, because that
>>>>> assignment to class "numeric" has no effect:
>>>>> 
>>>>> x <- 10L
>>>>> class(x) <- "numeric"
>>>>> class(x)
>>>>> [1] "integer"
>>>>> 
>>>>> Is this the desired behavior for `as(x, "numeric")`?
    >>>>>> 
    >>>>>> ______________________________________________
    >>>>>> R-devel at r-project.org mailing list
    >>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >>> 
    >>>>> ______________________________________________
    >>>>> R-devel at r-project.org mailing list
    >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >>> 
    >>>> ______________________________________________
    >>>> R-devel at r-project.org mailing list
    >>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From jmc at r-project.org  Sat Dec 19 19:09:38 2015
From: jmc at r-project.org (John Chambers)
Date: Sat, 19 Dec 2015 10:09:38 -0800
Subject: [Rd] For integer vectors, `as(x, "numeric")` has no effect.
In-Reply-To: <22133.16458.461165.826979@stat.math.ethz.ch>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
	<22118.59473.654693.639907@stat.math.ethz.ch>
	<22122.38537.382484.644230@stat.math.ethz.ch>
	<C5017517-991F-4C5B-A098-6DE85CBE0927@r-project.org>
	<22123.59843.873290.235837@stat.math.ethz.ch>
	<22133.16458.461165.826979@stat.math.ethz.ch>
Message-ID: <203AC39D-1CD2-4E29-BDDB-9D28E68A59B0@r-project.org>

As I tried to say on Dec. 11, there are two levels of "fix":

1.  The fix to the complaint in the OP's subject heading is to conform to the default third argument, strict=TRUE: as(1L, "numeric") == 1.0

This generates some incompatibilities, as for classes that extend "numeric". But still leaves class(1.0) "numeric" and typeof(1.0) "double".

The workaround for class definitions that really need NOT to coerce integers to double is to define a class union, say
  setClassUnion("Number", c("numeric", "integer"))
and use that for the slot.

2.  The "right" concept is arguably that "numeric" is a virtual class with two subclasses, "double" and "integer".  Given a time machine back to < 1998, that would be my choice.  But already in the 1998 S4 book, "numeric" was equated with "double".

so, there it is, IMO.  This is what you get with a successful open-source language:  Much hassle to do the "right thing" after the fact and the more change, the more hassle.

Fix 1. seems to me an actual bug fix, so my inclination would be to go with that (on r-devel), advertising that it may change the effective definition of some classes.

But I can sympathize with choosing 1, 2 or neither.

John

PS:  Until Jan. 4, I may be even poorer at replying than usual, while getting the current book off to the publisher.

On Dec 19, 2015, at 3:32 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>    on Sat, 12 Dec 2015 10:32:51 +0100 writes:
> 
>>>>>> John Chambers <jmc at r-project.org>
>>>>>>    on Fri, 11 Dec 2015 10:11:05 -0800 writes:
> 
>>> Somehow, the most obvious fixes are always back-incompatible these days.
>>> The example intrigued me, so I looked into it a bit (should have been doing something else, but ....)
> 
>>> You're right that this is the proverbial thin-edge-of-the-wedge.
> 
>>> The problem is in setDataPart(), which will be called whenever a class extends one of the vector types.
> 
>>> It does
>>> as(value, dataClass)
>>> The key point is that the third argument to as(), strict=TRUE by default.  So, yes, the change will cause all integer vectors to become double when the class extends "numeric".  Generally, strict=TRUE makes sense here and of course changing THAT would open up yet more incompatibilities.
> 
>>> For back compatibility, one would have to have some special code in setDataPart() for the case of integer/numeric.
> 
>>> John
> 
>>> (Historically, the original sin was probably not making a distinction between "numeric" as a virtual class and "double" as a type/class.)
> 
>> Yes, indeed.  In the mean time, I've seen more cases where
>> "the change will cause all integer vectors to become double when the class  extends "numeric". 
>> seems detrimental.
> 
>> OTOH, I still think we could go in the right direction ---
>> hopefully along the wishes of bioconductor S4 development, see
>> Martin Morgan's e-mail:
> 
>> [This is all S4 - only; should not much affect base R / S3]
>> Currently,   "integer" is a subclass of "numeric"  and so the
>> "integer become double" part seems unwanted to me.
>> OTOH,  it would really make sense to more formally
>> have the basic subclasses of  "numeric" to be "integer" and "double",
>> and  to let  as(*, "double") to become different to as(*, "numeric")
>> [Again, this is just for the S4 classes and as() coercions, *not* e.g. 
>> for as.numeric() / as.double() !]
> 
>> In the DEPRECATED part of the NEWS for R 2.7.0 (April 2008) we
>> have had
> 
>> o	The S4 pseudo-classes "single" and double have been removed.
>> (The S4 class for a REALSXP is "numeric": for back-compatibility
>> as(x, "double") coerces to "numeric".)
> 
>> I think the removal of "single" was fine, but in hindsight,
>> maybe the removal of "double" -- which was partly broken then --
>> possibly could rather have been a fixup of "double" along the
>> following
> 
>> Current "thought experiment proposal" :
> 
>> 1) "numeric" := {"integer", "double"}   { class - subclasses }
>> 2) as(1L, "numeric")  continues to return 1L .. since integer is
>> one case of "numeric"
>> 3) as(1L, "double")  newly returns 1.0   {and in fact would be
>> "equivalent" to   as.double(1L)}
> 
>> After the above change,  S4  as(*, "double") would correspond to S3 as.double
>> but  as(*, "numeric")  would continue to differ from
>> as.numeric(*), the former *not* changing integers to double.
> 
>> Martin
> 
> Also note that e.g.
> 
>    class(pi)    would return "double" instead of "numeric"
> 
> and this will break all the bad programming style usages of
> 
>  if(class(x) == "numeric")
> 
> which I tend to see in gazillions of user and even package codes
> This bad (aka error prone !)  because "correct" usage would be
> 
>  if(inherits(x, "numeric"))
> 
> and that of course would *not* break after the change above.
> 
> - - - - 
> 
> A week later, I'm still pretty convinced it would be worth going
> in the direction proposed above. 
> 
> But I was actually hoping for some encouragement or "mental support"...
> or then to hear why you think the proposition is not good or not
> viable ...
> 
> 
>>> On Dec 11, 2015, at 1:25 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>>>> on Tue, 8 Dec 2015 15:25:21 +0100 writes:
>>>> 
>>>>>>>>> John Chambers <jmc at r-project.org>
>>>>>>>>> on Mon, 7 Dec 2015 16:05:59 -0800 writes:
>>>> 
>>>>>> We do need an explicit method here, I think.
>>>>>> The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").
>>>> 
>>>>>> Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:
>>>> 
>>>>>>> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
>>>>>> [1] "coerce"
>>>>>>> typeof(as(1L, "numeric"))
>>>>>> [1] "double"
>>>> 
>>>>>> Seems like a reasonable addition to the code, unless someone sees a problem.
>>>>>> John
>>>> 
>>>>> I guess that that some package checks (in CRAN + Bioc + ... -
>>>>> land) will break,
>>>>> but I still think we should add such a coercion to R.
>>>> 
>>>>> Martin
>>>> 
>>>> Hmm...  I've tried to add the above to R
>>>> and do notice that there are consequences that may be larger than
>>>> anticipated:
>>>> 
>>>> Here is example code:
>>>> 
>>>> myN   <- setClass("myN",   contains="numeric")
>>>> myNid <- setClass("myNid", contains="numeric", representation(id="character"))
>>>> NN <-    setClass("NN", representation(x="numeric"))
>>>> 
>>>> (m1 <- myN  (1:3))
>>>> (m2 <- myNid(1:3, id = "i3"))
>>>> tools::assertError(NN (1:3))# in all R versions
>>>> 
>>>> ##                     # current R  |  new R
>>>> ##                     # -----------|----------
>>>> class(getDataPart(m1)) # integer    |  numeric
>>>> class(getDataPart(m2)) # integer    |  numeric
>>>> 
>>>> 
>>>> In other words, with the above setting, the traditional
>>>> gentleperson's agreement in S and R,
>>>> 
>>>> __ "numeric" sometimes conveniently means "integer" or "double"  __
>>>> 
>>>> will be slightly less often used ... which of course may be a
>>>> very good thing.
>>>> 
>>>> However, it breaks strict back compatibility also in cases where
>>>> the previous behavior may have been preferable:
>>>> After all integer vectors need only have the space of doubles.
>>>> 
>>>> Shall we still go ahead and do apply this change to R-devel
>>>> and then all package others will be willing to update where necessary?
>>>> 
>>>> As this may affect the many hundreds of bioconductor packages
>>>> using S4 classes, I am -- exceptionally -- cross posting to the
>>>> bioc-devel list.
>>>> 
>>>> Martin Maechler
>>>> 
>>>> 
>>>>>> On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:
>>>> 
>>>>>>> Perhaps it is not that surprising, given that
>>>>>>> 
>>>>>> mode(1L)
>>>>>>> [1] "numeric"
>>>>>>> 
>>>>>>> and
>>>>>>> 
>>>>>> is.numeric(1L)
>>>>>>> [1] TRUE
>>>>>>> 
>>>>>>> On the other hand, this is curious, to say the least:
>>>>>>> 
>>>>>> is.double(as(1L, "double"))
>>>>>>> [1] FALSE
>>>>>>> 
>>>>>> Here's the surprising behavior:
>>>>>> 
>>>>>> x <- 1L
>>>>>> xx <- as(x, "numeric")
>>>>>> class(xx)
>>>>>> ## [1] "integer"
>>>>>> 
>>>>>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
>>>>>> S4 method for the signature `c("integer", "numeric")`, whose body is
>>>>>> copied in below.
>>>>>> 
>>>>>> function (from, to = "numeric", strict = TRUE)
>>>>>> if (strict) {
>>>>>> class(from) <- "numeric"
>>>>>> from
>>>>>> } else from
>>>>>> 
>>>>>> This in turn does nothing, even when strict=TRUE, because that
>>>>>> assignment to class "numeric" has no effect:
>>>>>> 
>>>>>> x <- 10L
>>>>>> class(x) <- "numeric"
>>>>>> class(x)
>>>>>> [1] "integer"
>>>>>> 
>>>>>> Is this the desired behavior for `as(x, "numeric")`?
>>>>>>> 
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>> 
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel


	[[alternative HTML version deleted]]


From aixtools at gmail.com  Mon Dec 21 18:44:55 2015
From: aixtools at gmail.com (Michael Felt)
Date: Mon, 21 Dec 2015 18:44:55 +0100
Subject: [Rd] Assistance much appreciated
In-Reply-To: <5673C349.5080805@gmail.com>
References: <5672EA93.104@gmail.com> <5672EBB2.5090705@gmail.com>
	<5672F74C.70905@gmail.com>
	<651A9020-C94C-4B10-9164-8CC660D13BF0@gmail.com>
	<567305C6.8050808@gmail.com>
	<960B4F41-6E0D-4947-8559-977A0360A6D4@gmail.com>
	<5673C349.5080805@gmail.com>
Message-ID: <56783A97.2060204@gmail.com>

On 2015-12-18 09:26, Michael Felt wrote:
> int
> tre_regcomp(regex_t *preg, const char *regex, int cflags)
> {
> return tre_regncomp(preg, regex, regex ? strlen(regex) : 0, cflags);
> }
I wonder if it could be
Looking here, I saw this line - and I am wondering if L'0' as 64-bit is 
too long, compared to 32-bit, especially since I read somnewhere that 
the strings are being processed byte by byte. (note: on Linux L'0' is 
the same size in both 32 and 64-bit objects).


+3562 wregex[wlen] = L'\0';
+3563 ret = tre_compile(preg, wregex, wlen, cflags);
+3564 free(wregex);
+3565
+3566
+3567
+3568
+3569 return ret;
+3570 }
+3571
"regcomp.i" The cursor is at line 3570 of 3644 --97%-- .


From:
+102 #endif /* TRE_MULTIBYTE */
+103
+104 wregex[wlen] = L'\0';
+105 ret = tre_compile(preg, wregex, wlen, cflags);
+106 xfree(wregex);
+107 #else /* !TRE_WCHAR */
+108 ret = tre_compile(preg, (const tre_char_t *)regex, n, cflags);
+109 #endif /* !TRE_WCHAR */
+110
+111 return ret;
+112 }
"regcomp.c" [Modified] The cursor is at line 112 of 188 --59%-- .
To test for possible differences between AIX 32-bit and AIX 64-bit I 
tried the following program

michael at x071:[/data/prj/cran/tests]cat sizes.c
main()
{
int s0 = sizeof((char) 0);
int s1 = sizeof(0);
int s2 = sizeof('0');
int s3 = sizeof(L'0');

printf("s1: sizeof((char) 0)\t%d\n",s0);
printf("s1: sizeof(0)\t\t%d\n",s1);
printf("s2: sizeof('0')\t\t%d\n",s2);
printf("s3: sizeof(L'0')\t%d\n",s3);
}

On POWER with gcc (Debian)

root at x066:/data/prj/cran/tests# gcc -m32 sizes.c -o sizes
sizes.c: In function ?main?:
sizes.c:8:2: warning: incompatible implicit declaration of built-in 
function ?printf? [enabled by default]
root at x066:/data/prj/cran/tests# ./sizes
s1: sizeof((char) 0) 1
s1: sizeof(0) 4
s2: sizeof('0') 4
s3: sizeof(L'0') 4
root at x066:/data/prj/cran/tests# gcc -m64 sizes.c -o sizes
sizes.c: In function ?main?:
sizes.c:8:2: warning: incompatible implicit declaration of built-in 
function ?printf? [enabled by default]
root at x066:/data/prj/cran/tests# ./sizes
s1: sizeof((char) 0) 1
s1: sizeof(0) 4
s2: sizeof('0') 4
s3: sizeof(L'0') 4

On POWER AIX and gcc:
root at x065:[/data/prj/cran/tests]gcc -maix32 -o sizes_32 sizes.c
sizes.c: In function 'main':
sizes.c:8:2: warning: incompatible implicit declaration of built-in 
function 'printf' [enabled by default]
root at x065:[/data/prj/cran/tests]gcc -maix64 -o sizes_64 sizes.c
sizes.c: In function 'main':
sizes.c:8:2: warning: incompatible implicit declaration of built-in 
function 'printf' [enabled by default]
root at x065:[/data/prj/cran/tests]./sizes_32
s1: sizeof((char) 0) 1
s1: sizeof(0) 4
s2: sizeof('0') 4
s3: sizeof(L'0') 2
root at x065:[/data/prj/cran/tests]./sizes_64
s1: sizeof((char) 0) 1
s1: sizeof(0) 4
s2: sizeof('0') 4
s3: sizeof(L'0') 4

On AIX and xlc

michael at x071:[/data/prj/cran/tests]xlc -q32 -o sizes_32xlc sizes.c
michael at x071:[/data/prj/cran/tests]./sizes_32xlc
s1: sizeof((char) 0) 1
s1: sizeof(0) 4
s2: sizeof('0') 4
s3: sizeof(L'0') 2
michael at x071:[/data/prj/cran/tests]xlc -q64 -o sizes_64xlc sizes.c
michael at x071:[/data/prj/cran/tests]./sizes_64xlc
s1: sizeof((char) 0) 1
s1: sizeof(0) 4
s2: sizeof('0') 4
s3: sizeof(L'0') 4


From patrick.giraudoux at univ-fcomte.fr  Tue Dec 22 09:23:35 2015
From: patrick.giraudoux at univ-fcomte.fr (Patrick Giraudoux)
Date: Tue, 22 Dec 2015 09:23:35 +0100
Subject: [Rd] Summary of,all undefined globals
In-Reply-To: <mailman.13.1450609204.10851.r-devel@r-project.org>
References: <mailman.13.1450609204.10851.r-devel@r-project.org>
Message-ID: <56790887.3090009@univ-fcomte.fr>

Dear Listers,

Kurt (subject "CRAN packages maintained by you" sent on 02/07/2015) was 
mentionning to package maintainers that "with current versions of 
r-devel, one can get a convenient summary of all undefined globals" and 
describing how to get a summary conveniently.

Now I am using R 3.2.3 but cannot get this by using rcmd check --as-cran 
mypackage, the "traditionnal" namespace with obviously incomplete 
declaration going through the check 'checking R code for possible 
problems' with no note.

Can you confirm that the implementation is still NOT in R 3.2.3 and that 
one should still use the current version of r-devel to get a summary of 
undefined globals (through notes after 'checking R code for possible 
problems) ? Is there a way to get it from R 3.2.3 ?

Thanks in advance,

Patrick


From patrick.giraudoux at univ-fcomte.fr  Tue Dec 22 11:36:09 2015
From: patrick.giraudoux at univ-fcomte.fr (Patrick Giraudoux)
Date: Tue, 22 Dec 2015 11:36:09 +0100
Subject: [Rd] Summary of,all undefined globals
In-Reply-To: <56790887.3090009@univ-fcomte.fr>
References: <mailman.13.1450609204.10851.r-devel@r-project.org>
	<56790887.3090009@univ-fcomte.fr>
Message-ID: <56792799.6010506@univ-fcomte.fr>

Sorry to have polluted this list with this request. I realized later it 
was more of the scope of r-package-devel (and that this list do exist). 
Now moved to r-package-devel

Patrick


Le 22/12/2015 09:23, Patrick Giraudoux a ?crit :
> Dear Listers,
>
> Kurt (subject "CRAN packages maintained by you" sent on 02/07/2015) 
> was mentionning to package maintainers that "with current versions of 
> r-devel, one can get a convenient summary of all undefined globals" 
> and describing how to get a summary conveniently.
>
> Now I am using R 3.2.3 but cannot get this by using rcmd check 
> --as-cran mypackage, the "traditionnal" namespace with obviously 
> incomplete declaration going through the check 'checking R code for 
> possible problems' with no note.
>
> Can you confirm that the implementation is still NOT in R 3.2.3 and 
> that one should still use the current version of r-devel to get a 
> summary of undefined globals (through notes after 'checking R code for 
> possible problems) ? Is there a way to get it from R 3.2.3 ?
>
> Thanks in advance,
>
> Patrick
>
>
>
>
>
>
>
>
>
>
>


From james.f.hester at gmail.com  Tue Dec 22 17:28:04 2015
From: james.f.hester at gmail.com (Jim Hester)
Date: Tue, 22 Dec 2015 11:28:04 -0500
Subject: [Rd] unloadNamespace() does not address unevaluated promises in the
 S3 Methods Table
Message-ID: <CAD6tx95oGh5zQQ2239to25_DG2gJ7Tt8+Ueue=X2Qj0C7Rw6QA@mail.gmail.com>

Given the extremely simple package at
https://github.com/jimhester/testUnload, which includes only one S3 method
'print.object' the following code produces a lazy load error from a new R
session (R-devel r69801)

install.packages("testUnload", repos = NULL)
library("testUnload")
unloadNamespace("testUnload")
install.packages("testUnload", repos = NULL)
library("testUnload")
#> Error in get(method, envir = home) :
#>   lazy-load database '{sic}/testUnload/R/testUnload.rdb' is corrupt
#> In addition: Warning message:
#> In get(method, envir = home) : internal error -3 in R_decompress1
#> Error: package or namespace load failed for ?testUnload?

Upon investigation this is because the code in registerS3Methods creates a
promise using 'delayedAssign' for 'print.object' function in the
'.__S3MethodsTable__.' environment within the base environment (which is
where the 'print' generic is defined). (see lines 1387-1489 in
src/library/base/R/namespace.R).

When the second install.packages is called the files are changed before the
original promise is evaluated, which causes the error. An easy way to see
this is to explicitly evaluate the promise prior to the reinstall, which
removes the error.

library("testUnload")
get(".__S3MethodsTable__.", envir = baseenv())$print.object
#> function(x, ...) x
#> <environment: namespace:testUnload>
unloadNamespace("testUnload")
install.packages("testUnload", repos = NULL)
library("testUnload")


Explicitly deleting the promise after unloading the namespace also fixes
this issue.

library("testUnload")
unloadNamespace("testUnload")
rm(list="print.object", envir = get(".__S3MethodsTable__.", envir =
baseenv()))
install.packages("testUnload", repos = NULL)
library("testUnload")


In my opinion, once the namespace is unloaded the corresponding entries
should be removed in the S3 Methods Table by default.

If others agree with this assessment I can try to provide a patch to
'unloadNamespace' to fix this, but I imagine it will be somewhat tricky to
get correct so others more familiar with this code may be better suited
than I.

Jim

	[[alternative HTML version deleted]]


From zhengda1936 at gmail.com  Thu Dec 24 14:54:00 2015
From: zhengda1936 at gmail.com (Da Zheng)
Date: Thu, 24 Dec 2015 08:54:00 -0500
Subject: [Rd] override pmin/pmax for my own matrix
Message-ID: <CAFLer83+2DvP9dvcB7nfTreKodLknoDdKOKTSaTyp6YmQSdtmA@mail.gmail.com>

Hello,

I'm trying to override pmin and pmax for my own matrix. These two
functions have ... as an argument. I tried to override them as
follows:
    setMethod("pmax", class_name, function(x, ..., na.rm) { ... })

I use this way to override primitive functions such as min/max and it
works fine.
But it doesn't work for pmin and pmax. I guess because they are
regular functions?
How do I override a regular function with ... as an argument?

Thanks,
Da


From lawrence.michael at gene.com  Thu Dec 24 15:08:54 2015
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Thu, 24 Dec 2015 06:08:54 -0800
Subject: [Rd] override pmin/pmax for my own matrix
In-Reply-To: <CAFLer83+2DvP9dvcB7nfTreKodLknoDdKOKTSaTyp6YmQSdtmA@mail.gmail.com>
References: <CAFLer83+2DvP9dvcB7nfTreKodLknoDdKOKTSaTyp6YmQSdtmA@mail.gmail.com>
Message-ID: <CAOQ5NyfkOaXGbXjNLXgBPm80k_NbzOrCFeF4sibPhwz3+j5sEA@mail.gmail.com>

Yes, functions like c, min and max are special cases, as they are
primitives. For ordinary functions, you just need to promote them with
"..." as the signature:

setGeneric("pmax", signature="...")
setMethod("pmax", "Class", function(..., na.rm=FALSE) { })

One caveat is that all arguments passed via "..." must derive from the
class specified for "..." in the method signature. At some point we
should solve that by introducing a binary pmin2, pmax2 as we have for
cbind and rbind.


On Thu, Dec 24, 2015 at 5:54 AM, Da Zheng <zhengda1936 at gmail.com> wrote:
> Hello,
>
> I'm trying to override pmin and pmax for my own matrix. These two
> functions have ... as an argument. I tried to override them as
> follows:
>     setMethod("pmax", class_name, function(x, ..., na.rm) { ... })
>
> I use this way to override primitive functions such as min/max and it
> works fine.
> But it doesn't work for pmin and pmax. I guess because they are
> regular functions?
> How do I override a regular function with ... as an argument?
>
> Thanks,
> Da
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From zhengda1936 at gmail.com  Thu Dec 24 20:52:47 2015
From: zhengda1936 at gmail.com (Da Zheng)
Date: Thu, 24 Dec 2015 14:52:47 -0500
Subject: [Rd] override pmin/pmax for my own matrix
In-Reply-To: <CAOQ5NyfkOaXGbXjNLXgBPm80k_NbzOrCFeF4sibPhwz3+j5sEA@mail.gmail.com>
References: <CAFLer83+2DvP9dvcB7nfTreKodLknoDdKOKTSaTyp6YmQSdtmA@mail.gmail.com>
	<CAOQ5NyfkOaXGbXjNLXgBPm80k_NbzOrCFeF4sibPhwz3+j5sEA@mail.gmail.com>
Message-ID: <CAFLer83ruLkqjFtaSbzNffHYeWaKjTdYXt9QDi+NPRDd8wNn7Q@mail.gmail.com>

Thank you. It works!

On Thu, Dec 24, 2015 at 9:08 AM, Michael Lawrence
<lawrence.michael at gene.com> wrote:
> Yes, functions like c, min and max are special cases, as they are
> primitives. For ordinary functions, you just need to promote them with
> "..." as the signature:
>
> setGeneric("pmax", signature="...")
> setMethod("pmax", "Class", function(..., na.rm=FALSE) { })
>
> One caveat is that all arguments passed via "..." must derive from the
> class specified for "..." in the method signature. At some point we
> should solve that by introducing a binary pmin2, pmax2 as we have for
> cbind and rbind.
>
>
> On Thu, Dec 24, 2015 at 5:54 AM, Da Zheng <zhengda1936 at gmail.com> wrote:
>> Hello,
>>
>> I'm trying to override pmin and pmax for my own matrix. These two
>> functions have ... as an argument. I tried to override them as
>> follows:
>>     setMethod("pmax", class_name, function(x, ..., na.rm) { ... })
>>
>> I use this way to override primitive functions such as min/max and it
>> works fine.
>> But it doesn't work for pmin and pmax. I guess because they are
>> regular functions?
>> How do I override a regular function with ... as an argument?
>>
>> Thanks,
>> Da
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From hpages at fredhutch.org  Sat Dec 26 08:51:05 2015
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Fri, 25 Dec 2015 23:51:05 -0800
Subject: [Rd] [Bioc-devel]  For integer vectors, `as(x,
 "numeric")` has no effect.
In-Reply-To: <203AC39D-1CD2-4E29-BDDB-9D28E68A59B0@r-project.org>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
	<22118.59473.654693.639907@stat.math.ethz.ch>
	<22122.38537.382484.644230@stat.math.ethz.ch>
	<C5017517-991F-4C5B-A098-6DE85CBE0927@r-project.org>
	<22123.59843.873290.235837@stat.math.ethz.ch>
	<22133.16458.461165.826979@stat.math.ethz.ch>
	<203AC39D-1CD2-4E29-BDDB-9D28E68A59B0@r-project.org>
Message-ID: <567E46E9.5070408@fredhutch.org>

Or maybe the "right" concept is that "numeric" is a virtual class
with 3 subclasses: "complex", "double", and "integer". Anyway it's
probably too late for implementing the "right" concept so it doesn't
really matter.

Thanks Martin for offering to fix the as(1L, "numeric") bug. Very
much appreciated. I guess that means fixing the class(x) <- "numeric"
bug on integer vectors:

   > x <- 1L
   > class(x) <- "numeric"
   > class(x)
   [1] "integer"

My wish for 2016: that selectMethod() always tells the truth. For
example selectMethod("coerce", c("integer", "numeric")) doesn't
in a fresh session, only after you call as(1L, "numeric")). Full
story here:

   https://stat.ethz.ch/pipermail/r-devel/2010-April/057098.html

Thanks,
H.


On 12/19/2015 10:09 AM, John Chambers wrote:
> As I tried to say on Dec. 11, there are two levels of "fix":
>
> 1.  The fix to the complaint in the OP's subject heading is to conform to the default third argument, strict=TRUE: as(1L, "numeric") == 1.0
>
> This generates some incompatibilities, as for classes that extend "numeric". But still leaves class(1.0) "numeric" and typeof(1.0) "double".
>
> The workaround for class definitions that really need NOT to coerce integers to double is to define a class union, say
>    setClassUnion("Number", c("numeric", "integer"))
> and use that for the slot.
>
> 2.  The "right" concept is arguably that "numeric" is a virtual class with two subclasses, "double" and "integer".  Given a time machine back to < 1998, that would be my choice.  But already in the 1998 S4 book, "numeric" was equated with "double".
>
> so, there it is, IMO.  This is what you get with a successful open-source language:  Much hassle to do the "right thing" after the fact and the more change, the more hassle.
>
> Fix 1. seems to me an actual bug fix, so my inclination would be to go with that (on r-devel), advertising that it may change the effective definition of some classes.
>
> But I can sympathize with choosing 1, 2 or neither.
>
> John
>
> PS:  Until Jan. 4, I may be even poorer at replying than usual, while getting the current book off to the publisher.
>
> On Dec 19, 2015, at 3:32 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>
>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>>     on Sat, 12 Dec 2015 10:32:51 +0100 writes:
>>
>>>>>>> John Chambers <jmc at r-project.org>
>>>>>>>     on Fri, 11 Dec 2015 10:11:05 -0800 writes:
>>
>>>> Somehow, the most obvious fixes are always back-incompatible these days.
>>>> The example intrigued me, so I looked into it a bit (should have been doing something else, but ....)
>>
>>>> You're right that this is the proverbial thin-edge-of-the-wedge.
>>
>>>> The problem is in setDataPart(), which will be called whenever a class extends one of the vector types.
>>
>>>> It does
>>>> as(value, dataClass)
>>>> The key point is that the third argument to as(), strict=TRUE by default.  So, yes, the change will cause all integer vectors to become double when the class extends "numeric".  Generally, strict=TRUE makes sense here and of course changing THAT would open up yet more incompatibilities.
>>
>>>> For back compatibility, one would have to have some special code in setDataPart() for the case of integer/numeric.
>>
>>>> John
>>
>>>> (Historically, the original sin was probably not making a distinction between "numeric" as a virtual class and "double" as a type/class.)
>>
>>> Yes, indeed.  In the mean time, I've seen more cases where
>>> "the change will cause all integer vectors to become double when the class  extends "numeric".
>>> seems detrimental.
>>
>>> OTOH, I still think we could go in the right direction ---
>>> hopefully along the wishes of bioconductor S4 development, see
>>> Martin Morgan's e-mail:
>>
>>> [This is all S4 - only; should not much affect base R / S3]
>>> Currently,   "integer" is a subclass of "numeric"  and so the
>>> "integer become double" part seems unwanted to me.
>>> OTOH,  it would really make sense to more formally
>>> have the basic subclasses of  "numeric" to be "integer" and "double",
>>> and  to let  as(*, "double") to become different to as(*, "numeric")
>>> [Again, this is just for the S4 classes and as() coercions, *not* e.g.
>>> for as.numeric() / as.double() !]
>>
>>> In the DEPRECATED part of the NEWS for R 2.7.0 (April 2008) we
>>> have had
>>
>>> o	The S4 pseudo-classes "single" and double have been removed.
>>> (The S4 class for a REALSXP is "numeric": for back-compatibility
>>> as(x, "double") coerces to "numeric".)
>>
>>> I think the removal of "single" was fine, but in hindsight,
>>> maybe the removal of "double" -- which was partly broken then --
>>> possibly could rather have been a fixup of "double" along the
>>> following
>>
>>> Current "thought experiment proposal" :
>>
>>> 1) "numeric" := {"integer", "double"}   { class - subclasses }
>>> 2) as(1L, "numeric")  continues to return 1L .. since integer is
>>> one case of "numeric"
>>> 3) as(1L, "double")  newly returns 1.0   {and in fact would be
>>> "equivalent" to   as.double(1L)}
>>
>>> After the above change,  S4  as(*, "double") would correspond to S3 as.double
>>> but  as(*, "numeric")  would continue to differ from
>>> as.numeric(*), the former *not* changing integers to double.
>>
>>> Martin
>>
>> Also note that e.g.
>>
>>     class(pi)    would return "double" instead of "numeric"
>>
>> and this will break all the bad programming style usages of
>>
>>   if(class(x) == "numeric")
>>
>> which I tend to see in gazillions of user and even package codes
>> This bad (aka error prone !)  because "correct" usage would be
>>
>>   if(inherits(x, "numeric"))
>>
>> and that of course would *not* break after the change above.
>>
>> - - - -
>>
>> A week later, I'm still pretty convinced it would be worth going
>> in the direction proposed above.
>>
>> But I was actually hoping for some encouragement or "mental support"...
>> or then to hear why you think the proposition is not good or not
>> viable ...
>>
>>
>>>> On Dec 11, 2015, at 1:25 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>
>>>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>>>>> on Tue, 8 Dec 2015 15:25:21 +0100 writes:
>>>>>
>>>>>>>>>> John Chambers <jmc at r-project.org>
>>>>>>>>>> on Mon, 7 Dec 2015 16:05:59 -0800 writes:
>>>>>
>>>>>>> We do need an explicit method here, I think.
>>>>>>> The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").
>>>>>
>>>>>>> Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:
>>>>>
>>>>>>>> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
>>>>>>> [1] "coerce"
>>>>>>>> typeof(as(1L, "numeric"))
>>>>>>> [1] "double"
>>>>>
>>>>>>> Seems like a reasonable addition to the code, unless someone sees a problem.
>>>>>>> John
>>>>>
>>>>>> I guess that that some package checks (in CRAN + Bioc + ... -
>>>>>> land) will break,
>>>>>> but I still think we should add such a coercion to R.
>>>>>
>>>>>> Martin
>>>>>
>>>>> Hmm...  I've tried to add the above to R
>>>>> and do notice that there are consequences that may be larger than
>>>>> anticipated:
>>>>>
>>>>> Here is example code:
>>>>>
>>>>> myN   <- setClass("myN",   contains="numeric")
>>>>> myNid <- setClass("myNid", contains="numeric", representation(id="character"))
>>>>> NN <-    setClass("NN", representation(x="numeric"))
>>>>>
>>>>> (m1 <- myN  (1:3))
>>>>> (m2 <- myNid(1:3, id = "i3"))
>>>>> tools::assertError(NN (1:3))# in all R versions
>>>>>
>>>>> ##                     # current R  |  new R
>>>>> ##                     # -----------|----------
>>>>> class(getDataPart(m1)) # integer    |  numeric
>>>>> class(getDataPart(m2)) # integer    |  numeric
>>>>>
>>>>>
>>>>> In other words, with the above setting, the traditional
>>>>> gentleperson's agreement in S and R,
>>>>>
>>>>> __ "numeric" sometimes conveniently means "integer" or "double"  __
>>>>>
>>>>> will be slightly less often used ... which of course may be a
>>>>> very good thing.
>>>>>
>>>>> However, it breaks strict back compatibility also in cases where
>>>>> the previous behavior may have been preferable:
>>>>> After all integer vectors need only have the space of doubles.
>>>>>
>>>>> Shall we still go ahead and do apply this change to R-devel
>>>>> and then all package others will be willing to update where necessary?
>>>>>
>>>>> As this may affect the many hundreds of bioconductor packages
>>>>> using S4 classes, I am -- exceptionally -- cross posting to the
>>>>> bioc-devel list.
>>>>>
>>>>> Martin Maechler
>>>>>
>>>>>
>>>>>>> On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:
>>>>>
>>>>>>>> Perhaps it is not that surprising, given that
>>>>>>>>
>>>>>>> mode(1L)
>>>>>>>> [1] "numeric"
>>>>>>>>
>>>>>>>> and
>>>>>>>>
>>>>>>> is.numeric(1L)
>>>>>>>> [1] TRUE
>>>>>>>>
>>>>>>>> On the other hand, this is curious, to say the least:
>>>>>>>>
>>>>>>> is.double(as(1L, "double"))
>>>>>>>> [1] FALSE
>>>>>>>>
>>>>>>> Here's the surprising behavior:
>>>>>>>
>>>>>>> x <- 1L
>>>>>>> xx <- as(x, "numeric")
>>>>>>> class(xx)
>>>>>>> ## [1] "integer"
>>>>>>>
>>>>>>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
>>>>>>> S4 method for the signature `c("integer", "numeric")`, whose body is
>>>>>>> copied in below.
>>>>>>>
>>>>>>> function (from, to = "numeric", strict = TRUE)
>>>>>>> if (strict) {
>>>>>>> class(from) <- "numeric"
>>>>>>> from
>>>>>>> } else from
>>>>>>>
>>>>>>> This in turn does nothing, even when strict=TRUE, because that
>>>>>>> assignment to class "numeric" has no effect:
>>>>>>>
>>>>>>> x <- 10L
>>>>>>> class(x) <- "numeric"
>>>>>>> class(x)
>>>>>>> [1] "integer"
>>>>>>>
>>>>>>> Is this the desired behavior for `as(x, "numeric")`?
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> Bioc-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/bioc-devel
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From jmc at r-project.org  Sat Dec 26 19:07:29 2015
From: jmc at r-project.org (John Chambers)
Date: Sat, 26 Dec 2015 10:07:29 -0800
Subject: [Rd] [Bioc-devel]  For integer vectors, `as(x,
	"numeric")` has no effect.
In-Reply-To: <567E46E9.5070408@fredhutch.org>
References: <CAOwKfPTq9TZaV6j9KxbpFuDpZdyskDB9egL7B911QP3oaR6vOw@mail.gmail.com>
	<56661824.9020707@gmail.com>
	<16F6D0AF-6667-45CF-9CBF-6BC19D514951@r-project.org>
	<22118.59473.654693.639907@stat.math.ethz.ch>
	<22122.38537.382484.644230@stat.math.ethz.ch>
	<C5017517-991F-4C5B-A098-6DE85CBE0927@r-project.org>
	<22123.59843.873290.235837@stat.math.ethz.ch>
	<22133.16458.461165.826979@stat.math.ethz.ch>
	<203AC39D-1CD2-4E29-BDDB-9D28E68A59B0@r-project.org>
	<567E46E9.5070408@fredhutch.org>
Message-ID: <43D9C2F2-2E3A-4224-9A55-DE5021DC0FE5@r-project.org>

Re: coerce() methods.

Important to realize that as() does not call selectMethod() in the standard way, but restricts inheritance to the first argument:
               asMethod <- selectMethod("coerce", sig, optional = TRUE, 
                  c(from = TRUE, to = FALSE), fdef = coerceFun, 
A valid comparison would have to take account of this.

Once the method has been _correctly_ selected, it is stored in the internal table and therefore  will be returned by .findMethodInTable without repeating a search.

John

On Dec 25, 2015, at 11:51 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:

> Or maybe the "right" concept is that "numeric" is a virtual class
> with 3 subclasses: "complex", "double", and "integer". Anyway it's
> probably too late for implementing the "right" concept so it doesn't
> really matter.
> 
> Thanks Martin for offering to fix the as(1L, "numeric") bug. Very
> much appreciated. I guess that means fixing the class(x) <- "numeric"
> bug on integer vectors:
> 
>  > x <- 1L
>  > class(x) <- "numeric"
>  > class(x)
>  [1] "integer"
> 
> My wish for 2016: that selectMethod() always tells the truth. For
> example selectMethod("coerce", c("integer", "numeric")) doesn't
> in a fresh session, only after you call as(1L, "numeric")). Full
> story here:
> 
>  https://stat.ethz.ch/pipermail/r-devel/2010-April/057098.html
> 
> Thanks,
> H.
> 
> 
> On 12/19/2015 10:09 AM, John Chambers wrote:
>> As I tried to say on Dec. 11, there are two levels of "fix":
>> 
>> 1.  The fix to the complaint in the OP's subject heading is to conform to the default third argument, strict=TRUE: as(1L, "numeric") == 1.0
>> 
>> This generates some incompatibilities, as for classes that extend "numeric". But still leaves class(1.0) "numeric" and typeof(1.0) "double".
>> 
>> The workaround for class definitions that really need NOT to coerce integers to double is to define a class union, say
>>   setClassUnion("Number", c("numeric", "integer"))
>> and use that for the slot.
>> 
>> 2.  The "right" concept is arguably that "numeric" is a virtual class with two subclasses, "double" and "integer".  Given a time machine back to < 1998, that would be my choice.  But already in the 1998 S4 book, "numeric" was equated with "double".
>> 
>> so, there it is, IMO.  This is what you get with a successful open-source language:  Much hassle to do the "right thing" after the fact and the more change, the more hassle.
>> 
>> Fix 1. seems to me an actual bug fix, so my inclination would be to go with that (on r-devel), advertising that it may change the effective definition of some classes.
>> 
>> But I can sympathize with choosing 1, 2 or neither.
>> 
>> John
>> 
>> PS:  Until Jan. 4, I may be even poorer at replying than usual, while getting the current book off to the publisher.
>> 
>> On Dec 19, 2015, at 3:32 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>> 
>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>>>    on Sat, 12 Dec 2015 10:32:51 +0100 writes:
>>> 
>>>>>>>> John Chambers <jmc at r-project.org>
>>>>>>>>    on Fri, 11 Dec 2015 10:11:05 -0800 writes:
>>> 
>>>>> Somehow, the most obvious fixes are always back-incompatible these days.
>>>>> The example intrigued me, so I looked into it a bit (should have been doing something else, but ....)
>>> 
>>>>> You're right that this is the proverbial thin-edge-of-the-wedge.
>>> 
>>>>> The problem is in setDataPart(), which will be called whenever a class extends one of the vector types.
>>> 
>>>>> It does
>>>>> as(value, dataClass)
>>>>> The key point is that the third argument to as(), strict=TRUE by default.  So, yes, the change will cause all integer vectors to become double when the class extends "numeric".  Generally, strict=TRUE makes sense here and of course changing THAT would open up yet more incompatibilities.
>>> 
>>>>> For back compatibility, one would have to have some special code in setDataPart() for the case of integer/numeric.
>>> 
>>>>> John
>>> 
>>>>> (Historically, the original sin was probably not making a distinction between "numeric" as a virtual class and "double" as a type/class.)
>>> 
>>>> Yes, indeed.  In the mean time, I've seen more cases where
>>>> "the change will cause all integer vectors to become double when the class  extends "numeric".
>>>> seems detrimental.
>>> 
>>>> OTOH, I still think we could go in the right direction ---
>>>> hopefully along the wishes of bioconductor S4 development, see
>>>> Martin Morgan's e-mail:
>>> 
>>>> [This is all S4 - only; should not much affect base R / S3]
>>>> Currently,   "integer" is a subclass of "numeric"  and so the
>>>> "integer become double" part seems unwanted to me.
>>>> OTOH,  it would really make sense to more formally
>>>> have the basic subclasses of  "numeric" to be "integer" and "double",
>>>> and  to let  as(*, "double") to become different to as(*, "numeric")
>>>> [Again, this is just for the S4 classes and as() coercions, *not* e.g.
>>>> for as.numeric() / as.double() !]
>>> 
>>>> In the DEPRECATED part of the NEWS for R 2.7.0 (April 2008) we
>>>> have had
>>> 
>>>> o	The S4 pseudo-classes "single" and double have been removed.
>>>> (The S4 class for a REALSXP is "numeric": for back-compatibility
>>>> as(x, "double") coerces to "numeric".)
>>> 
>>>> I think the removal of "single" was fine, but in hindsight,
>>>> maybe the removal of "double" -- which was partly broken then --
>>>> possibly could rather have been a fixup of "double" along the
>>>> following
>>> 
>>>> Current "thought experiment proposal" :
>>> 
>>>> 1) "numeric" := {"integer", "double"}   { class - subclasses }
>>>> 2) as(1L, "numeric")  continues to return 1L .. since integer is
>>>> one case of "numeric"
>>>> 3) as(1L, "double")  newly returns 1.0   {and in fact would be
>>>> "equivalent" to   as.double(1L)}
>>> 
>>>> After the above change,  S4  as(*, "double") would correspond to S3 as.double
>>>> but  as(*, "numeric")  would continue to differ from
>>>> as.numeric(*), the former *not* changing integers to double.
>>> 
>>>> Martin
>>> 
>>> Also note that e.g.
>>> 
>>>    class(pi)    would return "double" instead of "numeric"
>>> 
>>> and this will break all the bad programming style usages of
>>> 
>>>  if(class(x) == "numeric")
>>> 
>>> which I tend to see in gazillions of user and even package codes
>>> This bad (aka error prone !)  because "correct" usage would be
>>> 
>>>  if(inherits(x, "numeric"))
>>> 
>>> and that of course would *not* break after the change above.
>>> 
>>> - - - -
>>> 
>>> A week later, I'm still pretty convinced it would be worth going
>>> in the direction proposed above.
>>> 
>>> But I was actually hoping for some encouragement or "mental support"...
>>> or then to hear why you think the proposition is not good or not
>>> viable ...
>>> 
>>> 
>>>>> On Dec 11, 2015, at 1:25 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>> 
>>>>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>>>>>> on Tue, 8 Dec 2015 15:25:21 +0100 writes:
>>>>>> 
>>>>>>>>>>> John Chambers <jmc at r-project.org>
>>>>>>>>>>> on Mon, 7 Dec 2015 16:05:59 -0800 writes:
>>>>>> 
>>>>>>>> We do need an explicit method here, I think.
>>>>>>>> The issue is that as() uses methods for the generic function coerce() but cannot use inheritance in the usual way (if it did, you would be immediately back with no change, since "integer" inherits from "numeric").
>>>>>> 
>>>>>>>> Copying in the general method for coercing to "numeric" as an explicit method for "integer" gives the expected result:
>>>>>> 
>>>>>>>>> setMethod("coerce", c("integer", "numeric"), getMethod("coerce", c("ANY", "numeric")))
>>>>>>>> [1] "coerce"
>>>>>>>>> typeof(as(1L, "numeric"))
>>>>>>>> [1] "double"
>>>>>> 
>>>>>>>> Seems like a reasonable addition to the code, unless someone sees a problem.
>>>>>>>> John
>>>>>> 
>>>>>>> I guess that that some package checks (in CRAN + Bioc + ... -
>>>>>>> land) will break,
>>>>>>> but I still think we should add such a coercion to R.
>>>>>> 
>>>>>>> Martin
>>>>>> 
>>>>>> Hmm...  I've tried to add the above to R
>>>>>> and do notice that there are consequences that may be larger than
>>>>>> anticipated:
>>>>>> 
>>>>>> Here is example code:
>>>>>> 
>>>>>> myN   <- setClass("myN",   contains="numeric")
>>>>>> myNid <- setClass("myNid", contains="numeric", representation(id="character"))
>>>>>> NN <-    setClass("NN", representation(x="numeric"))
>>>>>> 
>>>>>> (m1 <- myN  (1:3))
>>>>>> (m2 <- myNid(1:3, id = "i3"))
>>>>>> tools::assertError(NN (1:3))# in all R versions
>>>>>> 
>>>>>> ##                     # current R  |  new R
>>>>>> ##                     # -----------|----------
>>>>>> class(getDataPart(m1)) # integer    |  numeric
>>>>>> class(getDataPart(m2)) # integer    |  numeric
>>>>>> 
>>>>>> 
>>>>>> In other words, with the above setting, the traditional
>>>>>> gentleperson's agreement in S and R,
>>>>>> 
>>>>>> __ "numeric" sometimes conveniently means "integer" or "double"  __
>>>>>> 
>>>>>> will be slightly less often used ... which of course may be a
>>>>>> very good thing.
>>>>>> 
>>>>>> However, it breaks strict back compatibility also in cases where
>>>>>> the previous behavior may have been preferable:
>>>>>> After all integer vectors need only have the space of doubles.
>>>>>> 
>>>>>> Shall we still go ahead and do apply this change to R-devel
>>>>>> and then all package others will be willing to update where necessary?
>>>>>> 
>>>>>> As this may affect the many hundreds of bioconductor packages
>>>>>> using S4 classes, I am -- exceptionally -- cross posting to the
>>>>>> bioc-devel list.
>>>>>> 
>>>>>> Martin Maechler
>>>>>> 
>>>>>> 
>>>>>>>> On Dec 7, 2015, at 3:37 PM, Benjamin Tyner <btyner at gmail.com> wrote:
>>>>>> 
>>>>>>>>> Perhaps it is not that surprising, given that
>>>>>>>>> 
>>>>>>>> mode(1L)
>>>>>>>>> [1] "numeric"
>>>>>>>>> 
>>>>>>>>> and
>>>>>>>>> 
>>>>>>>> is.numeric(1L)
>>>>>>>>> [1] TRUE
>>>>>>>>> 
>>>>>>>>> On the other hand, this is curious, to say the least:
>>>>>>>>> 
>>>>>>>> is.double(as(1L, "double"))
>>>>>>>>> [1] FALSE
>>>>>>>>> 
>>>>>>>> Here's the surprising behavior:
>>>>>>>> 
>>>>>>>> x <- 1L
>>>>>>>> xx <- as(x, "numeric")
>>>>>>>> class(xx)
>>>>>>>> ## [1] "integer"
>>>>>>>> 
>>>>>>>> It occurs because the call to `as(x, "numeric")` dispatches the coerce
>>>>>>>> S4 method for the signature `c("integer", "numeric")`, whose body is
>>>>>>>> copied in below.
>>>>>>>> 
>>>>>>>> function (from, to = "numeric", strict = TRUE)
>>>>>>>> if (strict) {
>>>>>>>> class(from) <- "numeric"
>>>>>>>> from
>>>>>>>> } else from
>>>>>>>> 
>>>>>>>> This in turn does nothing, even when strict=TRUE, because that
>>>>>>>> assignment to class "numeric" has no effect:
>>>>>>>> 
>>>>>>>> x <- 10L
>>>>>>>> class(x) <- "numeric"
>>>>>>>> class(x)
>>>>>>>> [1] "integer"
>>>>>>>> 
>>>>>>>> Is this the desired behavior for `as(x, "numeric")`?
>>>>>>>>> 
>>>>>>>>> ______________________________________________
>>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>> 
>>>>>>>> ______________________________________________
>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>> 
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> Bioc-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/bioc-devel
>> 
> 
> -- 
> Herv? Pag?s
> 
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
> 
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


	[[alternative HTML version deleted]]


From aixtools at gmail.com  Tue Dec 29 11:02:51 2015
From: aixtools at gmail.com (Michael Felt)
Date: Tue, 29 Dec 2015 11:02:51 +0100
Subject: [Rd] R,
 AIX 64-bit builds - trying to understand root cause for message:
 "Error: Line starting 'Package: tools ...' is malformed!"
Message-ID: <56825A4B.7010508@gmail.com>

This seems to be a problem that goes back a long time - and I hope 
someone who understands what tre is suppossed to be doing will look at this.

A short history of other people who have reported on this on different 
versions of AIX. I shall only add that I get the same results on AIX 5.3 
TL7, AIX 6.1 TL9 and AIX 7.1 TL3.

Basically, with settings that work for AIX and 32-bit - the only changes 
being
-maix32 becomes -maix64
and
export OBJECT_MODE=32 becomes export OBJECT_MODE=64

Then to shorten the 'make' bla bla, first run just make, then

cd src/library/tools
make -s sysdata

http://article.gmane.org/gmane.comp.lang.r.devel/38817/match=package+tools+malformed
http://article.gmane.org/gmane.comp.lang.r.devel/36886/match=package+tools+malformed
http://article.gmane.org/gmane.comp.lang.r.devel/23372/match=package+tools+malformed 
Date: 2010-01-25 06:55:41 GMT (5 years, 48 weeks, 1 day, 20 hours and 30 
minutes ago)

To that, to get debug data, I have

* added -DTRE_DUGUG to src/extra/tre/Makefile # ALL_CFLAGS = 
$(ALL_CFLAGS_LO) -DTRE_DEBUG
* rm src/extra/tre/tre-match-parallel.o
* find . -name \*.so -exec rm {} \;
* make
* cd src/library/tools
* make -s sysdata

Attached are the two script files of the screen output. The 32-bit one 
is more verbose - and contains magically lines such as:
    found match 3037fd14 (while "found" does not occur in the 64-bit output)

root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]wc 
/tmp/sysdata.??.*
      4730   14123  139916 /tmp/sysdata.32.text
      1312    3688   40528 /tmp/sysdata.64.text
      6042   17811  180444 total

root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]grep -c found 
/tmp/sysdata.??.*
/tmp/sysdata.32.text:19
/tmp/sysdata.64.text:0


Hope this brings us (or me), closer to a resolution to an old concern.

And, best wishes for the new year!

Michael



From bbolker at gmail.com  Wed Dec 30 02:45:52 2015
From: bbolker at gmail.com (Ben Bolker)
Date: Tue, 29 Dec 2015 20:45:52 -0500
Subject: [Rd] typo in src/library/stats/man/family.Rd: names of 'validmu'
 and 'valideta' ??
Message-ID: <CABghstQEwP_wihjv=X2bffHiYq2XoDH2JHLYp9L+rb0jtEzceg@mail.gmail.com>

under "Details" (version 2015-11-29 r69717; not quite cutting-edge,
but nothing has changed in src/library/stats/man/family.Rd in 5 months
[sorry for using the Github mirror, but I prefer the interface ...
<https://github.com/wch/r-source/blob/trunk/src/library/stats/man/family.Rd>])
it says:

valid.mu: logical function.  Returns ?TRUE? if a mean vector ?mu? is
          within the domain of ?variance?.

valid.eta: logical function.  Returns ?TRUE? if a linear predictor
          ?eta? is within the domain of ?linkinv?.

However, the real names of these elements are "validmu" and "valideta"
(no dots); try names(poisson()) or names(binomial()) and see ...

   Can someone on R-core fix this and save me the trouble of filing a
bug report ... ?

  Or have I misunderstood something?

  cheers
    Ben Bolker


From dstr7320 at uni.sydney.edu.au  Wed Dec 30 06:00:03 2015
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Wed, 30 Dec 2015 05:00:03 +0000
Subject: [Rd] URW Fonts Description in Installation and Administration Manual
Message-ID: <SN1PR0101MB1439CEE17F9BA8237DD00B51CDFD0@SN1PR0101MB1439.prod.exchangelabs.com>

Good day,

In section A.2, the manual advises "Linux users will want the urw-fonts package". However, this package only seems to be available for RedHat Linux and Fedora Linux. What about for Debian or Ubuntu ? There is no urw-fonts package for them. Are there any other packages not mentioned that are important for these two distributions ?

--------------------------------------
Dario Strbenac
PhD Student
University of Sydney
Camperdown NSW 2050
Australia

From aixtools at gmail.com  Wed Dec 30 09:58:06 2015
From: aixtools at gmail.com (Michael Felt)
Date: Wed, 30 Dec 2015 09:58:06 +0100
Subject: [Rd] R,
 AIX 64-bit builds - trying to understand root cause for message:
 "Error: Line starting 'Package: tools ...' is malformed!"
In-Reply-To: <56825A4B.7010508@gmail.com>
References: <56825A4B.7010508@gmail.com>
Message-ID: <56839C9E.2010401@gmail.com>

On 2015-12-29 11:02, Michael Felt wrote:
> This seems to be a problem that goes back a long time - and I hope 
> someone who understands what tre is suppossed to be doing will look at 
> this.
>
> A short history of other people who have reported on this on different 
> versions of AIX. I shall only add that I get the same results on AIX 
> 5.3 TL7, AIX 6.1 TL9 and AIX 7.1 TL3.
>
> Basically, with settings that work for AIX and 32-bit - the only 
> changes being
> -maix32 becomes -maix64
> and
> export OBJECT_MODE=32 becomes export OBJECT_MODE=64
>
> Then to shorten the 'make' bla bla, first run just make, then
>
> cd src/library/tools
> make -s sysdata
>
> http://article.gmane.org/gmane.comp.lang.r.devel/38817/match=package+tools+malformed 
>
> http://article.gmane.org/gmane.comp.lang.r.devel/36886/match=package+tools+malformed 
>
> http://article.gmane.org/gmane.comp.lang.r.devel/23372/match=package+tools+malformed 
> Date: 2010-01-25 06:55:41 GMT (5 years, 48 weeks, 1 day, 20 hours and 
> 30 minutes ago)
>
> To that, to get debug data, I have
>
> * added -DTRE_DUGUG to src/extra/tre/Makefile # ALL_CFLAGS = 
> $(ALL_CFLAGS_LO) -DTRE_DEBUG
> * rm src/extra/tre/tre-match-parallel.o
> * find . -name \*.so -exec rm {} \;
> * make
> * cd src/library/tools
> * make -s sysdata
>
> Attached are the two script files of the screen output. The 32-bit one 
> is more verbose - and contains magically lines such as:
>    found match 3037fd14 (while "found" does not occur in the 64-bit 
> output)
>
> root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]wc 
> /tmp/sysdata.??.*
>      4730   14123  139916 /tmp/sysdata.32.text
>      1312    3688   40528 /tmp/sysdata.64.text
>      6042   17811  180444 total
>
> root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]grep -c 
> found /tmp/sysdata.??.*
> /tmp/sysdata.32.text:19
> /tmp/sysdata.64.text:0
>
>
> Hope this brings us (or me), closer to a resolution to an old concern.
>
> And, best wishes for the new year!
>
> Michael
>
>
Still hoping for someones curiosity/willingness.

The differences show up in the first comparision that is made (of the 
string "3.2.3" it seems) - 32-bit is on the left, 64-bit on the right.

Script command is started on Tue Dec 29 08:39:16 UTC 
2015.                     |  Script command is started on Tue Dec 29 
08:39:56 UTC 2015.
root at x069:[/data/prj/cran/32/R-aix-3.2.3/src/library/tools]make -s 
sysdata     |  
root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]make -s sysdata
installing 
'sysdata.rda'                                                       |  
installing 'sysdata.rda'
tre_tnfa_run_parallel, input type 
1                                            |  tre_tnfa_run_parallel, 
input type 1
length: 
-1                                                                     
|  length: -1
pos:chr/code | states and 
tags                                                 |  pos:chr/code | 
states and tags
-------------+------------------------------------------------                 
|  -------------+------------------------------------------------
  init > 30380200 3038014c 
30380098                                             |   init > 
110cc3040 110cc2f28 110cc2e10
match end offset = 
-1                                                          |  match end 
offset = -1
tre_tnfa_run_parallel, input type 
1                                            |  tre_tnfa_run_parallel, 
input type 1
length: 
-1                                                                     
|  length: -1
pos:chr/code | states and 
tags                                                 |  pos:chr/code | 
states and tags
-------------+------------------------------------------------                 
|  -------------+------------------------------------------------
  init > 
3037fb88                                                               
|   init > 110cc3310
   0: 3/00051 | 
3037fb88/0:0                                                    |    0: 
3/00051 | 110cc3310/0:0
   1: ./00046 | 
3037fb88/0:0                                                    |    1: 
./00046 | 110cc3310/0:0
  init > 
3037fb88                                                               
|   init > 110cc3310
   1: ./00046 | 
3037fb88/0:1                                                    |    1: 
./00046 | 110cc3310/0:1
   2: 2/00050 | 
3037fb88/0:1                                                    |    2: 
2/00050 | 110cc3310/0:1
assertion 
failed                                                               |  
assertion failed
  init > 
3037fb88                                                               
|   init > 110cc3310
   2: 2/00050 | 3037fc18/0:1 
3037fb88/0:2                                       |    2: 2/00050 | 
110cc33f0/0:1 110cc3310/0:2
   3: ./00046 | 3037fc18/0:1 
3037fb88/0:2                                       |    3: ./00046 | 
110cc33f0/0:1 110cc3310/0:2
assertion failed                           *** DIFFERENCE 
***                  |   init > 110cc3310
  init > 
3037fb88                                                               
|    3: ./00046 | 110cc3310/0:3
   3: ./00046 | 3037fc18/0:1 
3037fb88/0:3                                       |    4: 3/00051 | 
110cc3310/0:3
   4: 3/00051 | 3037fc18/0:1 
3037fb88/0:3                                       |  assertion failed
assertion 
failed                                                               |   
init > 110cc3310
  init > 
3037fb88                                                               
|    4: 3/00051 | 110cc33f0/0:3 110cc3310/0:4
   4: 3/00051 | 3037fc18/0:3 
3037fb88/0:4                                       |    5: /00000 | 
110cc33f0/0:3 110cc3310/0:4
   5: /00000 | 3037fc18/0:3 3037fb88/0:4 |   init > 110cc3310
   found match 3037fd14 *** DIFFERENCE ***                   |  match 
end offset = -1
match end offset = 5 *** DIFFERENCE ***                   |  
tre_tnfa_run_parallel, input type 1
tre_tnfa_run_parallel, input type 
1                                            |  length: -1
length: 
-1                                                                     
|  pos:chr/code | states and tags
pos:chr/code | states and 
tags                                                 |  
-------------+------------------------------------------------
-------------+------------------------------------------------                 
|   init > 110cc4780 110cc4668 110cc4550
  init > 303811c0 3038110c 
30381058                                             |  match end offset 
= -1
match end offset = 
-1                                                          |  
tre_tnfa_run_parallel, input type 1
tre_tnfa_run_parallel, input type 
1                                            |  length: -1
length: 
-1                                                                     
|  pos:chr/code | states and tags
pos:chr/code | states and 
tags                                                 |  
-------------+------------------------------------------------
-------------+------------------------------------------------                 
|   init > 110cc5700 110cc55e8 110cc54d0


From edd at debian.org  Wed Dec 30 12:44:29 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 30 Dec 2015 05:44:29 -0600
Subject: [Rd] URW Fonts Description in Installation and Administration
	Manual
In-Reply-To: <SN1PR0101MB1439CEE17F9BA8237DD00B51CDFD0@SN1PR0101MB1439.prod.exchangelabs.com>
References: <SN1PR0101MB1439CEE17F9BA8237DD00B51CDFD0@SN1PR0101MB1439.prod.exchangelabs.com>
Message-ID: <22147.50077.339178.776971@max.nulle.part>


On 30 December 2015 at 05:00, Dario Strbenac wrote:
| Good day,
| 
| In section A.2, the manual advises "Linux users will want the urw-fonts package". However, this package only seems to be available for RedHat Linux and Fedora Linux. What about for Debian or Ubuntu ? There is no urw-fonts package for them. Are there any other packages not mentioned that are important for these two distributions ?

edd at max:~$ apt-cache search urw | grep texlive
texlive-fonts-recommended - TeX Live: Recommended fonts
texlive-fonts-extra - TeX Live: Additional fonts
edd at max:~$ 

Both packages list URW fonts promimently in their Description:

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Wed Dec 30 14:16:21 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 30 Dec 2015 08:16:21 -0500
Subject: [Rd] typo in src/library/stats/man/family.Rd: names of
 'validmu' and 'valideta' ??
In-Reply-To: <CABghstQEwP_wihjv=X2bffHiYq2XoDH2JHLYp9L+rb0jtEzceg@mail.gmail.com>
References: <CABghstQEwP_wihjv=X2bffHiYq2XoDH2JHLYp9L+rb0jtEzceg@mail.gmail.com>
Message-ID: <5683D925.8020709@gmail.com>

On 29/12/2015 8:45 PM, Ben Bolker wrote:
> under "Details" (version 2015-11-29 r69717; not quite cutting-edge,
> but nothing has changed in src/library/stats/man/family.Rd in 5 months
> [sorry for using the Github mirror, but I prefer the interface ...
> <https://github.com/wch/r-source/blob/trunk/src/library/stats/man/family.Rd>])
> it says:
>
> valid.mu: logical function.  Returns ?TRUE? if a mean vector ?mu? is
>            within the domain of ?variance?.
>
> valid.eta: logical function.  Returns ?TRUE? if a linear predictor
>            ?eta? is within the domain of ?linkinv?.
>
> However, the real names of these elements are "validmu" and "valideta"
> (no dots); try names(poisson()) or names(binomial()) and see ...
>
>     Can someone on R-core fix this and save me the trouble of filing a
> bug report ... ?
>
>    Or have I misunderstood something?

I don't think so.  It's fixed now.

Duncan Murdoch


From rdiaz02 at gmail.com  Wed Dec 30 20:07:21 2015
From: rdiaz02 at gmail.com (Ramon Diaz-Uriarte)
Date: Wed, 30 Dec 2015 20:07:21 +0100
Subject: [Rd] URW Fonts Description in Installation and Administration
	Manual
In-Reply-To: <22147.50077.339178.776971@max.nulle.part>
References: <SN1PR0101MB1439CEE17F9BA8237DD00B51CDFD0@SN1PR0101MB1439.prod.exchangelabs.com>
	<22147.50077.339178.776971@max.nulle.part>
Message-ID: <87d1tn3gd2.fsf@gmail.com>




On Wed, 30-12-2015, at 12:44, Dirk Eddelbuettel <edd at debian.org> wrote:
> On 30 December 2015 at 05:00, Dario Strbenac wrote:
> | Good day,
> | 
> | In section A.2, the manual advises "Linux users will want the urw-fonts package". However, this package only seems to be available for RedHat Linux and Fedora Linux. What about for Debian or Ubuntu ? There is no urw-fonts package for them. Are there any other packages not mentioned that are important for these two distributions ?
>
> edd at max:~$ apt-cache search urw | grep texlive
> texlive-fonts-recommended - TeX Live: Recommended fonts
> texlive-fonts-extra - TeX Live: Additional fonts
> edd at max:~$ 

Humm... on a Debian system (mix of unstable and testing) that shows
nothing.  But


ramon at Bufo:~$ apt-cache search urw | grep tex
fonts-texgyre - OpenType fonts based on URW Fonts
tex-gyre - scalable PostScript and OpenType fonts based on URW Fonts
python-urwid-satext - collection of urwid widgets
ramon at Bufo:~$


shows two possibly relevant packages.


(Maybe this is a Ubuntu/Debian difference? I think Dirk has some machines
running Ubuntu).

Best,

R.


>
> Both packages list URW fonts promimently in their Description:
>
> Dirk


-- 
Ramon Diaz-Uriarte
Department of Biochemistry, Lab B-25
Facultad de Medicina
Universidad Aut?noma de Madrid 
Arzobispo Morcillo, 4
28029 Madrid
Spain

Phone: +34-91-497-2412

Email: rdiaz02 at gmail.com
       ramon.diaz at iib.uam.es

http://ligarto.org/rdiaz


From edd at debian.org  Wed Dec 30 21:08:39 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 30 Dec 2015 14:08:39 -0600
Subject: [Rd] URW Fonts Description in Installation and Administration
	Manual
In-Reply-To: <87d1tn3gd2.fsf@gmail.com>
References: <SN1PR0101MB1439CEE17F9BA8237DD00B51CDFD0@SN1PR0101MB1439.prod.exchangelabs.com>
	<22147.50077.339178.776971@max.nulle.part>
	<87d1tn3gd2.fsf@gmail.com>
Message-ID: <22148.14791.710622.471063@max.nulle.part>


On 30 December 2015 at 20:07, Ramon Diaz-Uriarte wrote:
| 
| 
| 
| On Wed, 30-12-2015, at 12:44, Dirk Eddelbuettel <edd at debian.org> wrote:
| > On 30 December 2015 at 05:00, Dario Strbenac wrote:
| > | Good day,
| > | 
| > | In section A.2, the manual advises "Linux users will want the urw-fonts package". However, this package only seems to be available for RedHat Linux and Fedora Linux. What about for Debian or Ubuntu ? There is no urw-fonts package for them. Are there any other packages not mentioned that are important for these two distributions ?
| >
| > edd at max:~$ apt-cache search urw | grep texlive
| > texlive-fonts-recommended - TeX Live: Recommended fonts
| > texlive-fonts-extra - TeX Live: Additional fonts
| > edd at max:~$ 
| 
| Humm... on a Debian system (mix of unstable and testing) that shows
| nothing.

Really? I just fired up Docker instance with Debian 8.2 and saw it there, also

  https://packages.debian.org/sid/texlive-fonts-recommended
  https://packages.debian.org/sid/texlive-fonts-extra

has it.  Otherwise, agreed that a search for URW reveals more
packages. Methinks this issue is specific to Dario's setup...

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From rdiaz02 at gmail.com  Thu Dec 31 09:10:55 2015
From: rdiaz02 at gmail.com (Ramon Diaz-Uriarte)
Date: Thu, 31 Dec 2015 09:10:55 +0100
Subject: [Rd] URW Fonts Description in Installation and Administration
	Manual
In-Reply-To: <22148.14791.710622.471063@max.nulle.part>
References: <SN1PR0101MB1439CEE17F9BA8237DD00B51CDFD0@SN1PR0101MB1439.prod.exchangelabs.com>
	<22147.50077.339178.776971@max.nulle.part>
	<87d1tn3gd2.fsf@gmail.com>
	<22148.14791.710622.471063@max.nulle.part>
Message-ID: <87io3frqb4.fsf@gmail.com>




On Wed, 30-12-2015, at 21:08, Dirk Eddelbuettel <edd at debian.org> wrote:
> On 30 December 2015 at 20:07, Ramon Diaz-Uriarte wrote:
> | 
> | 
> | 
> | On Wed, 30-12-2015, at 12:44, Dirk Eddelbuettel <edd at debian.org> wrote:
> | > On 30 December 2015 at 05:00, Dario Strbenac wrote:
> | > | Good day,
> | > | 
> | > | In section A.2, the manual advises "Linux users will want the urw-fonts package". However, this package only seems to be available for RedHat Linux and Fedora Linux. What about for Debian or Ubuntu ? There is no urw-fonts package for them. Are there any other packages not mentioned that are important for these two distributions ?
> | >
> | > edd at max:~$ apt-cache search urw | grep texlive
> | > texlive-fonts-recommended - TeX Live: Recommended fonts
> | > texlive-fonts-extra - TeX Live: Additional fonts
> | > edd at max:~$ 
> | 
> | Humm... on a Debian system (mix of unstable and testing) that shows
> | nothing.
>
> Really? I just fired up Docker instance with Debian 8.2 and saw it there, also
>
>   https://packages.debian.org/sid/texlive-fonts-recommended
>   https://packages.debian.org/sid/texlive-fonts-extra
>
> has it.  Otherwise, agreed that a search for URW reveals more

Yes, that is true. But I tried on another testing+unstable system and still

apt-cache search urw | grep texlive

gives me nothing.



> packages. Methinks this issue is specific to Dario's setup...

And mine might also be kind of strange :-). Oh well.



>
> Dirk


-- 
Ramon Diaz-Uriarte
Department of Biochemistry, Lab B-25
Facultad de Medicina
Universidad Aut?noma de Madrid 
Arzobispo Morcillo, 4
28029 Madrid
Spain

Phone: +34-91-497-2412

Email: rdiaz02 at gmail.com
       ramon.diaz at iib.uam.es

http://ligarto.org/rdiaz


From aixtools at gmail.com  Thu Dec 31 16:14:54 2015
From: aixtools at gmail.com (Michael Felt)
Date: Thu, 31 Dec 2015 16:14:54 +0100
Subject: [Rd] R,
 AIX 64-bit builds - trying to understand root cause for message:
 "Error: Line starting 'Package: tools ...' is malformed!"
In-Reply-To: <56839C9E.2010401@gmail.com>
References: <56825A4B.7010508@gmail.com> <56839C9E.2010401@gmail.com>
Message-ID: <5685466E.7000804@gmail.com>

On 2015-12-30 09:58, Michael Felt wrote:
> On 2015-12-29 11:02, Michael Felt wrote:
>> This seems to be a problem that goes back a long time - and I hope 
>> someone who understands what tre is suppossed to be doing will look 
>> at this.
>>
>> A short history of other people who have reported on this on 
>> different versions of AIX. I shall only add that I get the same 
>> results on AIX 5.3 TL7, AIX 6.1 TL9 and AIX 7.1 TL3.
>>
>> Basically, with settings that work for AIX and 32-bit - the only 
>> changes being
>> -maix32 becomes -maix64
>> and
>> export OBJECT_MODE=32 becomes export OBJECT_MODE=64
>>
>> Then to shorten the 'make' bla bla, first run just make, then
>>
>> cd src/library/tools
>> make -s sysdata
>>
>> http://article.gmane.org/gmane.comp.lang.r.devel/38817/match=package+tools+malformed 
>>
>> http://article.gmane.org/gmane.comp.lang.r.devel/36886/match=package+tools+malformed 
>>
>> http://article.gmane.org/gmane.comp.lang.r.devel/23372/match=package+tools+malformed 
>> Date: 2010-01-25 06:55:41 GMT (5 years, 48 weeks, 1 day, 20 hours and 
>> 30 minutes ago)
>>
>> To that, to get debug data, I have
>>
>> * added -DTRE_DUGUG to src/extra/tre/Makefile # ALL_CFLAGS = 
>> $(ALL_CFLAGS_LO) -DTRE_DEBUG
>> * rm src/extra/tre/tre-match-parallel.o
>> * find . -name \*.so -exec rm {} \;
>> * make
>> * cd src/library/tools
>> * make -s sysdata
>>
>> Attached are the two script files of the screen output. The 32-bit 
>> one is more verbose - and contains magically lines such as:
>>    found match 3037fd14 (while "found" does not occur in the 64-bit 
>> output)
>>
>> root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]wc 
>> /tmp/sysdata.??.*
>>      4730   14123  139916 /tmp/sysdata.32.text
>>      1312    3688   40528 /tmp/sysdata.64.text
>>      6042   17811  180444 total
>>
>> root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]grep -c 
>> found /tmp/sysdata.??.*
>> /tmp/sysdata.32.text:19
>> /tmp/sysdata.64.text:0
>>
>>
>> Hope this brings us (or me), closer to a resolution to an old concern.
>>
>> And, best wishes for the new year!
>>
>> Michael
>>
>>
> Still hoping for someones curiosity/willingness.
>
> The differences show up in the first comparision that is made (of the 
> string "3.2.3" it seems) - 32-bit is on the left, 64-bit on the right.
>
> Script command is started on Tue Dec 29 08:39:16 UTC 
> 2015.                     |  Script command is started on Tue Dec 29 
> 08:39:56 UTC 2015.
> root at x069:[/data/prj/cran/32/R-aix-3.2.3/src/library/tools]make -s 
> sysdata     |  
> root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]make -s 
> sysdata
> installing 
> 'sysdata.rda'                                                       |  
> installing 'sysdata.rda'
> tre_tnfa_run_parallel, input type 
> 1                                            |  tre_tnfa_run_parallel, 
> input type 1
> length: 
> -1                                                                     
> |  length: -1
> pos:chr/code | states and 
> tags                                                 |  pos:chr/code | 
> states and tags
> -------------+------------------------------------------------                 
> |  -------------+------------------------------------------------
>  init > 30380200 3038014c 
> 30380098                                             |   init > 
> 110cc3040 110cc2f28 110cc2e10
> match end offset = 
> -1                                                          |  match 
> end offset = -1
> tre_tnfa_run_parallel, input type 
> 1                                            |  tre_tnfa_run_parallel, 
> input type 1
> length: 
> -1                                                                     
> |  length: -1
> pos:chr/code | states and 
> tags                                                 |  pos:chr/code | 
> states and tags
> -------------+------------------------------------------------                 
> |  -------------+------------------------------------------------
>  init > 
> 3037fb88                                                               
> |   init > 110cc3310
>   0: 3/00051 | 
> 3037fb88/0:0                                                    |    
> 0: 3/00051 | 110cc3310/0:0
>   1: ./00046 | 
> 3037fb88/0:0                                                    |    
> 1: ./00046 | 110cc3310/0:0
>  init > 
> 3037fb88                                                               
> |   init > 110cc3310
>   1: ./00046 | 
> 3037fb88/0:1                                                    |    
> 1: ./00046 | 110cc3310/0:1
>   2: 2/00050 | 
> 3037fb88/0:1                                                    |    
> 2: 2/00050 | 110cc3310/0:1
> assertion 
> failed                                                               
> |  assertion failed
>  init > 
> 3037fb88                                                               
> |   init > 110cc3310
>   2: 2/00050 | 3037fc18/0:1 
> 3037fb88/0:2                                       |    2: 2/00050 | 
> 110cc33f0/0:1 110cc3310/0:2
>   3: ./00046 | 3037fc18/0:1 
> 3037fb88/0:2                                       |    3: ./00046 | 
> 110cc33f0/0:1 110cc3310/0:2
> assertion failed                           *** DIFFERENCE 
> ***                  |   init > 110cc3310
>  init > 
> 3037fb88                                                               
> |    3: ./00046 | 110cc3310/0:3
>   3: ./00046 | 3037fc18/0:1 
> 3037fb88/0:3                                       |    4: 3/00051 | 
> 110cc3310/0:3
>   4: 3/00051 | 3037fc18/0:1 
> 3037fb88/0:3                                       |  assertion failed
> assertion 
> failed                                                               
> |   init > 110cc3310
>  init > 
> 3037fb88                                                               
> |    4: 3/00051 | 110cc33f0/0:3 110cc3310/0:4
>   4: 3/00051 | 3037fc18/0:3 
> 3037fb88/0:4                                       |    5: /00000 | 
> 110cc33f0/0:3 110cc3310/0:4
>   5: /00000 | 3037fc18/0:3 3037fb88/0:4 |   init > 110cc3310
>   found match 3037fd14 *** DIFFERENCE ***                   |  match 
> end offset = -1
> match end offset = 5 *** DIFFERENCE ***                   |  
> tre_tnfa_run_parallel, input type 1
> tre_tnfa_run_parallel, input type 
> 1                                            |  length: -1
> length: 
> -1                                                                     
> |  pos:chr/code | states and tags
> pos:chr/code | states and 
> tags                                                 |  
> -------------+------------------------------------------------
> -------------+------------------------------------------------                 
> |   init > 110cc4780 110cc4668 110cc4550
>  init > 303811c0 3038110c 
> 30381058                                             |  match end 
> offset = -1
> match end offset = 
> -1                                                          |  
> tre_tnfa_run_parallel, input type 1
> tre_tnfa_run_parallel, input type 
> 1                                            |  length: -1
> length: 
> -1                                                                     
> |  pos:chr/code | states and tags
> pos:chr/code | states and 
> tags                                                 |  
> -------------+------------------------------------------------
> -------------+------------------------------------------------                 
> |   init > 110cc5700 110cc55e8 110cc54d0
>
One day further - looks like tre_compile (or just before, after all).

With TRE_DEBUG switched on in tre-compile.c and tre-ast.c I see (snip)

--- /tmp/x.32   2015-12-31 15:09:44.000000000 +0000
+++ /tmp/x.64   2015-12-31 15:09:30.000000000 +0000
@@ -1,5 +1,5 @@
- Script command is started on Thu Dec 31 15:04:39 2015.
- root at x069:[/data/prj/cran/32/R-aix-3.2.3/src/library/tools]make sysdata
+ Script command is started on Thu Dec 31 15:08:43 2015.
+ root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]make sysdata
   installing 'sysdata.rda'
   echo 
"tools:::sysdata2LazyLoadDB(\"/data/prj/cran/R-3.2.3/src/library/tools/R/sysdata.rda\",\"../../../library/tools/R\")" 
| \
     R_DEFAULT_PACKAGES=NULL LC_ALL=C ../../../bin/R --vanilla --slave
@@ -167,7 +167,7 @@
   initial: 1/1,0, assert 0
   initial: 0/0, assert 0
   initial: 0/0, assert 0
- final state 30370718
+ final state 110cba530
   tre_compile: parsing '(^|[^%])(%%)*%V'
   AST:
   catenation, sub 0, 0 tags
@@ -177,7 +177,7 @@
           assertions: bol
           union, sub -1, 0 tags
             literal (, $) (0, 36), pos 0, sub -1, 0 tags
-           literal (&, M-^?) (38, 65535), pos 0, sub -1, 0 tags
+           literal (&, M-^?) (38, -1), pos 0, sub -1, 0 tags
         iteration {0, -1}, sub -1, 0 tags, greedy
           catenation, sub 2, 0 tags
             literal (%, %) (37, 37), pos 1, sub -1, 0 tags
@@ -197,7 +197,7 @@
   Union
   Literal 0-36
   After union left
- Literal 38-65535
+ Literal 38--1
   After union right
   After union right
     num_tags += 2
@@ -231,7 +231,7 @@
           assertions: bol
           union, sub -1, 0 tags
             literal (, $) (0, 36), pos 0, sub -1, 0 tags
-           literal (&, M-^?) (38, 65535), pos 0, sub -1, 0 tags
+           literal (&, M-^?) (38, -1), pos 0, sub -1, 0 tags
         iteration {0, -1}, sub -1, 2 tags, greedy
           catenation, sub 2, 1 tags
             literal (%, %) (37, 37), pos 1, sub -1, 1 tags
@@ -255,7 +255,7 @@
   Union
   Literal 0-36
   After union left
- Literal 38-65535
+ Literal 38--1
   After union right
   After union right
   tre_add_tag_right: tag 3
@@ -342,7 +342,7 @@
             catenation, sub -1, 0 tags
               union, sub -1, 0 tags
                 literal (, $) (0, 36), pos 0, sub -1, 0 tags
-               literal (&, M-^?) (38, 65535), pos 0, sub -1, 0 tags
+               literal (&, M-^?) (38, -1), pos 0, sub -1, 0 tags
               tag 4

It seems in 32-bit mode -1 is unsigned (65535) but -1 == -1 in 64-bit mode.

I suspect I will "find it" - but a proposed change is appreciated.

Happy New Year,
Michael


From aixtools at gmail.com  Thu Dec 31 17:02:09 2015
From: aixtools at gmail.com (Michael Felt)
Date: Thu, 31 Dec 2015 17:02:09 +0100
Subject: [Rd] R,
 AIX 64-bit builds - trying to understand root cause for message:
 "Error: Line starting 'Package: tools ...' is malformed!"
In-Reply-To: <5685466E.7000804@gmail.com>
References: <56825A4B.7010508@gmail.com> <56839C9E.2010401@gmail.com>
	<5685466E.7000804@gmail.com>
Message-ID: <56855181.80709@gmail.com>

On 2015-12-31 16:14, Michael Felt wrote:
> -           literal (&, M-^?) (38, 65535), pos 0, sub -1, 0 tags
> +           literal (&, M-^?) (38, -1), pos 0, sub -1, 0 tags 
Getting down to these two lines - so I think it is now "before"

root at x069:[/data/prj/cran/32/R-aix-3.2.3/src/library/tools]od -cb xxx.32
0000000                                            l   i   t   e   r   a
          040 040 040 040 040 040 040 040 040 040 154 151 164 145 162 141
0000020    l       ( &   ,     377   )       (   3   8   ,       6   5
          154 040 050 046 054 040 377 051 040 050 063 070 054 040 066 065
0000040    5   3   5   )   ,       p   o   s       0   ,       s   u   b
          065 063 065 051 054 040 160 157 163 040 060 054 040 163 165 142
0000060        -   1   ,       0       t   a   g   s  \n
          040 055 061 054 040 060 040 164 141 147 163 012

root at x069:[/data/prj/cran/64/R-aix-3.2.3/src/library/tools]od -cb xxx.64
0000000                                            l   i   t   e   r   a
          040 040 040 040 040 040 040 040 040 040 154 151 164 145 162 141
0000020    l       ( &   ,     377   )       (   3   8   ,       -   1
          154 040 050 046 054 040 377 051 040 050 063 070 054 040 055 061
0000040    )   ,       p   o   s       0   ,       s   u   b       -   1
          051 054 040 160 157 163 040 060 054 040 163 165 142 040 055 061
0000060    ,       0       t   a   g   s  \n
          054 040 060 040 164 141 147 163 012

More later, if the New Year doesn't get me first :)


From aixtools at gmail.com  Thu Dec 31 17:34:40 2015
From: aixtools at gmail.com (Michael Felt)
Date: Thu, 31 Dec 2015 17:34:40 +0100
Subject: [Rd] R,
 AIX 64-bit builds - trying to understand root cause for message:
 "Error: Line starting 'Package: tools ...' is malformed!"
In-Reply-To: <56855181.80709@gmail.com>
References: <56825A4B.7010508@gmail.com> <56839C9E.2010401@gmail.com>
	<5685466E.7000804@gmail.com> <56855181.80709@gmail.com>
Message-ID: <56855920.1050700@gmail.com>

On 2015-12-31 17:02, Michael Felt wrote:
> On 2015-12-31 16:14, Michael Felt wrote:
>> - literal (&, M-^?) (38, 65535), pos 0, sub -1, 0 tags
>> + literal (&, M-^?) (38, -1), pos 0, sub -1, 0 tags 
> Getting down to these two lines - so I think it is now "before" 
Made a few changes - mainly in tre-ast.c

+135 static void
+136 tre_do_print(FILE *stream, tre_ast_node_t *ast, int indent)
+137 {
+138 tre_cint_t code_min, code_max;
+139 size_t pos;
+140 int num_tags = ast->num_tags;
+141 tre_literal_t *lit;

Lines 138 and 139 are now typed to what I 'think' the correct type is:

And, to better see the values:


+182 else
+183 {
+184 fprintf(stream, "literal (%c, %c) (%010x, %010x), pos %d, sub %d, "
+185 "%d tags\n", code_min, code_max, code_min, code_max, pos,
+186 ast->submatch_id, num_tags);
+187 }

changed %d to %010x for code_min and code_max

And the comparison is now shows:

64_bit: literal (&, ?) (0000000026, 00ffffffff), pos 0, sub -1, 0 tags
32_bit: literal (&, ?) (0000000026, 000000ffff), pos 0, sub -1, 0 tags


So, if -elsewhere- a test is being made for code_max - there is a 
difference. Strings and lists are not my thing. I do hope someone else 
has enough to find the 'type dependent' test or constant.

Michael


