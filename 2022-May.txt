From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sun May  1 21:41:39 2022
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 1 May 2022 14:41:39 -0500
Subject: [Rd] "with" doesn't work with names with blanks
Message-ID: <a70b7e3c-8975-dd83-705b-488945bb1af0@prodsyse.com>

Hello, All:


	  Column names in a data.frame are not supposed to have trailing 
blanks.  However, a CRAN package created one, which threw an error with 
"with".  Consider the following example:


 > (tst <- data.frame(1))
   X1
1  1
 > names(tst) <- 'x '
 > tst$x
[1] 1
 > with(txt, x)
Error in with(txt, x) : object 'txt' not found


	  I think it's interesting that "tst$x" works, but "with(txt, x)".


	  Comments?


	  It's not a major problem, though it took me a while to diagnose.  (I 
reported it to the maintainer of the package that returned a data.frame 
with names with trailing blanks.)


	  Thanks, for all your work in maintaining and upgrading R -- and in 
responding to emails from this list.


	  Spencer Graves


 > sessionInfo()
R version 4.2.0 (2022-04-22)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 11.6.5

Matrix products: default
LAPACK: 
/Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.2.0 tools_4.2.0
 >


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun May  1 21:51:20 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 1 May 2022 15:51:20 -0400
Subject: [Rd] "with" doesn't work with names with blanks
In-Reply-To: <a70b7e3c-8975-dd83-705b-488945bb1af0@prodsyse.com>
References: <a70b7e3c-8975-dd83-705b-488945bb1af0@prodsyse.com>
Message-ID: <44e04e08-a17f-5b34-092d-5fb172dcffb1@gmail.com>

On 01/05/2022 3:41 p.m., Spencer Graves wrote:
> Hello, All:
> 
> 
> 	  Column names in a data.frame are not supposed to have trailing
> blanks.  However, a CRAN package created one, which threw an error with
> "with".  Consider the following example:
> 
> 
>   > (tst <- data.frame(1))
>     X1
> 1  1
>   > names(tst) <- 'x '
>   > tst$x
> [1] 1
>   > with(txt, x)
> Error in with(txt, x) : object 'txt' not found
> 
> 
> 	  I think it's interesting that "tst$x" works, but "with(txt, x)".
> 
> 
> 	  Comments?

tst$x works because of partial name matching.  (That leniency is one of 
the reasons for advice to avoid using $ in programs.)  It would be chaos 
if with() used partial name matching.

You can use

with(txt, `x `)

to include the space in the name.

Duncan Murdoch

> 
> 
> 	  It's not a major problem, though it took me a while to diagnose.  (I
> reported it to the maintainer of the package that returned a data.frame
> with names with trailing blanks.)
> 
> 
> 	  Thanks, for all your work in maintaining and upgrading R -- and in
> responding to emails from this list.
> 
> 
> 	  Spencer Graves
> 
> 
>   > sessionInfo()
> R version 4.2.0 (2022-04-22)
> Platform: x86_64-apple-darwin17.0 (64-bit)
> Running under: macOS Big Sur 11.6.5
> 
> Matrix products: default
> LAPACK:
> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.2.0 tools_4.2.0
>   >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sun May  1 23:19:32 2022
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 1 May 2022 16:19:32 -0500
Subject: [Rd] "with" doesn't work with names with blanks
In-Reply-To: <44e04e08-a17f-5b34-092d-5fb172dcffb1@gmail.com>
References: <a70b7e3c-8975-dd83-705b-488945bb1af0@prodsyse.com>
 <44e04e08-a17f-5b34-092d-5fb172dcffb1@gmail.com>
Message-ID: <0022828d-30c7-43eb-859d-dc77fba32b6e@prodsyse.com>



On 5/1/22 2:51 PM, Duncan Murdoch wrote:
> On 01/05/2022 3:41 p.m., Spencer Graves wrote:
>> Hello, All:
>>
>>
>> ????? Column names in a data.frame are not supposed to have trailing
>> blanks.? However, a CRAN package created one, which threw an error with
>> "with".? Consider the following example:
>>
>>
>> ? > (tst <- data.frame(1))
>> ??? X1
>> 1? 1
>> ? > names(tst) <- 'x '
>> ? > tst$x
>> [1] 1
>> ? > with(tst, x)
>> Error in eval(substitute(expr), data, enclos = parent.frame()) : 
   object 'x' not found>>
>>
>> ????? I think it's interesting that "tst$x" works, but "with(txt, x)".
>>
>>
>> ????? Comments?
> 
> tst$x works because of partial name matching.? (That leniency is one of 
> the reasons for advice to avoid using $ in programs.)? It would be chaos 
> if with() used partial name matching.
> 
> You can use
> 
> with(txt, `x `)
> 
> to include the space in the name.


but to use that, I have to KNOW that the name is `x `, not `x`.  It took 
me a while to identify that as the source of the problem:  What I saw 
was that "with(tst


	  And thanks for the reminder that you recommend avoiding use of "$".


	  sg


p.s.  After I found the problem, I fixed it using
names(x) <- tis::stripBlanks(names(x))

> 
> Duncan Murdoch
> 
>>
>>
>> ????? It's not a major problem, though it took me a while to 
>> diagnose.? (I
>> reported it to the maintainer of the package that returned a data.frame
>> with names with trailing blanks.)
>>
>>
>> ????? Thanks, for all your work in maintaining and upgrading R -- and in
>> responding to emails from this list.
>>
>>
>> ????? Spencer Graves
>>
>>
>> ? > sessionInfo()
>> R version 4.2.0 (2022-04-22)
>> Platform: x86_64-apple-darwin17.0 (64-bit)
>> Running under: macOS Big Sur 11.6.5
>>
>> Matrix products: default
>> LAPACK:
>> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib 
>>
>>
>> locale:
>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>
>> attached base packages:
>> [1] stats???? graphics? grDevices utils???? datasets? methods?? base
>>
>> loaded via a namespace (and not attached):
>> [1] compiler_4.2.0 tools_4.2.0
>> ? >
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From bbo|ker @end|ng |rom gm@||@com  Sun May  1 23:35:25 2022
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 1 May 2022 17:35:25 -0400
Subject: [Rd] "with" doesn't work with names with blanks
In-Reply-To: <0022828d-30c7-43eb-859d-dc77fba32b6e@prodsyse.com>
References: <a70b7e3c-8975-dd83-705b-488945bb1af0@prodsyse.com>
 <44e04e08-a17f-5b34-092d-5fb172dcffb1@gmail.com>
 <0022828d-30c7-43eb-859d-dc77fba32b6e@prodsyse.com>
Message-ID: <CABghstTL+L0XkkMtDk-gS47hWaKpnLCR94W3VH1p73zB+WSziA@mail.gmail.com>

Think trimws() from base R would work too?

On Sun, May 1, 2022, 5:20 PM Spencer Graves <spencer.graves at prodsyse.com>
wrote:

>
>
> On 5/1/22 2:51 PM, Duncan Murdoch wrote:
> > On 01/05/2022 3:41 p.m., Spencer Graves wrote:
> >> Hello, All:
> >>
> >>
> >>       Column names in a data.frame are not supposed to have trailing
> >> blanks.  However, a CRAN package created one, which threw an error with
> >> "with".  Consider the following example:
> >>
> >>
> >>   > (tst <- data.frame(1))
> >>     X1
> >> 1  1
> >>   > names(tst) <- 'x '
> >>   > tst$x
> >> [1] 1
> >>   > with(tst, x)
> >> Error in eval(substitute(expr), data, enclos = parent.frame()) :
>    object 'x' not found>>
> >>
> >>       I think it's interesting that "tst$x" works, but "with(txt, x)".
> >>
> >>
> >>       Comments?
> >
> > tst$x works because of partial name matching.  (That leniency is one of
> > the reasons for advice to avoid using $ in programs.)  It would be chaos
> > if with() used partial name matching.
> >
> > You can use
> >
> > with(txt, `x `)
> >
> > to include the space in the name.
>
>
> but to use that, I have to KNOW that the name is `x `, not `x`.  It took
> me a while to identify that as the source of the problem:  What I saw
> was that "with(tst
>
>
>           And thanks for the reminder that you recommend avoiding use of
> "$".
>
>
>           sg
>
>
> p.s.  After I found the problem, I fixed it using
> names(x) <- tis::stripBlanks(names(x))
>
> >
> > Duncan Murdoch
> >
> >>
> >>
> >>       It's not a major problem, though it took me a while to
> >> diagnose.  (I
> >> reported it to the maintainer of the package that returned a data.frame
> >> with names with trailing blanks.)
> >>
> >>
> >>       Thanks, for all your work in maintaining and upgrading R -- and in
> >> responding to emails from this list.
> >>
> >>
> >>       Spencer Graves
> >>
> >>
> >>   > sessionInfo()
> >> R version 4.2.0 (2022-04-22)
> >> Platform: x86_64-apple-darwin17.0 (64-bit)
> >> Running under: macOS Big Sur 11.6.5
> >>
> >> Matrix products: default
> >> LAPACK:
> >>
> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
> >>
> >>
> >> locale:
> >> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> >>
> >> attached base packages:
> >> [1] stats     graphics  grDevices utils     datasets  methods   base
> >>
> >> loaded via a namespace (and not attached):
> >> [1] compiler_4.2.0 tools_4.2.0
> >>   >
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sun May  1 23:48:05 2022
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sun, 1 May 2022 16:48:05 -0500
Subject: [Rd] "with" doesn't work with names with blanks
In-Reply-To: <CABghstTL+L0XkkMtDk-gS47hWaKpnLCR94W3VH1p73zB+WSziA@mail.gmail.com>
References: <a70b7e3c-8975-dd83-705b-488945bb1af0@prodsyse.com>
 <44e04e08-a17f-5b34-092d-5fb172dcffb1@gmail.com>
 <0022828d-30c7-43eb-859d-dc77fba32b6e@prodsyse.com>
 <CABghstTL+L0XkkMtDk-gS47hWaKpnLCR94W3VH1p73zB+WSziA@mail.gmail.com>
Message-ID: <1150bbc0-93dc-0837-ebc7-1731ebee3a65@prodsyse.com>



On 5/1/22 4:35 PM, Ben Bolker wrote:
> Think trimws() from base R would work too?


Yes.  Thanks.  sg

> 
> On Sun, May 1, 2022, 5:20 PM Spencer Graves <spencer.graves at prodsyse.com 
> <mailto:spencer.graves at prodsyse.com>> wrote:
> 
> 
> 
>     On 5/1/22 2:51 PM, Duncan Murdoch wrote:
>      > On 01/05/2022 3:41 p.m., Spencer Graves wrote:
>      >> Hello, All:
>      >>
>      >>
>      >> ????? Column names in a data.frame are not supposed to have trailing
>      >> blanks.? However, a CRAN package created one, which threw an
>     error with
>      >> "with".? Consider the following example:
>      >>
>      >>
>      >> ? > (tst <- data.frame(1))
>      >> ??? X1
>      >> 1? 1
>      >> ? > names(tst) <- 'x '
>      >> ? > tst$x
>      >> [1] 1
>      >> ? > with(tst, x)
>      >> Error in eval(substitute(expr), data, enclos = parent.frame()) :
>      ? ?object 'x' not found>>
>      >>
>      >> ????? I think it's interesting that "tst$x" works, but
>     "with(txt, x)".
>      >>
>      >>
>      >> ????? Comments?
>      >
>      > tst$x works because of partial name matching.? (That leniency is
>     one of
>      > the reasons for advice to avoid using $ in programs.)? It would
>     be chaos
>      > if with() used partial name matching.
>      >
>      > You can use
>      >
>      > with(txt, `x `)
>      >
>      > to include the space in the name.
> 
> 
>     but to use that, I have to KNOW that the name is `x `, not `x`.? It
>     took
>     me a while to identify that as the source of the problem:? What I saw
>     was that "with(tst
> 
> 
>      ? ? ? ? ? And thanks for the reminder that you recommend avoiding
>     use of "$".
> 
> 
>      ? ? ? ? ? sg
> 
> 
>     p.s.? After I found the problem, I fixed it using
>     names(x) <- tis::stripBlanks(names(x))
> 
>      >
>      > Duncan Murdoch
>      >
>      >>
>      >>
>      >> ????? It's not a major problem, though it took me a while to
>      >> diagnose.? (I
>      >> reported it to the maintainer of the package that returned a
>     data.frame
>      >> with names with trailing blanks.)
>      >>
>      >>
>      >> ????? Thanks, for all your work in maintaining and upgrading R
>     -- and in
>      >> responding to emails from this list.
>      >>
>      >>
>      >> ????? Spencer Graves
>      >>
>      >>
>      >> ? > sessionInfo()
>      >> R version 4.2.0 (2022-04-22)
>      >> Platform: x86_64-apple-darwin17.0 (64-bit)
>      >> Running under: macOS Big Sur 11.6.5
>      >>
>      >> Matrix products: default
>      >> LAPACK:
>      >>
>     /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
> 
>      >>
>      >>
>      >> locale:
>      >> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>      >>
>      >> attached base packages:
>      >> [1] stats???? graphics? grDevices utils???? datasets? methods?? base
>      >>
>      >> loaded via a namespace (and not attached):
>      >> [1] compiler_4.2.0 tools_4.2.0
>      >> ? >
>      >>
>      >> ______________________________________________
>      >> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>      >> https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
>      >
> 
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon May  2 01:01:43 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 1 May 2022 19:01:43 -0400
Subject: [Rd] "with" doesn't work with names with blanks
In-Reply-To: <0022828d-30c7-43eb-859d-dc77fba32b6e@prodsyse.com>
References: <a70b7e3c-8975-dd83-705b-488945bb1af0@prodsyse.com>
 <44e04e08-a17f-5b34-092d-5fb172dcffb1@gmail.com>
 <0022828d-30c7-43eb-859d-dc77fba32b6e@prodsyse.com>
Message-ID: <f96ece4e-3307-b785-e953-cd5db6252790@gmail.com>

On 01/05/2022 5:19 p.m., Spencer Graves wrote:
> 
> 
> On 5/1/22 2:51 PM, Duncan Murdoch wrote:
>> On 01/05/2022 3:41 p.m., Spencer Graves wrote:
>>> Hello, All:
>>>
>>>
>>>  ????? Column names in a data.frame are not supposed to have trailing
>>> blanks.? However, a CRAN package created one, which threw an error with
>>> "with".? Consider the following example:
>>>
>>>
>>>  ? > (tst <- data.frame(1))
>>>  ??? X1
>>> 1? 1
>>>  ? > names(tst) <- 'x '
>>>  ? > tst$x
>>> [1] 1
>>>  ? > with(tst, x)
>>> Error in eval(substitute(expr), data, enclos = parent.frame()) :
>     object 'x' not found>>
>>>
>>>  ????? I think it's interesting that "tst$x" works, but "with(txt, x)".
>>>
>>>
>>>  ????? Comments?
>>
>> tst$x works because of partial name matching.? (That leniency is one of
>> the reasons for advice to avoid using $ in programs.)? It would be chaos
>> if with() used partial name matching.
>>
>> You can use
>>
>> with(txt, `x `)
>>
>> to include the space in the name.
> 
> 
> but to use that, I have to KNOW that the name is `x `, not `x`.  It took
> me a while to identify that as the source of the problem:  What I saw
> was that "with(tst

Printing names(tst) would make it somewhat clear.  Running str(tst) 
(which is what I'd do) would hide it:

 > tst$y <- 2
 > tst$x <- 3
 > str(tst)
'data.frame':	1 obs. of  3 variables:
  $ x : num 1
  $ y : num 2
  $ x : num 3

Duncan Murdoch

> 
> 
> 	  And thanks for the reminder that you recommend avoiding use of "$".
> 
> 
> 	  sg
> 
> 
> p.s.  After I found the problem, I fixed it using
> names(x) <- tis::stripBlanks(names(x))
> 
>>
>> Duncan Murdoch
>>
>>>
>>>
>>>  ????? It's not a major problem, though it took me a while to
>>> diagnose.? (I
>>> reported it to the maintainer of the package that returned a data.frame
>>> with names with trailing blanks.)
>>>
>>>
>>>  ????? Thanks, for all your work in maintaining and upgrading R -- and in
>>> responding to emails from this list.
>>>
>>>
>>>  ????? Spencer Graves
>>>
>>>
>>>  ? > sessionInfo()
>>> R version 4.2.0 (2022-04-22)
>>> Platform: x86_64-apple-darwin17.0 (64-bit)
>>> Running under: macOS Big Sur 11.6.5
>>>
>>> Matrix products: default
>>> LAPACK:
>>> /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib
>>>
>>>
>>> locale:
>>> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
>>>
>>> attached base packages:
>>> [1] stats???? graphics? grDevices utils???? datasets? methods?? base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] compiler_4.2.0 tools_4.2.0
>>>  ? >
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From m@rc@we|be| @end|ng |rom en|@o-p@rtner@@com  Mon May  2 10:12:01 2022
From: m@rc@we|be| @end|ng |rom en|@o-p@rtner@@com (Marc Weibel)
Date: Mon, 2 May 2022 10:12:01 +0200
Subject: [Rd] New R version - Issue with as.vector coercion on data.frame
Message-ID: <8CF8374A-8E45-47FD-BD8A-418102EA6729@eniso-partners.com>

Hi 

I recently upgraded to the latest r version and got an issue with the command as.vector() on a data.frame object. With the previous R version the returned object was a vector but now it is formatted as a list (see below)


> futures_quotes
  SMI Future SMIM Future Euro Stoxx 50 Future S&P 500 Mini Future FTSE 100 Future Nikkei 225 Future
1      11999        2871                 3692                4150            7419             26853
> class(futures_quotes)
[1] "data.frame"

> as.vector(futures_quotes[1,1:3])
$`SMI Future`
[1] 11999

$`SMIM Future`
[1] 2871

$`Euro Stoxx 50 Future`
[1] 3692

> class(as.vector(futures_quotes[1,1:3]))
[1] "list"


Can you help me on this ? (I solved the issue temporarily with as.vector(t(futures_quotes[1,1:3])) 

Kind regards
Marc Weibel



 <http://www.enisopartners.com/>	
Dr. Marc Weibel
CIO & Partner
Tel: +41 44 286 17 02
Mob: +41 78 892 96 55
E-Mail: marc.weibel at enisopartners.com <mailto: marc.weibel at enisopartners.com>
 
Eniso Partners AG
Claridenstrasse 34 | Postfach | 8022 Z?rich
 
 <https://www.linkedin.com/in/marc-weibel-29a396/>  
Based on previous e-mail correspondence with you and/or an agreement reached with you, Eniso Partners considers itself authorized to contact you via unsecured e-mail. Warning: E-mails can involve SUBSTANTIAL RISKS, e.g. lack of confidentiality, potential manipulation of contents and/or sender's address, incorrect recipient (misdirection), viruses etc. Eniso Partners assumes no responsibility for any loss or damage resulting from the use of e-mails. Eniso Partners recommends in particular that you do NOT SEND ANY SENSITIVE INFORMATION, that you do not include details of the previous message in any reply, and that you enter e-mail address(es) manually every time you write an e-mail. Please notify Eniso Partners immediately if you received this e-mail by mistake or if you do not wish to receive any further e-mail correspondence. If you have received this e-mail by mistake, please completely delete it (and any attachments) and do not forward it or inform any other person of its contents.


	[[alternative HTML version deleted]]


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Mon May  2 11:24:42 2022
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Mon, 2 May 2022 19:24:42 +1000
Subject: [Rd] 
 New R version - Issue with as.vector coercion on data.frame
In-Reply-To: <8CF8374A-8E45-47FD-BD8A-418102EA6729@eniso-partners.com>
References: <8CF8374A-8E45-47FD-BD8A-418102EA6729@eniso-partners.com>
Message-ID: <CAJmOi+M7RREJx9SJatd2bnwk6X15n0w_mKD7m5-5=7FtmFdvww@mail.gmail.com>

This is intended. From NEWS, a simple text search for "as.vector" reveals

> as.vector() gains a data.frame method which returns a simple named list, also clearing a long standing ?FIXME? to enable as.vector(<data.frame>, mode="list"). This breaks code relying on as.vector(<data.frame>) to return the unchanged data frame.

On Mon, 2 May 2022 at 19:19, Marc Weibel <marc.weibel at eniso-partners.com> wrote:
>
> Hi
>
> I recently upgraded to the latest r version and got an issue with the command as.vector() on a data.frame object. With the previous R version the returned object was a vector but now it is formatted as a list (see below)
>
>
> > futures_quotes
>   SMI Future SMIM Future Euro Stoxx 50 Future S&P 500 Mini Future FTSE 100 Future Nikkei 225 Future
> 1      11999        2871                 3692                4150            7419             26853
> > class(futures_quotes)
> [1] "data.frame"
>
> > as.vector(futures_quotes[1,1:3])
> $`SMI Future`
> [1] 11999
>
> $`SMIM Future`
> [1] 2871
>
> $`Euro Stoxx 50 Future`
> [1] 3692
>
> > class(as.vector(futures_quotes[1,1:3]))
> [1] "list"
>
>
> Can you help me on this ? (I solved the issue temporarily with as.vector(t(futures_quotes[1,1:3]))
>
> Kind regards
> Marc Weibel
>
>
>
>  <http://www.enisopartners.com/>
> Dr. Marc Weibel
> CIO & Partner
> Tel: +41 44 286 17 02
> Mob: +41 78 892 96 55
> E-Mail: marc.weibel at enisopartners.com <mailto: marc.weibel at enisopartners.com>
>
> Eniso Partners AG
> Claridenstrasse 34 | Postfach | 8022 Z?rich
>
>  <https://www.linkedin.com/in/marc-weibel-29a396/>
> Based on previous e-mail correspondence with you and/or an agreement reached with you, Eniso Partners considers itself authorized to contact you via unsecured e-mail. Warning: E-mails can involve SUBSTANTIAL RISKS, e.g. lack of confidentiality, potential manipulation of contents and/or sender's address, incorrect recipient (misdirection), viruses etc. Eniso Partners assumes no responsibility for any loss or damage resulting from the use of e-mails. Eniso Partners recommends in particular that you do NOT SEND ANY SENSITIVE INFORMATION, that you do not include details of the previous message in any reply, and that you enter e-mail address(es) manually every time you write an e-mail. Please notify Eniso Partners immediately if you received this e-mail by mistake or if you do not wish to receive any further e-mail correspondence. If you have received this e-mail by mistake, please completely delete it (and any attachments) and do not forward it or inform any other person of its contents.
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From w||||@mwdun|@p @end|ng |rom gm@||@com  Mon May  2 17:07:41 2022
From: w||||@mwdun|@p @end|ng |rom gm@||@com (Bill Dunlap)
Date: Mon, 2 May 2022 08:07:41 -0700
Subject: [Rd] 
 New R version - Issue with as.vector coercion on data.frame
In-Reply-To: <8CF8374A-8E45-47FD-BD8A-418102EA6729@eniso-partners.com>
References: <8CF8374A-8E45-47FD-BD8A-418102EA6729@eniso-partners.com>
Message-ID: <CAHqSRuRC=Kptkcp6us6MsgYy2La+b=189fat=g4Y55apaB8mSA@mail.gmail.com>

In R-4.1.2 (and before) as.vector(aDataFrame) returned aDataFrame,
unchanged.  E.g.,
  4.1.2> aDataFrame <- data.frame(X=101:103, Y=201:203, Z=301:303)
  4.1.2> attr(aDataFrame, "anAttr") <- "an attribute"
  4.1.2> identical(as.vector(aDataFrame), aDataFrame)
  [1] TRUE
  4.1.2> dput(aDataFrame)
  structure(list(X = 101:103, Y = 201:203, Z = 301:303), class =
"data.frame", row.names = c(NA, -3L), anAttr = "an attribute")

In R-4.2.0 it removes the class, names, and row.names attributes, but
leaves other stray attributes alone.  E.g.,
  4.2.0> aDataFrame <- data.frame(X=101:103, Y=201:203, Z=301:303)
  4.2.0> attr(aDataFrame, "anAttr") <- "an attribute"
  4.2.0> identical(as.vector(aDataFrame), aDataFrame)
  [1] FALSE
  4.2.0> dput(aDataFrame)
  structure(list(X = 101:103, Y = 201:203, Z = 301:303), class =
"data.frame", row.names = c(NA, -3L), anAttr = "an attribute")
  4.2.0> dput(as.vector(aDataFrame))
  structure(list(X = 101:103, Y = 201:203, Z = 301:303), anAttr = "an
attribute")

In both versions as.list(aDataFrame) returns the same thing that R-4.1.2's
as.vector(aDataFrame) did.

I think that as.vector() is a function that few people should use.   It has
almost nothing to do with with the notion of a vector in math or physics.

-Bill

On Mon, May 2, 2022 at 2:19 AM Marc Weibel <marc.weibel at eniso-partners.com>
wrote:

> Hi
>
> I recently upgraded to the latest r version and got an issue with the
> command as.vector() on a data.frame object. With the previous R version the
> returned object was a vector but now it is formatted as a list (see below)
>
>
> > futures_quotes
>   SMI Future SMIM Future Euro Stoxx 50 Future S&P 500 Mini Future FTSE 100
> Future Nikkei 225 Future
> 1      11999        2871                 3692                4150
>   7419             26853
> > class(futures_quotes)
> [1] "data.frame"
>
> > as.vector(futures_quotes[1,1:3])
> $`SMI Future`
> [1] 11999
>
> $`SMIM Future`
> [1] 2871
>
> $`Euro Stoxx 50 Future`
> [1] 3692
>
> > class(as.vector(futures_quotes[1,1:3]))
> [1] "list"
>
>
> Can you help me on this ? (I solved the issue temporarily with
> as.vector(t(futures_quotes[1,1:3]))
>
> Kind regards
> Marc Weibel
>
>
>
>  <http://www.enisopartners.com/>
> Dr. Marc Weibel
> CIO & Partner
> Tel: +41 44 286 17 02
> Mob: +41 78 892 96 55
> E-Mail: marc.weibel at enisopartners.com <mailto:
> marc.weibel at enisopartners.com>
>
> Eniso Partners AG
> Claridenstrasse 34 | Postfach | 8022 Z?rich
>
>  <https://www.linkedin.com/in/marc-weibel-29a396/>
> Based on previous e-mail correspondence with you and/or an agreement
> reached with you, Eniso Partners considers itself authorized to contact you
> via unsecured e-mail. Warning: E-mails can involve SUBSTANTIAL RISKS, e.g.
> lack of confidentiality, potential manipulation of contents and/or sender's
> address, incorrect recipient (misdirection), viruses etc. Eniso Partners
> assumes no responsibility for any loss or damage resulting from the use of
> e-mails. Eniso Partners recommends in particular that you do NOT SEND ANY
> SENSITIVE INFORMATION, that you do not include details of the previous
> message in any reply, and that you enter e-mail address(es) manually every
> time you write an e-mail. Please notify Eniso Partners immediately if you
> received this e-mail by mistake or if you do not wish to receive any
> further e-mail correspondence. If you have received this e-mail by mistake,
> please completely delete it (and any attachments) and do not forward it or
> inform any other person of its contents.
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From w||||@mwdun|@p @end|ng |rom gm@||@com  Mon May  2 17:33:58 2022
From: w||||@mwdun|@p @end|ng |rom gm@||@com (Bill Dunlap)
Date: Mon, 2 May 2022 08:33:58 -0700
Subject: [Rd] 
 New R version - Issue with as.vector coercion on data.frame
In-Reply-To: <CAHqSRuRC=Kptkcp6us6MsgYy2La+b=189fat=g4Y55apaB8mSA@mail.gmail.com>
References: <8CF8374A-8E45-47FD-BD8A-418102EA6729@eniso-partners.com>
 <CAHqSRuRC=Kptkcp6us6MsgYy2La+b=189fat=g4Y55apaB8mSA@mail.gmail.com>
Message-ID: <CAHqSRuRiWWfFxY-rOa6LM7brHRaH5dEkToVnOy=L-wM_0xk=Wg@mail.gmail.com>

> In both versions as.list(aDataFrame) returns the same thing that
R-4.1.2's as.vector(aDataFrame) did.

I sent this too quickly.  I meant to say that as.list(aDataFrame) did the
same in both versions.  Since as.vector(aDataFrame) in 4.1.2 did nothing,
you can just drop that line from your code.

-Bill

On Mon, May 2, 2022 at 8:07 AM Bill Dunlap <williamwdunlap at gmail.com> wrote:

> In R-4.1.2 (and before) as.vector(aDataFrame) returned aDataFrame,
> unchanged.  E.g.,
>   4.1.2> aDataFrame <- data.frame(X=101:103, Y=201:203, Z=301:303)
>   4.1.2> attr(aDataFrame, "anAttr") <- "an attribute"
>   4.1.2> identical(as.vector(aDataFrame), aDataFrame)
>   [1] TRUE
>   4.1.2> dput(aDataFrame)
>   structure(list(X = 101:103, Y = 201:203, Z = 301:303), class =
> "data.frame", row.names = c(NA, -3L), anAttr = "an attribute")
>
> In R-4.2.0 it removes the class, names, and row.names attributes, but
> leaves other stray attributes alone.  E.g.,
>   4.2.0> aDataFrame <- data.frame(X=101:103, Y=201:203, Z=301:303)
>   4.2.0> attr(aDataFrame, "anAttr") <- "an attribute"
>   4.2.0> identical(as.vector(aDataFrame), aDataFrame)
>   [1] FALSE
>   4.2.0> dput(aDataFrame)
>   structure(list(X = 101:103, Y = 201:203, Z = 301:303), class =
> "data.frame", row.names = c(NA, -3L), anAttr = "an attribute")
>   4.2.0> dput(as.vector(aDataFrame))
>   structure(list(X = 101:103, Y = 201:203, Z = 301:303), anAttr = "an
> attribute")
>
> In both versions as.list(aDataFrame) returns the same thing that R-4.1.2's
> as.vector(aDataFrame) did.
>
> I think that as.vector() is a function that few people should use.   It
> has almost nothing to do with with the notion of a vector in math or
> physics.
>
> -Bill
>
> On Mon, May 2, 2022 at 2:19 AM Marc Weibel <marc.weibel at eniso-partners.com>
> wrote:
>
>> Hi
>>
>> I recently upgraded to the latest r version and got an issue with the
>> command as.vector() on a data.frame object. With the previous R version the
>> returned object was a vector but now it is formatted as a list (see below)
>>
>>
>> > futures_quotes
>>   SMI Future SMIM Future Euro Stoxx 50 Future S&P 500 Mini Future FTSE
>> 100 Future Nikkei 225 Future
>> 1      11999        2871                 3692                4150
>>     7419             26853
>> > class(futures_quotes)
>> [1] "data.frame"
>>
>> > as.vector(futures_quotes[1,1:3])
>> $`SMI Future`
>> [1] 11999
>>
>> $`SMIM Future`
>> [1] 2871
>>
>> $`Euro Stoxx 50 Future`
>> [1] 3692
>>
>> > class(as.vector(futures_quotes[1,1:3]))
>> [1] "list"
>>
>>
>> Can you help me on this ? (I solved the issue temporarily with
>> as.vector(t(futures_quotes[1,1:3]))
>>
>> Kind regards
>> Marc Weibel
>>
>>
>>
>>  <http://www.enisopartners.com/>
>> Dr. Marc Weibel
>> CIO & Partner
>> Tel: +41 44 286 17 02
>> Mob: +41 78 892 96 55
>> E-Mail: marc.weibel at enisopartners.com <mailto:
>> marc.weibel at enisopartners.com>
>>
>> Eniso Partners AG
>> Claridenstrasse 34 | Postfach | 8022 Z?rich
>>
>>  <https://www.linkedin.com/in/marc-weibel-29a396/>
>> Based on previous e-mail correspondence with you and/or an agreement
>> reached with you, Eniso Partners considers itself authorized to contact you
>> via unsecured e-mail. Warning: E-mails can involve SUBSTANTIAL RISKS, e.g.
>> lack of confidentiality, potential manipulation of contents and/or sender's
>> address, incorrect recipient (misdirection), viruses etc. Eniso Partners
>> assumes no responsibility for any loss or damage resulting from the use of
>> e-mails. Eniso Partners recommends in particular that you do NOT SEND ANY
>> SENSITIVE INFORMATION, that you do not include details of the previous
>> message in any reply, and that you enter e-mail address(es) manually every
>> time you write an e-mail. Please notify Eniso Partners immediately if you
>> received this e-mail by mistake or if you do not wish to receive any
>> further e-mail correspondence. If you have received this e-mail by mistake,
>> please completely delete it (and any attachments) and do not forward it or
>> inform any other person of its contents.
>>
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Tue May  3 13:54:06 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 3 May 2022 06:54:06 -0500
Subject: [Rd] R-devel tarball at ETH is zero
Message-ID: <25201.6110.67859.3480@rob.eddelbuettel.com>


Dear Martin as our trusted ETH point person,

I have some automated builders fall over as the tarball of R-devel is
currently empty:


edd at rob:/tmp$ wget https://stat.ethz.ch/R/daily/R-devel.tar.bz2
--2022-05-03 06:52:20--  https://stat.ethz.ch/R/daily/R-devel.tar.bz2
Resolving stat.ethz.ch (stat.ethz.ch)... 129.132.119.195
Connecting to stat.ethz.ch (stat.ethz.ch)|129.132.119.195|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 0 [application/x-bzip2]
Saving to: ?R-devel.tar.bz2?

R-devel.tar.bz2         [ <=>                ]       0  --.-KB/s    in 0s      

2022-05-03 06:52:21 (0.00 B/s) - ?R-devel.tar.bz2? saved [0/0]

edd at rob:/tmp$ ls -l R-devel.tar.bz2 
-rw-rw-r-- 1 edd edd 0 May  2 19:07 R-devel.tar.bz2
edd at rob:/tmp$ 


Can you please take a look / contact the right person, or let us know if we
should switch to svn (or git mirror) checkouts.

Many thanks,  Dirk


-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From pd@|gd @end|ng |rom gm@||@com  Tue May  3 14:11:14 2022
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Tue, 3 May 2022 14:11:14 +0200
Subject: [Rd] R-devel tarball at ETH is zero
In-Reply-To: <25201.6110.67859.3480@rob.eddelbuettel.com>
References: <25201.6110.67859.3480@rob.eddelbuettel.com>
Message-ID: <2F83E333-147C-44A9-BF96-2AE2667A8EF6@gmail.com>

FWIW, the tarballs in 

https://cran.r-project.org/src/base-prerelease/

seem ok at this point.

(We usually prefer that you use one of the two tarball sources over svn/git because "make dist" issues otherwise can go unnoticed.)

-pd 

> On 3 May 2022, at 13:54 , Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> Dear Martin as our trusted ETH point person,
> 
> I have some automated builders fall over as the tarball of R-devel is
> currently empty:
> 
> 
> edd at rob:/tmp$ wget https://stat.ethz.ch/R/daily/R-devel.tar.bz2
> --2022-05-03 06:52:20--  https://stat.ethz.ch/R/daily/R-devel.tar.bz2
> Resolving stat.ethz.ch (stat.ethz.ch)... 129.132.119.195
> Connecting to stat.ethz.ch (stat.ethz.ch)|129.132.119.195|:443... connected.
> HTTP request sent, awaiting response... 200 OK
> Length: 0 [application/x-bzip2]
> Saving to: ?R-devel.tar.bz2?
> 
> R-devel.tar.bz2         [ <=>                ]       0  --.-KB/s    in 0s      
> 
> 2022-05-03 06:52:21 (0.00 B/s) - ?R-devel.tar.bz2? saved [0/0]
> 
> edd at rob:/tmp$ ls -l R-devel.tar.bz2 
> -rw-rw-r-- 1 edd edd 0 May  2 19:07 R-devel.tar.bz2
> edd at rob:/tmp$ 
> 
> 
> Can you please take a look / contact the right person, or let us know if we
> should switch to svn (or git mirror) checkouts.
> 
> Many thanks,  Dirk
> 
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed May  4 11:32:24 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 4 May 2022 11:32:24 +0200
Subject: [Rd] R-devel tarball at ETH is zero
In-Reply-To: <2F83E333-147C-44A9-BF96-2AE2667A8EF6@gmail.com>
References: <25201.6110.67859.3480@rob.eddelbuettel.com>
 <2F83E333-147C-44A9-BF96-2AE2667A8EF6@gmail.com>
Message-ID: <25202.18472.82724.713807@stat.math.ethz.ch>

>>>>> peter dalgaard 
>>>>>     on Tue, 3 May 2022 14:11:14 +0200 writes:

    > FWIW, the tarballs in 
    > https://cran.r-project.org/src/base-prerelease/

    > seem ok at this point.

    > (We usually prefer that you use one of the two tarball sources over svn/git because "make dist" issues otherwise can go unnoticed.)

    > -pd 

    >> On 3 May 2022, at 13:54 , Dirk Eddelbuettel <edd at debian.org> wrote:
    >> 
    >> 
    >> Dear Martin as our trusted ETH point person,
    >> 
    >> I have some automated builders fall over as the tarball of R-devel is
    >> currently empty:
    >> 
    >> 
    >> edd at rob:/tmp$ wget https://stat.ethz.ch/R/daily/R-devel.tar.bz2
    >> --2022-05-03 06:52:20--  https://stat.ethz.ch/R/daily/R-devel.tar.bz2
    >> Resolving stat.ethz.ch (stat.ethz.ch)... 129.132.119.195
    >> Connecting to stat.ethz.ch (stat.ethz.ch)|129.132.119.195|:443... connected.
    >> HTTP request sent, awaiting response... 200 OK
    >> Length: 0 [application/x-bzip2]
    >> Saving to: ?R-devel.tar.bz2?
    >> 
    >> R-devel.tar.bz2         [ <=>                ]       0  --.-KB/s    in 0s      
    >> 
    >> 2022-05-03 06:52:21 (0.00 B/s) - ?R-devel.tar.bz2? saved [0/0]
    >> 
    >> edd at rob:/tmp$ ls -l R-devel.tar.bz2 
    >> -rw-rw-r-- 1 edd edd 0 May  2 19:07 R-devel.tar.bz2

I'm really sorry for this experience.

We are also a CRAN mirror, and this came after release of R
4.2.0 with its new 'binary' (sub)directories for Windows and 2
versions of macOS:  The necessary disk space  increased again
*AND*  for some reason the "supervisor" process which alerts
about "disk quota soon to be reached"  had stopped working  ---
for reasons yet unknown which our IT staff is investigating,
hence disk quota had been badly violated .. and even moving away
less important stuff (me, last evening, spending an hour in vain)
would not help to get below the limit..

When the disk quota was finally raised early this morning, I subsequently
manually started the process creating the tar balls etc (which
otherwise runs in 2 different versions 3x/day via cron
daemon)... and so tar balls should be back to normal for ca. 3
hours now.

Best regards,
Martin


From edd @end|ng |rom deb|@n@org  Wed May  4 13:54:14 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 4 May 2022 06:54:14 -0500
Subject: [Rd] R-devel tarball at ETH is zero
In-Reply-To: <25202.18472.82724.713807@stat.math.ethz.ch>
References: <25201.6110.67859.3480@rob.eddelbuettel.com>
 <2F83E333-147C-44A9-BF96-2AE2667A8EF6@gmail.com>
 <25202.18472.82724.713807@stat.math.ethz.ch>
Message-ID: <25202.26982.610527.832341@rob.eddelbuettel.com>


On 4 May 2022 at 11:32, Martin Maechler wrote:
| I'm really sorry for this experience.

Stuff happens -- thanks for fixing it.

The weekly build for the rocker/drd container of r-devel (and r-patched)
worked fine now that you restored the mirror, so big thanks!

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu May  5 16:08:33 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 5 May 2022 16:08:33 +0200
Subject: [Rd] 
 New R version - Issue with as.vector coercion on data.frame
In-Reply-To: <CAHqSRuRC=Kptkcp6us6MsgYy2La+b=189fat=g4Y55apaB8mSA@mail.gmail.com>
References: <8CF8374A-8E45-47FD-BD8A-418102EA6729@eniso-partners.com>
 <CAHqSRuRC=Kptkcp6us6MsgYy2La+b=189fat=g4Y55apaB8mSA@mail.gmail.com>
Message-ID: <25203.55905.107203.132628@stat.math.ethz.ch>

>>>>> Bill Dunlap 
>>>>>     on Mon, 2 May 2022 08:07:41 -0700 writes:

    > In R-4.1.2 (and before) as.vector(aDataFrame) returned aDataFrame,
    > unchanged.  E.g.,
    4.1.2> aDataFrame <- data.frame(X=101:103, Y=201:203, Z=301:303)
    4.1.2> attr(aDataFrame, "anAttr") <- "an attribute"
    4.1.2> identical(as.vector(aDataFrame), aDataFrame)
    > [1] TRUE
    4.1.2> dput(aDataFrame)
    > structure(list(X = 101:103, Y = 201:203, Z = 301:303), class =
    > "data.frame", row.names = c(NA, -3L), anAttr = "an attribute")

    > In R-4.2.0 it

is based on the already existing  as.list.data.frame() which

    > removes the class, names, and row.names attributes, but
    > leaves other stray attributes alone.  E.g.,
    4.2.0> aDataFrame <- data.frame(X=101:103, Y=201:203, Z=301:303)
    4.2.0> attr(aDataFrame, "anAttr") <- "an attribute"
    4.2.0> identical(as.vector(aDataFrame), aDataFrame)
    > [1] FALSE
    4.2.0> dput(aDataFrame)
    > structure(list(X = 101:103, Y = 201:203, Z = 301:303), class =
    > "data.frame", row.names = c(NA, -3L), anAttr = "an attribute")
    4.2.0> dput(as.vector(aDataFrame))
    > structure(list(X = 101:103, Y = 201:203, Z = 301:303), anAttr = "an
    > attribute")

Yes, this was a somewhat "hard" change in an effort to slightly
improve the still unsatisfactory behavior of  as.vector() and is.vector().
and it solved a very long standing FIXME / TODO which wanted
that

   as.vector(df, mode = "list")    should be the same as
   as.list  (df)


   [....]

    > I think that as.vector() is a function that few people should use.   It has
    > almost nothing to do with with the notion of a vector in math or physics.

I tend to agree on that.

The confusion comes from the fact that in R (and S before it, no?)
a list() or an expression() are also a 'vector'  {a generalized one},

but that math/physics/... term of a "vector" is what is an
"atomic vector" in R.

Note that we also ventured into a relatively time confusing effort
to do more about the  as.vector()  <-->  is.vector()  decrepancies.

One step towards that I'd like to take up again --- and was in
the mean time helped by some package maintainers who adapted
their code --- is to make  is.atomic(.)  truly a test for the
above "atomic vector"s.
It currently is *not*, as   is.atomic(NULL)   is TRUE,
but NULL is really not an atomic vector.

So our plan has been that is.atomic(NULL) should become FALSE, so
programmeRs could use is.atomic() checks before using
as.vector(),  which would bring them back to the traditional
realm of 1st semester math where your vector spaces are
typically R^n (or C^n ..)

Martin


    > -Bill

    > On Mon, May 2, 2022 at 2:19 AM Marc Weibel <marc.weibel at eniso-partners.com>
    > wrote:

    >> Hi
    >> 
    >> I recently upgraded to the latest r version and got an issue with the
    >> command as.vector() on a data.frame object. With the previous R version the
    >> returned object was a vector but now it is formatted as a list (see below)
    >> 
    >> 
    >> > futures_quotes
    >> SMI Future SMIM Future Euro Stoxx 50 Future S&P 500 Mini Future FTSE 100
    >> Future Nikkei 225 Future
    >> 1      11999        2871                 3692                4150
    >> 7419             26853
    >> > class(futures_quotes)
    >> [1] "data.frame"
    >> 
    >> > as.vector(futures_quotes[1,1:3])
    >> $`SMI Future`
    >> [1] 11999
    >> 
    >> $`SMIM Future`
    >> [1] 2871
    >> 
    >> $`Euro Stoxx 50 Future`
    >> [1] 3692
    >> 
    >> > class(as.vector(futures_quotes[1,1:3]))
    >> [1] "list"
    >> 
    >> 
    >> Can you help me on this ? (I solved the issue temporarily with
    >> as.vector(t(futures_quotes[1,1:3]))
    >> 
    >> Kind regards
    >> Marc Weibel
    >> 
    >> 
    >> <http://www.enisopartners.com/>
    >> Dr. Marc Weibel
    >> CIO & Partner
    >> Tel: +41 44 286 17 02
    >> Mob: +41 78 892 96 55
    >> E-Mail: marc.weibel at enisopartners.com <mailto:
    >> marc.weibel at enisopartners.com>
    >> 
    >> Eniso Partners AG
    >> Claridenstrasse 34 | Postfach | 8022 Z?rich
    >> 
    >> <https://www.linkedin.com/in/marc-weibel-29a396/>


From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Thu May  5 17:17:13 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Thu, 05 May 2022 15:17:13 +0000
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
Message-ID: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>

Hello,

Rgui.exe 4.2.0 does not receive characters via the Windows API's 
PostMessage function.

The Tinn-R project sends messages to Rgui.exe (SDI mode) via the Windows 
API's PostMessage function.
A simplification of the code (in object Pascal) can be seen below.

procedure TfMain.btnPasteClick(Sender: TObject);
var
   i: integer;
   sTmp: WideString;
   hBN: HWND;

begin
   hBN:= FindWindowA(nil,
                     'R Console (64-bit)');

   sTmp:= 'sd';

   for i:= 1 to Length(sTmp) do begin
     PostMessage(hBN,
                 WM_CHAR,
                 Ord(sTmp[i]),
                 0);
   end;

   PostMessage(hBN,
               WM_KEYDOWN,
               VK_RETURN, 0);
end;

This code has always worked fine for all versions of Rgui.exe with the 
exception of the last one released, ie 4.2.0.

We've been trying to get around the problem on the Object Pascal side, 
but without success so far.

Does anyone connected to the compilation of Rqui.exe know what the 
problem is?

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu May  5 18:17:53 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 5 May 2022 12:17:53 -0400
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
Message-ID: <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>

On 05/05/2022 11:17 a.m., jcfaria wrote:
> Hello,
> 
> Rgui.exe 4.2.0 does not receive characters via the Windows API's
> PostMessage function.
> 
> The Tinn-R project sends messages to Rgui.exe (SDI mode) via the Windows
> API's PostMessage function.
> A simplification of the code (in object Pascal) can be seen below.
> 
> procedure TfMain.btnPasteClick(Sender: TObject);
> var
>     i: integer;
>     sTmp: WideString;
>     hBN: HWND;
> 
> begin
>     hBN:= FindWindowA(nil,
>                       'R Console (64-bit)');
> 
>     sTmp:= 'sd';
> 
>     for i:= 1 to Length(sTmp) do begin
>       PostMessage(hBN,
>                   WM_CHAR,
>                   Ord(sTmp[i]),
>                   0);
>     end;
> 
>     PostMessage(hBN,
>                 WM_KEYDOWN,
>                 VK_RETURN, 0);
> end;
> 
> This code has always worked fine for all versions of Rgui.exe with the
> exception of the last one released, ie 4.2.0.
> 
> We've been trying to get around the problem on the Object Pascal side,
> but without success so far.
> 
> Does anyone connected to the compilation of Rqui.exe know what the
> problem is?

It could be that the new build enforces Windows security more 
stringently.  More details are described in the answer to this question: 
  https://stackoverflow.com/a/40139498/2554330, but at a minimum you 
should be checking the return value from PostMessage.

Duncan Murdoch

> 
> Best,
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> Jose Claudio Faria
> UESC/DCET/Brasil
> joseclaudio.faria at gmail.com
> Telefones:
> 55(73)3680.5545 - UESC
> 55(73)99966.9100 - VIVO
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> If you have software to deal with statistics, you have arms,
> if you have good software, you have arms and legs,
> if you have software like R, you have arms, legs and wings...
> the height of your flight depends only on you.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Fri May  6 07:03:31 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Fri, 06 May 2022 05:03:31 +0000
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
Message-ID: <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>

Dear Duncan,
I believe the problem is of a different nature.
I get TRUE 3 times running the code below:

procedure TfMain.btnPasteClick(Sender: TObject);
var
   i: integer;
   sTmp: string;
   hBN: HWND;
   j: bool;

begin
   hBN:= FindWindowA(nil,
                     'R Console (64-bit)');

   sTmp:= 'sd';

   for i:= 1 to Length(sTmp) do begin
     j:= PostMessage(hBN,
                     WM_CHAR,
                     Ord(sTmp[i]),
                     0);

     ShowMessage(BoolToStr(j,
                           True));
   end;

   j:= PostMessage(hBN,
               WM_KEYDOWN,
               VK_RETURN, 0);

   ShowMessage(BoolToStr(j,
                         True));
end;

That is, Rgui is receiving the message of the characters (via 
PostMessage), but it is blocking because it does not show them in the 
console.
The only thing Rgui blames is Carriage Return, as it adds an additional 
prompt with each run.

 >
 >

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

------ Mensagem original ------
De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
Enviado(s): 05/05/2022 13:17:53
Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
Windows API's PostMessage function

>On 05/05/2022 11:17 a.m., jcfaria wrote:
>>Hello,
>>
>>Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>PostMessage function.
>>
>>The Tinn-R project sends messages to Rgui.exe (SDI mode) via the Windows
>>API's PostMessage function.
>>A simplification of the code (in object Pascal) can be seen below.
>>
>>procedure TfMain.btnPasteClick(Sender: TObject);
>>var
>>     i: integer;
>>     sTmp: WideString;
>>     hBN: HWND;
>>
>>begin
>>     hBN:= FindWindowA(nil,
>>                       'R Console (64-bit)');
>>
>>     sTmp:= 'sd';
>>
>>     for i:= 1 to Length(sTmp) do begin
>>       PostMessage(hBN,
>>                   WM_CHAR,
>>                   Ord(sTmp[i]),
>>                   0);
>>     end;
>>
>>     PostMessage(hBN,
>>                 WM_KEYDOWN,
>>                 VK_RETURN, 0);
>>end;
>>
>>This code has always worked fine for all versions of Rgui.exe with the
>>exception of the last one released, ie 4.2.0.
>>
>>We've been trying to get around the problem on the Object Pascal side,
>>but without success so far.
>>
>>Does anyone connected to the compilation of Rqui.exe know what the
>>problem is?
>
>It could be that the new build enforces Windows security more stringently.  More details are described in the answer to this question:  https://stackoverflow.com/a/40139498/2554330, but at a minimum you should be checking the return value from PostMessage.
>
>Duncan Murdoch
>
>>
>>Best,
>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>Jose Claudio Faria
>>UESC/DCET/Brasil
>>joseclaudio.faria at gmail.com
>>Telefones:
>>55(73)3680.5545 - UESC
>>55(73)99966.9100 - VIVO
>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>If you have software to deal with statistics, you have arms,
>>if you have good software, you have arms and legs,
>>if you have software like R, you have arms, legs and wings...
>>the height of your flight depends only on you.
>>
>>	[[alternative HTML version deleted]]
>>
>>______________________________________________
>>R-devel at r-project.org mailing list
>>https://stat.ethz.ch/mailman/listinfo/r-devel
>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri May  6 09:24:44 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 6 May 2022 09:24:44 +0200
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
Message-ID: <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>


On 5/6/22 07:03, jcfaria wrote:
> Dear Duncan,
> I believe the problem is of a different nature.
> I get TRUE 3 times running the code below:
>
> procedure TfMain.btnPasteClick(Sender: TObject);
> var
> ? i: integer;
> ? sTmp: string;
> ? hBN: HWND;
> ? j: bool;
>
> begin
> ? hBN:= FindWindowA(nil,
> ??????????????????? 'R Console (64-bit)');
>
> ? sTmp:= 'sd';
>
> ? for i:= 1 to Length(sTmp) do begin
> ??? j:= PostMessage(hBN,
> ??????????????????? WM_CHAR,
> ??????????????????? Ord(sTmp[i]),
> ??????????????????? 0);
>
> ??? ShowMessage(BoolToStr(j,
> ????????????????????????? True));
> ? end;
>
> ? j:= PostMessage(hBN,
> ????????????? WM_KEYDOWN,
> ????????????? VK_RETURN, 0);
>
> ? ShowMessage(BoolToStr(j,
> ??????????????????????? True));
> end;
>
> That is, Rgui is receiving the message of the characters (via 
> PostMessage), but it is blocking because it does not show them in the 
> console.
> The only thing Rgui blames is Carriage Return, as it adds an 
> additional prompt with each run.

I can't provide a good guess what impacted your use, but if you could 
give me a full example, ideally in C, which can be compiled with 
Rtools42 (so gcc, MinGW) and I can edit/recompile, and works with R 4.1, 
I am happy to help debugging on 4.2.

Rgui now uses GraphApp Unicode windows on systems where it didn't 
before, because it uses UTF-8 also on systems it didn't before (on 
systems that would use a single-byte locale in R 4.1). These Unicode 
windows are a different code path and there may be bugs not reported 
previously, including processing inputs (recently I fixed handling of 
accents, for example). Otherwise indeed R now uses UTF-8 as native 
encoding and UCRT as the C runtime.

Best
Tomas


>
> >
> >
>
> Best,
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> Jose Claudio Faria
> UESC/DCET/Brasil
> joseclaudio.faria at gmail.com
> Telefones:
> 55(73)3680.5545 - UESC
> 55(73)99966.9100 - VIVO
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> If you have software to deal with statistics, you have arms,
> if you have good software, you have arms and legs,
> if you have software like R, you have arms, legs and wings...
> the height of your flight depends only on you.
>
> ------ Mensagem original ------
> De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
> Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
> Enviado(s): 05/05/2022 13:17:53
> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
> Windows API's PostMessage function
>
>> On 05/05/2022 11:17 a.m., jcfaria wrote:
>>> Hello,
>>>
>>> Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>> PostMessage function.
>>>
>>> The Tinn-R project sends messages to Rgui.exe (SDI mode) via the 
>>> Windows
>>> API's PostMessage function.
>>> A simplification of the code (in object Pascal) can be seen below.
>>>
>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>> var
>>> ??? i: integer;
>>> ??? sTmp: WideString;
>>> ??? hBN: HWND;
>>>
>>> begin
>>> ??? hBN:= FindWindowA(nil,
>>> ????????????????????? 'R Console (64-bit)');
>>>
>>> ??? sTmp:= 'sd';
>>>
>>> ??? for i:= 1 to Length(sTmp) do begin
>>> ????? PostMessage(hBN,
>>> ????????????????? WM_CHAR,
>>> ????????????????? Ord(sTmp[i]),
>>> ????????????????? 0);
>>> ??? end;
>>>
>>> ??? PostMessage(hBN,
>>> ??????????????? WM_KEYDOWN,
>>> ??????????????? VK_RETURN, 0);
>>> end;
>>>
>>> This code has always worked fine for all versions of Rgui.exe with the
>>> exception of the last one released, ie 4.2.0.
>>>
>>> We've been trying to get around the problem on the Object Pascal side,
>>> but without success so far.
>>>
>>> Does anyone connected to the compilation of Rqui.exe know what the
>>> problem is?
>>
>> It could be that the new build enforces Windows security more 
>> stringently.? More details are described in the answer to this 
>> question:? https://stackoverflow.com/a/40139498/2554330, but at a 
>> minimum you should be checking the return value from PostMessage.
>>
>> Duncan Murdoch
>>
>>>
>>> Best,
>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>> Jose Claudio Faria
>>> UESC/DCET/Brasil
>>> joseclaudio.faria at gmail.com
>>> Telefones:
>>> 55(73)3680.5545 - UESC
>>> 55(73)99966.9100 - VIVO
>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>> If you have software to deal with statistics, you have arms,
>>> if you have good software, you have arms and legs,
>>> if you have software like R, you have arms, legs and wings...
>>> the height of your flight depends only on you.
>>>
>>> ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From cvoeten @end|ng |rom gm@||@com  Sat May  7 15:14:08 2022
From: cvoeten @end|ng |rom gm@||@com (Cesko Voeten)
Date: Sat, 7 May 2022 15:14:08 +0200
Subject: [Rd] Regression in 4.2.0: unable to type special characters in
 Windows RGui
Message-ID: <027b1c8f-c479-e269-4824-2c1ff0507e4a@gmail.com>

Hi,

Since upgrading to 4.2.0, I can't type special characters in RGui anymore. Specifically affected are at least "'~^ which, on my US-International keyboard layout, all rely on dead keys. This was not a problem in R <= 4.1.3, although I can't say whether the reason is any change in R itself, or the fact that 4.2.0 is the first version built against ucrt. OS is an up-to-date Windows 10, language is Dutch. I tried toggling the 'experimental' Unicode support in Windows's Country & Region settings, but it makes no difference. Is this a known regression?

Cesko Voeten


From m|ch@|2992 @end|ng |rom gm@||@com  Sun May  8 19:12:46 2022
From: m|ch@|2992 @end|ng |rom gm@||@com (=?UTF-8?Q?Micha=C5=82_Bojanowski?=)
Date: Sun, 8 May 2022 19:12:46 +0200
Subject: [Rd] Typo in Renviron.site in R 4.2.0 on Ubuntu?
Message-ID: <CAByPayEf3L4N0JaNYTs6JUQ42vmhTNKCKWWf6+-3bd1CKx5jMA@mail.gmail.com>

Hi,

I installed R 4.2.0 on Ubuntu (from CRAN apt repository) and some
startup errors lead me to Renviron.site and it's last line:

R_LIBS_SITE="/usr/local/lib/R/site-library/:${R_LIBS_SITE}:/usr/lib/R/library'"

Note the unmatched single quote just before the closing double quote.
That's a typo, is it not?

~Michal


From edd @end|ng |rom deb|@n@org  Sun May  8 19:34:55 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 8 May 2022 12:34:55 -0500
Subject: [Rd] Typo in Renviron.site in R 4.2.0 on Ubuntu?
In-Reply-To: <CAByPayEf3L4N0JaNYTs6JUQ42vmhTNKCKWWf6+-3bd1CKx5jMA@mail.gmail.com>
References: <CAByPayEf3L4N0JaNYTs6JUQ42vmhTNKCKWWf6+-3bd1CKx5jMA@mail.gmail.com>
Message-ID: <25207.65343.393792.303403@rob.eddelbuettel.com>


On 8 May 2022 at 19:12, Micha? Bojanowski wrote:
| I installed R 4.2.0 on Ubuntu (from CRAN apt repository) and some
| startup errors lead me to Renviron.site and it's last line:
| 
| R_LIBS_SITE="/usr/local/lib/R/site-library/:${R_LIBS_SITE}:/usr/lib/R/library'"
| 
| Note the unmatched single quote just before the closing double quote.
| That's a typo, is it not?

Good catch, thank you, and fixed!

I altered that file / carried the setting over from Renviron at the beginning
of the test cycle in the first or second alpha release. The extra apostrophe
does not seem to have created an issue during all those tests, or since,
under either Debian or Ubuntu. So three cheers to R for robustly parsing
configs I may have messed up ;-)

(And if I may: a more focussed venue for a bug report may have been the
r-sig-debian list for R on Debian/Ubuntu, or a bug report at bugs.debian.org,
or an email to me. My name is at the top of the file.  No point in sending it
to every mailbox of r-devel subscribers.)

Thanks again,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sun May  8 19:43:26 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sun, 8 May 2022 10:43:26 -0700
Subject: [Rd] Typo in Renviron.site in R 4.2.0 on Ubuntu?
In-Reply-To: <25207.65343.393792.303403@rob.eddelbuettel.com>
References: <CAByPayEf3L4N0JaNYTs6JUQ42vmhTNKCKWWf6+-3bd1CKx5jMA@mail.gmail.com>
 <25207.65343.393792.303403@rob.eddelbuettel.com>
Message-ID: <CAFDcVCRUeC40GYYuQmMYrZn9aXWGD1B5B+KW436xZsOKHYjBog@mail.gmail.com>

> ... The extra apostrophe does not seem to have created an issue during all those tests, or since, under either Debian or Ubuntu.

I think that is because the system library '/usr/lib/R/library' is
always appended at the end of the library path, so that non-existing
to folder (the one with the extra single quote appended) makes no
difference; it's silently ignored by R if used.

This begs the question, why is the system library added to the site
library path in the first place?  I would argue that:

R_LIBS_SITE="/usr/local/lib/R/site-library/:${R_LIBS_SITE}"

is the correct way here.

/Henrik

On Sun, May 8, 2022 at 10:35 AM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 8 May 2022 at 19:12, Micha? Bojanowski wrote:
> | I installed R 4.2.0 on Ubuntu (from CRAN apt repository) and some
> | startup errors lead me to Renviron.site and it's last line:
> |
> | R_LIBS_SITE="/usr/local/lib/R/site-library/:${R_LIBS_SITE}:/usr/lib/R/library'"
> |
> | Note the unmatched single quote just before the closing double quote.
> | That's a typo, is it not?
>
> Good catch, thank you, and fixed!
>
> I altered that file / carried the setting over from Renviron at the beginning
> of the test cycle in the first or second alpha release. The extra apostrophe
> does not seem to have created an issue during all those tests, or since,
> under either Debian or Ubuntu. So three cheers to R for robustly parsing
> configs I may have messed up ;-)
>
> (And if I may: a more focussed venue for a bug report may have been the
> r-sig-debian list for R on Debian/Ubuntu, or a bug report at bugs.debian.org,
> or an email to me. My name is at the top of the file.  No point in sending it
> to every mailbox of r-devel subscribers.)
>
> Thanks again,  Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m|ch@|2992 @end|ng |rom gm@||@com  Mon May  9 00:43:00 2022
From: m|ch@|2992 @end|ng |rom gm@||@com (=?UTF-8?Q?Micha=C5=82_Bojanowski?=)
Date: Mon, 9 May 2022 00:43:00 +0200
Subject: [Rd] Typo in Renviron.site in R 4.2.0 on Ubuntu?
In-Reply-To: <25207.65343.393792.303403@rob.eddelbuettel.com>
References: <CAByPayEf3L4N0JaNYTs6JUQ42vmhTNKCKWWf6+-3bd1CKx5jMA@mail.gmail.com>
 <25207.65343.393792.303403@rob.eddelbuettel.com>
Message-ID: <CAByPayGMTYkXezLEEUjQd7B8gSw5YY8CGiFbY4c1zUPwV72Rjg@mail.gmail.com>

> (And if I may: a more focussed venue for a bug report may have been the
> r-sig-debian list for R on Debian/Ubuntu, or a bug report at bugs.debian.org,
> or an email to me. My name is at the top of the file.  No point in sending it
> to every mailbox of r-devel subscribers.)


Indeed. Sorry. I thought about it, but wasn't sure if the typo is on
the R-source level or rather Debian packaging...

Best, Michal


From edd @end|ng |rom deb|@n@org  Mon May  9 00:55:34 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 8 May 2022 17:55:34 -0500
Subject: [Rd] Typo in Renviron.site in R 4.2.0 on Ubuntu?
In-Reply-To: <CAByPayGMTYkXezLEEUjQd7B8gSw5YY8CGiFbY4c1zUPwV72Rjg@mail.gmail.com>
References: <CAByPayEf3L4N0JaNYTs6JUQ42vmhTNKCKWWf6+-3bd1CKx5jMA@mail.gmail.com>
 <25207.65343.393792.303403@rob.eddelbuettel.com>
 <CAByPayGMTYkXezLEEUjQd7B8gSw5YY8CGiFbY4c1zUPwV72Rjg@mail.gmail.com>
Message-ID: <25208.19046.219637.520352@rob.eddelbuettel.com>


On 9 May 2022 at 00:43, Micha? Bojanowski wrote:
| > (And if I may: a more focussed venue for a bug report may have been the
| > r-sig-debian list for R on Debian/Ubuntu, or a bug report at bugs.debian.org,
| > or an email to me. My name is at the top of the file.  No point in sending it
| > to every mailbox of r-devel subscribers.)
| 
| Indeed. Sorry. I thought about it, but wasn't sure if the typo is on
| the R-source level or rather Debian packaging...

No worries! I am glad you brought it forward but, again, since I tried to
leave my name in the file I at least thought that made origin more obvious.

See you over at r-sig-debian which is a really useful and no-nonsense list.

Cheers, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon May  9 10:23:43 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 9 May 2022 10:23:43 +0200
Subject: [Rd] Regression in 4.2.0: unable to type special characters in
 Windows RGui
In-Reply-To: <027b1c8f-c479-e269-4824-2c1ff0507e4a@gmail.com>
References: <027b1c8f-c479-e269-4824-2c1ff0507e4a@gmail.com>
Message-ID: <a44a69d2-987e-b2a9-2559-acc810ebc17e@gmail.com>


On 5/7/22 15:14, Cesko Voeten wrote:
> Hi,
>
> Since upgrading to 4.2.0, I can't type special characters in RGui 
> anymore. Specifically affected are at least "'~^ which, on my 
> US-International keyboard layout, all rely on dead keys. This was not 
> a problem in R <= 4.1.3, although I can't say whether the reason is 
> any change in R itself, or the fact that 4.2.0 is the first version 
> built against ucrt. OS is an up-to-date Windows 10, language is Dutch. 
> I tried toggling the 'experimental' Unicode support in Windows's 
> Country & Region settings, but it makes no difference. Is this a known 
> regression?

Thanks, could you please try the latest R-patched snapshot build and 
test it there? If there is still any problem, please report.

I've fixed handling of the dead keys in Rgui/GraphApp last week. It was 
a long standing bug (lack of support) in GraphApp Unicode windows, which 
are used when R is running in a multi-byte locale. As R 4.2 switched to 
UTF-8, this code path started to be used on systems where it wasn't 
before, but sadly this hasn't been discovered by testing before the release.

Technically, there were two bugs: one that dead keys could not be 
printed in non-combining form in principle, and another that some 
accents were not recognized. The former should be fixed fully. For the 
latter, I've added support for a number of accent keys and I can add 
more if needed (and if there is anyone who can test that).

Please test, in principle, there may be also other issues in the Unicode 
windows not reported before, and it would be nice to get these things 
fixed at least for R 4.1.

Thanks
Tomas





>
> Cesko Voeten
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From cvoeten @end|ng |rom gm@||@com  Mon May  9 19:44:08 2022
From: cvoeten @end|ng |rom gm@||@com (Cesko Voeten)
Date: Mon, 9 May 2022 19:44:08 +0200
Subject: [Rd] Regression in 4.2.0: unable to type special characters in
 Windows RGui
In-Reply-To: <a44a69d2-987e-b2a9-2559-acc810ebc17e@gmail.com>
References: <027b1c8f-c479-e269-4824-2c1ff0507e4a@gmail.com>
 <a44a69d2-987e-b2a9-2559-acc810ebc17e@gmail.com>
Message-ID: <5d91c1ac-b6e2-e446-5e23-8430514ddfb8@gmail.com>

Hi Tomas,

On 09-05-2022 at 10:23, Tomas Kalibera wrote:
> 
> On 5/7/22 15:14, Cesko Voeten wrote:
>> Hi,
>>
>> Since upgrading to 4.2.0, I can't type special characters in RGui anymore. Specifically affected are at least "'~^ which, on my US-International keyboard layout, all rely on dead keys. This was not a problem in R <= 4.1.3, although I can't say whether the reason is any change in R itself, or the fact that 4.2.0 is the first version built against ucrt. OS is an up-to-date Windows 10, language is Dutch. I tried toggling the 'experimental' Unicode support in Windows's Country & Region settings, but it makes no difference. Is this a known regression?
> 
> Thanks, could you please try the latest R-patched snapshot build and test it there? If there is still any problem, please report.

No problem, happy to test! First of all, I'm happy to say it works and I can type deadkey characters again, but there are some issues and discrepancies compared to other Windows apps:

  - Some accents don't work. For instance, pressing 'a produces ?, but pressing 'a produces 'a rather than ?. From my testing, `^~ seem to work as expected, but '" don't.
  - Nonexistent deadkey combinations are handled differently from native Windows. For example, typing ~^ should output ~^, but produces nothing. Typing ~^a should output ~^a, but actually yields ~?. So it seems that the first ~ is correctly translated to the tilde symbol, but simultaneously the second ^ is being treated as a new deadkey press, which other Windows programs don't do in this case.
  - Related to the above two issues, '& should produce '&, while it only gives &. This again affects only '" --- something like ^& correctly produces ^&.

Also, I'm noticing only now that selecting typed text in RGui and pressing Ctrl deletes that text, so trying to Ctrl+C text that I typed is kind of awkward. But this might simply be a feature that I wasn't aware of before.

Thanks for your efforts! I hope these observations help.

Cesko

> 
> I've fixed handling of the dead keys in Rgui/GraphApp last week. It was a long standing bug (lack of support) in GraphApp Unicode windows, which are used when R is running in a multi-byte locale. As R 4.2 switched to UTF-8, this code path started to be used on systems where it wasn't before, but sadly this hasn't been discovered by testing before the release.
> 
> Technically, there were two bugs: one that dead keys could not be printed in non-combining form in principle, and another that some accents were not recognized. The former should be fixed fully. For the latter, I've added support for a number of accent keys and I can add more if needed (and if there is anyone who can test that).
> 
> Please test, in principle, there may be also other issues in the Unicode windows not reported before, and it would be nice to get these things fixed at least for R 4.1.
> 
> Thanks
> Tomas
> 
> 
> 
> 
> 
>>
>> Cesko Voeten
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From w@|ter@djur|c @end|ng |rom gm@||@com  Mon May  9 18:36:50 2022
From: w@|ter@djur|c @end|ng |rom gm@||@com (Gmail)
Date: Mon, 9 May 2022 18:36:50 +0200
Subject: [Rd] Building R-4.1.3  from source - creating .msi fails
Message-ID: <07e901d863c2$fbe20ad0$f3a62070$@gmail.com>

Dear all, 
lately I was building R-4.1.3 from source and 
as the final step I decided to also try and build the .msi file. 

I was following along the R Admin manual and using Jeroens ?r-windows/r-base? GitHub repo as a basis. 
The build, the tests all the way to the Inno-Setup Windows .exe installer completed successfully - but not the "R-4.1.3.msi" file. 
Since I am not really knowledgeable when it comes to debugging WiX failures I was hoping someone here has some helpful comments. 

Below are the logs/output/errors/file excerpts: 
=========================

R-4.1.3.log: 
----------------
Windows Installer XML Toolset Compiler version 3.11.2.4516
Copyright (c) .NET Foundation and contributors. All rights reserved.

*** asterisk lines separate content of different files **********************************

*****************************************************************************
R.wxs [file]
D:\r-base\src\R-source\src\gnuwin32\installer\R.wxs(50036) : error CNDL0104 : Not a valid source file; 
detail: The 'DirectoryRef' start tag on line 50033 position 14 does not match the end tag of 'Component'. Line 50036, position 19.


*****************************************************************************
R.wxs [file] (lines 50032 ? 50037, etc.) 
I understand the error is the result of line 50034 having the first of many (after that line there are hundreds) 
?unprovoked? NA?s : 
...
...
            </DirectoryRef>
            <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
    NA
                    <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="R-4.1.3\library\base\help\print.DLLInfoList.html" />
                </Component>
            </DirectoryRef>
            <DirectoryRef Id="dir4A5E34FDE4B660BFC361AB8682CC00A3">
....
....
Additionally here follows  line 82158 where, because there are no more file-ids after line 82160 below the NAs also disappear: 
            <DirectoryRef Id="dir1FF2414B716F9EC0C950A7D0C5600532">
    NA
                    <File Id="fil7FBA10F4604BA92660D4FA85CA81B1BC" KeyPath="yes" Source="R-4.1.3\library\Matrix\help\coerce+2ClsTMatrix+2CdsTMatrix-method.html" />
                </Component>
            </DirectoryRef>
            <DirectoryRef Id="dirD31021A615C26B5D3F93CF12408AE4B5">
                <Directory Id="dir0016419565268E77B190EFC6ECFE56AD" Name="LC_MESSAGES" />
            </DirectoryRef>

*****************************************************************************
files.wxs [file] here is the corresponding files Fragment of the above (first)  "corrupted" tag 
ie of file-id: fil49DED439D60E725AA5D6402B8A36B915
...
...
<Fragment>
        <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
            <Component Id="cmp9D50FF8D0F55461A69B18CCAC6292CA3" Guid="PUT-GUID-HERE">
                <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="SourceDir\library\base\help\print.DLLInfoList.html" />
            </Component>
        </DirectoryRef>
    </Fragment>
    <Fragment>
...
...

*****************************************************************************
The ?WiXins.R? file I am using is the unmodified /src/gnuwin32/installer/WiXins.R of the .tar.gz downloaded from: https://cran.r-project.org/src/base/R-4/R-4.1.3.tar.gz  

=========================
Greetings, 
Walter 


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue May 10 14:02:19 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 10 May 2022 14:02:19 +0200
Subject: [Rd] Regression in 4.2.0: unable to type special characters in
 Windows RGui
In-Reply-To: <5d91c1ac-b6e2-e446-5e23-8430514ddfb8@gmail.com>
References: <027b1c8f-c479-e269-4824-2c1ff0507e4a@gmail.com>
 <a44a69d2-987e-b2a9-2559-acc810ebc17e@gmail.com>
 <5d91c1ac-b6e2-e446-5e23-8430514ddfb8@gmail.com>
Message-ID: <f16306c8-4c08-c0a9-b2f6-f91eb2983c25@gmail.com>


On 5/9/22 19:44, Cesko Voeten wrote:
> Hi Tomas,
>
> On 09-05-2022 at 10:23, Tomas Kalibera wrote:
>>
>> On 5/7/22 15:14, Cesko Voeten wrote:
>>> Hi,
>>>
>>> Since upgrading to 4.2.0, I can't type special characters in RGui 
>>> anymore. Specifically affected are at least "'~^ which, on my 
>>> US-International keyboard layout, all rely on dead keys. This was 
>>> not a problem in R <= 4.1.3, although I can't say whether the reason 
>>> is any change in R itself, or the fact that 4.2.0 is the first 
>>> version built against ucrt. OS is an up-to-date Windows 10, language 
>>> is Dutch. I tried toggling the 'experimental' Unicode support in 
>>> Windows's Country & Region settings, but it makes no difference. Is 
>>> this a known regression?
>>
>> Thanks, could you please try the latest R-patched snapshot build and 
>> test it there? If there is still any problem, please report.

Hi Cesko,

thanks a lot for the testing.

>
> No problem, happy to test! First of all, I'm happy to say it works and 
> I can type deadkey characters again, but there are some issues and 
> discrepancies compared to other Windows apps:
>
> ?- Some accents don't work. For instance, pressing 'a produces ?, but 
> pressing 'a produces 'a rather than ?. From my testing, `^~ seem to 
> work as expected, but '" don't.

I could reproduce this on the US International keyboard and it is fixed 
now. There may be missing support for more accents, so if you or anyone 
else find about them, please let me know.

> ?- Nonexistent deadkey combinations are handled differently from 
> native Windows. For example, typing ~^ should output ~^, but produces 
> nothing. Typing ~^a should output ~^a, but actually yields ~?. So it 
> seems that the first ~ is correctly translated to the tilde symbol, 
> but simultaneously the second ^ is being treated as a new deadkey 
> press, which other Windows programs don't do in this case.
Thanks, fixed now. It was another bug in the old code, plus a "feature" 
I added that by pressing e.g. the dead-key apostrophe twice you get it 
printed only once (this is what Linux does and I find it more natural). 
But I made it now to work as usual on Windows.
> ?- Related to the above two issues, '& should produce '&, while it 
> only gives &. This again affects only '" --- something like ^& 
> correctly produces ^&.

It should be fixed by now as well.

The fixes are in 82332 (R-patched) and 82331 (R-devel). If you could 
test again after the snapshot build gets there, that would be great. It 
is easy to miss something.

When testing now, I've been using http://kbdlayout.info/ as a reference 
for several keyboard layouts on Windows, to find how to type different 
dead-keys. That can give you also names of the deadkeys, which can be 
easily communicated without having to copy-paste from the Rgui window. 
On some layouts, additional deadkeys are available with right Alt (AltGr).

>
> Also, I'm noticing only now that selecting typed text in RGui and 
> pressing Ctrl deletes that text, so trying to Ctrl+C text that I typed 
> is kind of awkward. But this might simply be a feature that I wasn't 
> aware of before.

Interesting. It isn't happening on my system, but I can't tell whether 
it is a "feature" under some circumstances. Maybe you can try to find 
out more about this: whether it is repeatable, whether it depends on 
some setting, whether it was happening also in R 4.1, etc.

> Thanks for your efforts! I hope these observations help.
They did, thanks!

Tomas

>
> Cesko
>
>>
>> I've fixed handling of the dead keys in Rgui/GraphApp last week. It 
>> was a long standing bug (lack of support) in GraphApp Unicode 
>> windows, which are used when R is running in a multi-byte locale. As 
>> R 4.2 switched to UTF-8, this code path started to be used on systems 
>> where it wasn't before, but sadly this hasn't been discovered by 
>> testing before the release.
>>
>> Technically, there were two bugs: one that dead keys could not be 
>> printed in non-combining form in principle, and another that some 
>> accents were not recognized. The former should be fixed fully. For 
>> the latter, I've added support for a number of accent keys and I can 
>> add more if needed (and if there is anyone who can test that).
>>
>> Please test, in principle, there may be also other issues in the 
>> Unicode windows not reported before, and it would be nice to get 
>> these things fixed at least for R 4.1.
>>
>> Thanks
>> Tomas
>>
>>
>>
>>
>>
>>>
>>> Cesko Voeten
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue May 10 15:07:15 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 10 May 2022 15:07:15 +0200
Subject: [Rd] Building R-4.1.3 from source - creating .msi fails
In-Reply-To: <07e901d863c2$fbe20ad0$f3a62070$@gmail.com>
References: <07e901d863c2$fbe20ad0$f3a62070$@gmail.com>
Message-ID: <7eb5c514-8cb8-035c-9ee3-38d3f2ded174@gmail.com>


On 5/9/22 18:36, Gmail wrote:
> Dear all,
> lately I was building R-4.1.3 from source and
> as the final step I decided to also try and build the .msi file.
>
> I was following along the R Admin manual and using Jeroens ?r-windows/r-base? GitHub repo as a basis.
> The build, the tests all the way to the Inno-Setup Windows .exe installer completed successfully - but not the "R-4.1.3.msi" file.

The MSI installer is not supported. I can't see it mentioned in R-Admin, 
but if you found it there or in some documentation, please report, so 
that it can be removed.

Best
Tomas

> Since I am not really knowledgeable when it comes to debugging WiX failures I was hoping someone here has some helpful comments.
>
> Below are the logs/output/errors/file excerpts:
> =========================
>
> R-4.1.3.log:
> ----------------
> Windows Installer XML Toolset Compiler version 3.11.2.4516
> Copyright (c) .NET Foundation and contributors. All rights reserved.
>
> *** asterisk lines separate content of different files **********************************
>
> *****************************************************************************
> R.wxs [file]
> D:\r-base\src\R-source\src\gnuwin32\installer\R.wxs(50036) : error CNDL0104 : Not a valid source file;
> detail: The 'DirectoryRef' start tag on line 50033 position 14 does not match the end tag of 'Component'. Line 50036, position 19.
>
>
> *****************************************************************************
> R.wxs [file] (lines 50032 ? 50037, etc.)
> I understand the error is the result of line 50034 having the first of many (after that line there are hundreds)
> ?unprovoked? NA?s :
> ...
> ...
>              </DirectoryRef>
>              <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
>      NA
>                      <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="R-4.1.3\library\base\help\print.DLLInfoList.html" />
>                  </Component>
>              </DirectoryRef>
>              <DirectoryRef Id="dir4A5E34FDE4B660BFC361AB8682CC00A3">
> ....
> ....
> Additionally here follows  line 82158 where, because there are no more file-ids after line 82160 below the NAs also disappear:
>              <DirectoryRef Id="dir1FF2414B716F9EC0C950A7D0C5600532">
>      NA
>                      <File Id="fil7FBA10F4604BA92660D4FA85CA81B1BC" KeyPath="yes" Source="R-4.1.3\library\Matrix\help\coerce+2ClsTMatrix+2CdsTMatrix-method.html" />
>                  </Component>
>              </DirectoryRef>
>              <DirectoryRef Id="dirD31021A615C26B5D3F93CF12408AE4B5">
>                  <Directory Id="dir0016419565268E77B190EFC6ECFE56AD" Name="LC_MESSAGES" />
>              </DirectoryRef>
>
> *****************************************************************************
> files.wxs [file] here is the corresponding files Fragment of the above (first)  "corrupted" tag
> ie of file-id: fil49DED439D60E725AA5D6402B8A36B915
> ...
> ...
> <Fragment>
>          <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
>              <Component Id="cmp9D50FF8D0F55461A69B18CCAC6292CA3" Guid="PUT-GUID-HERE">
>                  <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="SourceDir\library\base\help\print.DLLInfoList.html" />
>              </Component>
>          </DirectoryRef>
>      </Fragment>
>      <Fragment>
> ...
> ...
>
> *****************************************************************************
> The ?WiXins.R? file I am using is the unmodified /src/gnuwin32/installer/WiXins.R of the .tar.gz downloaded from: https://cran.r-project.org/src/base/R-4/R-4.1.3.tar.gz
>
> =========================
> Greetings,
> Walter
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From w@|ter@djur|c @end|ng |rom gm@||@com  Tue May 10 21:01:27 2022
From: w@|ter@djur|c @end|ng |rom gm@||@com (Gmail)
Date: Tue, 10 May 2022 21:01:27 +0200
Subject: [Rd] Building R-4.1.3 from source - creating .msi fails
In-Reply-To: <7eb5c514-8cb8-035c-9ee3-38d3f2ded174@gmail.com>
References: <07e901d863c2$fbe20ad0$f3a62070$@gmail.com>
 <7eb5c514-8cb8-035c-9ee3-38d3f2ded174@gmail.com>
Message-ID: <008101d864a0$5aa8b360$0ffa1a20$@gmail.com>

Thanks for the swift reply. 

Maybe some clarifications from my side - I am not referring to the R-4.2.0 version (manual). 
But the earlier up to R-4.1.3 version manuals, where there always was a section about "Building the MSI installer" [right after Building the Inno Setup Installer] included (ending with thanks to David del Campo).  
And as far as I can tell the Inno Setup section is also gone from the 4.2.0 manual now? On purpose?
Then why is it that there is still an /installer folder in R-4.2.0 with all the Inno Setup files eg header.iss and JRins.R as well as WiXins.R in it, and the installer/Makefile also still includes all these sections.  

So in the spirit of things I guess that all lines in the .../installer/Makefile (line 49 and lines 180 ff.) as well as the whole ?WiXins.R? file in the /installer folder should be removed from R-4.1.3.tar.gz (which is available in that form for download from r-project)? And judging from the manual the .iss related parts as well? 

At the same time R-4.0.5 msi build works fine so probably should not be altered/removed in R-4.0.5.tar.gz? 

G, W


-----Original Message-----
From: Tomas Kalibera <tomas.kalibera at gmail.com> 
Sent: Tuesday, May 10, 2022 3:07 PM
To: Gmail <walter.djuric at gmail.com>; r-devel at R-project.org
Subject: Re: [Rd] Building R-4.1.3 from source - creating .msi fails


On 5/9/22 18:36, Gmail wrote:
> Dear all,
> lately I was building R-4.1.3 from source and as the final step I 
> decided to also try and build the .msi file.
>
> I was following along the R Admin manual and using Jeroens ?r-windows/r-base? GitHub repo as a basis.
> The build, the tests all the way to the Inno-Setup Windows .exe installer completed successfully - but not the "R-4.1.3.msi" file.

The MSI installer is not supported. I can't see it mentioned in R-Admin, but if you found it there or in some documentation, please report, so that it can be removed.

Best
Tomas

> Since I am not really knowledgeable when it comes to debugging WiX failures I was hoping someone here has some helpful comments.
>
> Below are the logs/output/errors/file excerpts:
> =========================
>
> R-4.1.3.log:
> ----------------
> Windows Installer XML Toolset Compiler version 3.11.2.4516 Copyright 
> (c) .NET Foundation and contributors. All rights reserved.
>
> *** asterisk lines separate content of different files 
> **********************************
>
> **********************************************************************
> *******
> R.wxs [file]
> D:\r-base\src\R-source\src\gnuwin32\installer\R.wxs(50036) : error 
> CNDL0104 : Not a valid source file;
> detail: The 'DirectoryRef' start tag on line 50033 position 14 does not match the end tag of 'Component'. Line 50036, position 19.
>
>
> **********************************************************************
> ******* R.wxs [file] (lines 50032 ? 50037, etc.) I understand the 
> error is the result of line 50034 having the first of many (after that 
> line there are hundreds) ?unprovoked? NA?s :
> ...
> ...
>              </DirectoryRef>
>              <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
>      NA
>                      <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="R-4.1.3\library\base\help\print.DLLInfoList.html" />
>                  </Component>
>              </DirectoryRef>
>              <DirectoryRef Id="dir4A5E34FDE4B660BFC361AB8682CC00A3">
> ....
> ....
> Additionally here follows  line 82158 where, because there are no more file-ids after line 82160 below the NAs also disappear:
>              <DirectoryRef Id="dir1FF2414B716F9EC0C950A7D0C5600532">
>      NA
>                      <File Id="fil7FBA10F4604BA92660D4FA85CA81B1BC" KeyPath="yes" Source="R-4.1.3\library\Matrix\help\coerce+2ClsTMatrix+2CdsTMatrix-method.html" />
>                  </Component>
>              </DirectoryRef>
>              <DirectoryRef Id="dirD31021A615C26B5D3F93CF12408AE4B5">
>                  <Directory Id="dir0016419565268E77B190EFC6ECFE56AD" Name="LC_MESSAGES" />
>              </DirectoryRef>
>
> **********************************************************************
> ******* files.wxs [file] here is the corresponding files Fragment of 
> the above (first)  "corrupted" tag ie of file-id: 
> fil49DED439D60E725AA5D6402B8A36B915
> ...
> ...
> <Fragment>
>          <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
>              <Component Id="cmp9D50FF8D0F55461A69B18CCAC6292CA3" Guid="PUT-GUID-HERE">
>                  <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="SourceDir\library\base\help\print.DLLInfoList.html" />
>              </Component>
>          </DirectoryRef>
>      </Fragment>
>      <Fragment>
> ...
> ...
>
> **********************************************************************
> ******* The ?WiXins.R? file I am using is the unmodified 
> /src/gnuwin32/installer/WiXins.R of the .tar.gz downloaded from: 
> https://cran.r-project.org/src/base/R-4/R-4.1.3.tar.gz
>
> =========================
> Greetings,
> Walter
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue May 10 22:15:27 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 10 May 2022 16:15:27 -0400
Subject: [Rd] Building R-4.1.3 from source - creating .msi fails
In-Reply-To: <008101d864a0$5aa8b360$0ffa1a20$@gmail.com>
References: <07e901d863c2$fbe20ad0$f3a62070$@gmail.com>
 <7eb5c514-8cb8-035c-9ee3-38d3f2ded174@gmail.com>
 <008101d864a0$5aa8b360$0ffa1a20$@gmail.com>
Message-ID: <a03f378c-0cce-7d6e-0577-cfdeb67bbe54@gmail.com>

On 10/05/2022 3:01 p.m., Gmail wrote:
> Thanks for the swift reply.
> 
> Maybe some clarifications from my side - I am not referring to the R-4.2.0 version (manual).
> But the earlier up to R-4.1.3 version manuals, where there always was a section about "Building the MSI installer" [right after Building the Inno Setup Installer] included (ending with thanks to David del Campo).

Some more clarification, please:  which manual are you talking about?  I 
don't see those sections in the R Admin manual.  Maybe they were 
conditional on the Windows build?

> And as far as I can tell the Inno Setup section is also gone from the 4.2.0 manual now? On purpose?

You could look at the svn history of the source file to see what the log 
message says.  So could I, if I only knew which manual you are looking at.

> Then why is it that there is still an /installer folder in R-4.2.0 with all the Inno Setup files eg header.iss and JRins.R as well as WiXins.R in it, and the installer/Makefile also still includes all these sections.
> 
> So in the spirit of things I guess that all lines in the .../installer/Makefile (line 49 and lines 180 ff.) as well as the whole ?WiXins.R? file in the /installer folder should be removed from R-4.1.3.tar.gz (which is available in that form for download from r-project)? And judging from the manual the .iss related parts as well?

The 4.1.3 tarfile has been released, and can't be modified.  The only 
way a modification would be possible would be to release a new 4.1.x 
patch version, but that's really, really unlikely.

> At the same time R-4.0.5 msi build works fine so probably should not be altered/removed in R-4.0.5.tar.gz?

Changes there are even less likely, so don't worry about them.

Duncan Murdoch

> 
> G, W
> 
> 
> -----Original Message-----
> From: Tomas Kalibera <tomas.kalibera at gmail.com>
> Sent: Tuesday, May 10, 2022 3:07 PM
> To: Gmail <walter.djuric at gmail.com>; r-devel at R-project.org
> Subject: Re: [Rd] Building R-4.1.3 from source - creating .msi fails
> 
> 
> On 5/9/22 18:36, Gmail wrote:
>> Dear all,
>> lately I was building R-4.1.3 from source and as the final step I
>> decided to also try and build the .msi file.
>>
>> I was following along the R Admin manual and using Jeroens ?r-windows/r-base? GitHub repo as a basis.
>> The build, the tests all the way to the Inno-Setup Windows .exe installer completed successfully - but not the "R-4.1.3.msi" file.
> 
> The MSI installer is not supported. I can't see it mentioned in R-Admin, but if you found it there or in some documentation, please report, so that it can be removed.
> 
> Best
> Tomas
> 
>> Since I am not really knowledgeable when it comes to debugging WiX failures I was hoping someone here has some helpful comments.
>>
>> Below are the logs/output/errors/file excerpts:
>> =========================
>>
>> R-4.1.3.log:
>> ----------------
>> Windows Installer XML Toolset Compiler version 3.11.2.4516 Copyright
>> (c) .NET Foundation and contributors. All rights reserved.
>>
>> *** asterisk lines separate content of different files
>> **********************************
>>
>> **********************************************************************
>> *******
>> R.wxs [file]
>> D:\r-base\src\R-source\src\gnuwin32\installer\R.wxs(50036) : error
>> CNDL0104 : Not a valid source file;
>> detail: The 'DirectoryRef' start tag on line 50033 position 14 does not match the end tag of 'Component'. Line 50036, position 19.
>>
>>
>> **********************************************************************
>> ******* R.wxs [file] (lines 50032 ? 50037, etc.) I understand the
>> error is the result of line 50034 having the first of many (after that
>> line there are hundreds) ?unprovoked? NA?s :
>> ...
>> ...
>>               </DirectoryRef>
>>               <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
>>       NA
>>                       <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="R-4.1.3\library\base\help\print.DLLInfoList.html" />
>>                   </Component>
>>               </DirectoryRef>
>>               <DirectoryRef Id="dir4A5E34FDE4B660BFC361AB8682CC00A3">
>> ....
>> ....
>> Additionally here follows  line 82158 where, because there are no more file-ids after line 82160 below the NAs also disappear:
>>               <DirectoryRef Id="dir1FF2414B716F9EC0C950A7D0C5600532">
>>       NA
>>                       <File Id="fil7FBA10F4604BA92660D4FA85CA81B1BC" KeyPath="yes" Source="R-4.1.3\library\Matrix\help\coerce+2ClsTMatrix+2CdsTMatrix-method.html" />
>>                   </Component>
>>               </DirectoryRef>
>>               <DirectoryRef Id="dirD31021A615C26B5D3F93CF12408AE4B5">
>>                   <Directory Id="dir0016419565268E77B190EFC6ECFE56AD" Name="LC_MESSAGES" />
>>               </DirectoryRef>
>>
>> **********************************************************************
>> ******* files.wxs [file] here is the corresponding files Fragment of
>> the above (first)  "corrupted" tag ie of file-id:
>> fil49DED439D60E725AA5D6402B8A36B915
>> ...
>> ...
>> <Fragment>
>>           <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
>>               <Component Id="cmp9D50FF8D0F55461A69B18CCAC6292CA3" Guid="PUT-GUID-HERE">
>>                   <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="SourceDir\library\base\help\print.DLLInfoList.html" />
>>               </Component>
>>           </DirectoryRef>
>>       </Fragment>
>>       <Fragment>
>> ...
>> ...
>>
>> **********************************************************************
>> ******* The ?WiXins.R? file I am using is the unmodified
>> /src/gnuwin32/installer/WiXins.R of the .tar.gz downloaded from:
>> https://cran.r-project.org/src/base/R-4/R-4.1.3.tar.gz
>>
>> =========================
>> Greetings,
>> Walter
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Wed May 11 03:02:51 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Wed, 11 May 2022 01:02:51 +0000
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
Message-ID: <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>

Dear Tomas,
I've tried, but I don't have the necessary C/C++ programming skills to 
fulfill your request.

Maybe someone can help us by transcribing the little code in object 
Pascal that I sent to C/C++.

If a small executable, made in Object Pascal, can help in your debug, I 
can provide.

Grateful for the attention,,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

------ Mensagem original ------
De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
<murdoch.duncan at gmail.com>; r-devel at r-project.org
Enviado(s): 06/05/2022 04:24:44
Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
Windows API's PostMessage function

>
>On 5/6/22 07:03, jcfaria wrote:
>>Dear Duncan,
>>I believe the problem is of a different nature.
>>I get TRUE 3 times running the code below:
>>
>>procedure TfMain.btnPasteClick(Sender: TObject);
>>var
>>   i: integer;
>>   sTmp: string;
>>   hBN: HWND;
>>   j: bool;
>>
>>begin
>>   hBN:= FindWindowA(nil,
>>                     'R Console (64-bit)');
>>
>>   sTmp:= 'sd';
>>
>>   for i:= 1 to Length(sTmp) do begin
>>     j:= PostMessage(hBN,
>>                     WM_CHAR,
>>                     Ord(sTmp[i]),
>>                     0);
>>
>>     ShowMessage(BoolToStr(j,
>>                           True));
>>   end;
>>
>>   j:= PostMessage(hBN,
>>               WM_KEYDOWN,
>>               VK_RETURN, 0);
>>
>>   ShowMessage(BoolToStr(j,
>>                         True));
>>end;
>>
>>That is, Rgui is receiving the message of the characters (via PostMessage), but it is blocking because it does not show them in the console.
>>The only thing Rgui blames is Carriage Return, as it adds an additional prompt with each run.
>
>I can't provide a good guess what impacted your use, but if you could give me a full example, ideally in C, which can be compiled with Rtools42 (so gcc, MinGW) and I can edit/recompile, and works with R 4.1, I am happy to help debugging on 4.2.
>
>Rgui now uses GraphApp Unicode windows on systems where it didn't before, because it uses UTF-8 also on systems it didn't before (on systems that would use a single-byte locale in R 4.1). These Unicode windows are a different code path and there may be bugs not reported previously, including processing inputs (recently I fixed handling of accents, for example). Otherwise indeed R now uses UTF-8 as native encoding and UCRT as the C runtime.
>
>Best
>Tomas
>
>
>>
>> >
>> >
>>
>>Best,
>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>Jose Claudio Faria
>>UESC/DCET/Brasil
>>joseclaudio.faria at gmail.com
>>Telefones:
>>55(73)3680.5545 - UESC
>>55(73)99966.9100 - VIVO
>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>If you have software to deal with statistics, you have arms,
>>if you have good software, you have arms and legs,
>>if you have software like R, you have arms, legs and wings...
>>the height of your flight depends only on you.
>>
>>------ Mensagem original ------
>>De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
>>Enviado(s): 05/05/2022 13:17:53
>>Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>
>>>On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>Hello,
>>>>
>>>>Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>PostMessage function.
>>>>
>>>>The Tinn-R project sends messages to Rgui.exe (SDI mode) via the Windows
>>>>API's PostMessage function.
>>>>A simplification of the code (in object Pascal) can be seen below.
>>>>
>>>>procedure TfMain.btnPasteClick(Sender: TObject);
>>>>var
>>>>     i: integer;
>>>>     sTmp: WideString;
>>>>     hBN: HWND;
>>>>
>>>>begin
>>>>     hBN:= FindWindowA(nil,
>>>>                       'R Console (64-bit)');
>>>>
>>>>     sTmp:= 'sd';
>>>>
>>>>     for i:= 1 to Length(sTmp) do begin
>>>>       PostMessage(hBN,
>>>>                   WM_CHAR,
>>>>                   Ord(sTmp[i]),
>>>>                   0);
>>>>     end;
>>>>
>>>>     PostMessage(hBN,
>>>>                 WM_KEYDOWN,
>>>>                 VK_RETURN, 0);
>>>>end;
>>>>
>>>>This code has always worked fine for all versions of Rgui.exe with the
>>>>exception of the last one released, ie 4.2.0.
>>>>
>>>>We've been trying to get around the problem on the Object Pascal side,
>>>>but without success so far.
>>>>
>>>>Does anyone connected to the compilation of Rqui.exe know what the
>>>>problem is?
>>>
>>>It could be that the new build enforces Windows security more stringently.  More details are described in the answer to this question:  https://stackoverflow.com/a/40139498/2554330, but at a minimum you should be checking the return value from PostMessage.
>>>
>>>Duncan Murdoch
>>>
>>>>
>>>>Best,
>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>Jose Claudio Faria
>>>>UESC/DCET/Brasil
>>>>joseclaudio.faria at gmail.com
>>>>Telefones:
>>>>55(73)3680.5545 - UESC
>>>>55(73)99966.9100 - VIVO
>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>If you have software to deal with statistics, you have arms,
>>>>if you have good software, you have arms and legs,
>>>>if you have software like R, you have arms, legs and wings...
>>>>the height of your flight depends only on you.
>>>>
>>>>     [[alternative HTML version deleted]]
>>>>
>>>>______________________________________________
>>>>R-devel at r-project.org mailing list
>>>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>>______________________________________________
>>R-devel at r-project.org mailing list
>>https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed May 11 08:15:13 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 11 May 2022 08:15:13 +0200
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
 <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
Message-ID: <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>


On 5/11/22 03:02, jcfaria wrote:
> Dear Tomas,
> I've tried, but I don't have the necessary C/C++ programming skills to 
> fulfill your request.
>
> Maybe someone can help us by transcribing the little code in object 
> Pascal that I sent to C/C++.
>
> If a small executable, made in Object Pascal, can help in your debug, 
> I can provide.

Dear Jose,

no problem, I can try out with the Pascal code.
Is there a free compiler I can use to build and run it?

Thanks
Tomas

>
> Grateful for the attention,,
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> Jose Claudio Faria
> UESC/DCET/Brasil
> joseclaudio.faria at gmail.com
> Telefones:
> 55(73)3680.5545 - UESC
> 55(73)99966.9100 - VIVO
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> If you have software to deal with statistics, you have arms,
> if you have good software, you have arms and legs,
> if you have software like R, you have arms, legs and wings...
> the height of your flight depends only on you.
>
> ------ Mensagem original ------
> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
> <murdoch.duncan at gmail.com>; r-devel at r-project.org
> Enviado(s): 06/05/2022 04:24:44
> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
> Windows API's PostMessage function
>
>>
>> On 5/6/22 07:03, jcfaria wrote:
>>> Dear Duncan,
>>> I believe the problem is of a different nature.
>>> I get TRUE 3 times running the code below:
>>>
>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>> var
>>> ? i: integer;
>>> ? sTmp: string;
>>> ? hBN: HWND;
>>> ? j: bool;
>>>
>>> begin
>>> ? hBN:= FindWindowA(nil,
>>> ??????????????????? 'R Console (64-bit)');
>>>
>>> ? sTmp:= 'sd';
>>>
>>> ? for i:= 1 to Length(sTmp) do begin
>>> ??? j:= PostMessage(hBN,
>>> ??????????????????? WM_CHAR,
>>> ??????????????????? Ord(sTmp[i]),
>>> ??????????????????? 0);
>>>
>>> ??? ShowMessage(BoolToStr(j,
>>> ????????????????????????? True));
>>> ? end;
>>>
>>> ? j:= PostMessage(hBN,
>>> ????????????? WM_KEYDOWN,
>>> ????????????? VK_RETURN, 0);
>>>
>>> ? ShowMessage(BoolToStr(j,
>>> ??????????????????????? True));
>>> end;
>>>
>>> That is, Rgui is receiving the message of the characters (via 
>>> PostMessage), but it is blocking because it does not show them in 
>>> the console.
>>> The only thing Rgui blames is Carriage Return, as it adds an 
>>> additional prompt with each run.
>>
>> I can't provide a good guess what impacted your use, but if you could 
>> give me a full example, ideally in C, which can be compiled with 
>> Rtools42 (so gcc, MinGW) and I can edit/recompile, and works with R 
>> 4.1, I am happy to help debugging on 4.2.
>>
>> Rgui now uses GraphApp Unicode windows on systems where it didn't 
>> before, because it uses UTF-8 also on systems it didn't before (on 
>> systems that would use a single-byte locale in R 4.1). These Unicode 
>> windows are a different code path and there may be bugs not reported 
>> previously, including processing inputs (recently I fixed handling of 
>> accents, for example). Otherwise indeed R now uses UTF-8 as native 
>> encoding and UCRT as the C runtime.
>>
>> Best
>> Tomas
>>
>>
>>>
>>> >
>>> >
>>>
>>> Best,
>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>> Jose Claudio Faria
>>> UESC/DCET/Brasil
>>> joseclaudio.faria at gmail.com
>>> Telefones:
>>> 55(73)3680.5545 - UESC
>>> 55(73)99966.9100 - VIVO
>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>> If you have software to deal with statistics, you have arms,
>>> if you have good software, you have arms and legs,
>>> if you have software like R, you have arms, legs and wings...
>>> the height of your flight depends only on you.
>>>
>>> ------ Mensagem original ------
>>> De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
>>> Enviado(s): 05/05/2022 13:17:53
>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
>>> Windows API's PostMessage function
>>>
>>>> On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>> Hello,
>>>>>
>>>>> Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>> PostMessage function.
>>>>>
>>>>> The Tinn-R project sends messages to Rgui.exe (SDI mode) via the 
>>>>> Windows
>>>>> API's PostMessage function.
>>>>> A simplification of the code (in object Pascal) can be seen below.
>>>>>
>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>> var
>>>>> ??? i: integer;
>>>>> ??? sTmp: WideString;
>>>>> ??? hBN: HWND;
>>>>>
>>>>> begin
>>>>> ??? hBN:= FindWindowA(nil,
>>>>> ????????????????????? 'R Console (64-bit)');
>>>>>
>>>>> ??? sTmp:= 'sd';
>>>>>
>>>>> ??? for i:= 1 to Length(sTmp) do begin
>>>>> ????? PostMessage(hBN,
>>>>> ????????????????? WM_CHAR,
>>>>> ????????????????? Ord(sTmp[i]),
>>>>> ????????????????? 0);
>>>>> ??? end;
>>>>>
>>>>> ??? PostMessage(hBN,
>>>>> ??????????????? WM_KEYDOWN,
>>>>> ??????????????? VK_RETURN, 0);
>>>>> end;
>>>>>
>>>>> This code has always worked fine for all versions of Rgui.exe with 
>>>>> the
>>>>> exception of the last one released, ie 4.2.0.
>>>>>
>>>>> We've been trying to get around the problem on the Object Pascal 
>>>>> side,
>>>>> but without success so far.
>>>>>
>>>>> Does anyone connected to the compilation of Rqui.exe know what the
>>>>> problem is?
>>>>
>>>> It could be that the new build enforces Windows security more 
>>>> stringently.? More details are described in the answer to this 
>>>> question: https://stackoverflow.com/a/40139498/2554330, but at a 
>>>> minimum you should be checking the return value from PostMessage.
>>>>
>>>> Duncan Murdoch
>>>>
>>>>>
>>>>> Best,
>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>> Jose Claudio Faria
>>>>> UESC/DCET/Brasil
>>>>> joseclaudio.faria at gmail.com
>>>>> Telefones:
>>>>> 55(73)3680.5545 - UESC
>>>>> 55(73)99966.9100 - VIVO
>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>> If you have software to deal with statistics, you have arms,
>>>>> if you have good software, you have arms and legs,
>>>>> if you have software like R, you have arms, legs and wings...
>>>>> the height of your flight depends only on you.
>>>>>
>>>>> ??? [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed May 11 15:39:53 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 11 May 2022 15:39:53 +0200
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
 <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
 <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>
Message-ID: <82957f65-28f0-cc11-b07b-1e6076d23d9c@gmail.com>


On 5/11/22 08:15, Tomas Kalibera wrote:
>
> On 5/11/22 03:02, jcfaria wrote:
>> Dear Tomas,
>> I've tried, but I don't have the necessary C/C++ programming skills 
>> to fulfill your request.
>>
>> Maybe someone can help us by transcribing the little code in object 
>> Pascal that I sent to C/C++.
>>
>> If a small executable, made in Object Pascal, can help in your debug, 
>> I can provide.
>
> Dear Jose,
>
> no problem, I can try out with the Pascal code.
> Is there a free compiler I can use to build and run it?

Actually I can reproduce it in a C program doing the same thing.

The primary cause is that Rgui is using GraphApp Unicode windows on 
systems running in a multi-byte locale, which affects most systems since 
R 4.2 because of the switch to UTF-8. While Unicode windows have been 
used even in older versions of R, it was only on systems then running in 
a multi-byte locale, and apparently this hasn't been reported.

When I modify R-devel to use non-Unicode GraphApp windows, the message 
sending works again. I will have a closer look, thanks for the report.

For reference, to reproduce I ran

Rgui --sdi

and used this C example:

#include <windows.h>
#include <stdio.h>
#include <string.h>

int main(int argc, char **argv) {
 ? HWND hw;
 ? int i, res;

 ? printf("Getting Rgui window...\n");
 ? hw = FindWindow(NULL, "R Console (64-bit)");

 ? printf("Got window: %x\n", hw);
 ? if (hw == NULL) {
 ??? printf("Could not get Rgui window: %x\n", GetLastError());
 ??? return 2;
 ? }

 ? char *sd = "sd";
 ? for(i = 0; i < strlen(sd); i++) {
 ??? res = PostMessage(hw, WM_CHAR, (unsigned int) sd[i], 0);
 ??? printf("Sending char %c: %d.\n", sd[i], res);
 ? }

 ? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
 ? printf("Sending return: %d\n.", res);
 ? return 0;
}

Best
Tomas


>
> Thanks
> Tomas
>
>>
>> Grateful for the attention,,
>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>> Jose Claudio Faria
>> UESC/DCET/Brasil
>> joseclaudio.faria at gmail.com
>> Telefones:
>> 55(73)3680.5545 - UESC
>> 55(73)99966.9100 - VIVO
>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>> If you have software to deal with statistics, you have arms,
>> if you have good software, you have arms and legs,
>> if you have software like R, you have arms, legs and wings...
>> the height of your flight depends only on you.
>>
>> ------ Mensagem original ------
>> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
>> <murdoch.duncan at gmail.com>; r-devel at r-project.org
>> Enviado(s): 06/05/2022 04:24:44
>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
>> Windows API's PostMessage function
>>
>>>
>>> On 5/6/22 07:03, jcfaria wrote:
>>>> Dear Duncan,
>>>> I believe the problem is of a different nature.
>>>> I get TRUE 3 times running the code below:
>>>>
>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>> var
>>>> ? i: integer;
>>>> ? sTmp: string;
>>>> ? hBN: HWND;
>>>> ? j: bool;
>>>>
>>>> begin
>>>> ? hBN:= FindWindowA(nil,
>>>> ??????????????????? 'R Console (64-bit)');
>>>>
>>>> ? sTmp:= 'sd';
>>>>
>>>> ? for i:= 1 to Length(sTmp) do begin
>>>> ??? j:= PostMessage(hBN,
>>>> ??????????????????? WM_CHAR,
>>>> ??????????????????? Ord(sTmp[i]),
>>>> ??????????????????? 0);
>>>>
>>>> ??? ShowMessage(BoolToStr(j,
>>>> ????????????????????????? True));
>>>> ? end;
>>>>
>>>> ? j:= PostMessage(hBN,
>>>> ????????????? WM_KEYDOWN,
>>>> ????????????? VK_RETURN, 0);
>>>>
>>>> ? ShowMessage(BoolToStr(j,
>>>> ??????????????????????? True));
>>>> end;
>>>>
>>>> That is, Rgui is receiving the message of the characters (via 
>>>> PostMessage), but it is blocking because it does not show them in 
>>>> the console.
>>>> The only thing Rgui blames is Carriage Return, as it adds an 
>>>> additional prompt with each run.
>>>
>>> I can't provide a good guess what impacted your use, but if you 
>>> could give me a full example, ideally in C, which can be compiled 
>>> with Rtools42 (so gcc, MinGW) and I can edit/recompile, and works 
>>> with R 4.1, I am happy to help debugging on 4.2.
>>>
>>> Rgui now uses GraphApp Unicode windows on systems where it didn't 
>>> before, because it uses UTF-8 also on systems it didn't before (on 
>>> systems that would use a single-byte locale in R 4.1). These Unicode 
>>> windows are a different code path and there may be bugs not reported 
>>> previously, including processing inputs (recently I fixed handling 
>>> of accents, for example). Otherwise indeed R now uses UTF-8 as 
>>> native encoding and UCRT as the C runtime.
>>>
>>> Best
>>> Tomas
>>>
>>>
>>>>
>>>> >
>>>> >
>>>>
>>>> Best,
>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>> Jose Claudio Faria
>>>> UESC/DCET/Brasil
>>>> joseclaudio.faria at gmail.com
>>>> Telefones:
>>>> 55(73)3680.5545 - UESC
>>>> 55(73)99966.9100 - VIVO
>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>> If you have software to deal with statistics, you have arms,
>>>> if you have good software, you have arms and legs,
>>>> if you have software like R, you have arms, legs and wings...
>>>> the height of your flight depends only on you.
>>>>
>>>> ------ Mensagem original ------
>>>> De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
>>>> Enviado(s): 05/05/2022 13:17:53
>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via 
>>>> the Windows API's PostMessage function
>>>>
>>>>> On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>>> Hello,
>>>>>>
>>>>>> Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>>> PostMessage function.
>>>>>>
>>>>>> The Tinn-R project sends messages to Rgui.exe (SDI mode) via the 
>>>>>> Windows
>>>>>> API's PostMessage function.
>>>>>> A simplification of the code (in object Pascal) can be seen below.
>>>>>>
>>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>> var
>>>>>> ??? i: integer;
>>>>>> ??? sTmp: WideString;
>>>>>> ??? hBN: HWND;
>>>>>>
>>>>>> begin
>>>>>> ??? hBN:= FindWindowA(nil,
>>>>>> ????????????????????? 'R Console (64-bit)');
>>>>>>
>>>>>> ??? sTmp:= 'sd';
>>>>>>
>>>>>> ??? for i:= 1 to Length(sTmp) do begin
>>>>>> ????? PostMessage(hBN,
>>>>>> ????????????????? WM_CHAR,
>>>>>> ????????????????? Ord(sTmp[i]),
>>>>>> ????????????????? 0);
>>>>>> ??? end;
>>>>>>
>>>>>> ??? PostMessage(hBN,
>>>>>> ??????????????? WM_KEYDOWN,
>>>>>> ??????????????? VK_RETURN, 0);
>>>>>> end;
>>>>>>
>>>>>> This code has always worked fine for all versions of Rgui.exe 
>>>>>> with the
>>>>>> exception of the last one released, ie 4.2.0.
>>>>>>
>>>>>> We've been trying to get around the problem on the Object Pascal 
>>>>>> side,
>>>>>> but without success so far.
>>>>>>
>>>>>> Does anyone connected to the compilation of Rqui.exe know what the
>>>>>> problem is?
>>>>>
>>>>> It could be that the new build enforces Windows security more 
>>>>> stringently.? More details are described in the answer to this 
>>>>> question: https://stackoverflow.com/a/40139498/2554330, but at a 
>>>>> minimum you should be checking the return value from PostMessage.
>>>>>
>>>>> Duncan Murdoch
>>>>>
>>>>>>
>>>>>> Best,
>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>> Jose Claudio Faria
>>>>>> UESC/DCET/Brasil
>>>>>> joseclaudio.faria at gmail.com
>>>>>> Telefones:
>>>>>> 55(73)3680.5545 - UESC
>>>>>> 55(73)99966.9100 - VIVO
>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>> If you have software to deal with statistics, you have arms,
>>>>>> if you have good software, you have arms and legs,
>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>> the height of your flight depends only on you.
>>>>>>
>>>>>> ??? [[alternative HTML version deleted]]
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed May 11 18:32:23 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 11 May 2022 18:32:23 +0200
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <82957f65-28f0-cc11-b07b-1e6076d23d9c@gmail.com>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
 <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
 <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>
 <82957f65-28f0-cc11-b07b-1e6076d23d9c@gmail.com>
Message-ID: <a8733d02-ff78-a41b-446c-7347268bb27f@gmail.com>


On 5/11/22 15:39, Tomas Kalibera wrote:
>
> On 5/11/22 08:15, Tomas Kalibera wrote:
>>
>> On 5/11/22 03:02, jcfaria wrote:
>>> Dear Tomas,
>>> I've tried, but I don't have the necessary C/C++ programming skills 
>>> to fulfill your request.
>>>
>>> Maybe someone can help us by transcribing the little code in object 
>>> Pascal that I sent to C/C++.
>>>
>>> If a small executable, made in Object Pascal, can help in your 
>>> debug, I can provide.
>>
>> Dear Jose,
>>
>> no problem, I can try out with the Pascal code.
>> Is there a free compiler I can use to build and run it?
>
> Actually I can reproduce it in a C program doing the same thing.
>
> The primary cause is that Rgui is using GraphApp Unicode windows on 
> systems running in a multi-byte locale, which affects most systems 
> since R 4.2 because of the switch to UTF-8. While Unicode windows have 
> been used even in older versions of R, it was only on systems then 
> running in a multi-byte locale, and apparently this hasn't been reported.
>
> When I modify R-devel to use non-Unicode GraphApp windows, the message 
> sending works again. I will have a closer look, thanks for the report.

I had a closer look and this doesn't really seem to be a bug in R to me. 
For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to read 
the keys instead of WM_CHAR, which it uses for non-Unicode windows. This 
is internal functionality of Rgui and a legitimate choice. Rgui cannot 
simply handle both messages in Unicode windows, because the characters 
would be doubled (if you see an easy, elegant change to Rgui that would 
mimic the previous behavior, let me know). This is certainly not a 
documented interface for Rgui, so I am afraid you would have to change 
something in your application.

I read that using PostMessage to simulate keyboard input is considered 
wrong, see [1], and then one should instead use SendInput (which then 
requires bringing the window to the foreground), if at all simulating 
keyboard input. Maybe one could create a better working solution that 
way, or using some automation library.

As a quick hack, I found that [2] happens to be working on my system, 
but again relying on the current implementation of Rgui (simply you send 
WM_KEYDOWN also for the characters other than the newline/return). It 
seems to be working also with R 4.1 for me.

The usual way for GUIs/front-ends is to "embed" R, to link it as a DLL. 
Rgui itself does it and also external applications such as RStudio. 
Typically you would want to have a thin layer application embedding R 
and make your GUI communicate with that, but switching to that from 
sending the messages would require some work.

Best
Tomas

[1] https://devblogs.microsoft.com/oldnewthing/20050530-11/?p=35513

[2]
#include <windows.h>
#include <stdio.h>
#include <string.h>

int main(int argc, char **argv) {
 ? HWND hw;
 ? int i, res;

 ? printf("Getting Rgui window...\n");
 ? hw = FindWindow(NULL, "R Console (64-bit)");

 ? printf("Got window: %x\n", hw);
 ? if (hw == NULL) {
 ??? printf("Could not get Rgui window: %x\n", GetLastError());
 ??? return 2;
 ? }

 ? char *sd = "sd";
 ? for(i = 0; i < strlen(sd); i++) {
 ??? res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(sd[i]), 0);
 ??? printf("Sending char %c: %d.\n", sd[i], res);
 ? }

 ? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
 ? printf("Sending return: %d\n.", res);
 ? return 0;
}


>
> For reference, to reproduce I ran
>
> Rgui --sdi
>
> and used this C example:
>
> #include <windows.h>
> #include <stdio.h>
> #include <string.h>
>
> int main(int argc, char **argv) {
> ? HWND hw;
> ? int i, res;
>
> ? printf("Getting Rgui window...\n");
> ? hw = FindWindow(NULL, "R Console (64-bit)");
>
> ? printf("Got window: %x\n", hw);
> ? if (hw == NULL) {
> ??? printf("Could not get Rgui window: %x\n", GetLastError());
> ??? return 2;
> ? }
>
> ? char *sd = "sd";
> ? for(i = 0; i < strlen(sd); i++) {
> ??? res = PostMessage(hw, WM_CHAR, (unsigned int) sd[i], 0);
> ??? printf("Sending char %c: %d.\n", sd[i], res);
> ? }
>
> ? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
> ? printf("Sending return: %d\n.", res);
> ? return 0;
> }
>
> Best
> Tomas
>
>
>>
>> Thanks
>> Tomas
>>
>>>
>>> Grateful for the attention,,
>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>> Jose Claudio Faria
>>> UESC/DCET/Brasil
>>> joseclaudio.faria at gmail.com
>>> Telefones:
>>> 55(73)3680.5545 - UESC
>>> 55(73)99966.9100 - VIVO
>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>> If you have software to deal with statistics, you have arms,
>>> if you have good software, you have arms and legs,
>>> if you have software like R, you have arms, legs and wings...
>>> the height of your flight depends only on you.
>>>
>>> ------ Mensagem original ------
>>> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
>>> <murdoch.duncan at gmail.com>; r-devel at r-project.org
>>> Enviado(s): 06/05/2022 04:24:44
>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
>>> Windows API's PostMessage function
>>>
>>>>
>>>> On 5/6/22 07:03, jcfaria wrote:
>>>>> Dear Duncan,
>>>>> I believe the problem is of a different nature.
>>>>> I get TRUE 3 times running the code below:
>>>>>
>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>> var
>>>>> ? i: integer;
>>>>> ? sTmp: string;
>>>>> ? hBN: HWND;
>>>>> ? j: bool;
>>>>>
>>>>> begin
>>>>> ? hBN:= FindWindowA(nil,
>>>>> ??????????????????? 'R Console (64-bit)');
>>>>>
>>>>> ? sTmp:= 'sd';
>>>>>
>>>>> ? for i:= 1 to Length(sTmp) do begin
>>>>> ??? j:= PostMessage(hBN,
>>>>> ??????????????????? WM_CHAR,
>>>>> ??????????????????? Ord(sTmp[i]),
>>>>> ??????????????????? 0);
>>>>>
>>>>> ??? ShowMessage(BoolToStr(j,
>>>>> ????????????????????????? True));
>>>>> ? end;
>>>>>
>>>>> ? j:= PostMessage(hBN,
>>>>> ????????????? WM_KEYDOWN,
>>>>> ????????????? VK_RETURN, 0);
>>>>>
>>>>> ? ShowMessage(BoolToStr(j,
>>>>> ??????????????????????? True));
>>>>> end;
>>>>>
>>>>> That is, Rgui is receiving the message of the characters (via 
>>>>> PostMessage), but it is blocking because it does not show them in 
>>>>> the console.
>>>>> The only thing Rgui blames is Carriage Return, as it adds an 
>>>>> additional prompt with each run.
>>>>
>>>> I can't provide a good guess what impacted your use, but if you 
>>>> could give me a full example, ideally in C, which can be compiled 
>>>> with Rtools42 (so gcc, MinGW) and I can edit/recompile, and works 
>>>> with R 4.1, I am happy to help debugging on 4.2.
>>>>
>>>> Rgui now uses GraphApp Unicode windows on systems where it didn't 
>>>> before, because it uses UTF-8 also on systems it didn't before (on 
>>>> systems that would use a single-byte locale in R 4.1). These 
>>>> Unicode windows are a different code path and there may be bugs not 
>>>> reported previously, including processing inputs (recently I fixed 
>>>> handling of accents, for example). Otherwise indeed R now uses 
>>>> UTF-8 as native encoding and UCRT as the C runtime.
>>>>
>>>> Best
>>>> Tomas
>>>>
>>>>
>>>>>
>>>>> >
>>>>> >
>>>>>
>>>>> Best,
>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>> Jose Claudio Faria
>>>>> UESC/DCET/Brasil
>>>>> joseclaudio.faria at gmail.com
>>>>> Telefones:
>>>>> 55(73)3680.5545 - UESC
>>>>> 55(73)99966.9100 - VIVO
>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>> If you have software to deal with statistics, you have arms,
>>>>> if you have good software, you have arms and legs,
>>>>> if you have software like R, you have arms, legs and wings...
>>>>> the height of your flight depends only on you.
>>>>>
>>>>> ------ Mensagem original ------
>>>>> De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
>>>>> Enviado(s): 05/05/2022 13:17:53
>>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via 
>>>>> the Windows API's PostMessage function
>>>>>
>>>>>> On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>>>> Hello,
>>>>>>>
>>>>>>> Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>>>> PostMessage function.
>>>>>>>
>>>>>>> The Tinn-R project sends messages to Rgui.exe (SDI mode) via the 
>>>>>>> Windows
>>>>>>> API's PostMessage function.
>>>>>>> A simplification of the code (in object Pascal) can be seen below.
>>>>>>>
>>>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>> var
>>>>>>> ??? i: integer;
>>>>>>> ??? sTmp: WideString;
>>>>>>> ??? hBN: HWND;
>>>>>>>
>>>>>>> begin
>>>>>>> ??? hBN:= FindWindowA(nil,
>>>>>>> ????????????????????? 'R Console (64-bit)');
>>>>>>>
>>>>>>> ??? sTmp:= 'sd';
>>>>>>>
>>>>>>> ??? for i:= 1 to Length(sTmp) do begin
>>>>>>> ????? PostMessage(hBN,
>>>>>>> ????????????????? WM_CHAR,
>>>>>>> ????????????????? Ord(sTmp[i]),
>>>>>>> ????????????????? 0);
>>>>>>> ??? end;
>>>>>>>
>>>>>>> ??? PostMessage(hBN,
>>>>>>> ??????????????? WM_KEYDOWN,
>>>>>>> ??????????????? VK_RETURN, 0);
>>>>>>> end;
>>>>>>>
>>>>>>> This code has always worked fine for all versions of Rgui.exe 
>>>>>>> with the
>>>>>>> exception of the last one released, ie 4.2.0.
>>>>>>>
>>>>>>> We've been trying to get around the problem on the Object Pascal 
>>>>>>> side,
>>>>>>> but without success so far.
>>>>>>>
>>>>>>> Does anyone connected to the compilation of Rqui.exe know what the
>>>>>>> problem is?
>>>>>>
>>>>>> It could be that the new build enforces Windows security more 
>>>>>> stringently.? More details are described in the answer to this 
>>>>>> question: https://stackoverflow.com/a/40139498/2554330, but at a 
>>>>>> minimum you should be checking the return value from PostMessage.
>>>>>>
>>>>>> Duncan Murdoch
>>>>>>
>>>>>>>
>>>>>>> Best,
>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>> Jose Claudio Faria
>>>>>>> UESC/DCET/Brasil
>>>>>>> joseclaudio.faria at gmail.com
>>>>>>> Telefones:
>>>>>>> 55(73)3680.5545 - UESC
>>>>>>> 55(73)99966.9100 - VIVO
>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>> If you have software to deal with statistics, you have arms,
>>>>>>> if you have good software, you have arms and legs,
>>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>>> the height of your flight depends only on you.
>>>>>>>
>>>>>>> ??? [[alternative HTML version deleted]]
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>


From cvoeten @end|ng |rom gm@||@com  Wed May 11 21:16:25 2022
From: cvoeten @end|ng |rom gm@||@com (Cesko Voeten)
Date: Wed, 11 May 2022 21:16:25 +0200
Subject: [Rd] Regression in 4.2.0: unable to type special characters in
 Windows RGui
In-Reply-To: <f16306c8-4c08-c0a9-b2f6-f91eb2983c25@gmail.com>
References: <027b1c8f-c479-e269-4824-2c1ff0507e4a@gmail.com>
 <a44a69d2-987e-b2a9-2559-acc810ebc17e@gmail.com>
 <5d91c1ac-b6e2-e446-5e23-8430514ddfb8@gmail.com>
 <f16306c8-4c08-c0a9-b2f6-f91eb2983c25@gmail.com>
Message-ID: <f84b6cbc-3273-0db0-ebd2-6c14893ba304@gmail.com>

Hi Tomas,

>> ?- Some accents don't work. For instance, pressing 'a produces ?, but pressing 'a produces 'a rather than ?. From my testing, `^~ seem to work as expected, but '" don't.
> 
> I could reproduce this on the US International keyboard and it is fixed now. There may be missing support for more accents, so if you or anyone else find about them, please let me know.
> 
>> ?- Nonexistent deadkey combinations are handled differently from native Windows. For example, typing ~^ should output ~^, but produces nothing. Typing ~^a should output ~^a, but actually yields ~?. So it seems that the first ~ is correctly translated to the tilde symbol, but simultaneously the second ^ is being treated as a new deadkey press, which other Windows programs don't do in this case.
> Thanks, fixed now. It was another bug in the old code, plus a "feature" I added that by pressing e.g. the dead-key apostrophe twice you get it printed only once (this is what Linux does and I find it more natural). But I made it now to work as usual on Windows.
>> ?- Related to the above two issues, '& should produce '&, while it only gives &. This again affects only '" --- something like ^& correctly produces ^&.
> 
> It should be fixed by now as well.
> 
> The fixes are in 82332 (R-patched) and 82331 (R-devel). If you could test again after the snapshot build gets there, that would be great. It is easy to miss something.
> 
> When testing now, I've been using http://kbdlayout.info/ as a reference for several keyboard layouts on Windows, to find how to type different dead-keys. That can give you also names of the deadkeys, which can be easily communicated without having to copy-paste from the Rgui window. On some layouts, additional deadkeys are available with right Alt (AltGr).

Everything indeed seems fixed on today's R-devel build. I haven't noticed any other behavior that is different from what I was normally expecting on Windows.

>> Also, I'm noticing only now that selecting typed text in RGui and pressing Ctrl deletes that text, so trying to Ctrl+C text that I typed is kind of awkward. But this might simply be a feature that I wasn't aware of before.
> 
> Interesting. It isn't happening on my system, but I can't tell whether it is a "feature" under some circumstances. Maybe you can try to find out more about this: whether it is repeatable, whether it depends on some setting, whether it was happening also in R 4.1, etc.

I haven't been able to reproduce this, so this was probably a glitch on my end (PEBKAC?) or a transient issue in R-devel that has been resolved since.

Thank you for your hard work! Now I'm really looking forward to R 4.2.1 :)

Cesko


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu May 12 11:50:42 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 12 May 2022 11:50:42 +0200
Subject: [Rd] Regression in 4.2.0: unable to type special characters in
 Windows RGui
In-Reply-To: <f84b6cbc-3273-0db0-ebd2-6c14893ba304@gmail.com>
References: <027b1c8f-c479-e269-4824-2c1ff0507e4a@gmail.com>
 <a44a69d2-987e-b2a9-2559-acc810ebc17e@gmail.com>
 <5d91c1ac-b6e2-e446-5e23-8430514ddfb8@gmail.com>
 <f16306c8-4c08-c0a9-b2f6-f91eb2983c25@gmail.com>
 <f84b6cbc-3273-0db0-ebd2-6c14893ba304@gmail.com>
Message-ID: <db4774d4-4743-27b3-6498-f3792eb2ba1b@gmail.com>


On 5/11/22 21:16, Cesko Voeten wrote:
> Hi Tomas,
>
>>> ?- Some accents don't work. For instance, pressing 'a produces ?, 
>>> but pressing 'a produces 'a rather than ?. From my testing, `^~ seem 
>>> to work as expected, but '" don't.
>>
>> I could reproduce this on the US International keyboard and it is 
>> fixed now. There may be missing support for more accents, so if you 
>> or anyone else find about them, please let me know.
>>
>>> ?- Nonexistent deadkey combinations are handled differently from 
>>> native Windows. For example, typing ~^ should output ~^, but 
>>> produces nothing. Typing ~^a should output ~^a, but actually yields 
>>> ~?. So it seems that the first ~ is correctly translated to the 
>>> tilde symbol, but simultaneously the second ^ is being treated as a 
>>> new deadkey press, which other Windows programs don't do in this case.
>> Thanks, fixed now. It was another bug in the old code, plus a 
>> "feature" I added that by pressing e.g. the dead-key apostrophe twice 
>> you get it printed only once (this is what Linux does and I find it 
>> more natural). But I made it now to work as usual on Windows.
>>> ?- Related to the above two issues, '& should produce '&, while it 
>>> only gives &. This again affects only '" --- something like ^& 
>>> correctly produces ^&.
>>
>> It should be fixed by now as well.
>>
>> The fixes are in 82332 (R-patched) and 82331 (R-devel). If you could 
>> test again after the snapshot build gets there, that would be great. 
>> It is easy to miss something.
>>
>> When testing now, I've been using http://kbdlayout.info/ as a 
>> reference for several keyboard layouts on Windows, to find how to 
>> type different dead-keys. That can give you also names of the 
>> deadkeys, which can be easily communicated without having to 
>> copy-paste from the Rgui window. On some layouts, additional deadkeys 
>> are available with right Alt (AltGr).
>
> Everything indeed seems fixed on today's R-devel build. I haven't 
> noticed any other behavior that is different from what I was normally 
> expecting on Windows.

Hi Cesko,

>>> Also, I'm noticing only now that selecting typed text in RGui and 
>>> pressing Ctrl deletes that text, so trying to Ctrl+C text that I 
>>> typed is kind of awkward. But this might simply be a feature that I 
>>> wasn't aware of before.
>>
>> Interesting. It isn't happening on my system, but I can't tell 
>> whether it is a "feature" under some circumstances. Maybe you can try 
>> to find out more about this: whether it is repeatable, whether it 
>> depends on some setting, whether it was happening also in R 4.1, etc.
>
> I haven't been able to reproduce this, so this was probably a glitch 
> on my end (PEBKAC?) or a transient issue in R-devel that has been 
> resolved since.
Thanks, so hopefully it is ok.
>
> Thank you for your hard work! Now I'm really looking forward to R 
> 4.2.1 :)

thanks a lot for the testing and the report.

Tomas

>
> Cesko


From peter@|@ng|e|der @end|ng |rom gm@||@com  Fri May 13 04:08:34 2022
From: peter@|@ng|e|der @end|ng |rom gm@||@com (Peter Langfelder)
Date: Thu, 12 May 2022 19:08:34 -0700
Subject: [Rd] hist.default for long vectors
Message-ID: <CA+hbrhUBqcP9m6P9jm7i74VU2feH=+PLavVZ9qoVOb6DSZthtQ@mail.gmail.com>

Hi all,

this may have been noticed/discussed before but my search came up
empty, so here it is: hist.default throws a (somewhat cryptic) error
when trying to call it on a long vector. The error is

invalid length(x)

and is thrown because lines 4 and 5 or so are

n <- length(x <- x[is.finite(x)])
n <- as.integer(n)

Would adapting hist.default for long vectors be as simple as removing
the as.integer line, or is there other code that depends on n being
representable as a 4-byte integer? I see a 'call' to C_BinCount which
I briefly skimmed and it seems to be ready for long vectors (uses
R_xlen_t for indexing variables). Anything else I am missing?

While we're at it, anyone aware of a hist alternative that can handle
long vectors?

Thanks,

Peter


From ||v|u @end|ng |rom p@tchmypc@com  Fri May 13 15:39:53 2022
From: ||v|u @end|ng |rom p@tchmypc@com (Liviu Barbat)
Date: Fri, 13 May 2022 13:39:53 +0000
Subject: [Rd] R-4.2.0-win.exe
Message-ID: <IA1PR12MB6556163AD90640BD75D078B2B3CA9@IA1PR12MB6556.namprd12.prod.outlook.com>

Hey Team,

The 4.2.0 installer is not digitally signed, is that on purpose? The previous releases have been digitally signed.
Is it just a one-off or is this going to be the new default?

Thanks,

Liviu Barbat ? Customer Success Engineer
Rate Your Experience: Great<https://patchmypc.com/customer-feedback-Liviu> | Good<https://patchmypc.com/customer-feedback-Liviu> | Poor<https://patchmypc.com/customer-feedback-Liviu>
Learn More: Live Demo<https://patchmypc.com/schedule-live-demo> | Setup Call<https://patchmypc.com/schedule-setup-call> | Review Call<https://patchmypc.com/environment-review-call> | Trial<https://patchmypc.com/free-trial> | Quote<https://patchmypc.com/request-quote>
Follow Us: Twitter<https://patchmypc.com/twitter> | LinkedIn<https://patchmypc.com/linkedin>
Sales and Support: + 1-866-343-3083
[Sent from Front]

	[[alternative HTML version deleted]]


From pb @end|ng |rom |n|o||nk@com@br  Fri May 13 21:44:09 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Fri, 13 May 2022 16:44:09 -0300
Subject: [Rd] Writing in R // R 4.2.0 on Windows doesn't work with Dasher
Message-ID: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>

To the R developers,

I would like to point out an issue that occurs with the new R 4.2.0 
running on Windows; this is possibly related to the recent wide changes 
made to the Windows port of R. The issue has to do with writing of the R 
window.

My computer runs on Windows 10 Professional 64-bit with all the latest 
updates, and has a 4-core 8-thread Intel Xeon processor with 32 Gb of RAM.

I have some slight impairment in my hands, so for typing I avoid using 
the computer keyboard as much as possible. For most of my typing, I use 
the software Dasher, a kind of assistive technology software. Dasher was 
created by the Inference Group led by Professor David MacKay (died in 
2016) at Cambridge University in England. Later, Dasher was further 
developed by Ada Majorek (a Google engineer, recently deceased).

General information on Dasher and about the Dasher Project can be found 
on the Inference Group page:

http://www.inference.org.uk/dasher/

An example of Dasher in action can be seen on this 2-minute YouTube video:

https://www.youtube.com/watch?v=nr3s4613DX8

An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
himself explaining the Dasher concept can be found here:

https://www.youtube.com/watch?v=wpOxbesRNBc

In the 2-minute video (the first YouTube address above), the sentence 
written through Dasher, for actual use, needs to be copied and then 
pasted into another software, say a text editor. But Dasher also has a 
"Direct Entry" mode, where words typed are entered directly on the 
screen of the text editor or other software -- this is how I use Dasher 
to write on the R window.

Using Dasher`s "Direct Entry" mode, for all effects, to write a word 
through Dasher works exactly like writing the word through the normal 
computer keyboard. Somehow (I do not know about system programming), in 
"Direct Entry" mode, the output of Dasher is understood by the computer 
as an input of the same nature as a keyboard input.

But this is the issue: until R 4.1.3, R accepted normally the 
word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
r82348, 12 May 2022) does not accept Dasher anymore.

So, for now, if I wish to use R during some extended interactive section 
(say, for a first look at a complex data set), and if I wish to use 
Dasher for this interactive session, then I have to use R 4.1.3. For 
using R through programming, I can use the new R 4.2.0, by writing the 
program with Dasher in my text editor, and then pasting that program into R.

The latest Windows version of Dasher, version 5.0.0 beta, works 
perfectly well with text editors (I use EditPad Pro), with 
Microsoft-like Office packages (I use SoftMaker Office), for writing 
e-mails (I use Mozilla Thunderbird), for writing on a web page (I use 
mostly Mozilla Firefox). It worked perfectly well with R up to version 
4.1.3, but it does not work with R 4.2.0

The latest Dasher 5.0.0 beta Windows installer and the source code can 
be found on this page below (please click on "Windows installer" and on 
"source code", just below the head "Dasher 5.0 beta release"):

https://github.com/dasher-project/dasher/releases

To set Dasher 5.0.0 beta to the "Direct Entry" mode, after installing 
Dasher one should go to Preferences > Application > Application Style.

Currently, after the passing of Ada Majorek, the Dasher Project is being 
put forward by a group of people in England, but, it seems, at a very 
slow pace. They have announced the existence of a version 6 beta, but 
this is only an online instance of Dasher, there is no Windows 
installer, as far as I know. Their web page:

https://dasher.acecentre.net/

For me, and possibly for other users, the Dasher version 5.0.0 beta for 
Windows that is available works perfectly well, and allows me to use the 
computer with a proficiency that would be hardly possible otherwise.

Here I request that the R developers take a look at this word-typing 
issue that happens with the new R 4.2.0 on Windows.

As an R user (I work in ecological research), I can only thank the R 
team for this really wonderful piece of statistical software that you 
make freely available to us all.

Regards,

Paulo Barata

(Rio de Janeiro - Brazil)


From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Sun May 15 01:31:04 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Sat, 14 May 2022 23:31:04 +0000
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <a8733d02-ff78-a41b-446c-7347268bb27f@gmail.com>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
 <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
 <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>
 <82957f65-28f0-cc11-b07b-1e6076d23d9c@gmail.com>
 <a8733d02-ff78-a41b-446c-7347268bb27f@gmail.com>
Message-ID: <emc6b82537-e5e2-4512-9a59-7a90dda45dfd@dell>

Dear Tomas,

I am very grateful for your attention!

I've been reading some things about the GraphApp 
toolkit(http://enchantia.com/software/graphapp/) that is being used in 
the development of new versions of Rgui.

Really, if it's a matter of choice, the problems I reported cannot be 
considered a "bug". It's up to us - GUI and IDE application developers - 
to adapt to the new features.

I'm studying how to get around the problem, but I still haven't found a 
simple way.

The solution you proposed (code below) ran fine here in all versions of 
Rgui I have installed, but it's working only for very simple strings, 
like the one I tested. When testing the needs close to the real I found 
some problems.

For example, when sending the string below:
- char *s = "(s <- c('?', 'b', 'c', '?'))";

Rgui receives:
 > 9s ,- c9'', 'b', 'c', ''00
Error: unexpected symbol in "9s"
 >


#include <windows.h>
#include <stdio.h>
#include <string.h>

int main(int argc, char **argv) {
    HWND hw;
    int i, res;

    printf("Getting Rgui window...\n");
    hw = FindWindow(NULL, "R Console (64-bit)");

    printf("Got window: %x\n", hw);
    if (hw == NULL) {
      printf("Could not get Rgui window: %x\n", GetLastError());
      return 2;
    }

    //Samples to send:
// char *s = "sd";
    char *s = "(s <- c('?', 'b', 'c', '?'))";

    for(i = 0; i < strlen(s); i++) {
      res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(s[i]), 0);
      printf("Sending char %c: %d.\n", s[i], res);
    }

    res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
    printf("Sending return: %d\n.", res);
    return 0;
}

The idea of Tinn-R communicating with Rgui.exe is to take advantage of 
the great stability of Rgui. Since communication with Rterm is done via 
pipe.

I believe that developing a new interface using the resources of the 
R.dll library, as proposed, is outside the simple purposes of the Tinn-R 
project.

Any help in this regard is welcome.

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

------ Mensagem original ------
De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
<murdoch.duncan at gmail.com>; r-devel at r-project.org
Enviado(s): 11/05/2022 13:32:23
Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
Windows API's PostMessage function

>
>On 5/11/22 15:39, Tomas Kalibera wrote:
>>
>>On 5/11/22 08:15, Tomas Kalibera wrote:
>>>
>>>On 5/11/22 03:02, jcfaria wrote:
>>>>Dear Tomas,
>>>>I've tried, but I don't have the necessary C/C++ programming skills to fulfill your request.
>>>>
>>>>Maybe someone can help us by transcribing the little code in object Pascal that I sent to C/C++.
>>>>
>>>>If a small executable, made in Object Pascal, can help in your debug, I can provide.
>>>
>>>Dear Jose,
>>>
>>>no problem, I can try out with the Pascal code.
>>>Is there a free compiler I can use to build and run it?
>>
>>Actually I can reproduce it in a C program doing the same thing.
>>
>>The primary cause is that Rgui is using GraphApp Unicode windows on systems running in a multi-byte locale, which affects most systems since R 4.2 because of the switch to UTF-8. While Unicode windows have been used even in older versions of R, it was only on systems then running in a multi-byte locale, and apparently this hasn't been reported.
>>
>>When I modify R-devel to use non-Unicode GraphApp windows, the message sending works again. I will have a closer look, thanks for the report.
>
>I had a closer look and this doesn't really seem to be a bug in R to me. For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to read the keys instead of WM_CHAR, which it uses for non-Unicode windows. This is internal functionality of Rgui and a legitimate choice. Rgui cannot simply handle both messages in Unicode windows, because the characters would be doubled (if you see an easy, elegant change to Rgui that would mimic the previous behavior, let me know). This is certainly not a documented interface for Rgui, so I am afraid you would have to change something in your application.
>
>I read that using PostMessage to simulate keyboard input is considered wrong, see [1], and then one should instead use SendInput (which then requires bringing the window to the foreground), if at all simulating keyboard input. Maybe one could create a better working solution that way, or using some automation library.
>
>As a quick hack, I found that [2] happens to be working on my system, but again relying on the current implementation of Rgui (simply you send WM_KEYDOWN also for the characters other than the newline/return). It seems to be working also with R 4.1 for me.
>
>The usual way for GUIs/front-ends is to "embed" R, to link it as a DLL. Rgui itself does it and also external applications such as RStudio. Typically you would want to have a thin layer application embedding R and make your GUI communicate with that, but switching to that from sending the messages would require some work.
>
>Best
>Tomas
>
>[1] https://devblogs.microsoft.com/oldnewthing/20050530-11/?p=35513
>
>[2]
>#include <windows.h>
>#include <stdio.h>
>#include <string.h>
>
>int main(int argc, char **argv) {
>   HWND hw;
>   int i, res;
>
>   printf("Getting Rgui window...\n");
>   hw = FindWindow(NULL, "R Console (64-bit)");
>
>   printf("Got window: %x\n", hw);
>   if (hw == NULL) {
>     printf("Could not get Rgui window: %x\n", GetLastError());
>     return 2;
>   }
>
>   char *sd = "sd";
>   for(i = 0; i < strlen(sd); i++) {
>     res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(sd[i]), 0);
>     printf("Sending char %c: %d.\n", sd[i], res);
>   }
>
>   res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>   printf("Sending return: %d\n.", res);
>   return 0;
>}
>
>
>>
>>For reference, to reproduce I ran
>>
>>Rgui --sdi
>>
>>and used this C example:
>>
>>#include <windows.h>
>>#include <stdio.h>
>>#include <string.h>
>>
>>int main(int argc, char **argv) {
>>   HWND hw;
>>   int i, res;
>>
>>   printf("Getting Rgui window...\n");
>>   hw = FindWindow(NULL, "R Console (64-bit)");
>>
>>   printf("Got window: %x\n", hw);
>>   if (hw == NULL) {
>>     printf("Could not get Rgui window: %x\n", GetLastError());
>>     return 2;
>>   }
>>
>>   char *sd = "sd";
>>   for(i = 0; i < strlen(sd); i++) {
>>     res = PostMessage(hw, WM_CHAR, (unsigned int) sd[i], 0);
>>     printf("Sending char %c: %d.\n", sd[i], res);
>>   }
>>
>>   res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>   printf("Sending return: %d\n.", res);
>>   return 0;
>>}
>>
>>Best
>>Tomas
>>
>>
>>>
>>>Thanks
>>>Tomas
>>>
>>>>
>>>>Grateful for the attention,,
>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>Jose Claudio Faria
>>>>UESC/DCET/Brasil
>>>>joseclaudio.faria at gmail.com
>>>>Telefones:
>>>>55(73)3680.5545 - UESC
>>>>55(73)99966.9100 - VIVO
>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>If you have software to deal with statistics, you have arms,
>>>>if you have good software, you have arms and legs,
>>>>if you have software like R, you have arms, legs and wings...
>>>>the height of your flight depends only on you.
>>>>
>>>>------ Mensagem original ------
>>>>De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>>>>Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" <murdoch.duncan at gmail.com>; r-devel at r-project.org
>>>>Enviado(s): 06/05/2022 04:24:44
>>>>Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>>>
>>>>>
>>>>>On 5/6/22 07:03, jcfaria wrote:
>>>>>>Dear Duncan,
>>>>>>I believe the problem is of a different nature.
>>>>>>I get TRUE 3 times running the code below:
>>>>>>
>>>>>>procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>var
>>>>>>   i: integer;
>>>>>>   sTmp: string;
>>>>>>   hBN: HWND;
>>>>>>   j: bool;
>>>>>>
>>>>>>begin
>>>>>>   hBN:= FindWindowA(nil,
>>>>>>                     'R Console (64-bit)');
>>>>>>
>>>>>>   sTmp:= 'sd';
>>>>>>
>>>>>>   for i:= 1 to Length(sTmp) do begin
>>>>>>     j:= PostMessage(hBN,
>>>>>>                     WM_CHAR,
>>>>>>                     Ord(sTmp[i]),
>>>>>>                     0);
>>>>>>
>>>>>>     ShowMessage(BoolToStr(j,
>>>>>>                           True));
>>>>>>   end;
>>>>>>
>>>>>>   j:= PostMessage(hBN,
>>>>>>               WM_KEYDOWN,
>>>>>>               VK_RETURN, 0);
>>>>>>
>>>>>>   ShowMessage(BoolToStr(j,
>>>>>>                         True));
>>>>>>end;
>>>>>>
>>>>>>That is, Rgui is receiving the message of the characters (via PostMessage), but it is blocking because it does not show them in the console.
>>>>>>The only thing Rgui blames is Carriage Return, as it adds an additional prompt with each run.
>>>>>
>>>>>I can't provide a good guess what impacted your use, but if you could give me a full example, ideally in C, which can be compiled with Rtools42 (so gcc, MinGW) and I can edit/recompile, and works with R 4.1, I am happy to help debugging on 4.2.
>>>>>
>>>>>Rgui now uses GraphApp Unicode windows on systems where it didn't before, because it uses UTF-8 also on systems it didn't before (on systems that would use a single-byte locale in R 4.1). These Unicode windows are a different code path and there may be bugs not reported previously, including processing inputs (recently I fixed handling of accents, for example). Otherwise indeed R now uses UTF-8 as native encoding and UCRT as the C runtime.
>>>>>
>>>>>Best
>>>>>Tomas
>>>>>
>>>>>
>>>>>>
>>>>>> >
>>>>>> >
>>>>>>
>>>>>>Best,
>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>Jose Claudio Faria
>>>>>>UESC/DCET/Brasil
>>>>>>joseclaudio.faria at gmail.com
>>>>>>Telefones:
>>>>>>55(73)3680.5545 - UESC
>>>>>>55(73)99966.9100 - VIVO
>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>If you have software to deal with statistics, you have arms,
>>>>>>if you have good software, you have arms and legs,
>>>>>>if you have software like R, you have arms, legs and wings...
>>>>>>the height of your flight depends only on you.
>>>>>>
>>>>>>------ Mensagem original ------
>>>>>>De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>>>>>Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
>>>>>>Enviado(s): 05/05/2022 13:17:53
>>>>>>Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>>>>>
>>>>>>>On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>>>>>Hello,
>>>>>>>>
>>>>>>>>Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>>>>>PostMessage function.
>>>>>>>>
>>>>>>>>The Tinn-R project sends messages to Rgui.exe (SDI mode) via the Windows
>>>>>>>>API's PostMessage function.
>>>>>>>>A simplification of the code (in object Pascal) can be seen below.
>>>>>>>>
>>>>>>>>procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>>>var
>>>>>>>>     i: integer;
>>>>>>>>     sTmp: WideString;
>>>>>>>>     hBN: HWND;
>>>>>>>>
>>>>>>>>begin
>>>>>>>>     hBN:= FindWindowA(nil,
>>>>>>>>                       'R Console (64-bit)');
>>>>>>>>
>>>>>>>>     sTmp:= 'sd';
>>>>>>>>
>>>>>>>>     for i:= 1 to Length(sTmp) do begin
>>>>>>>>       PostMessage(hBN,
>>>>>>>>                   WM_CHAR,
>>>>>>>>                   Ord(sTmp[i]),
>>>>>>>>                   0);
>>>>>>>>     end;
>>>>>>>>
>>>>>>>>     PostMessage(hBN,
>>>>>>>>                 WM_KEYDOWN,
>>>>>>>>                 VK_RETURN, 0);
>>>>>>>>end;
>>>>>>>>
>>>>>>>>This code has always worked fine for all versions of Rgui.exe with the
>>>>>>>>exception of the last one released, ie 4.2.0.
>>>>>>>>
>>>>>>>>We've been trying to get around the problem on the Object Pascal side,
>>>>>>>>but without success so far.
>>>>>>>>
>>>>>>>>Does anyone connected to the compilation of Rqui.exe know what the
>>>>>>>>problem is?
>>>>>>>
>>>>>>>It could be that the new build enforces Windows security more stringently.  More details are described in the answer to this question: https://stackoverflow.com/a/40139498/2554330, but at a minimum you should be checking the return value from PostMessage.
>>>>>>>
>>>>>>>Duncan Murdoch
>>>>>>>
>>>>>>>>
>>>>>>>>Best,
>>>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>Jose Claudio Faria
>>>>>>>>UESC/DCET/Brasil
>>>>>>>>joseclaudio.faria at gmail.com
>>>>>>>>Telefones:
>>>>>>>>55(73)3680.5545 - UESC
>>>>>>>>55(73)99966.9100 - VIVO
>>>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>If you have software to deal with statistics, you have arms,
>>>>>>>>if you have good software, you have arms and legs,
>>>>>>>>if you have software like R, you have arms, legs and wings...
>>>>>>>>the height of your flight depends only on you.
>>>>>>>>
>>>>>>>>     [[alternative HTML version deleted]]
>>>>>>>>
>>>>>>>>______________________________________________
>>>>>>>>R-devel at r-project.org mailing list
>>>>>>>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>
>>>>>>
>>>>>>______________________________________________
>>>>>>R-devel at r-project.org mailing list
>>>>>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>


From pb @end|ng |rom |n|o||nk@com@br  Sun May 15 16:10:49 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Sun, 15 May 2022 11:10:49 -0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
Message-ID: <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>


To the R developers,

I noticed today that R 4.2.0 responds to the "Enter" character of Dasher 
version 5.0.0 beta in "Direct Entry" mode. An "Enter" in Dasher causes 
the R prompt to jump to the next line, as an "Enter" should do.

No other characters (letters, digits, special characters like + = & ~ | 
# $) are accepted by R 4.2.0 through Dasher.

The "Enter" shows that, somehow, the communication between Dasher and R 
4.2.0 through the Windows system is not completely curtailed.

Regards,

Paulo Barata

----------------------------------------------------------

On 13/05/2022 16:44, Paulo Barata wrote:
> To the R developers,
> 
> I would like to point out an issue that occurs with the new R 4.2.0 
> running on Windows; this is possibly related to the recent wide changes 
> made to the Windows port of R. The issue has to do with writing of the R 
> window.
> 
> My computer runs on Windows 10 Professional 64-bit with all the latest 
> updates, and has a 4-core 8-thread Intel Xeon processor with 32 Gb of RAM.
> 
> I have some slight impairment in my hands, so for typing I avoid using 
> the computer keyboard as much as possible. For most of my typing, I use 
> the software Dasher, a kind of assistive technology software. Dasher was 
> created by the Inference Group led by Professor David MacKay (died in 
> 2016) at Cambridge University in England. Later, Dasher was further 
> developed by Ada Majorek (a Google engineer, recently deceased).
> 
> General information on Dasher and about the Dasher Project can be found 
> on the Inference Group page:
> 
> http://www.inference.org.uk/dasher/
> 
> An example of Dasher in action can be seen on this 2-minute YouTube video:
> 
> https://www.youtube.com/watch?v=nr3s4613DX8
> 
> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
> himself explaining the Dasher concept can be found here:
> 
> https://www.youtube.com/watch?v=wpOxbesRNBc
> 
> In the 2-minute video (the first YouTube address above), the sentence 
> written through Dasher, for actual use, needs to be copied and then 
> pasted into another software, say a text editor. But Dasher also has a 
> "Direct Entry" mode, where words typed are entered directly on the 
> screen of the text editor or other software -- this is how I use Dasher 
> to write on the R window.
> 
> Using Dasher`s "Direct Entry" mode, for all effects, to write a word 
> through Dasher works exactly like writing the word through the normal 
> computer keyboard. Somehow (I do not know about system programming), in 
> "Direct Entry" mode, the output of Dasher is understood by the computer 
> as an input of the same nature as a keyboard input.
> 
> But this is the issue: until R 4.1.3, R accepted normally the 
> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
> r82348, 12 May 2022) does not accept Dasher anymore.
> 
> So, for now, if I wish to use R during some extended interactive section 
> (say, for a first look at a complex data set), and if I wish to use 
> Dasher for this interactive session, then I have to use R 4.1.3. For 
> using R through programming, I can use the new R 4.2.0, by writing the 
> program with Dasher in my text editor, and then pasting that program 
> into R.
> 
> The latest Windows version of Dasher, version 5.0.0 beta, works 
> perfectly well with text editors (I use EditPad Pro), with 
> Microsoft-like Office packages (I use SoftMaker Office), for writing 
> e-mails (I use Mozilla Thunderbird), for writing on a web page (I use 
> mostly Mozilla Firefox). It worked perfectly well with R up to version 
> 4.1.3, but it does not work with R 4.2.0
> 
> The latest Dasher 5.0.0 beta Windows installer and the source code can 
> be found on this page below (please click on "Windows installer" and on 
> "source code", just below the head "Dasher 5.0 beta release"):
> 
> https://github.com/dasher-project/dasher/releases
> 
> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after installing 
> Dasher one should go to Preferences > Application > Application Style.
> 
> Currently, after the passing of Ada Majorek, the Dasher Project is being 
> put forward by a group of people in England, but, it seems, at a very 
> slow pace. They have announced the existence of a version 6 beta, but 
> this is only an online instance of Dasher, there is no Windows 
> installer, as far as I know. Their web page:
> 
> https://dasher.acecentre.net/
> 
> For me, and possibly for other users, the Dasher version 5.0.0 beta for 
> Windows that is available works perfectly well, and allows me to use the 
> computer with a proficiency that would be hardly possible otherwise.
> 
> Here I request that the R developers take a look at this word-typing 
> issue that happens with the new R 4.2.0 on Windows.
> 
> As an R user (I work in ecological research), I can only thank the R 
> team for this really wonderful piece of statistical software that you 
> make freely available to us all.
> 
> Regards,
> 
> Paulo Barata
> 
> (Rio de Janeiro - Brazil)
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Sun May 15 16:58:52 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 15 May 2022 17:58:52 +0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
Message-ID: <20220515175852.39d6748d@Tarkus>

On Sun, 15 May 2022 11:10:49 -0300
Paulo Barata <pb at infolink.com.br> wrote:

> I noticed today that R 4.2.0 responds to the "Enter" character of
> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in
> Dasher causes the R prompt to jump to the next line, as an "Enter"
> should do.
> 
> No other characters (letters, digits, special characters like + = & ~
> | # $) are accepted by R 4.2.0 through Dasher.

This seems to be very similar to the problem discussed here:
https://stat.ethz.ch/pipermail/r-devel/2022-May/081683.html

For the record, here's the part of Dasher responsible for "Direct
Entry" on Windows:
https://github.com/dasher-project/dasher/blob/0ec7d646dbaadf06b8eebfc11b784738a20e75af/Src/Win32/Widgets/Edit.cpp#L302

MSDN says:

>> If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or
>> WM_KEYUP message to the foreground thread's message queue with
>> wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains
>> this message, passing the message to TranslateMessage posts a
>> WM_CHAR message with the Unicode character originally specified by
>> wScan.

<https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-keybdinput>

Previously, Tomas Kalibera has mentioned:

> For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to
> read the keys instead of WM_CHAR, which it uses for non-Unicode
> windows.

I think that for a combination of R >= 4.2 and Dasher, this means an
impasse. Either Dasher should be taught to send WM_IME_COMPOSITION
messages to R (?), or R should learn to understand WM_CHAR messages in
its Unicode windows in addition to WM_IME_COMPOSITION it currently uses.

-- 
Best regards,
Ivan


From pb @end|ng |rom |n|o||nk@com@br  Sun May 15 18:15:38 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Sun, 15 May 2022 13:15:38 -0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <20220515175852.39d6748d@Tarkus>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
Message-ID: <58abaecf-2d3f-199f-3439-316c7407f1fe@infolink.com.br>


Mr. Krylov,

Thank you very much for you message. Yes, the Dasher issue seems to have 
some common ground with the other R 4.2.0 issue you have pointed out.

As I said, I know nothing about system programming, so I cannot 
contribute to a solution to these problems. I only stress that, as I 
said, Dasher 5.0.0 beta in "Direct Entry" mode works perfectly well with 
all the other software I use: e-mail, text editors, Internet browsers, 
etc., all of them with the latest updates, as it happens with my Windows 
10 Professional. Dasher works well with Windows' File Explorer, Windows' 
Notepad, and Windows' Command Prompt.

Thank you once again.

Best regards,

Paulo

----------------------------------------------------------

On 15/05/2022 11:58, Ivan Krylov wrote:
> On Sun, 15 May 2022 11:10:49 -0300
> Paulo Barata <pb at infolink.com.br> wrote:
> 
>> I noticed today that R 4.2.0 responds to the "Enter" character of
>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in
>> Dasher causes the R prompt to jump to the next line, as an "Enter"
>> should do.
>>
>> No other characters (letters, digits, special characters like + = & ~
>> | # $) are accepted by R 4.2.0 through Dasher.
> 
> This seems to be very similar to the problem discussed here:
> https://stat.ethz.ch/pipermail/r-devel/2022-May/081683.html
> 
> For the record, here's the part of Dasher responsible for "Direct
> Entry" on Windows:
> https://github.com/dasher-project/dasher/blob/0ec7d646dbaadf06b8eebfc11b784738a20e75af/Src/Win32/Widgets/Edit.cpp#L302
> 
> MSDN says:
> 
>>> If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or
>>> WM_KEYUP message to the foreground thread's message queue with
>>> wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains
>>> this message, passing the message to TranslateMessage posts a
>>> WM_CHAR message with the Unicode character originally specified by
>>> wScan.
> 
> <https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-keybdinput>
> 
> Previously, Tomas Kalibera has mentioned:
> 
>> For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to
>> read the keys instead of WM_CHAR, which it uses for non-Unicode
>> windows.
> 
> I think that for a combination of R >= 4.2 and Dasher, this means an
> impasse. Either Dasher should be taught to send WM_IME_COMPOSITION
> messages to R (?), or R should learn to understand WM_CHAR messages in
> its Unicode windows in addition to WM_IME_COMPOSITION it currently uses.
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun May 15 18:27:56 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 15 May 2022 12:27:56 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <20220515175852.39d6748d@Tarkus>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
Message-ID: <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>

On 15/05/2022 10:58 a.m., Ivan Krylov wrote:
> On Sun, 15 May 2022 11:10:49 -0300
> Paulo Barata <pb at infolink.com.br> wrote:
> 
>> I noticed today that R 4.2.0 responds to the "Enter" character of
>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in
>> Dasher causes the R prompt to jump to the next line, as an "Enter"
>> should do.
>>
>> No other characters (letters, digits, special characters like + = & ~
>> | # $) are accepted by R 4.2.0 through Dasher.
> 
> This seems to be very similar to the problem discussed here:
> https://stat.ethz.ch/pipermail/r-devel/2022-May/081683.html
> 
> For the record, here's the part of Dasher responsible for "Direct
> Entry" on Windows:
> https://github.com/dasher-project/dasher/blob/0ec7d646dbaadf06b8eebfc11b784738a20e75af/Src/Win32/Widgets/Edit.cpp#L302
> 
> MSDN says:
> 
>>> If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or
>>> WM_KEYUP message to the foreground thread's message queue with
>>> wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains
>>> this message, passing the message to TranslateMessage posts a
>>> WM_CHAR message with the Unicode character originally specified by
>>> wScan.
> 
> <https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-keybdinput>

As far as I can see, Graphapp never looks for VK_PACKET.

> 
> Previously, Tomas Kalibera has mentioned:
> 
>> For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to
>> read the keys instead of WM_CHAR, which it uses for non-Unicode
>> windows.
> 
> I think that for a combination of R >= 4.2 and Dasher, this means an
> impasse. Either Dasher should be taught to send WM_IME_COMPOSITION
> messages to R (?), or R should learn to understand WM_CHAR messages in
> its Unicode windows in addition to WM_IME_COMPOSITION it currently uses.
> 

Another possible solution for Paulo is to use R via some other front end 
besides RGui, e.g. RStudio, but there are other possibilities too.

Duncan Murdoch


From pb @end|ng |rom |n|o||nk@com@br  Sun May 15 19:09:45 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Sun, 15 May 2022 14:09:45 -0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
Message-ID: <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>


Following Mr. Murdoch's suggestion, I installed R Studio (2022.02.2 
build 485) on my Windows 10 Professional.

When opening R Studio, it showed R 4.2.0 patched, the most recent 
version of R I had installed here. As it happens with the standalone R 
4.2.0, Dasher did not work with R Studio with that version of R -- 
please see below what happened.

I unistalled R 4.2.0 patched and also R 4.2.0, so then my latest version 
of R was R 4.1.3 patched. This was now the version of R that R Studio 
used. Dasher also did not work in R Studio with R 4.1.3 patched -- 
please see below what happened. Please note that the standalone R 4.1.3 
patched does work perfectly well with Dasher.

What happens in R Studio with both R 4.2.0 patched and R 4.1.3 patched: 
when I open R studio and start writing with Dasher, the first character 
that I write is now the character that always appears on the R Studio 
console, no matter what other characters I am commanding with Dasher. 
For R Studio, strangely, Dasher seems to be stuck in the first character.

For example, if I wish to write a plot command in R Studio, the first 
Dasher "p" is accepted by R Studio, but the next "lot" appears on the R 
Studio console as "ppp". This is is contrast with what happens with 
Dasher on R 4.2.0, where, except for the "Enter" character, no other 
character is accepted by R 4.2.0, the R 4.2.0 screen just does not 
respond to Dasher.

Both in R 4.2.0 and in R Studio, the "Enter" character of Dasher work 
well, it makes the R prompt to jump to the next line.

So, Dasher does not work with R Studio either, but in a different way 
than it happens with R 4.2.0.

Regards,

Paulo Barata

----------------------------------------------------------
Paulo Barata
Rua Almirante Alexandrino 1808 apt. 102
Santa Teresa
20241-263  Rio de Janeiro - RJ

Paulo Barata
Sub-S?ndico - Condom?nio do Edif?cio Dois Irm?os
Rua Almirante Alexandrino 1808 - Santa Teresa

E-mail: pb at infolink.com.br
----------------------------------------------------------

On 15/05/2022 13:27, Duncan Murdoch wrote:
> On 15/05/2022 10:58 a.m., Ivan Krylov wrote:
>> On Sun, 15 May 2022 11:10:49 -0300
>> Paulo Barata <pb at infolink.com.br> wrote:
>>
>>> I noticed today that R 4.2.0 responds to the "Enter" character of
>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in
>>> Dasher causes the R prompt to jump to the next line, as an "Enter"
>>> should do.
>>>
>>> No other characters (letters, digits, special characters like + = & ~
>>> | # $) are accepted by R 4.2.0 through Dasher.
>>
>> This seems to be very similar to the problem discussed here:
>> https://stat.ethz.ch/pipermail/r-devel/2022-May/081683.html
>>
>> For the record, here's the part of Dasher responsible for "Direct
>> Entry" on Windows:
>> https://github.com/dasher-project/dasher/blob/0ec7d646dbaadf06b8eebfc11b784738a20e75af/Src/Win32/Widgets/Edit.cpp#L302 
>>
>>
>> MSDN says:
>>
>>>> If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or
>>>> WM_KEYUP message to the foreground thread's message queue with
>>>> wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains
>>>> this message, passing the message to TranslateMessage posts a
>>>> WM_CHAR message with the Unicode character originally specified by
>>>> wScan.
>>
>> <https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-keybdinput> 
>>
> 
> As far as I can see, Graphapp never looks for VK_PACKET.
> 
>>
>> Previously, Tomas Kalibera has mentioned:
>>
>>> For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to
>>> read the keys instead of WM_CHAR, which it uses for non-Unicode
>>> windows.
>>
>> I think that for a combination of R >= 4.2 and Dasher, this means an
>> impasse. Either Dasher should be taught to send WM_IME_COMPOSITION
>> messages to R (?), or R should learn to understand WM_CHAR messages in
>> its Unicode windows in addition to WM_IME_COMPOSITION it currently uses.
>>
> 
> Another possible solution for Paulo is to use R via some other front end 
> besides RGui, e.g. RStudio, but there are other possibilities too.
> 
> Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun May 15 19:24:05 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 15 May 2022 13:24:05 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
Message-ID: <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>

On 15/05/2022 1:09 p.m., Paulo Barata wrote:
> 
> Following Mr. Murdoch's suggestion, I installed R Studio (2022.02.2
> build 485) on my Windows 10 Professional.
> 
> When opening R Studio, it showed R 4.2.0 patched, the most recent
> version of R I had installed here. As it happens with the standalone R
> 4.2.0, Dasher did not work with R Studio with that version of R --
> please see below what happened.

That's too bad.  Still, there are other front ends:

- Running Rterm in a command window.

- R in Visual Studio Code

- ESS in Emacs

- Others whose names I don't remember; not sure how active any of them 
are these days.

And finally, if you are really desperate, I believe dasher runs on other 
platforms besides Windows, i.e. Linux and MacOS.

Duncan Murdoch


> 
> I unistalled R 4.2.0 patched and also R 4.2.0, so then my latest version
> of R was R 4.1.3 patched. This was now the version of R that R Studio
> used. Dasher also did not work in R Studio with R 4.1.3 patched --
> please see below what happened. Please note that the standalone R 4.1.3
> patched does work perfectly well with Dasher.
> 
> What happens in R Studio with both R 4.2.0 patched and R 4.1.3 patched:
> when I open R studio and start writing with Dasher, the first character
> that I write is now the character that always appears on the R Studio
> console, no matter what other characters I am commanding with Dasher.
> For R Studio, strangely, Dasher seems to be stuck in the first character.
> 
> For example, if I wish to write a plot command in R Studio, the first
> Dasher "p" is accepted by R Studio, but the next "lot" appears on the R
> Studio console as "ppp". This is is contrast with what happens with
> Dasher on R 4.2.0, where, except for the "Enter" character, no other
> character is accepted by R 4.2.0, the R 4.2.0 screen just does not
> respond to Dasher.
> 
> Both in R 4.2.0 and in R Studio, the "Enter" character of Dasher work
> well, it makes the R prompt to jump to the next line.
> 
> So, Dasher does not work with R Studio either, but in a different way
> than it happens with R 4.2.0.
> 
> Regards,
> 
> Paulo Barata
> 
> ----------------------------------------------------------
> Paulo Barata
> Rua Almirante Alexandrino 1808 apt. 102
> Santa Teresa
> 20241-263  Rio de Janeiro - RJ
> 
> Paulo Barata
> Sub-S?ndico - Condom?nio do Edif?cio Dois Irm?os
> Rua Almirante Alexandrino 1808 - Santa Teresa
> 
> E-mail: pb at infolink.com.br
> ----------------------------------------------------------
> 
> On 15/05/2022 13:27, Duncan Murdoch wrote:
>> On 15/05/2022 10:58 a.m., Ivan Krylov wrote:
>>> On Sun, 15 May 2022 11:10:49 -0300
>>> Paulo Barata <pb at infolink.com.br> wrote:
>>>
>>>> I noticed today that R 4.2.0 responds to the "Enter" character of
>>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in
>>>> Dasher causes the R prompt to jump to the next line, as an "Enter"
>>>> should do.
>>>>
>>>> No other characters (letters, digits, special characters like + = & ~
>>>> | # $) are accepted by R 4.2.0 through Dasher.
>>>
>>> This seems to be very similar to the problem discussed here:
>>> https://stat.ethz.ch/pipermail/r-devel/2022-May/081683.html
>>>
>>> For the record, here's the part of Dasher responsible for "Direct
>>> Entry" on Windows:
>>> https://github.com/dasher-project/dasher/blob/0ec7d646dbaadf06b8eebfc11b784738a20e75af/Src/Win32/Widgets/Edit.cpp#L302
>>>
>>>
>>> MSDN says:
>>>
>>>>> If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or
>>>>> WM_KEYUP message to the foreground thread's message queue with
>>>>> wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains
>>>>> this message, passing the message to TranslateMessage posts a
>>>>> WM_CHAR message with the Unicode character originally specified by
>>>>> wScan.
>>>
>>> <https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-keybdinput>
>>>
>>
>> As far as I can see, Graphapp never looks for VK_PACKET.
>>
>>>
>>> Previously, Tomas Kalibera has mentioned:
>>>
>>>> For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to
>>>> read the keys instead of WM_CHAR, which it uses for non-Unicode
>>>> windows.
>>>
>>> I think that for a combination of R >= 4.2 and Dasher, this means an
>>> impasse. Either Dasher should be taught to send WM_IME_COMPOSITION
>>> messages to R (?), or R should learn to understand WM_CHAR messages in
>>> its Unicode windows in addition to WM_IME_COMPOSITION it currently uses.
>>>
>>
>> Another possible solution for Paulo is to use R via some other front end
>> besides RGui, e.g. RStudio, but there are other possibilities too.
>>
>> Duncan Murdoch


From pb @end|ng |rom |n|o||nk@com@br  Sun May 15 20:28:57 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Sun, 15 May 2022 15:28:57 -0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
Message-ID: <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>


Mr. Murdoch,

Yes, following your suggestion, I see that I can use Dasher with R 4.2.0 
patched in Visual Studio Code. Dasher works well that way, Visual Studio 
Code does accept Dasher, so I can use Dasher with R in an interactive 
mode. I will have to understand better the workings of Visual Studio Code.

As an alternative, I will keep here two different versions of R: R 4.1.3 
for interactive use through Dasher, and R 4.2.0 for running programs 
(written by means of a text editor).

Anyway, I hope that some technical way can be found so that Dasher can 
be used regularly on the R console in R versions following R 4.2.0.

For your information, Dasher can be used on Windows and Linux, but 
currently not on Macs.

Best regards,

Paulo Barata

----------------------------------------------------------

On 15/05/2022 14:24, Duncan Murdoch wrote:
> On 15/05/2022 1:09 p.m., Paulo Barata wrote:
>>
>> Following Mr. Murdoch's suggestion, I installed R Studio (2022.02.2
>> build 485) on my Windows 10 Professional.
>>
>> When opening R Studio, it showed R 4.2.0 patched, the most recent
>> version of R I had installed here. As it happens with the standalone R
>> 4.2.0, Dasher did not work with R Studio with that version of R --
>> please see below what happened.
> 
> That's too bad.? Still, there are other front ends:
> 
> - Running Rterm in a command window.
> 
> - R in Visual Studio Code
> 
> - ESS in Emacs
> 
> - Others whose names I don't remember; not sure how active any of them 
> are these days.
> 
> And finally, if you are really desperate, I believe dasher runs on other 
> platforms besides Windows, i.e. Linux and MacOS.
> 
> Duncan Murdoch
> 
> 
>>
>> I unistalled R 4.2.0 patched and also R 4.2.0, so then my latest version
>> of R was R 4.1.3 patched. This was now the version of R that R Studio
>> used. Dasher also did not work in R Studio with R 4.1.3 patched --
>> please see below what happened. Please note that the standalone R 4.1.3
>> patched does work perfectly well with Dasher.
>>
>> What happens in R Studio with both R 4.2.0 patched and R 4.1.3 patched:
>> when I open R studio and start writing with Dasher, the first character
>> that I write is now the character that always appears on the R Studio
>> console, no matter what other characters I am commanding with Dasher.
>> For R Studio, strangely, Dasher seems to be stuck in the first character.
>>
>> For example, if I wish to write a plot command in R Studio, the first
>> Dasher "p" is accepted by R Studio, but the next "lot" appears on the R
>> Studio console as "ppp". This is is contrast with what happens with
>> Dasher on R 4.2.0, where, except for the "Enter" character, no other
>> character is accepted by R 4.2.0, the R 4.2.0 screen just does not
>> respond to Dasher.
>>
>> Both in R 4.2.0 and in R Studio, the "Enter" character of Dasher work
>> well, it makes the R prompt to jump to the next line.
>>
>> So, Dasher does not work with R Studio either, but in a different way
>> than it happens with R 4.2.0.
>>
>> Regards,
>>
>> Paulo Barata
>>
>> ----------------------------------------------------------
>>
>> On 15/05/2022 13:27, Duncan Murdoch wrote:
>>> On 15/05/2022 10:58 a.m., Ivan Krylov wrote:
>>>> On Sun, 15 May 2022 11:10:49 -0300
>>>> Paulo Barata <pb at infolink.com.br> wrote:
>>>>
>>>>> I noticed today that R 4.2.0 responds to the "Enter" character of
>>>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in
>>>>> Dasher causes the R prompt to jump to the next line, as an "Enter"
>>>>> should do.
>>>>>
>>>>> No other characters (letters, digits, special characters like + = & ~
>>>>> | # $) are accepted by R 4.2.0 through Dasher.
>>>>
>>>> This seems to be very similar to the problem discussed here:
>>>> https://stat.ethz.ch/pipermail/r-devel/2022-May/081683.html
>>>>
>>>> For the record, here's the part of Dasher responsible for "Direct
>>>> Entry" on Windows:
>>>> https://github.com/dasher-project/dasher/blob/0ec7d646dbaadf06b8eebfc11b784738a20e75af/Src/Win32/Widgets/Edit.cpp#L302 
>>>>
>>>>
>>>>
>>>> MSDN says:
>>>>
>>>>>> If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or
>>>>>> WM_KEYUP message to the foreground thread's message queue with
>>>>>> wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains
>>>>>> this message, passing the message to TranslateMessage posts a
>>>>>> WM_CHAR message with the Unicode character originally specified by
>>>>>> wScan.
>>>>
>>>> <https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-keybdinput> 
>>>>
>>>>
>>>
>>> As far as I can see, Graphapp never looks for VK_PACKET.
>>>
>>>>
>>>> Previously, Tomas Kalibera has mentioned:
>>>>
>>>>> For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to
>>>>> read the keys instead of WM_CHAR, which it uses for non-Unicode
>>>>> windows.
>>>>
>>>> I think that for a combination of R >= 4.2 and Dasher, this means an
>>>> impasse. Either Dasher should be taught to send WM_IME_COMPOSITION
>>>> messages to R (?), or R should learn to understand WM_CHAR messages in
>>>> its Unicode windows in addition to WM_IME_COMPOSITION it currently 
>>>> uses.
>>>>
>>>
>>> Another possible solution for Paulo is to use R via some other front end
>>> besides RGui, e.g. RStudio, but there are other possibilities too.
>>>
>>> Duncan Murdoch
>


From bbo|ker @end|ng |rom gm@||@com  Sun May 15 20:44:35 2022
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 15 May 2022 14:44:35 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
 <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
Message-ID: <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>

   I don't know if there's a good up-to-date list anywhere of 
editors/IDEs that handle R nicely, but it would include at least:

   Atom
   Sublime Text
   VS Code
   RStudio
   Jupyter notebooks
   vim
   emacs
   Tinn-R

   It's worth being able to choose from such a list both for general 
aesthetic preferences, and for those with accessibility challenges.

  I do agree that it would be nice if there were a way to make the R 
console work well with Dasher under Windows, but the technical details 
are completely beyond me.

On 2022-05-15 2:28 p.m., Paulo Barata wrote:
> 
> Mr. Murdoch,
> 
> Yes, following your suggestion, I see that I can use Dasher with R 4.2.0 
> patched in Visual Studio Code. Dasher works well that way, Visual Studio 
> Code does accept Dasher, so I can use Dasher with R in an interactive 
> mode. I will have to understand better the workings of Visual Studio Code.
> 
> As an alternative, I will keep here two different versions of R: R 4.1.3 
> for interactive use through Dasher, and R 4.2.0 for running programs 
> (written by means of a text editor).
> 
> Anyway, I hope that some technical way can be found so that Dasher can 
> be used regularly on the R console in R versions following R 4.2.0.
> 
> For your information, Dasher can be used on Windows and Linux, but 
> currently not on Macs.
> 
> Best regards,
> 
> Paulo Barata
> 
> ----------------------------------------------------------
> 
> On 15/05/2022 14:24, Duncan Murdoch wrote:
>> On 15/05/2022 1:09 p.m., Paulo Barata wrote:
>>>
>>> Following Mr. Murdoch's suggestion, I installed R Studio (2022.02.2
>>> build 485) on my Windows 10 Professional.
>>>
>>> When opening R Studio, it showed R 4.2.0 patched, the most recent
>>> version of R I had installed here. As it happens with the standalone R
>>> 4.2.0, Dasher did not work with R Studio with that version of R --
>>> please see below what happened.
>>
>> That's too bad.? Still, there are other front ends:
>>
>> - Running Rterm in a command window.
>>
>> - R in Visual Studio Code
>>
>> - ESS in Emacs
>>
>> - Others whose names I don't remember; not sure how active any of them 
>> are these days.
>>
>> And finally, if you are really desperate, I believe dasher runs on 
>> other platforms besides Windows, i.e. Linux and MacOS.
>>
>> Duncan Murdoch
>>
>>
>>>
>>> I unistalled R 4.2.0 patched and also R 4.2.0, so then my latest version
>>> of R was R 4.1.3 patched. This was now the version of R that R Studio
>>> used. Dasher also did not work in R Studio with R 4.1.3 patched --
>>> please see below what happened. Please note that the standalone R 4.1.3
>>> patched does work perfectly well with Dasher.
>>>
>>> What happens in R Studio with both R 4.2.0 patched and R 4.1.3 patched:
>>> when I open R studio and start writing with Dasher, the first character
>>> that I write is now the character that always appears on the R Studio
>>> console, no matter what other characters I am commanding with Dasher.
>>> For R Studio, strangely, Dasher seems to be stuck in the first 
>>> character.
>>>
>>> For example, if I wish to write a plot command in R Studio, the first
>>> Dasher "p" is accepted by R Studio, but the next "lot" appears on the R
>>> Studio console as "ppp". This is is contrast with what happens with
>>> Dasher on R 4.2.0, where, except for the "Enter" character, no other
>>> character is accepted by R 4.2.0, the R 4.2.0 screen just does not
>>> respond to Dasher.
>>>
>>> Both in R 4.2.0 and in R Studio, the "Enter" character of Dasher work
>>> well, it makes the R prompt to jump to the next line.
>>>
>>> So, Dasher does not work with R Studio either, but in a different way
>>> than it happens with R 4.2.0.
>>>
>>> Regards,
>>>
>>> Paulo Barata
>>>
>>> ----------------------------------------------------------
>>>
>>> On 15/05/2022 13:27, Duncan Murdoch wrote:
>>>> On 15/05/2022 10:58 a.m., Ivan Krylov wrote:
>>>>> On Sun, 15 May 2022 11:10:49 -0300
>>>>> Paulo Barata <pb at infolink.com.br> wrote:
>>>>>
>>>>>> I noticed today that R 4.2.0 responds to the "Enter" character of
>>>>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in
>>>>>> Dasher causes the R prompt to jump to the next line, as an "Enter"
>>>>>> should do.
>>>>>>
>>>>>> No other characters (letters, digits, special characters like + = & ~
>>>>>> | # $) are accepted by R 4.2.0 through Dasher.
>>>>>
>>>>> This seems to be very similar to the problem discussed here:
>>>>> https://stat.ethz.ch/pipermail/r-devel/2022-May/081683.html
>>>>>
>>>>> For the record, here's the part of Dasher responsible for "Direct
>>>>> Entry" on Windows:
>>>>> https://github.com/dasher-project/dasher/blob/0ec7d646dbaadf06b8eebfc11b784738a20e75af/Src/Win32/Widgets/Edit.cpp#L302 
>>>>>
>>>>>
>>>>>
>>>>> MSDN says:
>>>>>
>>>>>>> If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or
>>>>>>> WM_KEYUP message to the foreground thread's message queue with
>>>>>>> wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains
>>>>>>> this message, passing the message to TranslateMessage posts a
>>>>>>> WM_CHAR message with the Unicode character originally specified by
>>>>>>> wScan.
>>>>>
>>>>> <https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-keybdinput> 
>>>>>
>>>>>
>>>>
>>>> As far as I can see, Graphapp never looks for VK_PACKET.
>>>>
>>>>>
>>>>> Previously, Tomas Kalibera has mentioned:
>>>>>
>>>>>> For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to
>>>>>> read the keys instead of WM_CHAR, which it uses for non-Unicode
>>>>>> windows.
>>>>>
>>>>> I think that for a combination of R >= 4.2 and Dasher, this means an
>>>>> impasse. Either Dasher should be taught to send WM_IME_COMPOSITION
>>>>> messages to R (?), or R should learn to understand WM_CHAR messages in
>>>>> its Unicode windows in addition to WM_IME_COMPOSITION it currently 
>>>>> uses.
>>>>>
>>>>
>>>> Another possible solution for Paulo is to use R via some other front 
>>>> end
>>>> besides RGui, e.g. RStudio, but there are other possibilities too.
>>>>
>>>> Duncan Murdoch
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun May 15 21:32:23 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 15 May 2022 15:32:23 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
 <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
 <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>
Message-ID: <0ee24ff7-2533-1486-1424-cf3cd2a3b9e0@gmail.com>

On 15/05/2022 2:44 p.m., Ben Bolker wrote:
>     I don't know if there's a good up-to-date list anywhere of
> editors/IDEs that handle R nicely, but it would include at least:
> 
>     Atom
>     Sublime Text
>     VS Code
>     RStudio
>     Jupyter notebooks
>     vim
>     emacs
>     Tinn-R
> 
>     It's worth being able to choose from such a list both for general
> aesthetic preferences, and for those with accessibility challenges.

One more that I should have mentioned:  StatET, a plug-in for the 
Eclipse IDE.

> 
>    I do agree that it would be nice if there were a way to make the R
> console work well with Dasher under Windows, but the technical details
> are completely beyond me.

A long time ago I used to know some of this stuff, but now I find 
working in Windows quite difficult.  I never knew it well enough to know 
the advantages and disadvantages of the approach RGui uses versus the 
one that dasher seems to be expecting.

On the hopeful side, accessibility has always had a relatively high 
priority in the R Project, and there seems to be a recent push in that 
direction.  Perhaps there will be an opportunity for someone to bring up 
this issue at useR! 2022 (https://user2022.r-project.org).

Duncan Murdoch


From k@@perd@n|e|h@n@en @end|ng |rom gm@||@com  Sun May 15 23:01:02 2022
From: k@@perd@n|e|h@n@en @end|ng |rom gm@||@com (Kasper Daniel Hansen)
Date: Sun, 15 May 2022 17:01:02 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <0ee24ff7-2533-1486-1424-cf3cd2a3b9e0@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
 <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
 <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>
 <0ee24ff7-2533-1486-1424-cf3cd2a3b9e0@gmail.com>
Message-ID: <CAC2h7usszaxz=C5rPHG53O7N=rbxq+pe-Fm8pa817Jf__U-ALQ@mail.gmail.com>

It is interesting that Paulo reports Rgui to behave differently from many
(all?) other applications. However, I have no insight into Windows.

Best,
Kasper

On Sun, May 15, 2022 at 3:32 PM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 15/05/2022 2:44 p.m., Ben Bolker wrote:
> >     I don't know if there's a good up-to-date list anywhere of
> > editors/IDEs that handle R nicely, but it would include at least:
> >
> >     Atom
> >     Sublime Text
> >     VS Code
> >     RStudio
> >     Jupyter notebooks
> >     vim
> >     emacs
> >     Tinn-R
> >
> >     It's worth being able to choose from such a list both for general
> > aesthetic preferences, and for those with accessibility challenges.
>
> One more that I should have mentioned:  StatET, a plug-in for the
> Eclipse IDE.
>
> >
> >    I do agree that it would be nice if there were a way to make the R
> > console work well with Dasher under Windows, but the technical details
> > are completely beyond me.
>
> A long time ago I used to know some of this stuff, but now I find
> working in Windows quite difficult.  I never knew it well enough to know
> the advantages and disadvantages of the approach RGui uses versus the
> one that dasher seems to be expecting.
>
> On the hopeful side, accessibility has always had a relatively high
> priority in the R Project, and there seems to be a recent push in that
> direction.  Perhaps there will be an opportunity for someone to bring up
> this issue at useR! 2022 (https://user2022.r-project.org).
>
> Duncan Murdoch
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Best,
Kasper

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun May 15 23:48:10 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 15 May 2022 17:48:10 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <CAC2h7usszaxz=C5rPHG53O7N=rbxq+pe-Fm8pa817Jf__U-ALQ@mail.gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
 <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
 <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>
 <0ee24ff7-2533-1486-1424-cf3cd2a3b9e0@gmail.com>
 <CAC2h7usszaxz=C5rPHG53O7N=rbxq+pe-Fm8pa817Jf__U-ALQ@mail.gmail.com>
Message-ID: <999f4f0e-5203-54bf-b2cb-aa38477bf089@gmail.com>

On 15/05/2022 5:01 p.m., Kasper Daniel Hansen wrote:
> It is interesting that Paulo reports Rgui to behave differently from 
> many (all?) other applications. However, I have no insight into Windows.

It's not a big surprise.  Rgui uses a UI library (Graphapp) that was 
written a very long time ago, and it hasn't adopted their updates in at 
least 15 years.  Additionally, Rgui hasn't really had any Windows users 
giving it the attention it needs.

And not nearly "all".  RStudio has different problems, which means 
everyone using the same UI library they use probably has them too.  I 
didn't see any open source projects in the list of things that work.

Duncan Murdoch

> 
> Best,
> Kasper
> 
> On Sun, May 15, 2022 at 3:32 PM Duncan Murdoch <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
> 
>     On 15/05/2022 2:44 p.m., Ben Bolker wrote:
>      >? ? ?I don't know if there's a good up-to-date list anywhere of
>      > editors/IDEs that handle R nicely, but it would include at least:
>      >
>      >? ? ?Atom
>      >? ? ?Sublime Text
>      >? ? ?VS Code
>      >? ? ?RStudio
>      >? ? ?Jupyter notebooks
>      >? ? ?vim
>      >? ? ?emacs
>      >? ? ?Tinn-R
>      >
>      >? ? ?It's worth being able to choose from such a list both for general
>      > aesthetic preferences, and for those with accessibility challenges.
> 
>     One more that I should have mentioned:? StatET, a plug-in for the
>     Eclipse IDE.
> 
>      >
>      >? ? I do agree that it would be nice if there were a way to make the R
>      > console work well with Dasher under Windows, but the technical
>     details
>      > are completely beyond me.
> 
>     A long time ago I used to know some of this stuff, but now I find
>     working in Windows quite difficult.? I never knew it well enough to
>     know
>     the advantages and disadvantages of the approach RGui uses versus the
>     one that dasher seems to be expecting.
> 
>     On the hopeful side, accessibility has always had a relatively high
>     priority in the R Project, and there seems to be a recent push in that
>     direction.? Perhaps there will be an opportunity for someone to
>     bring up
>     this issue at useR! 2022 (https://user2022.r-project.org
>     <https://user2022.r-project.org>).
> 
>     Duncan Murdoch
> 
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
> 
> 
> 
> -- 
> Best,
> Kasper


From bbo|ker @end|ng |rom gm@||@com  Sun May 15 23:55:23 2022
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 15 May 2022 17:55:23 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <999f4f0e-5203-54bf-b2cb-aa38477bf089@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
 <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
 <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>
 <0ee24ff7-2533-1486-1424-cf3cd2a3b9e0@gmail.com>
 <CAC2h7usszaxz=C5rPHG53O7N=rbxq+pe-Fm8pa817Jf__U-ALQ@mail.gmail.com>
 <999f4f0e-5203-54bf-b2cb-aa38477bf089@gmail.com>
Message-ID: <9c6ebabf-4a20-57f0-2c5f-5dc34d4e5bce@gmail.com>

  VScode is sorta-kinda open source 
https://opensource.com/article/20/6/open-source-alternatives-vs-code 
(that is, the default downloadable binaries are non-freely licensed). 
Presumably the open builds also work.

   On the other hand, it's also developed by Microsoft, so it's not much 
of a surprise that it works better on Windows than some of the alternatives.

On 2022-05-15 5:48 p.m., Duncan Murdoch wrote:
> On 15/05/2022 5:01 p.m., Kasper Daniel Hansen wrote:
>> It is interesting that Paulo reports Rgui to behave differently from 
>> many (all?) other applications. However, I have no insight into Windows.
> 
> It's not a big surprise.? Rgui uses a UI library (Graphapp) that was 
> written a very long time ago, and it hasn't adopted their updates in at 
> least 15 years.? Additionally, Rgui hasn't really had any Windows users 
> giving it the attention it needs.
> 
> And not nearly "all".? RStudio has different problems, which means 
> everyone using the same UI library they use probably has them too.? I 
> didn't see any open source projects in the list of things that work.
> 
> Duncan Murdoch
> 
>>
>> Best,
>> Kasper
>>
>> On Sun, May 15, 2022 at 3:32 PM Duncan Murdoch 
>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>
>> ??? On 15/05/2022 2:44 p.m., Ben Bolker wrote:
>> ???? >? ? ?I don't know if there's a good up-to-date list anywhere of
>> ???? > editors/IDEs that handle R nicely, but it would include at least:
>> ???? >
>> ???? >? ? ?Atom
>> ???? >? ? ?Sublime Text
>> ???? >? ? ?VS Code
>> ???? >? ? ?RStudio
>> ???? >? ? ?Jupyter notebooks
>> ???? >? ? ?vim
>> ???? >? ? ?emacs
>> ???? >? ? ?Tinn-R
>> ???? >
>> ???? >? ? ?It's worth being able to choose from such a list both for 
>> general
>> ???? > aesthetic preferences, and for those with accessibility 
>> challenges.
>>
>> ??? One more that I should have mentioned:? StatET, a plug-in for the
>> ??? Eclipse IDE.
>>
>> ???? >
>> ???? >? ? I do agree that it would be nice if there were a way to make 
>> the R
>> ???? > console work well with Dasher under Windows, but the technical
>> ??? details
>> ???? > are completely beyond me.
>>
>> ??? A long time ago I used to know some of this stuff, but now I find
>> ??? working in Windows quite difficult.? I never knew it well enough to
>> ??? know
>> ??? the advantages and disadvantages of the approach RGui uses versus the
>> ??? one that dasher seems to be expecting.
>>
>> ??? On the hopeful side, accessibility has always had a relatively high
>> ??? priority in the R Project, and there seems to be a recent push in 
>> that
>> ??? direction.? Perhaps there will be an opportunity for someone to
>> ??? bring up
>> ??? this issue at useR! 2022 (https://user2022.r-project.org
>> ??? <https://user2022.r-project.org>).
>>
>> ??? Duncan Murdoch
>>
>> ??? ______________________________________________
>> ??? R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> ??? https://stat.ethz.ch/mailman/listinfo/r-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>
>>
>>
>> -- 
>> Best,
>> Kasper
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics


From pb @end|ng |rom |n|o||nk@com@br  Mon May 16 00:28:11 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Sun, 15 May 2022 19:28:11 -0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <999f4f0e-5203-54bf-b2cb-aa38477bf089@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
 <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
 <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>
 <0ee24ff7-2533-1486-1424-cf3cd2a3b9e0@gmail.com>
 <CAC2h7usszaxz=C5rPHG53O7N=rbxq+pe-Fm8pa817Jf__U-ALQ@mail.gmail.com>
 <999f4f0e-5203-54bf-b2cb-aa38477bf089@gmail.com>
Message-ID: <bdec5805-8506-0515-43d9-5539777b4275@infolink.com.br>


Mr. Murdoch,

Two pieces of open source software that do work with Dasher 5.0.0 beta 
in Direct Entry mode, on Windows 10:

---------

Apache Open Office 4.1.2 (32-bit Windows application) -- I tried the 
Open Office Writer, a Microsoft Word equivalent:

https://sourceforge.net/projects/openofficeorg.mirror/

Source code here:

https://openoffice.apache.org/source.html

---------

Notepad++ 8.4.1 (64-bit Windows application / text editor):

https://notepad-plus-plus.org/downloads/v8.4.1/

Source code here:

https://github.com/notepad-plus-plus/notepad-plus-plus

---------

Best regards,

Paulo Barata

----------------------------------------------------------

On 15/05/2022 18:48, Duncan Murdoch wrote:
> On 15/05/2022 5:01 p.m., Kasper Daniel Hansen wrote:
>> It is interesting that Paulo reports Rgui to behave differently from 
>> many (all?) other applications. However, I have no insight into Windows.
> 
> It's not a big surprise.? Rgui uses a UI library (Graphapp) that was 
> written a very long time ago, and it hasn't adopted their updates in at 
> least 15 years.? Additionally, Rgui hasn't really had any Windows users 
> giving it the attention it needs.
> 
> And not nearly "all".? RStudio has different problems, which means 
> everyone using the same UI library they use probably has them too.? I 
> didn't see any open source projects in the list of things that work.
> 
> Duncan Murdoch
> 
>>
>> Best,
>> Kasper
>>
>> On Sun, May 15, 2022 at 3:32 PM Duncan Murdoch 
>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>
>> ??? On 15/05/2022 2:44 p.m., Ben Bolker wrote:
>> ???? >? ? ?I don't know if there's a good up-to-date list anywhere of
>> ???? > editors/IDEs that handle R nicely, but it would include at least:
>> ???? >
>> ???? >? ? ?Atom
>> ???? >? ? ?Sublime Text
>> ???? >? ? ?VS Code
>> ???? >? ? ?RStudio
>> ???? >? ? ?Jupyter notebooks
>> ???? >? ? ?vim
>> ???? >? ? ?emacs
>> ???? >? ? ?Tinn-R
>> ???? >
>> ???? >? ? ?It's worth being able to choose from such a list both for 
>> general
>> ???? > aesthetic preferences, and for those with accessibility 
>> challenges.
>>
>> ??? One more that I should have mentioned:? StatET, a plug-in for the
>> ??? Eclipse IDE.
>>
>> ???? >
>> ???? >? ? I do agree that it would be nice if there were a way to make 
>> the R
>> ???? > console work well with Dasher under Windows, but the technical
>> ??? details
>> ???? > are completely beyond me.
>>
>> ??? A long time ago I used to know some of this stuff, but now I find
>> ??? working in Windows quite difficult.? I never knew it well enough to
>> ??? know
>> ??? the advantages and disadvantages of the approach RGui uses versus the
>> ??? one that dasher seems to be expecting.
>>
>> ??? On the hopeful side, accessibility has always had a relatively high
>> ??? priority in the R Project, and there seems to be a recent push in 
>> that
>> ??? direction.? Perhaps there will be an opportunity for someone to
>> ??? bring up
>> ??? this issue at useR! 2022 (https://user2022.r-project.org
>> ??? <https://user2022.r-project.org>).
>>
>> ??? Duncan Murdoch
>>
>> ??? ______________________________________________
>> ??? R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> ??? https://stat.ethz.ch/mailman/listinfo/r-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>
>>
>>
>> -- 
>> Best,
>> Kasper
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon May 16 11:04:16 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 16 May 2022 05:04:16 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <bdec5805-8506-0515-43d9-5539777b4275@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
 <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
 <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>
 <0ee24ff7-2533-1486-1424-cf3cd2a3b9e0@gmail.com>
 <CAC2h7usszaxz=C5rPHG53O7N=rbxq+pe-Fm8pa817Jf__U-ALQ@mail.gmail.com>
 <999f4f0e-5203-54bf-b2cb-aa38477bf089@gmail.com>
 <bdec5805-8506-0515-43d9-5539777b4275@infolink.com.br>
Message-ID: <9c69f911-acd9-c138-332a-ffda84c4b549@gmail.com>

On 15/05/2022 6:28 p.m., Paulo Barata wrote:
> 
> Mr. Murdoch,
> 
> Two pieces of open source software that do work with Dasher 5.0.0 beta
> in Direct Entry mode, on Windows 10:
> 
> ---------
> 
> Apache Open Office 4.1.2 (32-bit Windows application) -- I tried the
> Open Office Writer, a Microsoft Word equivalent:
> 
> https://sourceforge.net/projects/openofficeorg.mirror/
> 
> Source code here:
> 
> https://openoffice.apache.org/source.html
> 
> ---------
> 
> Notepad++ 8.4.1 (64-bit Windows application / text editor):
> 
> https://notepad-plus-plus.org/downloads/v8.4.1/
> 
> Source code here:
> 
> https://github.com/notepad-plus-plus/notepad-plus-plus

That's very helpful, for two reasons.

1.  Maybe Notepad++ can replace Rgui as an environment for you to work 
in, since it claims to support R.  I've never used it, so I don't know 
exactly what level of support is offered, but maybe it's enough for your 
needs at least in the short term.

2.  Others who may be planning to fix Rgui can see how it handles input 
coming from dasher, and get Rgui to do the same thing.

Duncan Murdoch


From jeroen @end|ng |rom berke|ey@edu  Mon May 16 12:49:42 2022
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Mon, 16 May 2022 12:49:42 +0200
Subject: [Rd] Package build errors with parallel make on Ubuntu 18.04
Message-ID: <CABFfbXsfw6HP5hsnf9tcceiYetNj2xpW03sJt7TKOmiLpjH_Fw@mail.gmail.com>

After upgrading to R-4.2 we are seeing package build errors on Ubuntu 18.04:
   make[1]: *** read jobs pipe: No such file or directory.
or:
   make[1]: *** write jobserver: Bad file descriptor.  Stop.

The problem seems to get triggered by the use of parallel make, but I
cannot find the underlying cause. It does not happen on ubuntu 20 or 22, so
I suspect the version of 'make' is related.

Attached a dockerfile with a minimal reproducible example (run with: docker
build .)

From ||@t@ @end|ng |rom dewey@myzen@co@uk  Mon May 16 13:12:53 2022
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Mon, 16 May 2022 12:12:53 +0100
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <9c69f911-acd9-c138-332a-ffda84c4b549@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <20220515175852.39d6748d@Tarkus>
 <4ddb0ec7-26de-ad27-c2c1-d5a521cf2010@gmail.com>
 <c29be06c-49c9-65c4-467c-eb3212ed7914@infolink.com.br>
 <bf260ab7-9237-f17d-9d8b-4ac8f9629a8d@gmail.com>
 <6104ccd8-68fc-0ddd-9494-0494a4841215@infolink.com.br>
 <f3d24c9b-72b9-973f-d993-04697ebacbcc@gmail.com>
 <0ee24ff7-2533-1486-1424-cf3cd2a3b9e0@gmail.com>
 <CAC2h7usszaxz=C5rPHG53O7N=rbxq+pe-Fm8pa817Jf__U-ALQ@mail.gmail.com>
 <999f4f0e-5203-54bf-b2cb-aa38477bf089@gmail.com>
 <bdec5805-8506-0515-43d9-5539777b4275@infolink.com.br>
 <9c69f911-acd9-c138-332a-ffda84c4b549@gmail.com>
Message-ID: <4559af39-e66a-d35d-56b8-82842f83af3d@dewey.myzen.co.uk>

I use Notepad++ all the time. Last time I tried to install the plug-in 
which lets you run R my anti-virus complained so I abandoned at that 
point but Paulo's experience may be different and it was a few years ago 
so the plug-in or my anti-virus may have changed since (I suspect it was 
a false positive).

Michael

On 16/05/2022 10:04, Duncan Murdoch wrote:
> On 15/05/2022 6:28 p.m., Paulo Barata wrote:
>>
>> Mr. Murdoch,
>>
>> Two pieces of open source software that do work with Dasher 5.0.0 beta
>> in Direct Entry mode, on Windows 10:
>>
>> ---------
>>
>> Apache Open Office 4.1.2 (32-bit Windows application) -- I tried the
>> Open Office Writer, a Microsoft Word equivalent:
>>
>> https://sourceforge.net/projects/openofficeorg.mirror/
>>
>> Source code here:
>>
>> https://openoffice.apache.org/source.html
>>
>> ---------
>>
>> Notepad++ 8.4.1 (64-bit Windows application / text editor):
>>
>> https://notepad-plus-plus.org/downloads/v8.4.1/
>>
>> Source code here:
>>
>> https://github.com/notepad-plus-plus/notepad-plus-plus
> 
> That's very helpful, for two reasons.
> 
> 1.? Maybe Notepad++ can replace Rgui as an environment for you to work 
> in, since it claims to support R.? I've never used it, so I don't know 
> exactly what level of support is offered, but maybe it's enough for your 
> needs at least in the short term.
> 
> 2.? Others who may be planning to fix Rgui can see how it handles input 
> coming from dasher, and get Rgui to do the same thing.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From w@|ter@djur|c @end|ng |rom gm@||@com  Mon May 16 13:39:24 2022
From: w@|ter@djur|c @end|ng |rom gm@||@com (Gmail)
Date: Mon, 16 May 2022 13:39:24 +0200
Subject: [Rd] Building R-4.1.3 from source - creating .msi fails
In-Reply-To: <a03f378c-0cce-7d6e-0577-cfdeb67bbe54@gmail.com>
References: <07e901d863c2$fbe20ad0$f3a62070$@gmail.com>
 <7eb5c514-8cb8-035c-9ee3-38d3f2ded174@gmail.com>
 <008101d864a0$5aa8b360$0ffa1a20$@gmail.com>
 <a03f378c-0cce-7d6e-0577-cfdeb67bbe54@gmail.com>
Message-ID: <002301d86919$97c4ddf0$c74e99d0$@gmail.com>

Solution to this error was quite trivial in the end. 
There is 10,000 hard coded at around line 188 ff of the .../gnuwin32/installer/Makefile 

Referring to this part here: 
# currently use about 3500: allow for EXTRA_PKGS
uuids: uuidgen.exe
	./uuidgen 10000 > $@

This calls uuidgen to generate a certain number (here 10,000) uuids, which then get consumed by WiXins.R for file GUIDsto be used in "R.wxs". 

So if that gets increased to say 20,000 the msi build toolset works again for R-4.1.3. 
The whole R-4.1.3 msi build for me consumed a little less than 15,000 uuids; 

I recently (May 15, 2022) also did some testing on building .msi for R-4.2.0patched and there less than 4,500 uuids (4156 to be exact) were consumed ? which is a (interestingly) much smaller number, reasons for which I did not investigate in detail. 
Meaning that .msi builds (by WiX) should or at least still seem to work even with the new Rtools42 toolchain and without errors and just in case someone else experiences an error like the one described in this thread - make sure to check if there were enough uuids generated ? a good indicator of insufficient number of uuids/GUIDs being those NAs popping up in the R.wxs file!  

G, W


-----Original Message-----
From: Duncan Murdoch <murdoch.duncan at gmail.com> 
Sent: Tuesday, May 10, 2022 10:15 PM
To: Gmail <walter.djuric at gmail.com>; 'Tomas Kalibera' <tomas.kalibera at gmail.com>; r-devel at R-project.org
Subject: Re: [Rd] Building R-4.1.3 from source - creating .msi fails

On 10/05/2022 3:01 p.m., Gmail wrote:
> Thanks for the swift reply.
> 
> Maybe some clarifications from my side - I am not referring to the R-4.2.0 version (manual).
> But the earlier up to R-4.1.3 version manuals, where there always was a section about "Building the MSI installer" [right after Building the Inno Setup Installer] included (ending with thanks to David del Campo).

Some more clarification, please:  which manual are you talking about?  I don't see those sections in the R Admin manual.  Maybe they were conditional on the Windows build?

> And as far as I can tell the Inno Setup section is also gone from the 4.2.0 manual now? On purpose?

You could look at the svn history of the source file to see what the log message says.  So could I, if I only knew which manual you are looking at.

> Then why is it that there is still an /installer folder in R-4.2.0 with all the Inno Setup files eg header.iss and JRins.R as well as WiXins.R in it, and the installer/Makefile also still includes all these sections.
> 
> So in the spirit of things I guess that all lines in the .../installer/Makefile (line 49 and lines 180 ff.) as well as the whole ?WiXins.R? file in the /installer folder should be removed from R-4.1.3.tar.gz (which is available in that form for download from r-project)? And judging from the manual the .iss related parts as well?

The 4.1.3 tarfile has been released, and can't be modified.  The only way a modification would be possible would be to release a new 4.1.x patch version, but that's really, really unlikely.

> At the same time R-4.0.5 msi build works fine so probably should not be altered/removed in R-4.0.5.tar.gz?

Changes there are even less likely, so don't worry about them.

Duncan Murdoch

> 
> G, W
> 
> 
> -----Original Message-----
> From: Tomas Kalibera <tomas.kalibera at gmail.com>
> Sent: Tuesday, May 10, 2022 3:07 PM
> To: Gmail <walter.djuric at gmail.com>; r-devel at R-project.org
> Subject: Re: [Rd] Building R-4.1.3 from source - creating .msi fails
> 
> 
> On 5/9/22 18:36, Gmail wrote:
>> Dear all,
>> lately I was building R-4.1.3 from source and as the final step I 
>> decided to also try and build the .msi file.
>>
>> I was following along the R Admin manual and using Jeroens ?r-windows/r-base? GitHub repo as a basis.
>> The build, the tests all the way to the Inno-Setup Windows .exe installer completed successfully - but not the "R-4.1.3.msi" file.
> 
> The MSI installer is not supported. I can't see it mentioned in R-Admin, but if you found it there or in some documentation, please report, so that it can be removed.
> 
> Best
> Tomas
> 
>> Since I am not really knowledgeable when it comes to debugging WiX failures I was hoping someone here has some helpful comments.
>>
>> Below are the logs/output/errors/file excerpts:
>> =========================
>>
>> R-4.1.3.log:
>> ----------------
>> Windows Installer XML Toolset Compiler version 3.11.2.4516 Copyright
>> (c) .NET Foundation and contributors. All rights reserved.
>>
>> *** asterisk lines separate content of different files
>> **********************************
>>
>> *********************************************************************
>> *
>> *******
>> R.wxs [file]
>> D:\r-base\src\R-source\src\gnuwin32\installer\R.wxs(50036) : error
>> CNDL0104 : Not a valid source file;
>> detail: The 'DirectoryRef' start tag on line 50033 position 14 does not match the end tag of 'Component'. Line 50036, position 19.
>>
>>
>> *********************************************************************
>> *
>> ******* R.wxs [file] (lines 50032 ? 50037, etc.) I understand the 
>> error is the result of line 50034 having the first of many (after 
>> that line there are hundreds) ?unprovoked? NA?s :
>> ...
>> ...
>>               </DirectoryRef>
>>               <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
>>       NA
>>                       <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="R-4.1.3\library\base\help\print.DLLInfoList.html" />
>>                   </Component>
>>               </DirectoryRef>
>>               <DirectoryRef Id="dir4A5E34FDE4B660BFC361AB8682CC00A3">
>> ....
>> ....
>> Additionally here follows  line 82158 where, because there are no more file-ids after line 82160 below the NAs also disappear:
>>               <DirectoryRef Id="dir1FF2414B716F9EC0C950A7D0C5600532">
>>       NA
>>                       <File Id="fil7FBA10F4604BA92660D4FA85CA81B1BC" KeyPath="yes" Source="R-4.1.3\library\Matrix\help\coerce+2ClsTMatrix+2CdsTMatrix-method.html" />
>>                   </Component>
>>               </DirectoryRef>
>>               <DirectoryRef Id="dirD31021A615C26B5D3F93CF12408AE4B5">
>>                   <Directory Id="dir0016419565268E77B190EFC6ECFE56AD" Name="LC_MESSAGES" />
>>               </DirectoryRef>
>>
>> *********************************************************************
>> *
>> ******* files.wxs [file] here is the corresponding files Fragment of 
>> the above (first)  "corrupted" tag ie of file-id:
>> fil49DED439D60E725AA5D6402B8A36B915
>> ...
>> ...
>> <Fragment>
>>           <DirectoryRef Id="dirDFBCD23F607D1BCC15748A367C06C465">
>>               <Component Id="cmp9D50FF8D0F55461A69B18CCAC6292CA3" Guid="PUT-GUID-HERE">
>>                   <File Id="fil49DED439D60E725AA5D6402B8A36B915" KeyPath="yes" Source="SourceDir\library\base\help\print.DLLInfoList.html" />
>>               </Component>
>>           </DirectoryRef>
>>       </Fragment>
>>       <Fragment>
>> ...
>> ...
>>
>> *********************************************************************
>> *
>> ******* The ?WiXins.R? file I am using is the unmodified 
>> /src/gnuwin32/installer/WiXins.R of the .tar.gz downloaded from:
>> https://cran.r-project.org/src/base/R-4/R-4.1.3.tar.gz
>>
>> =========================
>> Greetings,
>> Walter
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jeroen @end|ng |rom berke|ey@edu  Mon May 16 14:03:39 2022
From: jeroen @end|ng |rom berke|ey@edu (Jeroen Ooms)
Date: Mon, 16 May 2022 14:03:39 +0200
Subject: [Rd] Package build errors with parallel make on Ubuntu 18.04
In-Reply-To: <CABFfbXsfw6HP5hsnf9tcceiYetNj2xpW03sJt7TKOmiLpjH_Fw@mail.gmail.com>
References: <CABFfbXsfw6HP5hsnf9tcceiYetNj2xpW03sJt7TKOmiLpjH_Fw@mail.gmail.com>
Message-ID: <CABFfbXv+=PGaSh8nD2VcN=Cuw=tEM6N8pnK9oG03FWnduZGBxQ@mail.gmail.com>

On Mon, May 16, 2022 at 12:49 PM Jeroen Ooms <jeroen at berkeley.edu> wrote:
>
> After upgrading to R-4.2 we are seeing package build errors on Ubuntu 18.04:
>    make[1]: *** read jobs pipe: No such file or directory.
> or:
>    make[1]: *** write jobserver: Bad file descriptor.  Stop.
>
> The problem seems to get triggered by the use of parallel make, but I cannot find the underlying cause. It does not happen on ubuntu 20 or 22, so I suspect the version of 'make' is related.
>
> Attached a dockerfile with a minimal reproducible example (run with: docker build .)


Attachment seems to have been stripped. Here a copy:
https://gist.github.com/jeroen/3e8cf2317912ebf4e3fd9bff732d63c5


From ||v|u @end|ng |rom p@tchmypc@com  Mon May 16 13:56:40 2022
From: ||v|u @end|ng |rom p@tchmypc@com (Liviu Barbat)
Date: Mon, 16 May 2022 11:56:40 +0000
Subject: [Rd] R-4.2.0-win.exe - missing digital signature
In-Reply-To: <IA1PR12MB6556163AD90640BD75D078B2B3CA9@IA1PR12MB6556.namprd12.prod.outlook.com>
References: <IA1PR12MB6556163AD90640BD75D078B2B3CA9@IA1PR12MB6556.namprd12.prod.outlook.com>
Message-ID: <IA1PR12MB6556DF61E2FBFE5F8B2F30E4B3CF9@IA1PR12MB6556.namprd12.prod.outlook.com>

Hello,

Is it possible to provide an update on my question, please?

Thanks,

Liviu Barbat ? Customer Success Engineer
Rate Your Experience: Great<https://patchmypc.com/customer-feedback-Liviu> | Good<https://patchmypc.com/customer-feedback-Liviu> | Poor<https://patchmypc.com/customer-feedback-Liviu>
Learn More: Live Demo<https://patchmypc.com/schedule-live-demo> | Setup Call<https://patchmypc.com/schedule-setup-call> | Review Call<https://patchmypc.com/environment-review-call> | Trial<https://patchmypc.com/free-trial> | Quote<https://patchmypc.com/request-quote>
Follow Us: Twitter<https://patchmypc.com/twitter> | LinkedIn<https://patchmypc.com/linkedin>
Sales and Support: + 1-866-343-3083
[Sent from Front]
On May 13, 2022, 4:39 PM GMT+3 liviu at patchmypc.com<mailto:liviu at patchmypc.com> wrote:

Hey Team,

The 4.2.0 installer is not digitally signed, is that on purpose? The previous releases have been digitally signed.
Is it just a one-off or is this going to be the new default?

Thanks,

Liviu Barbat ? Customer Success Engineer
Rate Your Experience: Great<https://patchmypc.com/customer-feedback-Liviu> | Good<https://patchmypc.com/customer-feedback-Liviu> | Poor<https://patchmypc.com/customer-feedback-Liviu>
Learn More: Live Demo<https://patchmypc.com/schedule-live-demo> | Setup Call<https://patchmypc.com/schedule-setup-call> | Review Call<https://patchmypc.com/environment-review-call> | Trial<https://patchmypc.com/free-trial> | Quote<https://patchmypc.com/request-quote>
Follow Us: Twitter<https://patchmypc.com/twitter> | LinkedIn<https://patchmypc.com/linkedin>
Sales and Support: + 1-866-343-3083

	[[alternative HTML version deleted]]


From pr@@@nth@dh@n@p@| @end|ng |rom @t@te@uto@com  Mon May 16 16:37:30 2022
From: pr@@@nth@dh@n@p@| @end|ng |rom @t@te@uto@com (Prasanth Dhanapal)
Date: Mon, 16 May 2022 10:37:30 -0400
Subject: [Rd] R for Windows - Patch My PC
In-Reply-To: <IA1PR12MB6556BA5832D9CC25B113FB9FB3CF9@IA1PR12MB6556.namprd12.prod.outlook.com>
References: <IA1PR12MB6556BA5832D9CC25B113FB9FB3CF9@IA1PR12MB6556.namprd12.prod.outlook.com>
Message-ID: <CABBGpOgATfrmAG96w1abqzzsUA119Wobo7d2_+zQKzpUE2SJRg@mail.gmail.com>

Hello,

This is Prasanth Dhanapal with StateAuto Insurance Companies.

We have been informed by PatchMyPC that the digital signature of the R for
Windows 4.2.0 installer hasn't been signed yet since it was released on
22nd April, '22. Because of this delay, it has not been updated on the PMPC
catalog yet.
Could you let us know when we can expect this to happen? We would like to
get this version sooner as this is the compatible version for R tools 4.2.

Thank you!

On Mon, May 16, 2022 at 2:13 AM Liviu Barbat <liviu at patchmypc.com> wrote:

> Hello Prasanth,
>
> Just as an FYI - we still haven't received any response from the vendor.
> However, if you would like to inquire with them as well about the digital
> signature of their installer, just send them an Email:
> r-devel at r-project.org
>
> Thanks,
>
> Liviu Barbat ? Customer Success Engineer
> Rate Your Experience: *Great*
> <https://patchmypc.com/customer-feedback-Liviu> | *Good*
> <https://patchmypc.com/customer-feedback-Liviu> | *Poor*
> <https://patchmypc.com/customer-feedback-Liviu>
> Learn More: *Live Demo* <https://patchmypc.com/schedule-live-demo> | *Setup
> Call* <https://patchmypc.com/schedule-setup-call> | *Review Call
> <https://patchmypc.com/environment-review-call>* | *Trial*
> <https://patchmypc.com/free-trial> | *Quote*
> <https://patchmypc.com/request-quote>
> Follow Us: *Twitter <https://patchmypc.com/twitter>* | *LinkedIn
> <https://patchmypc.com/linkedin>*
> Sales and Support: + 1-866-343-3083
> [image: Sent from Front]
>


-- 

*Prasanth Dhanapal* | Infrastructure Engineer
*State Auto Insurance Companies*
*E* | prasanth.dhanapal at stateauto.com

<https://www.stateauto.com/state-auto-americas-best-insurance-companies>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon May 16 19:08:59 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 16 May 2022 19:08:59 +0200
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
Message-ID: <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>


On 5/15/22 16:10, Paulo Barata wrote:
>
> To the R developers,
>
> I noticed today that R 4.2.0 responds to the "Enter" character of 
> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in Dasher 
> causes the R prompt to jump to the next line, as an "Enter" should do.
>
> No other characters (letters, digits, special characters like + = & ~ 
> | # $) are accepted by R 4.2.0 through Dasher.
>
> The "Enter" shows that, somehow, the communication between Dasher and 
> R 4.2.0 through the Windows system is not completely curtailed.

Dear Paulo,

thanks for the report and thanks to all for the useful comments in the 
followup discussion. I've committed a fix to R-devel, 82368, and I would 
be grateful if you could test whether it fixes the problem for you. I've 
tested it only on a small example which is using the same method to 
insert keys to Rgui as Dasher does.

The problem is caused by a limitation in GraphApp, a library used by 
Rgui and included in the R distribution. GraphApp has two modes: Unicode 
windows (with this limitation) and non-Unicode windows (without it). 
GraphApp uses Unicode windows when running in a multi-byte locale, and 
as of R 4.2, this is the case for all systems on recent Windows where 
the native encoding is UTF-8. This means that most likely R 4.1.3 didn't 
work with Dasher on systems running in a multi-byte locale and that most 
likely R 4.2.0 would work with Dasher on old Windows systems (where 
UTF-8 cannot be used as native encoding).

Dasher uses SendInput/KEYEVENTF_UNICODE to inject text into Rgui, which 
is fine as far as I can tell and should work. It didn't work, because 
the Unicode windows didn't handle WM_CHAR nor WM_KEYDOWN/WM_KEYUP for 
VK_PACKET. By design, Unicode windows get input via WM_IME_COMPOSITION 
and WM_KEYDOWN, so I've added support for VK_PACKET to WM_KEYDOWN 
(taking the logic in gdk as an example).

I am cc'ing Jose as Tinn-R has a similar problem, though this patch 
doesn't solve it.

Best
Tomas

>
> Regards,
>
> Paulo Barata
>
> ----------------------------------------------------------
>
> On 13/05/2022 16:44, Paulo Barata wrote:
>> To the R developers,
>>
>> I would like to point out an issue that occurs with the new R 4.2.0 
>> running on Windows; this is possibly related to the recent wide 
>> changes made to the Windows port of R. The issue has to do with 
>> writing of the R window.
>>
>> My computer runs on Windows 10 Professional 64-bit with all the 
>> latest updates, and has a 4-core 8-thread Intel Xeon processor with 
>> 32 Gb of RAM.
>>
>> I have some slight impairment in my hands, so for typing I avoid 
>> using the computer keyboard as much as possible. For most of my 
>> typing, I use the software Dasher, a kind of assistive technology 
>> software. Dasher was created by the Inference Group led by Professor 
>> David MacKay (died in 2016) at Cambridge University in England. 
>> Later, Dasher was further developed by Ada Majorek (a Google 
>> engineer, recently deceased).
>>
>> General information on Dasher and about the Dasher Project can be 
>> found on the Inference Group page:
>>
>> http://www.inference.org.uk/dasher/
>>
>> An example of Dasher in action can be seen on this 2-minute YouTube 
>> video:
>>
>> https://www.youtube.com/watch?v=nr3s4613DX8
>>
>> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
>> himself explaining the Dasher concept can be found here:
>>
>> https://www.youtube.com/watch?v=wpOxbesRNBc
>>
>> In the 2-minute video (the first YouTube address above), the sentence 
>> written through Dasher, for actual use, needs to be copied and then 
>> pasted into another software, say a text editor. But Dasher also has 
>> a "Direct Entry" mode, where words typed are entered directly on the 
>> screen of the text editor or other software -- this is how I use 
>> Dasher to write on the R window.
>>
>> Using Dasher`s "Direct Entry" mode, for all effects, to write a word 
>> through Dasher works exactly like writing the word through the normal 
>> computer keyboard. Somehow (I do not know about system programming), 
>> in "Direct Entry" mode, the output of Dasher is understood by the 
>> computer as an input of the same nature as a keyboard input.
>>
>> But this is the issue: until R 4.1.3, R accepted normally the 
>> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
>> r82348, 12 May 2022) does not accept Dasher anymore.
>>
>> So, for now, if I wish to use R during some extended interactive 
>> section (say, for a first look at a complex data set), and if I wish 
>> to use Dasher for this interactive session, then I have to use R 
>> 4.1.3. For using R through programming, I can use the new R 4.2.0, by 
>> writing the program with Dasher in my text editor, and then pasting 
>> that program into R.
>>
>> The latest Windows version of Dasher, version 5.0.0 beta, works 
>> perfectly well with text editors (I use EditPad Pro), with 
>> Microsoft-like Office packages (I use SoftMaker Office), for writing 
>> e-mails (I use Mozilla Thunderbird), for writing on a web page (I use 
>> mostly Mozilla Firefox). It worked perfectly well with R up to 
>> version 4.1.3, but it does not work with R 4.2.0
>>
>> The latest Dasher 5.0.0 beta Windows installer and the source code 
>> can be found on this page below (please click on "Windows installer" 
>> and on "source code", just below the head "Dasher 5.0 beta release"):
>>
>> https://github.com/dasher-project/dasher/releases
>>
>> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after installing 
>> Dasher one should go to Preferences > Application > Application Style.
>>
>> Currently, after the passing of Ada Majorek, the Dasher Project is 
>> being put forward by a group of people in England, but, it seems, at 
>> a very slow pace. They have announced the existence of a version 6 
>> beta, but this is only an online instance of Dasher, there is no 
>> Windows installer, as far as I know. Their web page:
>>
>> https://dasher.acecentre.net/
>>
>> For me, and possibly for other users, the Dasher version 5.0.0 beta 
>> for Windows that is available works perfectly well, and allows me to 
>> use the computer with a proficiency that would be hardly possible 
>> otherwise.
>>
>> Here I request that the R developers take a look at this word-typing 
>> issue that happens with the new R 4.2.0 on Windows.
>>
>> As an R user (I work in ecological research), I can only thank the R 
>> team for this really wonderful piece of statistical software that you 
>> make freely available to us all.
>>
>> Regards,
>>
>> Paulo Barata
>>
>> (Rio de Janeiro - Brazil)
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon May 16 19:21:28 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 16 May 2022 19:21:28 +0200
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <emc6b82537-e5e2-4512-9a59-7a90dda45dfd@dell>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
 <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
 <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>
 <82957f65-28f0-cc11-b07b-1e6076d23d9c@gmail.com>
 <a8733d02-ff78-a41b-446c-7347268bb27f@gmail.com>
 <emc6b82537-e5e2-4512-9a59-7a90dda45dfd@dell>
Message-ID: <b821d61d-5eb9-41d4-41a3-7e500dee11ed@gmail.com>

Dear Jose,

On 5/15/22 01:31, jcfaria wrote:
> Dear Tomas,
>
> I am very grateful for your attention!
>
> I've been reading some things about the GraphApp 
> toolkit(http://enchantia.com/software/graphapp/) that is being used in 
> the development of new versions of Rgui.
>
> Really, if it's a matter of choice, the problems I reported cannot be 
> considered a "bug". It's up to us - GUI and IDE application developers 
> - to adapt to the new features.
>
> I'm studying how to get around the problem, but I still haven't found 
> a simple way.
>
> The solution you proposed (code below) ran fine here in all versions 
> of Rgui I have installed, but it's working only for very simple 
> strings, like the one I tested. When testing the needs close to the 
> real I found some problems.
>
> For example, when sending the string below:
> - char *s = "(s <- c('?', 'b', 'c', '?'))";
>
> Rgui receives:
> > 9s ,- c9'', 'b', 'c', ''00
> Error: unexpected symbol in "9s"
> >
>
>
> #include <windows.h>
> #include <stdio.h>
> #include <string.h>
>
> int main(int argc, char **argv) {
> ?? HWND hw;
> ?? int i, res;
>
> ?? printf("Getting Rgui window...\n");
> ?? hw = FindWindow(NULL, "R Console (64-bit)");
>
> ?? printf("Got window: %x\n", hw);
> ?? if (hw == NULL) {
> ???? printf("Could not get Rgui window: %x\n", GetLastError());
> ???? return 2;
> ?? }
>
> ?? //Samples to send:
> // char *s = "sd";
> ?? char *s = "(s <- c('?', 'b', 'c', '?'))";
>
> ?? for(i = 0; i < strlen(s); i++) {
> ???? res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(s[i]), 0);
> ???? printf("Sending char %c: %d.\n", s[i], res);
> ?? }
>
> ?? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
> ?? printf("Sending return: %d\n.", res);
> ?? return 0;
> }
>
> The idea of Tinn-R communicating with Rgui.exe is to take advantage of 
> the great stability of Rgui. Since communication with Rterm is done 
> via pipe.
>
> I believe that developing a new interface using the resources of the 
> R.dll library, as proposed, is outside the simple purposes of the 
> Tinn-R project.
>
> Any help in this regard is welcome.

If embedding R seems too involved, and the hack above doesn't work well 
enough, perhaps you could use SendInput() (also mentioned in the blog 
post [1] below as a more correct way to inject input as WM_KEYDOWN).? 
This is an example:

---

#include <windows.h>
#include <stdio.h>

int main(int argc, char **argv) {
 ? HWND hw, ow;
 ? int i, res;

 ? hw = FindWindow(NULL, "R Console (64-bit)");
 ? if (hw == NULL) {
 ??? printf("Could not get Rgui window: %x\n", GetLastError());
 ??? return 2;
 ? }

 ? ow = GetForegroundWindow();
 ? if (ow == NULL)
 ??? printf("Foreground window is NULL\n");

 ? if (!SetForegroundWindow(hw))
 ??? printf("Could not set Rgui as foreground window\n");

 ? char *sd = "sd";
 ? for(i = 0; i < strlen(sd); i++) {
 ??? INPUT input;

 ??? ZeroMemory(&input, sizeof(INPUT));
 ??? input.type = INPUT_KEYBOARD;
 ??? input.ki.dwFlags = KEYEVENTF_UNICODE;
 ??? input.ki.wScan = (unsigned) sd[i];
 ??? res = SendInput(1, &input, sizeof(INPUT));

 ??? printf("Sending char %c (%x): %d.\n", sd[i], sd[i], res);
 ? }

 ? {
 ??? INPUT input[2];

 ??? ZeroMemory(input, 2*sizeof(INPUT));
 ??? input[0].type = input[1].type = INPUT_KEYBOARD;
 ??? input[1].ki.dwFlags = KEYEVENTF_KEYUP;
 ??? input[0].ki.wVk = input[1].ki.wVk = VK_RETURN;
 ??? res = SendInput(2, input, sizeof(INPUT));
 ??? printf("Sending return: %d.\n", res);
 ? }

 ? if (!SetForegroundWindow(ow))
 ??? printf("Could not set the original window as foreground");

 ? return 0;
}

---

This example works for me with R 4.1.3 and with R-devel 82368. It 
doesn't work with R 4.2.0 (see a related thread about Dasher on this list).

Best
Tomas

>
> Best,
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> Jose Claudio Faria
> UESC/DCET/Brasil
> joseclaudio.faria at gmail.com
> Telefones:
> 55(73)3680.5545 - UESC
> 55(73)99966.9100 - VIVO
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> If you have software to deal with statistics, you have arms,
> if you have good software, you have arms and legs,
> if you have software like R, you have arms, legs and wings...
> the height of your flight depends only on you.
>
> ------ Mensagem original ------
> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
> <murdoch.duncan at gmail.com>; r-devel at r-project.org
> Enviado(s): 11/05/2022 13:32:23
> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
> Windows API's PostMessage function
>
>>
>> On 5/11/22 15:39, Tomas Kalibera wrote:
>>>
>>> On 5/11/22 08:15, Tomas Kalibera wrote:
>>>>
>>>> On 5/11/22 03:02, jcfaria wrote:
>>>>> Dear Tomas,
>>>>> I've tried, but I don't have the necessary C/C++ programming 
>>>>> skills to fulfill your request.
>>>>>
>>>>> Maybe someone can help us by transcribing the little code in 
>>>>> object Pascal that I sent to C/C++.
>>>>>
>>>>> If a small executable, made in Object Pascal, can help in your 
>>>>> debug, I can provide.
>>>>
>>>> Dear Jose,
>>>>
>>>> no problem, I can try out with the Pascal code.
>>>> Is there a free compiler I can use to build and run it?
>>>
>>> Actually I can reproduce it in a C program doing the same thing.
>>>
>>> The primary cause is that Rgui is using GraphApp Unicode windows on 
>>> systems running in a multi-byte locale, which affects most systems 
>>> since R 4.2 because of the switch to UTF-8. While Unicode windows 
>>> have been used even in older versions of R, it was only on systems 
>>> then running in a multi-byte locale, and apparently this hasn't been 
>>> reported.
>>>
>>> When I modify R-devel to use non-Unicode GraphApp windows, the 
>>> message sending works again. I will have a closer look, thanks for 
>>> the report.
>>
>> I had a closer look and this doesn't really seem to be a bug in R to 
>> me. For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to 
>> read the keys instead of WM_CHAR, which it uses for non-Unicode 
>> windows. This is internal functionality of Rgui and a legitimate 
>> choice. Rgui cannot simply handle both messages in Unicode windows, 
>> because the characters would be doubled (if you see an easy, elegant 
>> change to Rgui that would mimic the previous behavior, let me know). 
>> This is certainly not a documented interface for Rgui, so I am afraid 
>> you would have to change something in your application.
>>
>> I read that using PostMessage to simulate keyboard input is 
>> considered wrong, see [1], and then one should instead use SendInput 
>> (which then requires bringing the window to the foreground), if at 
>> all simulating keyboard input. Maybe one could create a better 
>> working solution that way, or using some automation library.
>>
>> As a quick hack, I found that [2] happens to be working on my system, 
>> but again relying on the current implementation of Rgui (simply you 
>> send WM_KEYDOWN also for the characters other than the 
>> newline/return). It seems to be working also with R 4.1 for me.
>>
>> The usual way for GUIs/front-ends is to "embed" R, to link it as a 
>> DLL. Rgui itself does it and also external applications such as 
>> RStudio. Typically you would want to have a thin layer application 
>> embedding R and make your GUI communicate with that, but switching to 
>> that from sending the messages would require some work.
>>
>> Best
>> Tomas
>>
>> [1] https://devblogs.microsoft.com/oldnewthing/20050530-11/?p=35513
>>
>> [2]
>> #include <windows.h>
>> #include <stdio.h>
>> #include <string.h>
>>
>> int main(int argc, char **argv) {
>> ? HWND hw;
>> ? int i, res;
>>
>> ? printf("Getting Rgui window...\n");
>> ? hw = FindWindow(NULL, "R Console (64-bit)");
>>
>> ? printf("Got window: %x\n", hw);
>> ? if (hw == NULL) {
>> ??? printf("Could not get Rgui window: %x\n", GetLastError());
>> ??? return 2;
>> ? }
>>
>> ? char *sd = "sd";
>> ? for(i = 0; i < strlen(sd); i++) {
>> ??? res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(sd[i]), 0);
>> ??? printf("Sending char %c: %d.\n", sd[i], res);
>> ? }
>>
>> ? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>> ? printf("Sending return: %d\n.", res);
>> ? return 0;
>> }
>>
>>
>>>
>>> For reference, to reproduce I ran
>>>
>>> Rgui --sdi
>>>
>>> and used this C example:
>>>
>>> #include <windows.h>
>>> #include <stdio.h>
>>> #include <string.h>
>>>
>>> int main(int argc, char **argv) {
>>> ? HWND hw;
>>> ? int i, res;
>>>
>>> ? printf("Getting Rgui window...\n");
>>> ? hw = FindWindow(NULL, "R Console (64-bit)");
>>>
>>> ? printf("Got window: %x\n", hw);
>>> ? if (hw == NULL) {
>>> ??? printf("Could not get Rgui window: %x\n", GetLastError());
>>> ??? return 2;
>>> ? }
>>>
>>> ? char *sd = "sd";
>>> ? for(i = 0; i < strlen(sd); i++) {
>>> ??? res = PostMessage(hw, WM_CHAR, (unsigned int) sd[i], 0);
>>> ??? printf("Sending char %c: %d.\n", sd[i], res);
>>> ? }
>>>
>>> ? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>> ? printf("Sending return: %d\n.", res);
>>> ? return 0;
>>> }
>>>
>>> Best
>>> Tomas
>>>
>>>
>>>>
>>>> Thanks
>>>> Tomas
>>>>
>>>>>
>>>>> Grateful for the attention,,
>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>> Jose Claudio Faria
>>>>> UESC/DCET/Brasil
>>>>> joseclaudio.faria at gmail.com
>>>>> Telefones:
>>>>> 55(73)3680.5545 - UESC
>>>>> 55(73)99966.9100 - VIVO
>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>> If you have software to deal with statistics, you have arms,
>>>>> if you have good software, you have arms and legs,
>>>>> if you have software like R, you have arms, legs and wings...
>>>>> the height of your flight depends only on you.
>>>>>
>>>>> ------ Mensagem original ------
>>>>> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
>>>>> <murdoch.duncan at gmail.com>; r-devel at r-project.org
>>>>> Enviado(s): 06/05/2022 04:24:44
>>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via 
>>>>> the Windows API's PostMessage function
>>>>>
>>>>>>
>>>>>> On 5/6/22 07:03, jcfaria wrote:
>>>>>>> Dear Duncan,
>>>>>>> I believe the problem is of a different nature.
>>>>>>> I get TRUE 3 times running the code below:
>>>>>>>
>>>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>> var
>>>>>>> ? i: integer;
>>>>>>> ? sTmp: string;
>>>>>>> ? hBN: HWND;
>>>>>>> ? j: bool;
>>>>>>>
>>>>>>> begin
>>>>>>> ? hBN:= FindWindowA(nil,
>>>>>>> ??????????????????? 'R Console (64-bit)');
>>>>>>>
>>>>>>> ? sTmp:= 'sd';
>>>>>>>
>>>>>>> ? for i:= 1 to Length(sTmp) do begin
>>>>>>> ??? j:= PostMessage(hBN,
>>>>>>> ??????????????????? WM_CHAR,
>>>>>>> ??????????????????? Ord(sTmp[i]),
>>>>>>> ??????????????????? 0);
>>>>>>>
>>>>>>> ??? ShowMessage(BoolToStr(j,
>>>>>>> ????????????????????????? True));
>>>>>>> ? end;
>>>>>>>
>>>>>>> ? j:= PostMessage(hBN,
>>>>>>> ????????????? WM_KEYDOWN,
>>>>>>> ????????????? VK_RETURN, 0);
>>>>>>>
>>>>>>> ? ShowMessage(BoolToStr(j,
>>>>>>> ??????????????????????? True));
>>>>>>> end;
>>>>>>>
>>>>>>> That is, Rgui is receiving the message of the characters (via 
>>>>>>> PostMessage), but it is blocking because it does not show them 
>>>>>>> in the console.
>>>>>>> The only thing Rgui blames is Carriage Return, as it adds an 
>>>>>>> additional prompt with each run.
>>>>>>
>>>>>> I can't provide a good guess what impacted your use, but if you 
>>>>>> could give me a full example, ideally in C, which can be compiled 
>>>>>> with Rtools42 (so gcc, MinGW) and I can edit/recompile, and works 
>>>>>> with R 4.1, I am happy to help debugging on 4.2.
>>>>>>
>>>>>> Rgui now uses GraphApp Unicode windows on systems where it didn't 
>>>>>> before, because it uses UTF-8 also on systems it didn't before 
>>>>>> (on systems that would use a single-byte locale in R 4.1). These 
>>>>>> Unicode windows are a different code path and there may be bugs 
>>>>>> not reported previously, including processing inputs (recently I 
>>>>>> fixed handling of accents, for example). Otherwise indeed R now 
>>>>>> uses UTF-8 as native encoding and UCRT as the C runtime.
>>>>>>
>>>>>> Best
>>>>>> Tomas
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> >
>>>>>>> >
>>>>>>>
>>>>>>> Best,
>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>> Jose Claudio Faria
>>>>>>> UESC/DCET/Brasil
>>>>>>> joseclaudio.faria at gmail.com
>>>>>>> Telefones:
>>>>>>> 55(73)3680.5545 - UESC
>>>>>>> 55(73)99966.9100 - VIVO
>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>> If you have software to deal with statistics, you have arms,
>>>>>>> if you have good software, you have arms and legs,
>>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>>> the height of your flight depends only on you.
>>>>>>>
>>>>>>> ------ Mensagem original ------
>>>>>>> De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>>>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; 
>>>>>>> r-devel at r-project.org
>>>>>>> Enviado(s): 05/05/2022 13:17:53
>>>>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via 
>>>>>>> the Windows API's PostMessage function
>>>>>>>
>>>>>>>> On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>>>>>> Hello,
>>>>>>>>>
>>>>>>>>> Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>>>>>> PostMessage function.
>>>>>>>>>
>>>>>>>>> The Tinn-R project sends messages to Rgui.exe (SDI mode) via 
>>>>>>>>> the Windows
>>>>>>>>> API's PostMessage function.
>>>>>>>>> A simplification of the code (in object Pascal) can be seen 
>>>>>>>>> below.
>>>>>>>>>
>>>>>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>>>> var
>>>>>>>>> ??? i: integer;
>>>>>>>>> ??? sTmp: WideString;
>>>>>>>>> ??? hBN: HWND;
>>>>>>>>>
>>>>>>>>> begin
>>>>>>>>> ??? hBN:= FindWindowA(nil,
>>>>>>>>> ????????????????????? 'R Console (64-bit)');
>>>>>>>>>
>>>>>>>>> ??? sTmp:= 'sd';
>>>>>>>>>
>>>>>>>>> ??? for i:= 1 to Length(sTmp) do begin
>>>>>>>>> ????? PostMessage(hBN,
>>>>>>>>> ????????????????? WM_CHAR,
>>>>>>>>> ????????????????? Ord(sTmp[i]),
>>>>>>>>> ????????????????? 0);
>>>>>>>>> ??? end;
>>>>>>>>>
>>>>>>>>> ??? PostMessage(hBN,
>>>>>>>>> ??????????????? WM_KEYDOWN,
>>>>>>>>> ??????????????? VK_RETURN, 0);
>>>>>>>>> end;
>>>>>>>>>
>>>>>>>>> This code has always worked fine for all versions of Rgui.exe 
>>>>>>>>> with the
>>>>>>>>> exception of the last one released, ie 4.2.0.
>>>>>>>>>
>>>>>>>>> We've been trying to get around the problem on the Object 
>>>>>>>>> Pascal side,
>>>>>>>>> but without success so far.
>>>>>>>>>
>>>>>>>>> Does anyone connected to the compilation of Rqui.exe know what 
>>>>>>>>> the
>>>>>>>>> problem is?
>>>>>>>>
>>>>>>>> It could be that the new build enforces Windows security more 
>>>>>>>> stringently.? More details are described in the answer to this 
>>>>>>>> question: https://stackoverflow.com/a/40139498/2554330, but at 
>>>>>>>> a minimum you should be checking the return value from 
>>>>>>>> PostMessage.
>>>>>>>>
>>>>>>>> Duncan Murdoch
>>>>>>>>
>>>>>>>>>
>>>>>>>>> Best,
>>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>> Jose Claudio Faria
>>>>>>>>> UESC/DCET/Brasil
>>>>>>>>> joseclaudio.faria at gmail.com
>>>>>>>>> Telefones:
>>>>>>>>> 55(73)3680.5545 - UESC
>>>>>>>>> 55(73)99966.9100 - VIVO
>>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>> If you have software to deal with statistics, you have arms,
>>>>>>>>> if you have good software, you have arms and legs,
>>>>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>>>>> the height of your flight depends only on you.
>>>>>>>>>
>>>>>>>>> ??? [[alternative HTML version deleted]]
>>>>>>>>>
>>>>>>>>> ______________________________________________
>>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>>
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>


From pb @end|ng |rom |n|o||nk@com@br  Mon May 16 19:45:11 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Mon, 16 May 2022 14:45:11 -0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
Message-ID: <0a7970be-5057-129a-b367-e95bac76106d@infolink.com.br>


Dear Tomas,

Thank you very much for dealing with this issue.

You said: "I've committed a fix to R-devel, 82368". It happens that, at 
this very moment (Monday 16 May 18:44 UTC), The R-devel that exists on 
both the Austria and the 0-Cloud CRAN pages is this, with a different 
(smaller) number:

This is a Windows 64 bit binary build of the 2022-05-15 r82362 
development snapshot of R

Anyway, I installed and tried this R-devel r82362, and Dasher does not 
work with it.

I am not able to find R-Devel 82368 on the CRAN site. Maybe I should 
wait a little more. Or maybe you could send me a proper link to that.

Best regards,

Paulo Barata

----------------------------------------------------------

On 16/05/2022 14:08, Tomas Kalibera wrote:
> 
> On 5/15/22 16:10, Paulo Barata wrote:
>>
>> To the R developers,
>>
>> I noticed today that R 4.2.0 responds to the "Enter" character of 
>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in Dasher 
>> causes the R prompt to jump to the next line, as an "Enter" should do.
>>
>> No other characters (letters, digits, special characters like + = & ~ 
>> | # $) are accepted by R 4.2.0 through Dasher.
>>
>> The "Enter" shows that, somehow, the communication between Dasher and 
>> R 4.2.0 through the Windows system is not completely curtailed.
> 
> Dear Paulo,
> 
> thanks for the report and thanks to all for the useful comments in the 
> followup discussion. I've committed a fix to R-devel, 82368, and I would 
> be grateful if you could test whether it fixes the problem for you. I've 
> tested it only on a small example which is using the same method to 
> insert keys to Rgui as Dasher does.
> 
> The problem is caused by a limitation in GraphApp, a library used by 
> Rgui and included in the R distribution. GraphApp has two modes: Unicode 
> windows (with this limitation) and non-Unicode windows (without it). 
> GraphApp uses Unicode windows when running in a multi-byte locale, and 
> as of R 4.2, this is the case for all systems on recent Windows where 
> the native encoding is UTF-8. This means that most likely R 4.1.3 didn't 
> work with Dasher on systems running in a multi-byte locale and that most 
> likely R 4.2.0 would work with Dasher on old Windows systems (where 
> UTF-8 cannot be used as native encoding).
> 
> Dasher uses SendInput/KEYEVENTF_UNICODE to inject text into Rgui, which 
> is fine as far as I can tell and should work. It didn't work, because 
> the Unicode windows didn't handle WM_CHAR nor WM_KEYDOWN/WM_KEYUP for 
> VK_PACKET. By design, Unicode windows get input via WM_IME_COMPOSITION 
> and WM_KEYDOWN, so I've added support for VK_PACKET to WM_KEYDOWN 
> (taking the logic in gdk as an example).
> 
> I am cc'ing Jose as Tinn-R has a similar problem, though this patch 
> doesn't solve it.
> 
> Best
> Tomas
> 
>>
>> Regards,
>>
>> Paulo Barata
>>
>> ----------------------------------------------------------
>>
>> On 13/05/2022 16:44, Paulo Barata wrote:
>>> To the R developers,
>>>
>>> I would like to point out an issue that occurs with the new R 4.2.0 
>>> running on Windows; this is possibly related to the recent wide 
>>> changes made to the Windows port of R. The issue has to do with 
>>> writing of the R window.
>>>
>>> My computer runs on Windows 10 Professional 64-bit with all the 
>>> latest updates, and has a 4-core 8-thread Intel Xeon processor with 
>>> 32 Gb of RAM.
>>>
>>> I have some slight impairment in my hands, so for typing I avoid 
>>> using the computer keyboard as much as possible. For most of my 
>>> typing, I use the software Dasher, a kind of assistive technology 
>>> software. Dasher was created by the Inference Group led by Professor 
>>> David MacKay (died in 2016) at Cambridge University in England. 
>>> Later, Dasher was further developed by Ada Majorek (a Google 
>>> engineer, recently deceased).
>>>
>>> General information on Dasher and about the Dasher Project can be 
>>> found on the Inference Group page:
>>>
>>> http://www.inference.org.uk/dasher/
>>>
>>> An example of Dasher in action can be seen on this 2-minute YouTube 
>>> video:
>>>
>>> https://www.youtube.com/watch?v=nr3s4613DX8
>>>
>>> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
>>> himself explaining the Dasher concept can be found here:
>>>
>>> https://www.youtube.com/watch?v=wpOxbesRNBc
>>>
>>> In the 2-minute video (the first YouTube address above), the sentence 
>>> written through Dasher, for actual use, needs to be copied and then 
>>> pasted into another software, say a text editor. But Dasher also has 
>>> a "Direct Entry" mode, where words typed are entered directly on the 
>>> screen of the text editor or other software -- this is how I use 
>>> Dasher to write on the R window.
>>>
>>> Using Dasher`s "Direct Entry" mode, for all effects, to write a word 
>>> through Dasher works exactly like writing the word through the normal 
>>> computer keyboard. Somehow (I do not know about system programming), 
>>> in "Direct Entry" mode, the output of Dasher is understood by the 
>>> computer as an input of the same nature as a keyboard input.
>>>
>>> But this is the issue: until R 4.1.3, R accepted normally the 
>>> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
>>> r82348, 12 May 2022) does not accept Dasher anymore.
>>>
>>> So, for now, if I wish to use R during some extended interactive 
>>> section (say, for a first look at a complex data set), and if I wish 
>>> to use Dasher for this interactive session, then I have to use R 
>>> 4.1.3. For using R through programming, I can use the new R 4.2.0, by 
>>> writing the program with Dasher in my text editor, and then pasting 
>>> that program into R.
>>>
>>> The latest Windows version of Dasher, version 5.0.0 beta, works 
>>> perfectly well with text editors (I use EditPad Pro), with 
>>> Microsoft-like Office packages (I use SoftMaker Office), for writing 
>>> e-mails (I use Mozilla Thunderbird), for writing on a web page (I use 
>>> mostly Mozilla Firefox). It worked perfectly well with R up to 
>>> version 4.1.3, but it does not work with R 4.2.0
>>>
>>> The latest Dasher 5.0.0 beta Windows installer and the source code 
>>> can be found on this page below (please click on "Windows installer" 
>>> and on "source code", just below the head "Dasher 5.0 beta release"):
>>>
>>> https://github.com/dasher-project/dasher/releases
>>>
>>> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after installing 
>>> Dasher one should go to Preferences > Application > Application Style.
>>>
>>> Currently, after the passing of Ada Majorek, the Dasher Project is 
>>> being put forward by a group of people in England, but, it seems, at 
>>> a very slow pace. They have announced the existence of a version 6 
>>> beta, but this is only an online instance of Dasher, there is no 
>>> Windows installer, as far as I know. Their web page:
>>>
>>> https://dasher.acecentre.net/
>>>
>>> For me, and possibly for other users, the Dasher version 5.0.0 beta 
>>> for Windows that is available works perfectly well, and allows me to 
>>> use the computer with a proficiency that would be hardly possible 
>>> otherwise.
>>>
>>> Here I request that the R developers take a look at this word-typing 
>>> issue that happens with the new R 4.2.0 on Windows.
>>>
>>> As an R user (I work in ecological research), I can only thank the R 
>>> team for this really wonderful piece of statistical software that you 
>>> make freely available to us all.
>>>
>>> Regards,
>>>
>>> Paulo Barata
>>>
>>> (Rio de Janeiro - Brazil)
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon May 16 19:50:33 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 16 May 2022 19:50:33 +0200
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <0a7970be-5057-129a-b367-e95bac76106d@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
 <0a7970be-5057-129a-b367-e95bac76106d@infolink.com.br>
Message-ID: <1ca207fa-f078-1fb2-ab5e-ec367e5ac5c7@gmail.com>


On 5/16/22 19:45, Paulo Barata wrote:
>
> Dear Tomas,
>
> Thank you very much for dealing with this issue.
>
> You said: "I've committed a fix to R-devel, 82368". It happens that, 
> at this very moment (Monday 16 May 18:44 UTC), The R-devel that exists 
> on both the Austria and the 0-Cloud CRAN pages is this, with a 
> different (smaller) number:
>
> This is a Windows 64 bit binary build of the 2022-05-15 r82362 
> development snapshot of R
>
> Anyway, I installed and tried this R-devel r82362, and Dasher does not 
> work with it.
>
> I am not able to find R-Devel 82368 on the CRAN site. Maybe I should 
> wait a little more. Or maybe you could send me a proper link to that.

Thanks, Paulo, yes,? it needs to be a version >= 82368 (and it may take 
several hours to appear), but at least you have now a baseline negative 
test using R-devel.

Best
Tomas

>
> Best regards,
>
> Paulo Barata
>
> ----------------------------------------------------------
>
> On 16/05/2022 14:08, Tomas Kalibera wrote:
>>
>> On 5/15/22 16:10, Paulo Barata wrote:
>>>
>>> To the R developers,
>>>
>>> I noticed today that R 4.2.0 responds to the "Enter" character of 
>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in 
>>> Dasher causes the R prompt to jump to the next line, as an "Enter" 
>>> should do.
>>>
>>> No other characters (letters, digits, special characters like + = & 
>>> ~ | # $) are accepted by R 4.2.0 through Dasher.
>>>
>>> The "Enter" shows that, somehow, the communication between Dasher 
>>> and R 4.2.0 through the Windows system is not completely curtailed.
>>
>> Dear Paulo,
>>
>> thanks for the report and thanks to all for the useful comments in 
>> the followup discussion. I've committed a fix to R-devel, 82368, and 
>> I would be grateful if you could test whether it fixes the problem 
>> for you. I've tested it only on a small example which is using the 
>> same method to insert keys to Rgui as Dasher does.
>>
>> The problem is caused by a limitation in GraphApp, a library used by 
>> Rgui and included in the R distribution. GraphApp has two modes: 
>> Unicode windows (with this limitation) and non-Unicode windows 
>> (without it). GraphApp uses Unicode windows when running in a 
>> multi-byte locale, and as of R 4.2, this is the case for all systems 
>> on recent Windows where the native encoding is UTF-8. This means that 
>> most likely R 4.1.3 didn't work with Dasher on systems running in a 
>> multi-byte locale and that most likely R 4.2.0 would work with Dasher 
>> on old Windows systems (where UTF-8 cannot be used as native encoding).
>>
>> Dasher uses SendInput/KEYEVENTF_UNICODE to inject text into Rgui, 
>> which is fine as far as I can tell and should work. It didn't work, 
>> because the Unicode windows didn't handle WM_CHAR nor 
>> WM_KEYDOWN/WM_KEYUP for VK_PACKET. By design, Unicode windows get 
>> input via WM_IME_COMPOSITION and WM_KEYDOWN, so I've added support 
>> for VK_PACKET to WM_KEYDOWN (taking the logic in gdk as an example).
>>
>> I am cc'ing Jose as Tinn-R has a similar problem, though this patch 
>> doesn't solve it.
>>
>> Best
>> Tomas
>>
>>>
>>> Regards,
>>>
>>> Paulo Barata
>>>
>>> ----------------------------------------------------------
>>>
>>> On 13/05/2022 16:44, Paulo Barata wrote:
>>>> To the R developers,
>>>>
>>>> I would like to point out an issue that occurs with the new R 4.2.0 
>>>> running on Windows; this is possibly related to the recent wide 
>>>> changes made to the Windows port of R. The issue has to do with 
>>>> writing of the R window.
>>>>
>>>> My computer runs on Windows 10 Professional 64-bit with all the 
>>>> latest updates, and has a 4-core 8-thread Intel Xeon processor with 
>>>> 32 Gb of RAM.
>>>>
>>>> I have some slight impairment in my hands, so for typing I avoid 
>>>> using the computer keyboard as much as possible. For most of my 
>>>> typing, I use the software Dasher, a kind of assistive technology 
>>>> software. Dasher was created by the Inference Group led by 
>>>> Professor David MacKay (died in 2016) at Cambridge University in 
>>>> England. Later, Dasher was further developed by Ada Majorek (a 
>>>> Google engineer, recently deceased).
>>>>
>>>> General information on Dasher and about the Dasher Project can be 
>>>> found on the Inference Group page:
>>>>
>>>> http://www.inference.org.uk/dasher/
>>>>
>>>> An example of Dasher in action can be seen on this 2-minute YouTube 
>>>> video:
>>>>
>>>> https://www.youtube.com/watch?v=nr3s4613DX8
>>>>
>>>> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
>>>> himself explaining the Dasher concept can be found here:
>>>>
>>>> https://www.youtube.com/watch?v=wpOxbesRNBc
>>>>
>>>> In the 2-minute video (the first YouTube address above), the 
>>>> sentence written through Dasher, for actual use, needs to be copied 
>>>> and then pasted into another software, say a text editor. But 
>>>> Dasher also has a "Direct Entry" mode, where words typed are 
>>>> entered directly on the screen of the text editor or other software 
>>>> -- this is how I use Dasher to write on the R window.
>>>>
>>>> Using Dasher`s "Direct Entry" mode, for all effects, to write a 
>>>> word through Dasher works exactly like writing the word through the 
>>>> normal computer keyboard. Somehow (I do not know about system 
>>>> programming), in "Direct Entry" mode, the output of Dasher is 
>>>> understood by the computer as an input of the same nature as a 
>>>> keyboard input.
>>>>
>>>> But this is the issue: until R 4.1.3, R accepted normally the 
>>>> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
>>>> r82348, 12 May 2022) does not accept Dasher anymore.
>>>>
>>>> So, for now, if I wish to use R during some extended interactive 
>>>> section (say, for a first look at a complex data set), and if I 
>>>> wish to use Dasher for this interactive session, then I have to use 
>>>> R 4.1.3. For using R through programming, I can use the new R 
>>>> 4.2.0, by writing the program with Dasher in my text editor, and 
>>>> then pasting that program into R.
>>>>
>>>> The latest Windows version of Dasher, version 5.0.0 beta, works 
>>>> perfectly well with text editors (I use EditPad Pro), with 
>>>> Microsoft-like Office packages (I use SoftMaker Office), for 
>>>> writing e-mails (I use Mozilla Thunderbird), for writing on a web 
>>>> page (I use mostly Mozilla Firefox). It worked perfectly well with 
>>>> R up to version 4.1.3, but it does not work with R 4.2.0
>>>>
>>>> The latest Dasher 5.0.0 beta Windows installer and the source code 
>>>> can be found on this page below (please click on "Windows 
>>>> installer" and on "source code", just below the head "Dasher 5.0 
>>>> beta release"):
>>>>
>>>> https://github.com/dasher-project/dasher/releases
>>>>
>>>> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after 
>>>> installing Dasher one should go to Preferences > Application > 
>>>> Application Style.
>>>>
>>>> Currently, after the passing of Ada Majorek, the Dasher Project is 
>>>> being put forward by a group of people in England, but, it seems, 
>>>> at a very slow pace. They have announced the existence of a version 
>>>> 6 beta, but this is only an online instance of Dasher, there is no 
>>>> Windows installer, as far as I know. Their web page:
>>>>
>>>> https://dasher.acecentre.net/
>>>>
>>>> For me, and possibly for other users, the Dasher version 5.0.0 beta 
>>>> for Windows that is available works perfectly well, and allows me 
>>>> to use the computer with a proficiency that would be hardly 
>>>> possible otherwise.
>>>>
>>>> Here I request that the R developers take a look at this 
>>>> word-typing issue that happens with the new R 4.2.0 on Windows.
>>>>
>>>> As an R user (I work in ecological research), I can only thank the 
>>>> R team for this really wonderful piece of statistical software that 
>>>> you make freely available to us all.
>>>>
>>>> Regards,
>>>>
>>>> Paulo Barata
>>>>
>>>> (Rio de Janeiro - Brazil)
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From bbo|ker @end|ng |rom gm@||@com  Mon May 16 19:51:01 2022
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 16 May 2022 13:51:01 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <0a7970be-5057-129a-b367-e95bac76106d@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
 <0a7970be-5057-129a-b367-e95bac76106d@infolink.com.br>
Message-ID: <b6d914a3-323e-5434-b8bb-7026a150e1c2@gmail.com>

   You'll probably have to wait a day or so for a new build.  The 
Windows binaries are only built once a day or so.

https://cran.r-project.org/bin/windows/base/rdevel.html was built on 
2022-05-15.

   Tomas's fix was only committed an hour ago:

https://github.com/wch/r-source/commit/9b6de510e6346da7ccb582d14a7699500751efc4

   If you're really eager you can install Subversion and build from 
source <https://developer.r-project.org/SVNtips.html> (or clone the 
Github mirror etc.).

   cheers
    Ben Bolker


On 2022-05-16 1:45 p.m., Paulo Barata wrote:
> 
> Dear Tomas,
> 
> Thank you very much for dealing with this issue.
> 
> You said: "I've committed a fix to R-devel, 82368". It happens that, at 
> this very moment (Monday 16 May 18:44 UTC), The R-devel that exists on 
> both the Austria and the 0-Cloud CRAN pages is this, with a different 
> (smaller) number:
> 
> This is a Windows 64 bit binary build of the 2022-05-15 r82362 
> development snapshot of R
> 
> Anyway, I installed and tried this R-devel r82362, and Dasher does not 
> work with it.
> 
> I am not able to find R-Devel 82368 on the CRAN site. Maybe I should 
> wait a little more. Or maybe you could send me a proper link to that.


> 
> Best regards,
> 
> Paulo Barata
> 
> ----------------------------------------------------------
> 
> On 16/05/2022 14:08, Tomas Kalibera wrote:
>>
>> On 5/15/22 16:10, Paulo Barata wrote:
>>>
>>> To the R developers,
>>>
>>> I noticed today that R 4.2.0 responds to the "Enter" character of 
>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in 
>>> Dasher causes the R prompt to jump to the next line, as an "Enter" 
>>> should do.
>>>
>>> No other characters (letters, digits, special characters like + = & ~ 
>>> | # $) are accepted by R 4.2.0 through Dasher.
>>>
>>> The "Enter" shows that, somehow, the communication between Dasher and 
>>> R 4.2.0 through the Windows system is not completely curtailed.
>>
>> Dear Paulo,
>>
>> thanks for the report and thanks to all for the useful comments in the 
>> followup discussion. I've committed a fix to R-devel, 82368, and I 
>> would be grateful if you could test whether it fixes the problem for 
>> you. I've tested it only on a small example which is using the same 
>> method to insert keys to Rgui as Dasher does.
>>
>> The problem is caused by a limitation in GraphApp, a library used by 
>> Rgui and included in the R distribution. GraphApp has two modes: 
>> Unicode windows (with this limitation) and non-Unicode windows 
>> (without it). GraphApp uses Unicode windows when running in a 
>> multi-byte locale, and as of R 4.2, this is the case for all systems 
>> on recent Windows where the native encoding is UTF-8. This means that 
>> most likely R 4.1.3 didn't work with Dasher on systems running in a 
>> multi-byte locale and that most likely R 4.2.0 would work with Dasher 
>> on old Windows systems (where UTF-8 cannot be used as native encoding).
>>
>> Dasher uses SendInput/KEYEVENTF_UNICODE to inject text into Rgui, 
>> which is fine as far as I can tell and should work. It didn't work, 
>> because the Unicode windows didn't handle WM_CHAR nor 
>> WM_KEYDOWN/WM_KEYUP for VK_PACKET. By design, Unicode windows get 
>> input via WM_IME_COMPOSITION and WM_KEYDOWN, so I've added support for 
>> VK_PACKET to WM_KEYDOWN (taking the logic in gdk as an example).
>>
>> I am cc'ing Jose as Tinn-R has a similar problem, though this patch 
>> doesn't solve it.
>>
>> Best
>> Tomas
>>
>>>
>>> Regards,
>>>
>>> Paulo Barata
>>>
>>> ----------------------------------------------------------
>>>
>>> On 13/05/2022 16:44, Paulo Barata wrote:
>>>> To the R developers,
>>>>
>>>> I would like to point out an issue that occurs with the new R 4.2.0 
>>>> running on Windows; this is possibly related to the recent wide 
>>>> changes made to the Windows port of R. The issue has to do with 
>>>> writing of the R window.
>>>>
>>>> My computer runs on Windows 10 Professional 64-bit with all the 
>>>> latest updates, and has a 4-core 8-thread Intel Xeon processor with 
>>>> 32 Gb of RAM.
>>>>
>>>> I have some slight impairment in my hands, so for typing I avoid 
>>>> using the computer keyboard as much as possible. For most of my 
>>>> typing, I use the software Dasher, a kind of assistive technology 
>>>> software. Dasher was created by the Inference Group led by Professor 
>>>> David MacKay (died in 2016) at Cambridge University in England. 
>>>> Later, Dasher was further developed by Ada Majorek (a Google 
>>>> engineer, recently deceased).
>>>>
>>>> General information on Dasher and about the Dasher Project can be 
>>>> found on the Inference Group page:
>>>>
>>>> http://www.inference.org.uk/dasher/
>>>>
>>>> An example of Dasher in action can be seen on this 2-minute YouTube 
>>>> video:
>>>>
>>>> https://www.youtube.com/watch?v=nr3s4613DX8
>>>>
>>>> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
>>>> himself explaining the Dasher concept can be found here:
>>>>
>>>> https://www.youtube.com/watch?v=wpOxbesRNBc
>>>>
>>>> In the 2-minute video (the first YouTube address above), the 
>>>> sentence written through Dasher, for actual use, needs to be copied 
>>>> and then pasted into another software, say a text editor. But Dasher 
>>>> also has a "Direct Entry" mode, where words typed are entered 
>>>> directly on the screen of the text editor or other software -- this 
>>>> is how I use Dasher to write on the R window.
>>>>
>>>> Using Dasher`s "Direct Entry" mode, for all effects, to write a word 
>>>> through Dasher works exactly like writing the word through the 
>>>> normal computer keyboard. Somehow (I do not know about system 
>>>> programming), in "Direct Entry" mode, the output of Dasher is 
>>>> understood by the computer as an input of the same nature as a 
>>>> keyboard input.
>>>>
>>>> But this is the issue: until R 4.1.3, R accepted normally the 
>>>> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
>>>> r82348, 12 May 2022) does not accept Dasher anymore.
>>>>
>>>> So, for now, if I wish to use R during some extended interactive 
>>>> section (say, for a first look at a complex data set), and if I wish 
>>>> to use Dasher for this interactive session, then I have to use R 
>>>> 4.1.3. For using R through programming, I can use the new R 4.2.0, 
>>>> by writing the program with Dasher in my text editor, and then 
>>>> pasting that program into R.
>>>>
>>>> The latest Windows version of Dasher, version 5.0.0 beta, works 
>>>> perfectly well with text editors (I use EditPad Pro), with 
>>>> Microsoft-like Office packages (I use SoftMaker Office), for writing 
>>>> e-mails (I use Mozilla Thunderbird), for writing on a web page (I 
>>>> use mostly Mozilla Firefox). It worked perfectly well with R up to 
>>>> version 4.1.3, but it does not work with R 4.2.0
>>>>
>>>> The latest Dasher 5.0.0 beta Windows installer and the source code 
>>>> can be found on this page below (please click on "Windows installer" 
>>>> and on "source code", just below the head "Dasher 5.0 beta release"):
>>>>
>>>> https://github.com/dasher-project/dasher/releases
>>>>
>>>> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after 
>>>> installing Dasher one should go to Preferences > Application > 
>>>> Application Style.
>>>>
>>>> Currently, after the passing of Ada Majorek, the Dasher Project is 
>>>> being put forward by a group of people in England, but, it seems, at 
>>>> a very slow pace. They have announced the existence of a version 6 
>>>> beta, but this is only an online instance of Dasher, there is no 
>>>> Windows installer, as far as I know. Their web page:
>>>>
>>>> https://dasher.acecentre.net/
>>>>
>>>> For me, and possibly for other users, the Dasher version 5.0.0 beta 
>>>> for Windows that is available works perfectly well, and allows me to 
>>>> use the computer with a proficiency that would be hardly possible 
>>>> otherwise.
>>>>
>>>> Here I request that the R developers take a look at this word-typing 
>>>> issue that happens with the new R 4.2.0 on Windows.
>>>>
>>>> As an R user (I work in ecological research), I can only thank the R 
>>>> team for this really wonderful piece of statistical software that 
>>>> you make freely available to us all.
>>>>
>>>> Regards,
>>>>
>>>> Paulo Barata
>>>>
>>>> (Rio de Janeiro - Brazil)
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon May 16 20:02:08 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 16 May 2022 14:02:08 -0400
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <b6d914a3-323e-5434-b8bb-7026a150e1c2@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
 <0a7970be-5057-129a-b367-e95bac76106d@infolink.com.br>
 <b6d914a3-323e-5434-b8bb-7026a150e1c2@gmail.com>
Message-ID: <5c24c2f3-2b19-2b9d-3ceb-bfda3faf3bfa@gmail.com>

On 16/05/2022 1:51 p.m., Ben Bolker wrote:
>     You'll probably have to wait a day or so for a new build.  The
> Windows binaries are only built once a day or so.

They appear first at

https://cran.r-project.org/bin/windows/base/rdevel.html

and are mirrored to other sites later.

Duncan Murdoch

> 
> https://cran.r-project.org/bin/windows/base/rdevel.html was built on
> 2022-05-15.
> 
>     Tomas's fix was only committed an hour ago:
> 
> https://github.com/wch/r-source/commit/9b6de510e6346da7ccb582d14a7699500751efc4
> 
>     If you're really eager you can install Subversion and build from
> source <https://developer.r-project.org/SVNtips.html> (or clone the
> Github mirror etc.).
> 
>     cheers
>      Ben Bolker
> 
> 
> On 2022-05-16 1:45 p.m., Paulo Barata wrote:
>>
>> Dear Tomas,
>>
>> Thank you very much for dealing with this issue.
>>
>> You said: "I've committed a fix to R-devel, 82368". It happens that, at
>> this very moment (Monday 16 May 18:44 UTC), The R-devel that exists on
>> both the Austria and the 0-Cloud CRAN pages is this, with a different
>> (smaller) number:
>>
>> This is a Windows 64 bit binary build of the 2022-05-15 r82362
>> development snapshot of R
>>
>> Anyway, I installed and tried this R-devel r82362, and Dasher does not
>> work with it.
>>
>> I am not able to find R-Devel 82368 on the CRAN site. Maybe I should
>> wait a little more. Or maybe you could send me a proper link to that.
> 
> 
>>
>> Best regards,
>>
>> Paulo Barata
>>
>> ----------------------------------------------------------
>>
>> On 16/05/2022 14:08, Tomas Kalibera wrote:
>>>
>>> On 5/15/22 16:10, Paulo Barata wrote:
>>>>
>>>> To the R developers,
>>>>
>>>> I noticed today that R 4.2.0 responds to the "Enter" character of
>>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in
>>>> Dasher causes the R prompt to jump to the next line, as an "Enter"
>>>> should do.
>>>>
>>>> No other characters (letters, digits, special characters like + = & ~
>>>> | # $) are accepted by R 4.2.0 through Dasher.
>>>>
>>>> The "Enter" shows that, somehow, the communication between Dasher and
>>>> R 4.2.0 through the Windows system is not completely curtailed.
>>>
>>> Dear Paulo,
>>>
>>> thanks for the report and thanks to all for the useful comments in the
>>> followup discussion. I've committed a fix to R-devel, 82368, and I
>>> would be grateful if you could test whether it fixes the problem for
>>> you. I've tested it only on a small example which is using the same
>>> method to insert keys to Rgui as Dasher does.
>>>
>>> The problem is caused by a limitation in GraphApp, a library used by
>>> Rgui and included in the R distribution. GraphApp has two modes:
>>> Unicode windows (with this limitation) and non-Unicode windows
>>> (without it). GraphApp uses Unicode windows when running in a
>>> multi-byte locale, and as of R 4.2, this is the case for all systems
>>> on recent Windows where the native encoding is UTF-8. This means that
>>> most likely R 4.1.3 didn't work with Dasher on systems running in a
>>> multi-byte locale and that most likely R 4.2.0 would work with Dasher
>>> on old Windows systems (where UTF-8 cannot be used as native encoding).
>>>
>>> Dasher uses SendInput/KEYEVENTF_UNICODE to inject text into Rgui,
>>> which is fine as far as I can tell and should work. It didn't work,
>>> because the Unicode windows didn't handle WM_CHAR nor
>>> WM_KEYDOWN/WM_KEYUP for VK_PACKET. By design, Unicode windows get
>>> input via WM_IME_COMPOSITION and WM_KEYDOWN, so I've added support for
>>> VK_PACKET to WM_KEYDOWN (taking the logic in gdk as an example).
>>>
>>> I am cc'ing Jose as Tinn-R has a similar problem, though this patch
>>> doesn't solve it.
>>>
>>> Best
>>> Tomas
>>>
>>>>
>>>> Regards,
>>>>
>>>> Paulo Barata
>>>>
>>>> ----------------------------------------------------------
>>>>
>>>> On 13/05/2022 16:44, Paulo Barata wrote:
>>>>> To the R developers,
>>>>>
>>>>> I would like to point out an issue that occurs with the new R 4.2.0
>>>>> running on Windows; this is possibly related to the recent wide
>>>>> changes made to the Windows port of R. The issue has to do with
>>>>> writing of the R window.
>>>>>
>>>>> My computer runs on Windows 10 Professional 64-bit with all the
>>>>> latest updates, and has a 4-core 8-thread Intel Xeon processor with
>>>>> 32 Gb of RAM.
>>>>>
>>>>> I have some slight impairment in my hands, so for typing I avoid
>>>>> using the computer keyboard as much as possible. For most of my
>>>>> typing, I use the software Dasher, a kind of assistive technology
>>>>> software. Dasher was created by the Inference Group led by Professor
>>>>> David MacKay (died in 2016) at Cambridge University in England.
>>>>> Later, Dasher was further developed by Ada Majorek (a Google
>>>>> engineer, recently deceased).
>>>>>
>>>>> General information on Dasher and about the Dasher Project can be
>>>>> found on the Inference Group page:
>>>>>
>>>>> http://www.inference.org.uk/dasher/
>>>>>
>>>>> An example of Dasher in action can be seen on this 2-minute YouTube
>>>>> video:
>>>>>
>>>>> https://www.youtube.com/watch?v=nr3s4613DX8
>>>>>
>>>>> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay
>>>>> himself explaining the Dasher concept can be found here:
>>>>>
>>>>> https://www.youtube.com/watch?v=wpOxbesRNBc
>>>>>
>>>>> In the 2-minute video (the first YouTube address above), the
>>>>> sentence written through Dasher, for actual use, needs to be copied
>>>>> and then pasted into another software, say a text editor. But Dasher
>>>>> also has a "Direct Entry" mode, where words typed are entered
>>>>> directly on the screen of the text editor or other software -- this
>>>>> is how I use Dasher to write on the R window.
>>>>>
>>>>> Using Dasher`s "Direct Entry" mode, for all effects, to write a word
>>>>> through Dasher works exactly like writing the word through the
>>>>> normal computer keyboard. Somehow (I do not know about system
>>>>> programming), in "Direct Entry" mode, the output of Dasher is
>>>>> understood by the computer as an input of the same nature as a
>>>>> keyboard input.
>>>>>
>>>>> But this is the issue: until R 4.1.3, R accepted normally the
>>>>> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build
>>>>> r82348, 12 May 2022) does not accept Dasher anymore.
>>>>>
>>>>> So, for now, if I wish to use R during some extended interactive
>>>>> section (say, for a first look at a complex data set), and if I wish
>>>>> to use Dasher for this interactive session, then I have to use R
>>>>> 4.1.3. For using R through programming, I can use the new R 4.2.0,
>>>>> by writing the program with Dasher in my text editor, and then
>>>>> pasting that program into R.
>>>>>
>>>>> The latest Windows version of Dasher, version 5.0.0 beta, works
>>>>> perfectly well with text editors (I use EditPad Pro), with
>>>>> Microsoft-like Office packages (I use SoftMaker Office), for writing
>>>>> e-mails (I use Mozilla Thunderbird), for writing on a web page (I
>>>>> use mostly Mozilla Firefox). It worked perfectly well with R up to
>>>>> version 4.1.3, but it does not work with R 4.2.0
>>>>>
>>>>> The latest Dasher 5.0.0 beta Windows installer and the source code
>>>>> can be found on this page below (please click on "Windows installer"
>>>>> and on "source code", just below the head "Dasher 5.0 beta release"):
>>>>>
>>>>> https://github.com/dasher-project/dasher/releases
>>>>>
>>>>> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after
>>>>> installing Dasher one should go to Preferences > Application >
>>>>> Application Style.
>>>>>
>>>>> Currently, after the passing of Ada Majorek, the Dasher Project is
>>>>> being put forward by a group of people in England, but, it seems, at
>>>>> a very slow pace. They have announced the existence of a version 6
>>>>> beta, but this is only an online instance of Dasher, there is no
>>>>> Windows installer, as far as I know. Their web page:
>>>>>
>>>>> https://dasher.acecentre.net/
>>>>>
>>>>> For me, and possibly for other users, the Dasher version 5.0.0 beta
>>>>> for Windows that is available works perfectly well, and allows me to
>>>>> use the computer with a proficiency that would be hardly possible
>>>>> otherwise.
>>>>>
>>>>> Here I request that the R developers take a look at this word-typing
>>>>> issue that happens with the new R 4.2.0 on Windows.
>>>>>
>>>>> As an R user (I work in ecological research), I can only thank the R
>>>>> team for this really wonderful piece of statistical software that
>>>>> you make freely available to us all.
>>>>>
>>>>> Regards,
>>>>>
>>>>> Paulo Barata
>>>>>
>>>>> (Rio de Janeiro - Brazil)
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From pb @end|ng |rom |n|o||nk@com@br  Tue May 17 15:04:35 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Tue, 17 May 2022 10:04:35 -0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
Message-ID: <d859b36f-d2c5-5cde-0b04-ac3ff9afa9b6@infolink.com.br>


Dear Tomas,

Great news! I downloaded R-devel 2022-05-16 r82368 for Windows and 
installed it on my Windows 10 Professional. It works perfectly well with 
Dasher 5.0 beta!

In Dasher, I tried all special characters like $ & | *, many small and 
capital letters, including some accented ones like ? ? ? ? that exist in 
Portuguese (and other languages, e.g. French (there are versions of 
Dasher for many languages)), all digits, space, the Enter character and 
the "Backspace" movement (to erase previously written characters), 
everything works well.

Now, we can fully use Dasher in the R console.

It seems that we cannot yet normally install packages in this R-devel 
r82368. So I look forward to the day when a stable R 4.3.0 will be 
available. Meanwhile, for my ecological work, I can use R perfectly well 
with the versions 4.1.3 and 4.2.0 that I have here, so, from my 
viewpoint, this R 4.3.0 can take its time to come to light.

I can only thank you very much, and all the other people who took part 
in this discussion, for the quick fix to this issue.

Best regards,

Paulo Barata

(Rio de Janeiro - Brazil)

----------------------------------------------------------

On 16/05/2022 14:08, Tomas Kalibera wrote:
> 
> On 5/15/22 16:10, Paulo Barata wrote:
>>
>> To the R developers,
>>
>> I noticed today that R 4.2.0 responds to the "Enter" character of 
>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in Dasher 
>> causes the R prompt to jump to the next line, as an "Enter" should do.
>>
>> No other characters (letters, digits, special characters like + = & ~ 
>> | # $) are accepted by R 4.2.0 through Dasher.
>>
>> The "Enter" shows that, somehow, the communication between Dasher and 
>> R 4.2.0 through the Windows system is not completely curtailed.
> 
> Dear Paulo,
> 
> thanks for the report and thanks to all for the useful comments in the 
> followup discussion. I've committed a fix to R-devel, 82368, and I would 
> be grateful if you could test whether it fixes the problem for you. I've 
> tested it only on a small example which is using the same method to 
> insert keys to Rgui as Dasher does.
> 
> The problem is caused by a limitation in GraphApp, a library used by 
> Rgui and included in the R distribution. GraphApp has two modes: Unicode 
> windows (with this limitation) and non-Unicode windows (without it). 
> GraphApp uses Unicode windows when running in a multi-byte locale, and 
> as of R 4.2, this is the case for all systems on recent Windows where 
> the native encoding is UTF-8. This means that most likely R 4.1.3 didn't 
> work with Dasher on systems running in a multi-byte locale and that most 
> likely R 4.2.0 would work with Dasher on old Windows systems (where 
> UTF-8 cannot be used as native encoding).
> 
> Dasher uses SendInput/KEYEVENTF_UNICODE to inject text into Rgui, which 
> is fine as far as I can tell and should work. It didn't work, because 
> the Unicode windows didn't handle WM_CHAR nor WM_KEYDOWN/WM_KEYUP for 
> VK_PACKET. By design, Unicode windows get input via WM_IME_COMPOSITION 
> and WM_KEYDOWN, so I've added support for VK_PACKET to WM_KEYDOWN 
> (taking the logic in gdk as an example).
> 
> I am cc'ing Jose as Tinn-R has a similar problem, though this patch 
> doesn't solve it.
> 
> Best
> Tomas
> 
>>
>> Regards,
>>
>> Paulo Barata
>>
>> ----------------------------------------------------------
>>
>> On 13/05/2022 16:44, Paulo Barata wrote:
>>> To the R developers,
>>>
>>> I would like to point out an issue that occurs with the new R 4.2.0 
>>> running on Windows; this is possibly related to the recent wide 
>>> changes made to the Windows port of R. The issue has to do with 
>>> writing of the R window.
>>>
>>> My computer runs on Windows 10 Professional 64-bit with all the 
>>> latest updates, and has a 4-core 8-thread Intel Xeon processor with 
>>> 32 Gb of RAM.
>>>
>>> I have some slight impairment in my hands, so for typing I avoid 
>>> using the computer keyboard as much as possible. For most of my 
>>> typing, I use the software Dasher, a kind of assistive technology 
>>> software. Dasher was created by the Inference Group led by Professor 
>>> David MacKay (died in 2016) at Cambridge University in England. 
>>> Later, Dasher was further developed by Ada Majorek (a Google 
>>> engineer, recently deceased).
>>>
>>> General information on Dasher and about the Dasher Project can be 
>>> found on the Inference Group page:
>>>
>>> http://www.inference.org.uk/dasher/
>>>
>>> An example of Dasher in action can be seen on this 2-minute YouTube 
>>> video:
>>>
>>> https://www.youtube.com/watch?v=nr3s4613DX8
>>>
>>> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
>>> himself explaining the Dasher concept can be found here:
>>>
>>> https://www.youtube.com/watch?v=wpOxbesRNBc
>>>
>>> In the 2-minute video (the first YouTube address above), the sentence 
>>> written through Dasher, for actual use, needs to be copied and then 
>>> pasted into another software, say a text editor. But Dasher also has 
>>> a "Direct Entry" mode, where words typed are entered directly on the 
>>> screen of the text editor or other software -- this is how I use 
>>> Dasher to write on the R window.
>>>
>>> Using Dasher`s "Direct Entry" mode, for all effects, to write a word 
>>> through Dasher works exactly like writing the word through the normal 
>>> computer keyboard. Somehow (I do not know about system programming), 
>>> in "Direct Entry" mode, the output of Dasher is understood by the 
>>> computer as an input of the same nature as a keyboard input.
>>>
>>> But this is the issue: until R 4.1.3, R accepted normally the 
>>> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
>>> r82348, 12 May 2022) does not accept Dasher anymore.
>>>
>>> So, for now, if I wish to use R during some extended interactive 
>>> section (say, for a first look at a complex data set), and if I wish 
>>> to use Dasher for this interactive session, then I have to use R 
>>> 4.1.3. For using R through programming, I can use the new R 4.2.0, by 
>>> writing the program with Dasher in my text editor, and then pasting 
>>> that program into R.
>>>
>>> The latest Windows version of Dasher, version 5.0.0 beta, works 
>>> perfectly well with text editors (I use EditPad Pro), with 
>>> Microsoft-like Office packages (I use SoftMaker Office), for writing 
>>> e-mails (I use Mozilla Thunderbird), for writing on a web page (I use 
>>> mostly Mozilla Firefox). It worked perfectly well with R up to 
>>> version 4.1.3, but it does not work with R 4.2.0
>>>
>>> The latest Dasher 5.0.0 beta Windows installer and the source code 
>>> can be found on this page below (please click on "Windows installer" 
>>> and on "source code", just below the head "Dasher 5.0 beta release"):
>>>
>>> https://github.com/dasher-project/dasher/releases
>>>
>>> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after installing 
>>> Dasher one should go to Preferences > Application > Application Style.
>>>
>>> Currently, after the passing of Ada Majorek, the Dasher Project is 
>>> being put forward by a group of people in England, but, it seems, at 
>>> a very slow pace. They have announced the existence of a version 6 
>>> beta, but this is only an online instance of Dasher, there is no 
>>> Windows installer, as far as I know. Their web page:
>>>
>>> https://dasher.acecentre.net/
>>>
>>> For me, and possibly for other users, the Dasher version 5.0.0 beta 
>>> for Windows that is available works perfectly well, and allows me to 
>>> use the computer with a proficiency that would be hardly possible 
>>> otherwise.
>>>
>>> Here I request that the R developers take a look at this word-typing 
>>> issue that happens with the new R 4.2.0 on Windows.
>>>
>>> As an R user (I work in ecological research), I can only thank the R 
>>> team for this really wonderful piece of statistical software that you 
>>> make freely available to us all.
>>>
>>> Regards,
>>>
>>> Paulo Barata
>>>
>>> (Rio de Janeiro - Brazil)
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue May 17 15:45:54 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 17 May 2022 15:45:54 +0200
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <d859b36f-d2c5-5cde-0b04-ac3ff9afa9b6@infolink.com.br>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
 <d859b36f-d2c5-5cde-0b04-ac3ff9afa9b6@infolink.com.br>
Message-ID: <609d5703-67c8-5a61-b37e-ac7de8091830@gmail.com>

Dear Paulo,

On 5/17/22 15:04, Paulo Barata wrote:
>
> Dear Tomas,
>
> Great news! I downloaded R-devel 2022-05-16 r82368 for Windows and 
> installed it on my Windows 10 Professional. It works perfectly well 
> with Dasher 5.0 beta!
>
> In Dasher, I tried all special characters like $ & | *, many small and 
> capital letters, including some accented ones like ? ? ? ? that exist 
> in Portuguese (and other languages, e.g. French (there are versions of 
> Dasher for many languages)), all digits, space, the Enter character 
> and the "Backspace" movement (to erase previously written characters), 
> everything works well.
>
> Now, we can fully use Dasher in the R console.
I am happy it works again, thanks for the testing and the report. I've 
ported the fix to R-patched, which means it will appear in R 4.2.1.
> It seems that we cannot yet normally install packages in this R-devel 
> r82368. So I look forward to the day when a stable R 4.3.0 will be 
> available. Meanwhile, for my ecological work, I can use R perfectly 
> well with the versions 4.1.3 and 4.2.0 that I have here, so, from my 
> viewpoint, this R 4.3.0 can take its time to come to light.

R 4.3.0 will be released probably around next April, but R 4.2.1 much 
sooner (expect in 1-3 months, though this hasn't been scheduled, yet). 
Before that, you should be able to use an R-patched snapshot build 
available from

https://cran.r-project.org/bin/windows/base/rpatched.html

but only after the build is of release >= 82371 (which should happen by 
tomorrow - the page shows the revision number). R-patched is R 4.2.0 
with updates that will eventually become 4.2.1, so should be more stable 
than R-devel is now (to become 4.3.0 around next April).

If you have any problems with installing packages in either version of 
R, please report, so that someone can help or indeed if there is a bug, 
it could be fixed.

> I can only thank you very much, and all the other people who took part 
> in this discussion, for the quick fix to this issue.

Thank you for the report. Without it, the problem wouldn't have been fixed.

Best
Tomas

>
> Best regards,
>
> Paulo Barata
>
> (Rio de Janeiro - Brazil)
>
> ----------------------------------------------------------
>
> On 16/05/2022 14:08, Tomas Kalibera wrote:
>>
>> On 5/15/22 16:10, Paulo Barata wrote:
>>>
>>> To the R developers,
>>>
>>> I noticed today that R 4.2.0 responds to the "Enter" character of 
>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in 
>>> Dasher causes the R prompt to jump to the next line, as an "Enter" 
>>> should do.
>>>
>>> No other characters (letters, digits, special characters like + = & 
>>> ~ | # $) are accepted by R 4.2.0 through Dasher.
>>>
>>> The "Enter" shows that, somehow, the communication between Dasher 
>>> and R 4.2.0 through the Windows system is not completely curtailed.
>>
>> Dear Paulo,
>>
>> thanks for the report and thanks to all for the useful comments in 
>> the followup discussion. I've committed a fix to R-devel, 82368, and 
>> I would be grateful if you could test whether it fixes the problem 
>> for you. I've tested it only on a small example which is using the 
>> same method to insert keys to Rgui as Dasher does.
>>
>> The problem is caused by a limitation in GraphApp, a library used by 
>> Rgui and included in the R distribution. GraphApp has two modes: 
>> Unicode windows (with this limitation) and non-Unicode windows 
>> (without it). GraphApp uses Unicode windows when running in a 
>> multi-byte locale, and as of R 4.2, this is the case for all systems 
>> on recent Windows where the native encoding is UTF-8. This means that 
>> most likely R 4.1.3 didn't work with Dasher on systems running in a 
>> multi-byte locale and that most likely R 4.2.0 would work with Dasher 
>> on old Windows systems (where UTF-8 cannot be used as native encoding).
>>
>> Dasher uses SendInput/KEYEVENTF_UNICODE to inject text into Rgui, 
>> which is fine as far as I can tell and should work. It didn't work, 
>> because the Unicode windows didn't handle WM_CHAR nor 
>> WM_KEYDOWN/WM_KEYUP for VK_PACKET. By design, Unicode windows get 
>> input via WM_IME_COMPOSITION and WM_KEYDOWN, so I've added support 
>> for VK_PACKET to WM_KEYDOWN (taking the logic in gdk as an example).
>>
>> I am cc'ing Jose as Tinn-R has a similar problem, though this patch 
>> doesn't solve it.
>>
>> Best
>> Tomas
>>
>>>
>>> Regards,
>>>
>>> Paulo Barata
>>>
>>> ----------------------------------------------------------
>>>
>>> On 13/05/2022 16:44, Paulo Barata wrote:
>>>> To the R developers,
>>>>
>>>> I would like to point out an issue that occurs with the new R 4.2.0 
>>>> running on Windows; this is possibly related to the recent wide 
>>>> changes made to the Windows port of R. The issue has to do with 
>>>> writing of the R window.
>>>>
>>>> My computer runs on Windows 10 Professional 64-bit with all the 
>>>> latest updates, and has a 4-core 8-thread Intel Xeon processor with 
>>>> 32 Gb of RAM.
>>>>
>>>> I have some slight impairment in my hands, so for typing I avoid 
>>>> using the computer keyboard as much as possible. For most of my 
>>>> typing, I use the software Dasher, a kind of assistive technology 
>>>> software. Dasher was created by the Inference Group led by 
>>>> Professor David MacKay (died in 2016) at Cambridge University in 
>>>> England. Later, Dasher was further developed by Ada Majorek (a 
>>>> Google engineer, recently deceased).
>>>>
>>>> General information on Dasher and about the Dasher Project can be 
>>>> found on the Inference Group page:
>>>>
>>>> http://www.inference.org.uk/dasher/
>>>>
>>>> An example of Dasher in action can be seen on this 2-minute YouTube 
>>>> video:
>>>>
>>>> https://www.youtube.com/watch?v=nr3s4613DX8
>>>>
>>>> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
>>>> himself explaining the Dasher concept can be found here:
>>>>
>>>> https://www.youtube.com/watch?v=wpOxbesRNBc
>>>>
>>>> In the 2-minute video (the first YouTube address above), the 
>>>> sentence written through Dasher, for actual use, needs to be copied 
>>>> and then pasted into another software, say a text editor. But 
>>>> Dasher also has a "Direct Entry" mode, where words typed are 
>>>> entered directly on the screen of the text editor or other software 
>>>> -- this is how I use Dasher to write on the R window.
>>>>
>>>> Using Dasher`s "Direct Entry" mode, for all effects, to write a 
>>>> word through Dasher works exactly like writing the word through the 
>>>> normal computer keyboard. Somehow (I do not know about system 
>>>> programming), in "Direct Entry" mode, the output of Dasher is 
>>>> understood by the computer as an input of the same nature as a 
>>>> keyboard input.
>>>>
>>>> But this is the issue: until R 4.1.3, R accepted normally the 
>>>> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
>>>> r82348, 12 May 2022) does not accept Dasher anymore.
>>>>
>>>> So, for now, if I wish to use R during some extended interactive 
>>>> section (say, for a first look at a complex data set), and if I 
>>>> wish to use Dasher for this interactive session, then I have to use 
>>>> R 4.1.3. For using R through programming, I can use the new R 
>>>> 4.2.0, by writing the program with Dasher in my text editor, and 
>>>> then pasting that program into R.
>>>>
>>>> The latest Windows version of Dasher, version 5.0.0 beta, works 
>>>> perfectly well with text editors (I use EditPad Pro), with 
>>>> Microsoft-like Office packages (I use SoftMaker Office), for 
>>>> writing e-mails (I use Mozilla Thunderbird), for writing on a web 
>>>> page (I use mostly Mozilla Firefox). It worked perfectly well with 
>>>> R up to version 4.1.3, but it does not work with R 4.2.0
>>>>
>>>> The latest Dasher 5.0.0 beta Windows installer and the source code 
>>>> can be found on this page below (please click on "Windows 
>>>> installer" and on "source code", just below the head "Dasher 5.0 
>>>> beta release"):
>>>>
>>>> https://github.com/dasher-project/dasher/releases
>>>>
>>>> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after 
>>>> installing Dasher one should go to Preferences > Application > 
>>>> Application Style.
>>>>
>>>> Currently, after the passing of Ada Majorek, the Dasher Project is 
>>>> being put forward by a group of people in England, but, it seems, 
>>>> at a very slow pace. They have announced the existence of a version 
>>>> 6 beta, but this is only an online instance of Dasher, there is no 
>>>> Windows installer, as far as I know. Their web page:
>>>>
>>>> https://dasher.acecentre.net/
>>>>
>>>> For me, and possibly for other users, the Dasher version 5.0.0 beta 
>>>> for Windows that is available works perfectly well, and allows me 
>>>> to use the computer with a proficiency that would be hardly 
>>>> possible otherwise.
>>>>
>>>> Here I request that the R developers take a look at this 
>>>> word-typing issue that happens with the new R 4.2.0 on Windows.
>>>>
>>>> As an R user (I work in ecological research), I can only thank the 
>>>> R team for this really wonderful piece of statistical software that 
>>>> you make freely available to us all.
>>>>
>>>> Regards,
>>>>
>>>> Paulo Barata
>>>>
>>>> (Rio de Janeiro - Brazil)
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From pb @end|ng |rom |n|o||nk@com@br  Wed May 18 13:41:19 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Wed, 18 May 2022 08:41:19 -0300
Subject: [Rd] 
 Writing in R // R 4.2.0 on Windows doesn't work with Dasher
In-Reply-To: <609d5703-67c8-5a61-b37e-ac7de8091830@gmail.com>
References: <787fa700-0ea6-9639-f123-5fd585d0e056@infolink.com.br>
 <65941da8-a180-5273-9554-fd51df5f6812@infolink.com.br>
 <1b89fdd2-9218-42df-5855-4017107d610f@gmail.com>
 <d859b36f-d2c5-5cde-0b04-ac3ff9afa9b6@infolink.com.br>
 <609d5703-67c8-5a61-b37e-ac7de8091830@gmail.com>
Message-ID: <cd7039d3-c51d-da3d-d6b9-16b456b8229a@infolink.com.br>


Dear Tomas,

Today, I installed R version 4.2.0 Patched (2022-05-17 r82371 ucrt) on 
my Windows 10 Professional. Dasher works perfectly well with that 
version of R.

Again, using Dasher, I tried special symbols, letters (including 
accented ones), digits, space, the "Enter" character and the "Backspace" 
movement, and I wrote a range of commands in the R language, everything 
worked well.

I could install some packages normally in that version of R, no problems.

I think that the Dasher issue has been solved. I will use this R 4.2.0 
Patched r82371 from now on.

Again, thank you very much, and all the other people who took part in 
this discussion, for all your attention.

Best regards,

Paulo

----------------------------------------------------------

On 17/05/2022 10:45, Tomas Kalibera wrote:
> Dear Paulo,
> 
> On 5/17/22 15:04, Paulo Barata wrote:
>>
>> Dear Tomas,
>>
>> Great news! I downloaded R-devel 2022-05-16 r82368 for Windows and 
>> installed it on my Windows 10 Professional. It works perfectly well 
>> with Dasher 5.0 beta!
>>
>> In Dasher, I tried all special characters like $ & | *, many small and 
>> capital letters, including some accented ones like ? ? ? ? that exist 
>> in Portuguese (and other languages, e.g. French (there are versions of 
>> Dasher for many languages)), all digits, space, the Enter character 
>> and the "Backspace" movement (to erase previously written characters), 
>> everything works well.
>>
>> Now, we can fully use Dasher in the R console.
> I am happy it works again, thanks for the testing and the report. I've 
> ported the fix to R-patched, which means it will appear in R 4.2.1.
>> It seems that we cannot yet normally install packages in this R-devel 
>> r82368. So I look forward to the day when a stable R 4.3.0 will be 
>> available. Meanwhile, for my ecological work, I can use R perfectly 
>> well with the versions 4.1.3 and 4.2.0 that I have here, so, from my 
>> viewpoint, this R 4.3.0 can take its time to come to light.
> 
> R 4.3.0 will be released probably around next April, but R 4.2.1 much 
> sooner (expect in 1-3 months, though this hasn't been scheduled, yet). 
> Before that, you should be able to use an R-patched snapshot build 
> available from
> 
> https://cran.r-project.org/bin/windows/base/rpatched.html
> 
> but only after the build is of release >= 82371 (which should happen by 
> tomorrow - the page shows the revision number). R-patched is R 4.2.0 
> with updates that will eventually become 4.2.1, so should be more stable 
> than R-devel is now (to become 4.3.0 around next April).
> 
> If you have any problems with installing packages in either version of 
> R, please report, so that someone can help or indeed if there is a bug, 
> it could be fixed.
> 
>> I can only thank you very much, and all the other people who took part 
>> in this discussion, for the quick fix to this issue.
> 
> Thank you for the report. Without it, the problem wouldn't have been fixed.
> 
> Best
> Tomas
> 
>>
>> Best regards,
>>
>> Paulo Barata
>>
>> (Rio de Janeiro - Brazil)
>>
>> ----------------------------------------------------------
>>
>> On 16/05/2022 14:08, Tomas Kalibera wrote:
>>>
>>> On 5/15/22 16:10, Paulo Barata wrote:
>>>>
>>>> To the R developers,
>>>>
>>>> I noticed today that R 4.2.0 responds to the "Enter" character of 
>>>> Dasher version 5.0.0 beta in "Direct Entry" mode. An "Enter" in 
>>>> Dasher causes the R prompt to jump to the next line, as an "Enter" 
>>>> should do.
>>>>
>>>> No other characters (letters, digits, special characters like + = & 
>>>> ~ | # $) are accepted by R 4.2.0 through Dasher.
>>>>
>>>> The "Enter" shows that, somehow, the communication between Dasher 
>>>> and R 4.2.0 through the Windows system is not completely curtailed.
>>>
>>> Dear Paulo,
>>>
>>> thanks for the report and thanks to all for the useful comments in 
>>> the followup discussion. I've committed a fix to R-devel, 82368, and 
>>> I would be grateful if you could test whether it fixes the problem 
>>> for you. I've tested it only on a small example which is using the 
>>> same method to insert keys to Rgui as Dasher does.
>>>
>>> The problem is caused by a limitation in GraphApp, a library used by 
>>> Rgui and included in the R distribution. GraphApp has two modes: 
>>> Unicode windows (with this limitation) and non-Unicode windows 
>>> (without it). GraphApp uses Unicode windows when running in a 
>>> multi-byte locale, and as of R 4.2, this is the case for all systems 
>>> on recent Windows where the native encoding is UTF-8. This means that 
>>> most likely R 4.1.3 didn't work with Dasher on systems running in a 
>>> multi-byte locale and that most likely R 4.2.0 would work with Dasher 
>>> on old Windows systems (where UTF-8 cannot be used as native encoding).
>>>
>>> Dasher uses SendInput/KEYEVENTF_UNICODE to inject text into Rgui, 
>>> which is fine as far as I can tell and should work. It didn't work, 
>>> because the Unicode windows didn't handle WM_CHAR nor 
>>> WM_KEYDOWN/WM_KEYUP for VK_PACKET. By design, Unicode windows get 
>>> input via WM_IME_COMPOSITION and WM_KEYDOWN, so I've added support 
>>> for VK_PACKET to WM_KEYDOWN (taking the logic in gdk as an example).
>>>
>>> I am cc'ing Jose as Tinn-R has a similar problem, though this patch 
>>> doesn't solve it.
>>>
>>> Best
>>> Tomas
>>>
>>>>
>>>> Regards,
>>>>
>>>> Paulo Barata
>>>>
>>>> ----------------------------------------------------------
>>>>
>>>> On 13/05/2022 16:44, Paulo Barata wrote:
>>>>> To the R developers,
>>>>>
>>>>> I would like to point out an issue that occurs with the new R 4.2.0 
>>>>> running on Windows; this is possibly related to the recent wide 
>>>>> changes made to the Windows port of R. The issue has to do with 
>>>>> writing of the R window.
>>>>>
>>>>> My computer runs on Windows 10 Professional 64-bit with all the 
>>>>> latest updates, and has a 4-core 8-thread Intel Xeon processor with 
>>>>> 32 Gb of RAM.
>>>>>
>>>>> I have some slight impairment in my hands, so for typing I avoid 
>>>>> using the computer keyboard as much as possible. For most of my 
>>>>> typing, I use the software Dasher, a kind of assistive technology 
>>>>> software. Dasher was created by the Inference Group led by 
>>>>> Professor David MacKay (died in 2016) at Cambridge University in 
>>>>> England. Later, Dasher was further developed by Ada Majorek (a 
>>>>> Google engineer, recently deceased).
>>>>>
>>>>> General information on Dasher and about the Dasher Project can be 
>>>>> found on the Inference Group page:
>>>>>
>>>>> http://www.inference.org.uk/dasher/
>>>>>
>>>>> An example of Dasher in action can be seen on this 2-minute YouTube 
>>>>> video:
>>>>>
>>>>> https://www.youtube.com/watch?v=nr3s4613DX8
>>>>>
>>>>> An one-hour YouTube video of a 2007 Google Talk by Professor MacKay 
>>>>> himself explaining the Dasher concept can be found here:
>>>>>
>>>>> https://www.youtube.com/watch?v=wpOxbesRNBc
>>>>>
>>>>> In the 2-minute video (the first YouTube address above), the 
>>>>> sentence written through Dasher, for actual use, needs to be copied 
>>>>> and then pasted into another software, say a text editor. But 
>>>>> Dasher also has a "Direct Entry" mode, where words typed are 
>>>>> entered directly on the screen of the text editor or other software 
>>>>> -- this is how I use Dasher to write on the R window.
>>>>>
>>>>> Using Dasher`s "Direct Entry" mode, for all effects, to write a 
>>>>> word through Dasher works exactly like writing the word through the 
>>>>> normal computer keyboard. Somehow (I do not know about system 
>>>>> programming), in "Direct Entry" mode, the output of Dasher is 
>>>>> understood by the computer as an input of the same nature as a 
>>>>> keyboard input.
>>>>>
>>>>> But this is the issue: until R 4.1.3, R accepted normally the 
>>>>> word-typing through Dasher. But R 4.2.0 (and R 4.2.0-patched build 
>>>>> r82348, 12 May 2022) does not accept Dasher anymore.
>>>>>
>>>>> So, for now, if I wish to use R during some extended interactive 
>>>>> section (say, for a first look at a complex data set), and if I 
>>>>> wish to use Dasher for this interactive session, then I have to use 
>>>>> R 4.1.3. For using R through programming, I can use the new R 
>>>>> 4.2.0, by writing the program with Dasher in my text editor, and 
>>>>> then pasting that program into R.
>>>>>
>>>>> The latest Windows version of Dasher, version 5.0.0 beta, works 
>>>>> perfectly well with text editors (I use EditPad Pro), with 
>>>>> Microsoft-like Office packages (I use SoftMaker Office), for 
>>>>> writing e-mails (I use Mozilla Thunderbird), for writing on a web 
>>>>> page (I use mostly Mozilla Firefox). It worked perfectly well with 
>>>>> R up to version 4.1.3, but it does not work with R 4.2.0
>>>>>
>>>>> The latest Dasher 5.0.0 beta Windows installer and the source code 
>>>>> can be found on this page below (please click on "Windows 
>>>>> installer" and on "source code", just below the head "Dasher 5.0 
>>>>> beta release"):
>>>>>
>>>>> https://github.com/dasher-project/dasher/releases
>>>>>
>>>>> To set Dasher 5.0.0 beta to the "Direct Entry" mode, after 
>>>>> installing Dasher one should go to Preferences > Application > 
>>>>> Application Style.
>>>>>
>>>>> Currently, after the passing of Ada Majorek, the Dasher Project is 
>>>>> being put forward by a group of people in England, but, it seems, 
>>>>> at a very slow pace. They have announced the existence of a version 
>>>>> 6 beta, but this is only an online instance of Dasher, there is no 
>>>>> Windows installer, as far as I know. Their web page:
>>>>>
>>>>> https://dasher.acecentre.net/
>>>>>
>>>>> For me, and possibly for other users, the Dasher version 5.0.0 beta 
>>>>> for Windows that is available works perfectly well, and allows me 
>>>>> to use the computer with a proficiency that would be hardly 
>>>>> possible otherwise.
>>>>>
>>>>> Here I request that the R developers take a look at this 
>>>>> word-typing issue that happens with the new R 4.2.0 on Windows.
>>>>>
>>>>> As an R user (I work in ecological research), I can only thank the 
>>>>> R team for this really wonderful piece of statistical software that 
>>>>> you make freely available to us all.
>>>>>
>>>>> Regards,
>>>>>
>>>>> Paulo Barata
>>>>>
>>>>> (Rio de Janeiro - Brazil)
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From pr@@@nth@dh@n@p@| @end|ng |rom @t@te@uto@com  Wed May 18 15:22:48 2022
From: pr@@@nth@dh@n@p@| @end|ng |rom @t@te@uto@com (Prasanth Dhanapal)
Date: Wed, 18 May 2022 09:22:48 -0400
Subject: [Rd] R for Windows - Patch My PC
In-Reply-To: <CABBGpOgATfrmAG96w1abqzzsUA119Wobo7d2_+zQKzpUE2SJRg@mail.gmail.com>
References: <IA1PR12MB6556BA5832D9CC25B113FB9FB3CF9@IA1PR12MB6556.namprd12.prod.outlook.com>
 <CABBGpOgATfrmAG96w1abqzzsUA119Wobo7d2_+zQKzpUE2SJRg@mail.gmail.com>
Message-ID: <CABBGpOjq2oGrX-T=1EUEmoqp28ehv9cAA_m1k16FOr=bUEHyGw@mail.gmail.com>

Hey Liviu,

Have not got any response from the vendor yet. Any information from your
side?

Thanks!

On Mon, May 16, 2022 at 10:37 AM Prasanth Dhanapal <
prasanth.dhanapal at stateauto.com> wrote:

> Hello,
>
> This is Prasanth Dhanapal with StateAuto Insurance Companies.
>
> We have been informed by PatchMyPC that the digital signature of the R for
> Windows 4.2.0 installer hasn't been signed yet since it was released on
> 22nd April, '22. Because of this delay, it has not been updated on the PMPC
> catalog yet.
> Could you let us know when we can expect this to happen? We would like to
> get this version sooner as this is the compatible version for R tools 4.2.
>
> Thank you!
>
> On Mon, May 16, 2022 at 2:13 AM Liviu Barbat <liviu at patchmypc.com> wrote:
>
>> Hello Prasanth,
>>
>> Just as an FYI - we still haven't received any response from the vendor.
>> However, if you would like to inquire with them as well about the digital
>> signature of their installer, just send them an Email:
>> r-devel at r-project.org
>>
>> Thanks,
>>
>> Liviu Barbat ? Customer Success Engineer
>> Rate Your Experience: *Great*
>> <https://patchmypc.com/customer-feedback-Liviu> | *Good*
>> <https://patchmypc.com/customer-feedback-Liviu> | *Poor*
>> <https://patchmypc.com/customer-feedback-Liviu>
>> Learn More: *Live Demo* <https://patchmypc.com/schedule-live-demo> | *Setup
>> Call* <https://patchmypc.com/schedule-setup-call> | *Review Call
>> <https://patchmypc.com/environment-review-call>* | *Trial*
>> <https://patchmypc.com/free-trial> | *Quote*
>> <https://patchmypc.com/request-quote>
>> Follow Us: *Twitter <https://patchmypc.com/twitter>* | *LinkedIn
>> <https://patchmypc.com/linkedin>*
>> Sales and Support: + 1-866-343-3083
>> [image: Sent from Front]
>>
>
>
> --
>
> *Prasanth Dhanapal* | Infrastructure Engineer
> *State Auto Insurance Companies*
> *E* | prasanth.dhanapal at stateauto.com
>
> <https://www.stateauto.com/state-auto-americas-best-insurance-companies>
>


-- 

*Prasanth Dhanapal* | Infrastructure Engineer
*State Auto Insurance Companies*
*E* | prasanth.dhanapal at stateauto.com

<https://www.stateauto.com/state-auto-americas-best-insurance-companies>

	[[alternative HTML version deleted]]


From tob|@@@@choch @end|ng |rom |hnw@ch  Thu May 19 20:37:30 2022
From: tob|@@@@choch @end|ng |rom |hnw@ch (Tobias Schoch)
Date: Thu, 19 May 2022 18:37:30 +0000
Subject: [Rd] Windows Rgui.exe 4.2.0: Call of txtProgressBar() slows down
 dramatically after subsequent calls
Message-ID: <ZRAP278MB046245BD6D9F6D7BBAFBFEAAF8D09@ZRAP278MB0462.CHEP278.PROD.OUTLOOK.COM>

The issue appears in Rgui.exe version 4.2.0 (called "new" version; see bottom). The issue does NOT appear with Rterm.exe (same R version).

I provide a minimal example (foo) below. If I run function foo 3 times in a row, the execution time increases considerably (although it should not).

1st foo call: 5 seconds
2nd foo call: 13 seconds
3rd foo call: 20 seconds

The execution time keeps increasing when I call foo more often. In addition, Rgui.exe becomes laggy in taking input from the keyboard.

Sometimes, but rarely, I observe that Rgui.exe terminates with "Error: C stack usage is too close to the limit". Unfortunately, I cannot reproduce the stack error consistently.

On the "old" Rgui.exe version 4.1.2, execution time stays roughly constant over consecutive calls of foo (as expected). Unfortunately, I do not have a running 4.1.3 version; thus, I cannot tell how it behaves there.

Do you have any clue why this happens?

Kind regards,
Tobias


#------------------------------
# minimal working example: interestingly, the issue does not occur
# when 'style = 1' in txtProgressBar()
foo <- function(n)
{
    p_bar <- txtProgressBar(style = 3)
    for (i in 1:n) {
        Sys.sleep(0.01)
        setTxtProgressBar(p_bar, i / n)
    }
    close(p_bar)
}
# 1st call
system.time(foo(100))
# 2nd call
system.time(foo(100))
# 3rd call
system.time(foo(100))
#------------------------------


My R versions: 

"Old" Rgui.exe
    R version 4.1.2 (2021-11-01)
    Platform: x86_64-w64-mingw32/x64 (64-bit)
    Running under: Windows 10 x64 (build 19044)

"New" Rgui.exe
    R version 4.2.0 (2022-04-22 ucrt)
    Platform: x86_64-w64-mingw32/x64 (64-bit)
    Running under: Windows 10 x64 (build 19044)


------------------------------------------------------------------
Fachhochschule Nordwestschweiz FHNW 
Hochschule f?r Wirtschaft 
Institute for Competitiveness and Communication
Empirische Wirtschafts- und Sozialforschung

Prof. Dr. Tobias Schoch
Riggenbachstrasse 16
CH-4600 Olten
Schweiz / Switzerland
------------------------------------------------------------------
T +41 62 957 21 02
Mail tobias.schoch at fhnw.ch
http://www.fhnw.ch/de/personen/tobias-schoch


From pb @end|ng |rom |n|o||nk@com@br  Thu May 19 22:34:35 2022
From: pb @end|ng |rom |n|o||nk@com@br (Paulo Barata)
Date: Thu, 19 May 2022 17:34:35 -0300
Subject: [Rd] 
 Windows Rgui.exe 4.2.0: Call of txtProgressBar() slows down
 dramatically after subsequent calls
In-Reply-To: <ZRAP278MB046245BD6D9F6D7BBAFBFEAAF8D09@ZRAP278MB0462.CHEP278.PROD.OUTLOOK.COM>
References: <ZRAP278MB046245BD6D9F6D7BBAFBFEAAF8D09@ZRAP278MB0462.CHEP278.PROD.OUTLOOK.COM>
Message-ID: <1ebd33b2-17a0-b69e-a063-f753a99acc31@infolink.com.br>


There runs of Tobias' foo function on different versions of R that I 
have installed here.

R version 4.1.1 Patched (2021-09-30 r80997)
elapsed time of three trials: 1.31 / 1.33 / 1.35

R version 4.1.2 Patched (2021-11-02 r81131)
elapsed time of three trials: 1.34 / 1.34 / 1.34

R version 4.1.3 Patched (2022-03-10 r81878)
elapsed time of three trials: 1.33 / 1.34 / 1.37

R version 4.2.0 Patched (2022-05-17 r82371 ucrt)
elapsed time of three trials: 7.14 / 17.56 / 27.21

Platform is always: x86_64-w64-mingw32/x64 (64-bit)
RGui.exe running on Windows 10 Professional 64-bit (build 19044.1706)

Not only, as Tobias has shown, there is an increasing time among the 
three trials in R 4.2.0 Patched, but also the average time for each of 
the 4.1.X Patched versions (with nearly constant time each) is well 
smaller than the first trial with R 4.2.0 Patched.

Regards,

Paulo Barata

(Rio de Janeiro - Brazil)

----------------------------------------------------------

On 19/05/2022 15:37, Tobias Schoch wrote:
> The issue appears in Rgui.exe version 4.2.0 (called "new" version; see bottom). The issue does NOT appear with Rterm.exe (same R version).
> 
> I provide a minimal example (foo) below. If I run function foo 3 times in a row, the execution time increases considerably (although it should not).
> 
> 1st foo call: 5 seconds
> 2nd foo call: 13 seconds
> 3rd foo call: 20 seconds
> 
> The execution time keeps increasing when I call foo more often. In addition, Rgui.exe becomes laggy in taking input from the keyboard.
> 
> Sometimes, but rarely, I observe that Rgui.exe terminates with "Error: C stack usage is too close to the limit". Unfortunately, I cannot reproduce the stack error consistently.
> 
> On the "old" Rgui.exe version 4.1.2, execution time stays roughly constant over consecutive calls of foo (as expected). Unfortunately, I do not have a running 4.1.3 version; thus, I cannot tell how it behaves there.
> 
> Do you have any clue why this happens?
> 
> Kind regards,
> Tobias
> 
> 
> #------------------------------
> # minimal working example: interestingly, the issue does not occur
> # when 'style = 1' in txtProgressBar()
> foo <- function(n)
> {
>      p_bar <- txtProgressBar(style = 3)
>      for (i in 1:n) {
>          Sys.sleep(0.01)
>          setTxtProgressBar(p_bar, i / n)
>      }
>      close(p_bar)
> }
> # 1st call
> system.time(foo(100))
> # 2nd call
> system.time(foo(100))
> # 3rd call
> system.time(foo(100))
> #------------------------------
> 
> 
> My R versions:
> 
> "Old" Rgui.exe
>      R version 4.1.2 (2021-11-01)
>      Platform: x86_64-w64-mingw32/x64 (64-bit)
>      Running under: Windows 10 x64 (build 19044)
> 
> "New" Rgui.exe
>      R version 4.2.0 (2022-04-22 ucrt)
>      Platform: x86_64-w64-mingw32/x64 (64-bit)
>      Running under: Windows 10 x64 (build 19044)
> 
> 
> ------------------------------------------------------------------
> Fachhochschule Nordwestschweiz FHNW
> Hochschule f?r Wirtschaft
> Institute for Competitiveness and Communication
> Empirische Wirtschafts- und Sozialforschung
> 
> Prof. Dr. Tobias Schoch
> Riggenbachstrasse 16
> CH-4600 Olten
> Schweiz / Switzerland
> ------------------------------------------------------------------
> T +41 62 957 21 02
> Mail tobias.schoch at fhnw.ch
> http://www.fhnw.ch/de/personen/tobias-schoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu May 19 23:18:46 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 19 May 2022 23:18:46 +0200
Subject: [Rd] 
 Windows Rgui.exe 4.2.0: Call of txtProgressBar() slows down
 dramatically after subsequent calls
In-Reply-To: <1ebd33b2-17a0-b69e-a063-f753a99acc31@infolink.com.br>
References: <ZRAP278MB046245BD6D9F6D7BBAFBFEAAF8D09@ZRAP278MB0462.CHEP278.PROD.OUTLOOK.COM>
 <1ebd33b2-17a0-b69e-a063-f753a99acc31@infolink.com.br>
Message-ID: <f7b7b957-4098-a29b-a08e-9ef59f39eecf@gmail.com>


On 5/19/22 22:34, Paulo Barata wrote:
>
> There runs of Tobias' foo function on different versions of R that I 
> have installed here.
>
> R version 4.1.1 Patched (2021-09-30 r80997)
> elapsed time of three trials: 1.31 / 1.33 / 1.35
>
> R version 4.1.2 Patched (2021-11-02 r81131)
> elapsed time of three trials: 1.34 / 1.34 / 1.34
>
> R version 4.1.3 Patched (2022-03-10 r81878)
> elapsed time of three trials: 1.33 / 1.34 / 1.37
>
> R version 4.2.0 Patched (2022-05-17 r82371 ucrt)
> elapsed time of three trials: 7.14 / 17.56 / 27.21
>
> Platform is always: x86_64-w64-mingw32/x64 (64-bit)
> RGui.exe running on Windows 10 Professional 64-bit (build 19044.1706)
>
> Not only, as Tobias has shown, there is an increasing time among the 
> three trials in R 4.2.0 Patched, but also the average time for each of 
> the 4.1.X Patched versions (with nearly constant time each) is well 
> smaller than the first trial with R 4.2.0 Patched.

Thanks, yes, I can reproduce the problem. Changing the implementation of 
the progress bar to print "\n" instead of "\r" makes the problem go away 
(and type=2 and 3 have the problem and use \r, while type=1 doesn't have 
the problem nor uses \r). Perhaps the carriage return is not interpreted 
correctly and the line somehow internally keeps the previously printed 
characters, always adding the new ones at the end. That is also 
consistent with that the time is increasing linearly. I will investigate 
further.

Best
Tomas

>
> Regards,
>
> Paulo Barata
>
> (Rio de Janeiro - Brazil)
>
> ----------------------------------------------------------
>
> On 19/05/2022 15:37, Tobias Schoch wrote:
>> The issue appears in Rgui.exe version 4.2.0 (called "new" version; 
>> see bottom). The issue does NOT appear with Rterm.exe (same R version).
>>
>> I provide a minimal example (foo) below. If I run function foo 3 
>> times in a row, the execution time increases considerably (although 
>> it should not).
>>
>> 1st foo call: 5 seconds
>> 2nd foo call: 13 seconds
>> 3rd foo call: 20 seconds
>>
>> The execution time keeps increasing when I call foo more often. In 
>> addition, Rgui.exe becomes laggy in taking input from the keyboard.
>>
>> Sometimes, but rarely, I observe that Rgui.exe terminates with 
>> "Error: C stack usage is too close to the limit". Unfortunately, I 
>> cannot reproduce the stack error consistently.
>>
>> On the "old" Rgui.exe version 4.1.2, execution time stays roughly 
>> constant over consecutive calls of foo (as expected). Unfortunately, 
>> I do not have a running 4.1.3 version; thus, I cannot tell how it 
>> behaves there.
>>
>> Do you have any clue why this happens?
>>
>> Kind regards,
>> Tobias
>>
>>
>> #------------------------------
>> # minimal working example: interestingly, the issue does not occur
>> # when 'style = 1' in txtProgressBar()
>> foo <- function(n)
>> {
>> ???? p_bar <- txtProgressBar(style = 3)
>> ???? for (i in 1:n) {
>> ???????? Sys.sleep(0.01)
>> ???????? setTxtProgressBar(p_bar, i / n)
>> ???? }
>> ???? close(p_bar)
>> }
>> # 1st call
>> system.time(foo(100))
>> # 2nd call
>> system.time(foo(100))
>> # 3rd call
>> system.time(foo(100))
>> #------------------------------
>>
>>
>> My R versions:
>>
>> "Old" Rgui.exe
>> ???? R version 4.1.2 (2021-11-01)
>> ???? Platform: x86_64-w64-mingw32/x64 (64-bit)
>> ???? Running under: Windows 10 x64 (build 19044)
>>
>> "New" Rgui.exe
>> ???? R version 4.2.0 (2022-04-22 ucrt)
>> ???? Platform: x86_64-w64-mingw32/x64 (64-bit)
>> ???? Running under: Windows 10 x64 (build 19044)
>>
>>
>> ------------------------------------------------------------------
>> Fachhochschule Nordwestschweiz FHNW
>> Hochschule f?r Wirtschaft
>> Institute for Competitiveness and Communication
>> Empirische Wirtschafts- und Sozialforschung
>>
>> Prof. Dr. Tobias Schoch
>> Riggenbachstrasse 16
>> CH-4600 Olten
>> Schweiz / Switzerland
>> ------------------------------------------------------------------
>> T +41 62 957 21 02
>> Mail tobias.schoch at fhnw.ch
>> http://www.fhnw.ch/de/personen/tobias-schoch
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Fri May 20 00:01:39 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Thu, 19 May 2022 22:01:39 +0000
Subject: [Rd] Rgui.exe: bug associated with non-ASCII characters
Message-ID: <em548fa1a0-66b6-4b8f-851d-7ab68cb3be85@dell>

Hello,

R devel R82368

1- Open Rgui.exe
2- New script (Rgui's built-in editor)
3- Type the below

v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')

4- Select the entire line and try to send using the shortcut CTRL+R

 > v1 <- ('p?', 'p?', 'p?', 'p?', '?')
Error: unexpected ',' in "v1 <- ('p?',"
 >

5- If you try to select the entire text (CTRL+C) and to paste (CTRL+V) 
into the console:

 > v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
Error: unexpected ',' in "v1 <- ('p?',"
 >

i.e. the same result,

6- Place the cursor at the beginning of the line and try to send it via 
CTRL+R

 > v1 <- ('p
+

We have a problem there, don't we?

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

	[[alternative HTML version deleted]]


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Fri May 20 00:55:17 2022
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (Brodie Gaslam)
Date: Thu, 19 May 2022 22:55:17 +0000 (UTC)
Subject: [Rd] Rgui.exe: bug associated with non-ASCII characters
In-Reply-To: <em548fa1a0-66b6-4b8f-851d-7ab68cb3be85@dell>
References: <em548fa1a0-66b6-4b8f-851d-7ab68cb3be85@dell>
Message-ID: <1030932979.579322.1653000917450@mail.yahoo.com>

Is it possible you intended to use:

c('p?', 'p?', 'p?', 'p?', 'p?')

instead of:

('p?', 'p?', 'p?', 'p?', 'p?')

Note the missing `c` in the second one.? That's just not a valid R expression.

I don't use Rgui but if I just type (1,2) in my R terminal I get the same error.

Best,

B.





On Thursday, May 19, 2022, 06:01:40 PM EDT, jcfaria <joseclaudio.faria at gmail.com> wrote: 





Hello,

R devel R82368

1- Open Rgui.exe
2- New script (Rgui's built-in editor)
3- Type the below

v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')

4- Select the entire line and try to send using the shortcut CTRL+R

> v1 <- ('p?', 'p?', 'p?', 'p?', '?')
Error: unexpected ',' in "v1 <- ('p?',"
>

5- If you try to select the entire text (CTRL+C) and to paste (CTRL+V) 
into the console:

> v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
Error: unexpected ',' in "v1 <- ('p?',"
>

i.e. the same result,

6- Place the cursor at the beginning of the line and try to send it via 
CTRL+R

> v1 <- ('p
+

We have a problem there, don't we?

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

??? [[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From @|mon@urb@nek @end|ng |rom R-project@org  Fri May 20 01:50:20 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 20 May 2022 11:50:20 +1200
Subject: [Rd] Rgui.exe: bug associated with non-ASCII characters
In-Reply-To: <1030932979.579322.1653000917450@mail.yahoo.com>
References: <em548fa1a0-66b6-4b8f-851d-7ab68cb3be85@dell>
 <1030932979.579322.1653000917450@mail.yahoo.com>
Message-ID: <6B53D168-D21D-4AF6-ADE3-5347325D3F0A@R-project.org>

I think it was just a really confusing report (it took me a while to parse it), but I suspect the issue the poster tried to raise was the fact that <Ctrl><R> without selection apparently submits an incomplete line if non-ASCII chars are involved. All the steps 1-5 were correct behaviour, but 6 (submitting a line without selection) was not since it truncated the line at the non-ASCII character.

Cheers,
Simon


> On 20/05/2022, at 10:55 AM, Brodie Gaslam via R-devel <r-devel at r-project.org> wrote:
> 
> Is it possible you intended to use:
> 
> c('p?', 'p?', 'p?', 'p?', 'p?')
> 
> instead of:
> 
> ('p?', 'p?', 'p?', 'p?', 'p?')
> 
> Note the missing `c` in the second one.  That's just not a valid R expression.
> 
> I don't use Rgui but if I just type (1,2) in my R terminal I get the same error.
> 
> Best,
> 
> B.
> 
> 
> 
> 
> 
> On Thursday, May 19, 2022, 06:01:40 PM EDT, jcfaria <joseclaudio.faria at gmail.com> wrote: 
> 
> 
> 
> 
> 
> Hello,
> 
> R devel R82368
> 
> 1- Open Rgui.exe
> 2- New script (Rgui's built-in editor)
> 3- Type the below
> 
> v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
> 
> 4- Select the entire line and try to send using the shortcut CTRL+R
> 
>> v1 <- ('p?', 'p?', 'p?', 'p?', '?')
> Error: unexpected ',' in "v1 <- ('p?',"
>> 
> 
> 5- If you try to select the entire text (CTRL+C) and to paste (CTRL+V) 
> into the console:
> 
>> v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
> Error: unexpected ',' in "v1 <- ('p?',"
>> 
> 
> i.e. the same result,
> 
> 6- Place the cursor at the beginning of the line and try to send it via 
> CTRL+R
> 
>> v1 <- ('p
> +
> 
> We have a problem there, don't we?
> 
> Best,
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> Jose Claudio Faria
> UESC/DCET/Brasil
> joseclaudio.faria at gmail.com
> Telefones:
> 55(73)3680.5545 - UESC
> 55(73)99966.9100 - VIVO
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> If you have software to deal with statistics, you have arms,
> if you have good software, you have arms and legs,
> if you have software like R, you have arms, legs and wings...
> the height of your flight depends only on you.
> 
>     [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Fri May 20 03:36:49 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Fri, 20 May 2022 01:36:49 +0000
Subject: [Rd] Rgui.exe: bug associated with non-ASCII characters
In-Reply-To: <1030932979.579322.1653000917450@mail.yahoo.com>
References: <em548fa1a0-66b6-4b8f-851d-7ab68cb3be85@dell>
 <1030932979.579322.1653000917450@mail.yahoo.com>
Message-ID: <em6eec9a06-ad9c-4819-bab4-1e20a1f6abba@dell>

Sorry, I noticed the bug but I really forgot to add the "c", for combine 
arguments, when I wrote the email.

In fact, adding "c" R accepts sending the selection and copy/paste, but 
it does not accept the sending with the cursor at the beginning of the 
line.

v1 <- c('p?', 'p?', 'p?', 'p?', 'p?')

Place the cursor at the beginning of the line and try to send it via 
CTRL+R

 > v1 <- c('p
   +

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

------ Mensagem original ------
De: "Brodie Gaslam" <brodie.gaslam at yahoo.com>
Para: "r-devel at r-project.org" <r-devel at r-project.org>; "jcfaria" 
<joseclaudio.faria at gmail.com>
Enviado(s): 19/05/2022 19:55:17
Assunto: Re: [Rd] Rgui.exe: bug associated with non-ASCII characters

>Is it possible you intended to use:
>
>c('p?', 'p?', 'p?', 'p?', 'p?')
>
>instead of:
>
>('p?', 'p?', 'p?', 'p?', 'p?')
>
>Note the missing `c` in the second one.  That's just not a valid R expression.
>
>I don't use Rgui but if I just type (1,2) in my R terminal I get the same error.
>
>Best,
>
>B.
>
>
>
>
>
>On Thursday, May 19, 2022, 06:01:40 PM EDT, jcfaria <joseclaudio.faria at gmail.com> wrote:
>
>
>
>
>
>Hello,
>
>R devel R82368
>
>1- Open Rgui.exe
>2- New script (Rgui's built-in editor)
>3- Type the below
>
>v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
>
>4- Select the entire line and try to send using the shortcut CTRL+R
>
>>  v1 <- ('p?', 'p?', 'p?', 'p?', '?')
>Error: unexpected ',' in "v1 <- ('p?',"
>>
>
>5- If you try to select the entire text (CTRL+C) and to paste (CTRL+V)
>into the console:
>
>>  v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
>Error: unexpected ',' in "v1 <- ('p?',"
>>
>
>i.e. the same result,
>
>6- Place the cursor at the beginning of the line and try to send it via
>CTRL+R
>
>>  v1 <- ('p
>+
>
>We have a problem there, don't we?
>
>Best,
>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>Jose Claudio Faria
>UESC/DCET/Brasil
>joseclaudio.faria at gmail.com
>Telefones:
>55(73)3680.5545 - UESC
>55(73)99966.9100 - VIVO
>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>If you have software to deal with statistics, you have arms,
>if you have good software, you have arms and legs,
>if you have software like R, you have arms, legs and wings...
>the height of your flight depends only on you.
>
>     [[alternative HTML version deleted]]
>
>______________________________________________
>R-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri May 20 17:49:26 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 20 May 2022 17:49:26 +0200
Subject: [Rd] 
 Windows Rgui.exe 4.2.0: Call of txtProgressBar() slows down
 dramatically after subsequent calls
In-Reply-To: <f7b7b957-4098-a29b-a08e-9ef59f39eecf@gmail.com>
References: <ZRAP278MB046245BD6D9F6D7BBAFBFEAAF8D09@ZRAP278MB0462.CHEP278.PROD.OUTLOOK.COM>
 <1ebd33b2-17a0-b69e-a063-f753a99acc31@infolink.com.br>
 <f7b7b957-4098-a29b-a08e-9ef59f39eecf@gmail.com>
Message-ID: <3b626fa0-0156-4b52-cf2d-b85e3c205921@gmail.com>


On 5/19/22 23:18, Tomas Kalibera wrote:
>
> On 5/19/22 22:34, Paulo Barata wrote:
>>
>> There runs of Tobias' foo function on different versions of R that I 
>> have installed here.
>>
>> R version 4.1.1 Patched (2021-09-30 r80997)
>> elapsed time of three trials: 1.31 / 1.33 / 1.35
>>
>> R version 4.1.2 Patched (2021-11-02 r81131)
>> elapsed time of three trials: 1.34 / 1.34 / 1.34
>>
>> R version 4.1.3 Patched (2022-03-10 r81878)
>> elapsed time of three trials: 1.33 / 1.34 / 1.37
>>
>> R version 4.2.0 Patched (2022-05-17 r82371 ucrt)
>> elapsed time of three trials: 7.14 / 17.56 / 27.21
>>
>> Platform is always: x86_64-w64-mingw32/x64 (64-bit)
>> RGui.exe running on Windows 10 Professional 64-bit (build 19044.1706)
>>
>> Not only, as Tobias has shown, there is an increasing time among the 
>> three trials in R 4.2.0 Patched, but also the average time for each 
>> of the 4.1.X Patched versions (with nearly constant time each) is 
>> well smaller than the first trial with R 4.2.0 Patched.
>
> Thanks, yes, I can reproduce the problem. Changing the implementation 
> of the progress bar to print "\n" instead of "\r" makes the problem go 
> away (and type=2 and 3 have the problem and use \r, while type=1 
> doesn't have the problem nor uses \r). Perhaps the carriage return is 
> not interpreted correctly and the line somehow internally keeps the 
> previously printed characters, always adding the new ones at the end. 
> That is also consistent with that the time is increasing linearly. I 
> will investigate further.

Now fixed in R-devel and R-patched (revision >= 82389 of R-patched).

It turns out that Rgui always keeps a buffer of all the text including 
the \r, but the overhead was poor performance of computation of 
character widths in a multi-byte locale, which is now improved. I've 
also changed the memory allocation in the relevant code to use the heap 
instead of the stack, which should fix the issue with stack overflow 
Tobias experienced while testing.

The progress bar/printing would be more efficient if the line buffers in 
Rgui could keep already pre-processed \r(s), but that would require a 
somewhat bigger change, and hopefully it won't be needed.

Thanks a lot for the report and the nice small reproducible example.

Best
Tomas

>
> Best
> Tomas
>
>>
>> Regards,
>>
>> Paulo Barata
>>
>> (Rio de Janeiro - Brazil)
>>
>> ----------------------------------------------------------
>>
>> On 19/05/2022 15:37, Tobias Schoch wrote:
>>> The issue appears in Rgui.exe version 4.2.0 (called "new" version; 
>>> see bottom). The issue does NOT appear with Rterm.exe (same R version).
>>>
>>> I provide a minimal example (foo) below. If I run function foo 3 
>>> times in a row, the execution time increases considerably (although 
>>> it should not).
>>>
>>> 1st foo call: 5 seconds
>>> 2nd foo call: 13 seconds
>>> 3rd foo call: 20 seconds
>>>
>>> The execution time keeps increasing when I call foo more often. In 
>>> addition, Rgui.exe becomes laggy in taking input from the keyboard.
>>>
>>> Sometimes, but rarely, I observe that Rgui.exe terminates with 
>>> "Error: C stack usage is too close to the limit". Unfortunately, I 
>>> cannot reproduce the stack error consistently.
>>>
>>> On the "old" Rgui.exe version 4.1.2, execution time stays roughly 
>>> constant over consecutive calls of foo (as expected). Unfortunately, 
>>> I do not have a running 4.1.3 version; thus, I cannot tell how it 
>>> behaves there.
>>>
>>> Do you have any clue why this happens?
>>>
>>> Kind regards,
>>> Tobias
>>>
>>>
>>> #------------------------------
>>> # minimal working example: interestingly, the issue does not occur
>>> # when 'style = 1' in txtProgressBar()
>>> foo <- function(n)
>>> {
>>> ???? p_bar <- txtProgressBar(style = 3)
>>> ???? for (i in 1:n) {
>>> ???????? Sys.sleep(0.01)
>>> ???????? setTxtProgressBar(p_bar, i / n)
>>> ???? }
>>> ???? close(p_bar)
>>> }
>>> # 1st call
>>> system.time(foo(100))
>>> # 2nd call
>>> system.time(foo(100))
>>> # 3rd call
>>> system.time(foo(100))
>>> #------------------------------
>>>
>>>
>>> My R versions:
>>>
>>> "Old" Rgui.exe
>>> ???? R version 4.1.2 (2021-11-01)
>>> ???? Platform: x86_64-w64-mingw32/x64 (64-bit)
>>> ???? Running under: Windows 10 x64 (build 19044)
>>>
>>> "New" Rgui.exe
>>> ???? R version 4.2.0 (2022-04-22 ucrt)
>>> ???? Platform: x86_64-w64-mingw32/x64 (64-bit)
>>> ???? Running under: Windows 10 x64 (build 19044)
>>>
>>>
>>> ------------------------------------------------------------------
>>> Fachhochschule Nordwestschweiz FHNW
>>> Hochschule f?r Wirtschaft
>>> Institute for Competitiveness and Communication
>>> Empirische Wirtschafts- und Sozialforschung
>>>
>>> Prof. Dr. Tobias Schoch
>>> Riggenbachstrasse 16
>>> CH-4600 Olten
>>> Schweiz / Switzerland
>>> ------------------------------------------------------------------
>>> T +41 62 957 21 02
>>> Mail tobias.schoch at fhnw.ch
>>> http://www.fhnw.ch/de/personen/tobias-schoch
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri May 20 20:50:16 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 20 May 2022 20:50:16 +0200
Subject: [Rd] Rgui.exe: bug associated with non-ASCII characters
In-Reply-To: <em6eec9a06-ad9c-4819-bab4-1e20a1f6abba@dell>
References: <em548fa1a0-66b6-4b8f-851d-7ab68cb3be85@dell>
 <1030932979.579322.1653000917450@mail.yahoo.com>
 <em6eec9a06-ad9c-4819-bab4-1e20a1f6abba@dell>
Message-ID: <bc0e132a-a5c3-7481-1a76-dba7c46e8e36@gmail.com>


On 5/20/22 03:36, jcfaria wrote:
> Sorry, I noticed the bug but I really forgot to add the "c", for 
> combine arguments, when I wrote the email.
>
> In fact, adding "c" R accepts sending the selection and copy/paste, 
> but it does not accept the sending with the cursor at the beginning of 
> the line.
>
> v1 <- c('p?', 'p?', 'p?', 'p?', 'p?')
>
> Place the cursor at the beginning of the line and try to send it via 
> CTRL+R
>
> > v1 <- c('p
> ? +
>
Thanks, I can reproduce the problem. Rgui uses via GraphApp an ANSI 
RichEdit window to implement the script editor. What happens is that the 
text obtained from that window is in Latin 1 encoding (on my machine, 
probably also on yours), even though Rgui runs in UTF-8 via the active 
code page specified in the manifest file, which I find rather 
surprising. You can see that even in R 4.1, you cannot use characters 
not representable in your native/ANSI encoding in the editor window. 
But, now you cannot even use characters with different representation 
between your ANSI code page and UTF-8 encoding (so only ASCII is safe). 
I will investigate further how this could be fixed, it may not be 
completely trivial as there are also other operations on the content of 
the window, and it would really be nice if the RichEdit window could be 
made to respect the active code page.

Best
Tomas


> Best,
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> Jose Claudio Faria
> UESC/DCET/Brasil
> joseclaudio.faria at gmail.com
> Telefones:
> 55(73)3680.5545 - UESC
> 55(73)99966.9100 - VIVO
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> If you have software to deal with statistics, you have arms,
> if you have good software, you have arms and legs,
> if you have software like R, you have arms, legs and wings...
> the height of your flight depends only on you.
>
> ------ Mensagem original ------
> De: "Brodie Gaslam" <brodie.gaslam at yahoo.com>
> Para: "r-devel at r-project.org" <r-devel at r-project.org>; "jcfaria" 
> <joseclaudio.faria at gmail.com>
> Enviado(s): 19/05/2022 19:55:17
> Assunto: Re: [Rd] Rgui.exe: bug associated with non-ASCII characters
>
>> Is it possible you intended to use:
>>
>> c('p?', 'p?', 'p?', 'p?', 'p?')
>>
>> instead of:
>>
>> ('p?', 'p?', 'p?', 'p?', 'p?')
>>
>> Note the missing `c` in the second one.? That's just not a valid R 
>> expression.
>>
>> I don't use Rgui but if I just type (1,2) in my R terminal I get the 
>> same error.
>>
>> Best,
>>
>> B.
>>
>>
>>
>>
>>
>> On Thursday, May 19, 2022, 06:01:40 PM EDT, jcfaria 
>> <joseclaudio.faria at gmail.com> wrote:
>>
>>
>>
>>
>>
>> Hello,
>>
>> R devel R82368
>>
>> 1- Open Rgui.exe
>> 2- New script (Rgui's built-in editor)
>> 3- Type the below
>>
>> v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
>>
>> 4- Select the entire line and try to send using the shortcut CTRL+R
>>
>>> ?v1 <- ('p?', 'p?', 'p?', 'p?', '?')
>> Error: unexpected ',' in "v1 <- ('p?',"
>>>
>>
>> 5- If you try to select the entire text (CTRL+C) and to paste (CTRL+V)
>> into the console:
>>
>>> ?v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
>> Error: unexpected ',' in "v1 <- ('p?',"
>>>
>>
>> i.e. the same result,
>>
>> 6- Place the cursor at the beginning of the line and try to send it via
>> CTRL+R
>>
>>> ?v1 <- ('p
>> +
>>
>> We have a problem there, don't we?
>>
>> Best,
>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>> Jose Claudio Faria
>> UESC/DCET/Brasil
>> joseclaudio.faria at gmail.com
>> Telefones:
>> 55(73)3680.5545 - UESC
>> 55(73)99966.9100 - VIVO
>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>> If you have software to deal with statistics, you have arms,
>> if you have good software, you have arms and legs,
>> if you have software like R, you have arms, legs and wings...
>> the height of your flight depends only on you.
>>
>> ??? [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd @end|ng |rom deb|@n@org  Sun May 22 02:08:21 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 21 May 2022 19:08:21 -0500
Subject: [Rd] CRAN webserver down
Message-ID: <25225.32501.109208.97418@rob.eddelbuettel.com>


>From what I can tell from there, the CRAN webserver appears to be down so no
cran.r-project.org or www.r-project.org. It appears that other ports respond
so it may just be in need of restart of the apache service. I am sure someone
will get to it in due course. Until then we have the mirrors.

Best,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From r|p|ey @end|ng |rom @t@t@@ox@@c@uk  Sun May 22 20:05:30 2022
From: r|p|ey @end|ng |rom @t@t@@ox@@c@uk (Prof Brian Ripley)
Date: Sun, 22 May 2022 19:05:30 +0100
Subject: [Rd] CRAN webserver down
In-Reply-To: <25225.32501.109208.97418@rob.eddelbuettel.com>
References: <25225.32501.109208.97418@rob.eddelbuettel.com>
Message-ID: <93a10b93-d3f2-ed77-b2fb-1378156c2859@stats.ox.ac.uk>

On 22/05/2022 01:08, Dirk Eddelbuettel wrote:
> 
>>From what I can tell from there, the CRAN webserver appears to be down so no
> cran.r-project.org or www.r-project.org. It appears that other ports respond
> so it may just be in need of restart of the apache service. I am sure someone
> will get to it in due course. Until then we have the mirrors.
> 
> Best,  Dirk

The sysadmins are aware (they have a monitor service), but attempts to 
restart Apache remotely failed.  So hopefully this will work again in 
working hours in Austria tomorrow.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From pd@|gd @end|ng |rom gm@||@com  Mon May 23 10:29:38 2022
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Mon, 23 May 2022 10:29:38 +0200
Subject: [Rd] CRAN webserver down
In-Reply-To: <93a10b93-d3f2-ed77-b2fb-1378156c2859@stats.ox.ac.uk>
References: <25225.32501.109208.97418@rob.eddelbuettel.com>
 <93a10b93-d3f2-ed77-b2fb-1378156c2859@stats.ox.ac.uk>
Message-ID: <C661B534-4C5A-44C8-9CEB-BAA9CEE601BF@gmail.com>

Apparently resurrected now.

-pd

> On 22 May 2022, at 20:05 , Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> 
> On 22/05/2022 01:08, Dirk Eddelbuettel wrote:
>>> From what I can tell from there, the CRAN webserver appears to be down so no
>> cran.r-project.org or www.r-project.org. It appears that other ports respond
>> so it may just be in need of restart of the apache service. I am sure someone
>> will get to it in due course. Until then we have the mirrors.
>> Best,  Dirk
> 
> The sysadmins are aware (they have a monitor service), but attempts to restart Apache remotely failed.  So hopefully this will work again in working hours in Austria tomorrow.
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon May 23 15:35:22 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 23 May 2022 15:35:22 +0200
Subject: [Rd] Rgui.exe: bug associated with non-ASCII characters
In-Reply-To: <bc0e132a-a5c3-7481-1a76-dba7c46e8e36@gmail.com>
References: <em548fa1a0-66b6-4b8f-851d-7ab68cb3be85@dell>
 <1030932979.579322.1653000917450@mail.yahoo.com>
 <em6eec9a06-ad9c-4819-bab4-1e20a1f6abba@dell>
 <bc0e132a-a5c3-7481-1a76-dba7c46e8e36@gmail.com>
Message-ID: <e1a3615a-46d5-5e80-e7a6-3030eb39320f@gmail.com>


On 5/20/22 20:50, Tomas Kalibera wrote:
>
> On 5/20/22 03:36, jcfaria wrote:
>> Sorry, I noticed the bug but I really forgot to add the "c", for 
>> combine arguments, when I wrote the email.
>>
>> In fact, adding "c" R accepts sending the selection and copy/paste, 
>> but it does not accept the sending with the cursor at the beginning 
>> of the line.
>>
>> v1 <- c('p?', 'p?', 'p?', 'p?', 'p?')
>>
>> Place the cursor at the beginning of the line and try to send it via 
>> CTRL+R
>>
>> > v1 <- c('p
>> ? +
>>
> Thanks, I can reproduce the problem. Rgui uses via GraphApp an ANSI 
> RichEdit window to implement the script editor. What happens is that 
> the text obtained from that window is in Latin 1 encoding (on my 
> machine, probably also on yours), even though Rgui runs in UTF-8 via 
> the active code page specified in the manifest file, which I find 
> rather surprising. You can see that even in R 4.1, you cannot use 
> characters not representable in your native/ANSI encoding in the 
> editor window. But, now you cannot even use characters with different 
> representation between your ANSI code page and UTF-8 encoding (so only 
> ASCII is safe). I will investigate further how this could be fixed, it 
> may not be completely trivial as there are also other operations on 
> the content of the window, and it would really be nice if the RichEdit 
> window could be made to respect the active code page.

Now fixed in R-devel (82394). Once the R-devel snapshot build is of this 
or later release, could you please test? Ideally not only this example, 
but also other uses of the script editor. Thanks.

Technically, after some more investigation I found out that RichEdit20W 
class of the Rich Edit control (so the Unicode version of it) actually 
respects the ACP when it is UTF-8, even when using the *A interface. 
RichEdit20A class doesn't. I don't see this in the documentation, though.

Compared to R 4.1, one can now use in the script editor even characters 
not representable in the Windows ANSI encoding. All scripts saved to 
disk should be now in UTF-8 to be used with the script editor (on recent 
Windows where the native encoding in R is UTF-8), if they contain any 
non-ASCII characters.

Best
Tomas

>
> Best
> Tomas
>
>
>> Best,
>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>> Jose Claudio Faria
>> UESC/DCET/Brasil
>> joseclaudio.faria at gmail.com
>> Telefones:
>> 55(73)3680.5545 - UESC
>> 55(73)99966.9100 - VIVO
>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>> If you have software to deal with statistics, you have arms,
>> if you have good software, you have arms and legs,
>> if you have software like R, you have arms, legs and wings...
>> the height of your flight depends only on you.
>>
>> ------ Mensagem original ------
>> De: "Brodie Gaslam" <brodie.gaslam at yahoo.com>
>> Para: "r-devel at r-project.org" <r-devel at r-project.org>; "jcfaria" 
>> <joseclaudio.faria at gmail.com>
>> Enviado(s): 19/05/2022 19:55:17
>> Assunto: Re: [Rd] Rgui.exe: bug associated with non-ASCII characters
>>
>>> Is it possible you intended to use:
>>>
>>> c('p?', 'p?', 'p?', 'p?', 'p?')
>>>
>>> instead of:
>>>
>>> ('p?', 'p?', 'p?', 'p?', 'p?')
>>>
>>> Note the missing `c` in the second one.? That's just not a valid R 
>>> expression.
>>>
>>> I don't use Rgui but if I just type (1,2) in my R terminal I get the 
>>> same error.
>>>
>>> Best,
>>>
>>> B.
>>>
>>>
>>>
>>>
>>>
>>> On Thursday, May 19, 2022, 06:01:40 PM EDT, jcfaria 
>>> <joseclaudio.faria at gmail.com> wrote:
>>>
>>>
>>>
>>>
>>>
>>> Hello,
>>>
>>> R devel R82368
>>>
>>> 1- Open Rgui.exe
>>> 2- New script (Rgui's built-in editor)
>>> 3- Type the below
>>>
>>> v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
>>>
>>> 4- Select the entire line and try to send using the shortcut CTRL+R
>>>
>>>> ?v1 <- ('p?', 'p?', 'p?', 'p?', '?')
>>> Error: unexpected ',' in "v1 <- ('p?',"
>>>>
>>>
>>> 5- If you try to select the entire text (CTRL+C) and to paste (CTRL+V)
>>> into the console:
>>>
>>>> ?v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
>>> Error: unexpected ',' in "v1 <- ('p?',"
>>>>
>>>
>>> i.e. the same result,
>>>
>>> 6- Place the cursor at the beginning of the line and try to send it via
>>> CTRL+R
>>>
>>>> ?v1 <- ('p
>>> +
>>>
>>> We have a problem there, don't we?
>>>
>>> Best,
>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>> Jose Claudio Faria
>>> UESC/DCET/Brasil
>>> joseclaudio.faria at gmail.com
>>> Telefones:
>>> 55(73)3680.5545 - UESC
>>> 55(73)99966.9100 - VIVO
>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>> If you have software to deal with statistics, you have arms,
>>> if you have good software, you have arms and legs,
>>> if you have software like R, you have arms, legs and wings...
>>> the height of your flight depends only on you.
>>>
>>> ??? [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd @end|ng |rom deb|@n@org  Mon May 23 16:06:32 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 23 May 2022 09:06:32 -0500
Subject: [Rd] CRAN webserver down
In-Reply-To: <C661B534-4C5A-44C8-9CEB-BAA9CEE601BF@gmail.com>
References: <25225.32501.109208.97418@rob.eddelbuettel.com>
 <93a10b93-d3f2-ed77-b2fb-1378156c2859@stats.ox.ac.uk>
 <C661B534-4C5A-44C8-9CEB-BAA9CEE601BF@gmail.com>
Message-ID: <25227.38120.589113.63633@rob.eddelbuettel.com>


On 23 May 2022 at 10:29, peter dalgaard wrote:
| Apparently resurrected now.

As another maintainer told me, the submission page appears to be down.

Going to

   https://cran.r-project.org/submit.html

(and then refreshing over the stale iframe) gets me

   The webpage at https://xmpalantir.wu.ac.at/cransubmit/ might be
   temporarily down or it may have moved permanently to a new web address.

suggesting the VM may be down.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From pd@|gd @end|ng |rom gm@||@com  Mon May 23 16:26:30 2022
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Mon, 23 May 2022 16:26:30 +0200
Subject: [Rd] CRAN webserver down
In-Reply-To: <25227.38120.589113.63633@rob.eddelbuettel.com>
References: <25225.32501.109208.97418@rob.eddelbuettel.com>
 <93a10b93-d3f2-ed77-b2fb-1378156c2859@stats.ox.ac.uk>
 <C661B534-4C5A-44C8-9CEB-BAA9CEE601BF@gmail.com>
 <25227.38120.589113.63633@rob.eddelbuettel.com>
Message-ID: <44070926-03AF-4369-96C4-A83ADFA6B13B@gmail.com>

Worked for me on 2nd try (someone read your post?)

- Peter



> On 23 May 2022, at 16:06 , Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> On 23 May 2022 at 10:29, peter dalgaard wrote:
> | Apparently resurrected now.
> 
> As another maintainer told me, the submission page appears to be down.
> 
> Going to
> 
>   https://cran.r-project.org/submit.html
> 
> (and then refreshing over the stale iframe) gets me
> 
>   The webpage at https://xmpalantir.wu.ac.at/cransubmit/ might be
>   temporarily down or it may have moved permanently to a new web address.
> 
> suggesting the VM may be down.
> 
> Dirk
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From edd @end|ng |rom deb|@n@org  Mon May 23 16:57:42 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 23 May 2022 09:57:42 -0500
Subject: [Rd] CRAN webserver down
In-Reply-To: <44070926-03AF-4369-96C4-A83ADFA6B13B@gmail.com>
References: <25225.32501.109208.97418@rob.eddelbuettel.com>
 <93a10b93-d3f2-ed77-b2fb-1378156c2859@stats.ox.ac.uk>
 <C661B534-4C5A-44C8-9CEB-BAA9CEE601BF@gmail.com>
 <25227.38120.589113.63633@rob.eddelbuettel.com>
 <44070926-03AF-4369-96C4-A83ADFA6B13B@gmail.com>
Message-ID: <25227.41190.300179.211073@rob.eddelbuettel.com>


On 23 May 2022 at 16:26, peter dalgaard wrote:
| Worked for me on 2nd try (someone read your post?)

Thanks, same here.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue May 24 09:34:54 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 24 May 2022 09:34:54 +0200
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <b821d61d-5eb9-41d4-41a3-7e500dee11ed@gmail.com>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
 <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
 <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>
 <82957f65-28f0-cc11-b07b-1e6076d23d9c@gmail.com>
 <a8733d02-ff78-a41b-446c-7347268bb27f@gmail.com>
 <emc6b82537-e5e2-4512-9a59-7a90dda45dfd@dell>
 <b821d61d-5eb9-41d4-41a3-7e500dee11ed@gmail.com>
Message-ID: <cdec2d96-2178-f833-ce6e-d4cfe449ff1f@gmail.com>


On 5/16/22 19:21, Tomas Kalibera wrote:
> Dear Jose,
>
> On 5/15/22 01:31, jcfaria wrote:
>> Dear Tomas,
>>
>> I am very grateful for your attention!
>>
>> I've been reading some things about the GraphApp 
>> toolkit(http://enchantia.com/software/graphapp/) that is being used 
>> in the development of new versions of Rgui.
>>
>> Really, if it's a matter of choice, the problems I reported cannot be 
>> considered a "bug". It's up to us - GUI and IDE application 
>> developers - to adapt to the new features.
>>
>> I'm studying how to get around the problem, but I still haven't found 
>> a simple way.
>>
>> The solution you proposed (code below) ran fine here in all versions 
>> of Rgui I have installed, but it's working only for very simple 
>> strings, like the one I tested. When testing the needs close to the 
>> real I found some problems.
>>
>> For example, when sending the string below:
>> - char *s = "(s <- c('?', 'b', 'c', '?'))";
>>
>> Rgui receives:
>> > 9s ,- c9'', 'b', 'c', ''00
>> Error: unexpected symbol in "9s"
>> >
>>
>>
>> #include <windows.h>
>> #include <stdio.h>
>> #include <string.h>
>>
>> int main(int argc, char **argv) {
>> ?? HWND hw;
>> ?? int i, res;
>>
>> ?? printf("Getting Rgui window...\n");
>> ?? hw = FindWindow(NULL, "R Console (64-bit)");
>>
>> ?? printf("Got window: %x\n", hw);
>> ?? if (hw == NULL) {
>> ???? printf("Could not get Rgui window: %x\n", GetLastError());
>> ???? return 2;
>> ?? }
>>
>> ?? //Samples to send:
>> // char *s = "sd";
>> ?? char *s = "(s <- c('?', 'b', 'c', '?'))";
>>
>> ?? for(i = 0; i < strlen(s); i++) {
>> ???? res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(s[i]), 0);
>> ???? printf("Sending char %c: %d.\n", s[i], res);
>> ?? }
>>
>> ?? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>> ?? printf("Sending return: %d\n.", res);
>> ?? return 0;
>> }
>>
>> The idea of Tinn-R communicating with Rgui.exe is to take advantage 
>> of the great stability of Rgui. Since communication with Rterm is 
>> done via pipe.
>>
>> I believe that developing a new interface using the resources of the 
>> R.dll library, as proposed, is outside the simple purposes of the 
>> Tinn-R project.
>>
>> Any help in this regard is welcome.
>
> If embedding R seems too involved, and the hack above doesn't work 
> well enough, perhaps you could use SendInput() (also mentioned in the 
> blog post [1] below as a more correct way to inject input as 
> WM_KEYDOWN).? This is an example:
>
> ---
>
> #include <windows.h>
> #include <stdio.h>
>
> int main(int argc, char **argv) {
> ? HWND hw, ow;
> ? int i, res;
>
> ? hw = FindWindow(NULL, "R Console (64-bit)");
> ? if (hw == NULL) {
> ??? printf("Could not get Rgui window: %x\n", GetLastError());
> ??? return 2;
> ? }
>
> ? ow = GetForegroundWindow();
> ? if (ow == NULL)
> ??? printf("Foreground window is NULL\n");
>
> ? if (!SetForegroundWindow(hw))
> ??? printf("Could not set Rgui as foreground window\n");
>
> ? char *sd = "sd";
> ? for(i = 0; i < strlen(sd); i++) {
> ??? INPUT input;
>
> ??? ZeroMemory(&input, sizeof(INPUT));
> ??? input.type = INPUT_KEYBOARD;
> ??? input.ki.dwFlags = KEYEVENTF_UNICODE;
> ??? input.ki.wScan = (unsigned) sd[i];
> ??? res = SendInput(1, &input, sizeof(INPUT));
>
> ??? printf("Sending char %c (%x): %d.\n", sd[i], sd[i], res);
> ? }
>
> ? {
> ??? INPUT input[2];
>
> ??? ZeroMemory(input, 2*sizeof(INPUT));
> ??? input[0].type = input[1].type = INPUT_KEYBOARD;
> ??? input[1].ki.dwFlags = KEYEVENTF_KEYUP;
> ??? input[0].ki.wVk = input[1].ki.wVk = VK_RETURN;
> ??? res = SendInput(2, input, sizeof(INPUT));
> ??? printf("Sending return: %d.\n", res);
> ? }
>
> ? if (!SetForegroundWindow(ow))
> ??? printf("Could not set the original window as foreground");
>
> ? return 0;
> }

Dear Jose,

to send non-ASCII and repeated characters, you can modify the loop above 
as follows (use wchar_t to send Unicode characters, send also 
KEYEVENTF_KEYUP events to ensure that repeated characters such as ')' in 
the example are received). Otherwise, please refer to the MSDN 
documentation.

 ? wchar_t *sd = L"(s <- c('?', 'b', 'c', '?'))";
 ? for(i = 0; i < wcslen(sd); i++) {
 ??? INPUT input;

 ??? ZeroMemory(&input, sizeof(INPUT));
 ??? input.type = INPUT_KEYBOARD;
 ??? input.ki.dwFlags = KEYEVENTF_UNICODE;
 ??? input.ki.wScan = (unsigned) sd[i];
 ??? res1 = SendInput(1, &input, sizeof(INPUT));

 ??? ZeroMemory(&input, sizeof(INPUT));
 ??? input.type = INPUT_KEYBOARD;
 ??? input.ki.dwFlags = KEYEVENTF_UNICODE | KEYEVENTF_KEYUP;
 ??? input.ki.wScan = (unsigned) sd[i];
 ??? res2 = SendInput(1, &input, sizeof(INPUT));

 ??? printf("Sending char %lc (%x): %d,%d .\n", sd[i], sd[i], res1, res2);
 ? }

Best
Tomas

>
> ---
>
> This example works for me with R 4.1.3 and with R-devel 82368. It 
> doesn't work with R 4.2.0 (see a related thread about Dasher on this 
> list).
>
> Best
> Tomas
>
>>
>> Best,
>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>> Jose Claudio Faria
>> UESC/DCET/Brasil
>> joseclaudio.faria at gmail.com
>> Telefones:
>> 55(73)3680.5545 - UESC
>> 55(73)99966.9100 - VIVO
>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>> If you have software to deal with statistics, you have arms,
>> if you have good software, you have arms and legs,
>> if you have software like R, you have arms, legs and wings...
>> the height of your flight depends only on you.
>>
>> ------ Mensagem original ------
>> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
>> <murdoch.duncan at gmail.com>; r-devel at r-project.org
>> Enviado(s): 11/05/2022 13:32:23
>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
>> Windows API's PostMessage function
>>
>>>
>>> On 5/11/22 15:39, Tomas Kalibera wrote:
>>>>
>>>> On 5/11/22 08:15, Tomas Kalibera wrote:
>>>>>
>>>>> On 5/11/22 03:02, jcfaria wrote:
>>>>>> Dear Tomas,
>>>>>> I've tried, but I don't have the necessary C/C++ programming 
>>>>>> skills to fulfill your request.
>>>>>>
>>>>>> Maybe someone can help us by transcribing the little code in 
>>>>>> object Pascal that I sent to C/C++.
>>>>>>
>>>>>> If a small executable, made in Object Pascal, can help in your 
>>>>>> debug, I can provide.
>>>>>
>>>>> Dear Jose,
>>>>>
>>>>> no problem, I can try out with the Pascal code.
>>>>> Is there a free compiler I can use to build and run it?
>>>>
>>>> Actually I can reproduce it in a C program doing the same thing.
>>>>
>>>> The primary cause is that Rgui is using GraphApp Unicode windows on 
>>>> systems running in a multi-byte locale, which affects most systems 
>>>> since R 4.2 because of the switch to UTF-8. While Unicode windows 
>>>> have been used even in older versions of R, it was only on systems 
>>>> then running in a multi-byte locale, and apparently this hasn't 
>>>> been reported.
>>>>
>>>> When I modify R-devel to use non-Unicode GraphApp windows, the 
>>>> message sending works again. I will have a closer look, thanks for 
>>>> the report.
>>>
>>> I had a closer look and this doesn't really seem to be a bug in R to 
>>> me. For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages 
>>> to read the keys instead of WM_CHAR, which it uses for non-Unicode 
>>> windows. This is internal functionality of Rgui and a legitimate 
>>> choice. Rgui cannot simply handle both messages in Unicode windows, 
>>> because the characters would be doubled (if you see an easy, elegant 
>>> change to Rgui that would mimic the previous behavior, let me know). 
>>> This is certainly not a documented interface for Rgui, so I am 
>>> afraid you would have to change something in your application.
>>>
>>> I read that using PostMessage to simulate keyboard input is 
>>> considered wrong, see [1], and then one should instead use SendInput 
>>> (which then requires bringing the window to the foreground), if at 
>>> all simulating keyboard input. Maybe one could create a better 
>>> working solution that way, or using some automation library.
>>>
>>> As a quick hack, I found that [2] happens to be working on my 
>>> system, but again relying on the current implementation of Rgui 
>>> (simply you send WM_KEYDOWN also for the characters other than the 
>>> newline/return). It seems to be working also with R 4.1 for me.
>>>
>>> The usual way for GUIs/front-ends is to "embed" R, to link it as a 
>>> DLL. Rgui itself does it and also external applications such as 
>>> RStudio. Typically you would want to have a thin layer application 
>>> embedding R and make your GUI communicate with that, but switching 
>>> to that from sending the messages would require some work.
>>>
>>> Best
>>> Tomas
>>>
>>> [1] https://devblogs.microsoft.com/oldnewthing/20050530-11/?p=35513
>>>
>>> [2]
>>> #include <windows.h>
>>> #include <stdio.h>
>>> #include <string.h>
>>>
>>> int main(int argc, char **argv) {
>>> ? HWND hw;
>>> ? int i, res;
>>>
>>> ? printf("Getting Rgui window...\n");
>>> ? hw = FindWindow(NULL, "R Console (64-bit)");
>>>
>>> ? printf("Got window: %x\n", hw);
>>> ? if (hw == NULL) {
>>> ??? printf("Could not get Rgui window: %x\n", GetLastError());
>>> ??? return 2;
>>> ? }
>>>
>>> ? char *sd = "sd";
>>> ? for(i = 0; i < strlen(sd); i++) {
>>> ??? res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(sd[i]), 0);
>>> ??? printf("Sending char %c: %d.\n", sd[i], res);
>>> ? }
>>>
>>> ? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>> ? printf("Sending return: %d\n.", res);
>>> ? return 0;
>>> }
>>>
>>>
>>>>
>>>> For reference, to reproduce I ran
>>>>
>>>> Rgui --sdi
>>>>
>>>> and used this C example:
>>>>
>>>> #include <windows.h>
>>>> #include <stdio.h>
>>>> #include <string.h>
>>>>
>>>> int main(int argc, char **argv) {
>>>> ? HWND hw;
>>>> ? int i, res;
>>>>
>>>> ? printf("Getting Rgui window...\n");
>>>> ? hw = FindWindow(NULL, "R Console (64-bit)");
>>>>
>>>> ? printf("Got window: %x\n", hw);
>>>> ? if (hw == NULL) {
>>>> ??? printf("Could not get Rgui window: %x\n", GetLastError());
>>>> ??? return 2;
>>>> ? }
>>>>
>>>> ? char *sd = "sd";
>>>> ? for(i = 0; i < strlen(sd); i++) {
>>>> ??? res = PostMessage(hw, WM_CHAR, (unsigned int) sd[i], 0);
>>>> ??? printf("Sending char %c: %d.\n", sd[i], res);
>>>> ? }
>>>>
>>>> ? res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>>> ? printf("Sending return: %d\n.", res);
>>>> ? return 0;
>>>> }
>>>>
>>>> Best
>>>> Tomas
>>>>
>>>>
>>>>>
>>>>> Thanks
>>>>> Tomas
>>>>>
>>>>>>
>>>>>> Grateful for the attention,,
>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>> Jose Claudio Faria
>>>>>> UESC/DCET/Brasil
>>>>>> joseclaudio.faria at gmail.com
>>>>>> Telefones:
>>>>>> 55(73)3680.5545 - UESC
>>>>>> 55(73)99966.9100 - VIVO
>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>> If you have software to deal with statistics, you have arms,
>>>>>> if you have good software, you have arms and legs,
>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>> the height of your flight depends only on you.
>>>>>>
>>>>>> ------ Mensagem original ------
>>>>>> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>>>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" 
>>>>>> <murdoch.duncan at gmail.com>; r-devel at r-project.org
>>>>>> Enviado(s): 06/05/2022 04:24:44
>>>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via 
>>>>>> the Windows API's PostMessage function
>>>>>>
>>>>>>>
>>>>>>> On 5/6/22 07:03, jcfaria wrote:
>>>>>>>> Dear Duncan,
>>>>>>>> I believe the problem is of a different nature.
>>>>>>>> I get TRUE 3 times running the code below:
>>>>>>>>
>>>>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>>> var
>>>>>>>> ? i: integer;
>>>>>>>> ? sTmp: string;
>>>>>>>> ? hBN: HWND;
>>>>>>>> ? j: bool;
>>>>>>>>
>>>>>>>> begin
>>>>>>>> ? hBN:= FindWindowA(nil,
>>>>>>>> ??????????????????? 'R Console (64-bit)');
>>>>>>>>
>>>>>>>> ? sTmp:= 'sd';
>>>>>>>>
>>>>>>>> ? for i:= 1 to Length(sTmp) do begin
>>>>>>>> ??? j:= PostMessage(hBN,
>>>>>>>> ??????????????????? WM_CHAR,
>>>>>>>> ??????????????????? Ord(sTmp[i]),
>>>>>>>> ??????????????????? 0);
>>>>>>>>
>>>>>>>> ??? ShowMessage(BoolToStr(j,
>>>>>>>> ????????????????????????? True));
>>>>>>>> ? end;
>>>>>>>>
>>>>>>>> ? j:= PostMessage(hBN,
>>>>>>>> ????????????? WM_KEYDOWN,
>>>>>>>> ????????????? VK_RETURN, 0);
>>>>>>>>
>>>>>>>> ? ShowMessage(BoolToStr(j,
>>>>>>>> ??????????????????????? True));
>>>>>>>> end;
>>>>>>>>
>>>>>>>> That is, Rgui is receiving the message of the characters (via 
>>>>>>>> PostMessage), but it is blocking because it does not show them 
>>>>>>>> in the console.
>>>>>>>> The only thing Rgui blames is Carriage Return, as it adds an 
>>>>>>>> additional prompt with each run.
>>>>>>>
>>>>>>> I can't provide a good guess what impacted your use, but if you 
>>>>>>> could give me a full example, ideally in C, which can be 
>>>>>>> compiled with Rtools42 (so gcc, MinGW) and I can edit/recompile, 
>>>>>>> and works with R 4.1, I am happy to help debugging on 4.2.
>>>>>>>
>>>>>>> Rgui now uses GraphApp Unicode windows on systems where it 
>>>>>>> didn't before, because it uses UTF-8 also on systems it didn't 
>>>>>>> before (on systems that would use a single-byte locale in R 
>>>>>>> 4.1). These Unicode windows are a different code path and there 
>>>>>>> may be bugs not reported previously, including processing inputs 
>>>>>>> (recently I fixed handling of accents, for example). Otherwise 
>>>>>>> indeed R now uses UTF-8 as native encoding and UCRT as the C 
>>>>>>> runtime.
>>>>>>>
>>>>>>> Best
>>>>>>> Tomas
>>>>>>>
>>>>>>>
>>>>>>>>
>>>>>>>> >
>>>>>>>> >
>>>>>>>>
>>>>>>>> Best,
>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>> Jose Claudio Faria
>>>>>>>> UESC/DCET/Brasil
>>>>>>>> joseclaudio.faria at gmail.com
>>>>>>>> Telefones:
>>>>>>>> 55(73)3680.5545 - UESC
>>>>>>>> 55(73)99966.9100 - VIVO
>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>> If you have software to deal with statistics, you have arms,
>>>>>>>> if you have good software, you have arms and legs,
>>>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>>>> the height of your flight depends only on you.
>>>>>>>>
>>>>>>>> ------ Mensagem original ------
>>>>>>>> De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>>>>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; 
>>>>>>>> r-devel at r-project.org
>>>>>>>> Enviado(s): 05/05/2022 13:17:53
>>>>>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters 
>>>>>>>> via the Windows API's PostMessage function
>>>>>>>>
>>>>>>>>> On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>>>>>>> Hello,
>>>>>>>>>>
>>>>>>>>>> Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>>>>>>> PostMessage function.
>>>>>>>>>>
>>>>>>>>>> The Tinn-R project sends messages to Rgui.exe (SDI mode) via 
>>>>>>>>>> the Windows
>>>>>>>>>> API's PostMessage function.
>>>>>>>>>> A simplification of the code (in object Pascal) can be seen 
>>>>>>>>>> below.
>>>>>>>>>>
>>>>>>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>>>>> var
>>>>>>>>>> ??? i: integer;
>>>>>>>>>> ??? sTmp: WideString;
>>>>>>>>>> ??? hBN: HWND;
>>>>>>>>>>
>>>>>>>>>> begin
>>>>>>>>>> ??? hBN:= FindWindowA(nil,
>>>>>>>>>> ????????????????????? 'R Console (64-bit)');
>>>>>>>>>>
>>>>>>>>>> ??? sTmp:= 'sd';
>>>>>>>>>>
>>>>>>>>>> ??? for i:= 1 to Length(sTmp) do begin
>>>>>>>>>> ????? PostMessage(hBN,
>>>>>>>>>> ????????????????? WM_CHAR,
>>>>>>>>>> ????????????????? Ord(sTmp[i]),
>>>>>>>>>> ????????????????? 0);
>>>>>>>>>> ??? end;
>>>>>>>>>>
>>>>>>>>>> ??? PostMessage(hBN,
>>>>>>>>>> ??????????????? WM_KEYDOWN,
>>>>>>>>>> ??????????????? VK_RETURN, 0);
>>>>>>>>>> end;
>>>>>>>>>>
>>>>>>>>>> This code has always worked fine for all versions of Rgui.exe 
>>>>>>>>>> with the
>>>>>>>>>> exception of the last one released, ie 4.2.0.
>>>>>>>>>>
>>>>>>>>>> We've been trying to get around the problem on the Object 
>>>>>>>>>> Pascal side,
>>>>>>>>>> but without success so far.
>>>>>>>>>>
>>>>>>>>>> Does anyone connected to the compilation of Rqui.exe know 
>>>>>>>>>> what the
>>>>>>>>>> problem is?
>>>>>>>>>
>>>>>>>>> It could be that the new build enforces Windows security more 
>>>>>>>>> stringently.? More details are described in the answer to this 
>>>>>>>>> question: https://stackoverflow.com/a/40139498/2554330, but at 
>>>>>>>>> a minimum you should be checking the return value from 
>>>>>>>>> PostMessage.
>>>>>>>>>
>>>>>>>>> Duncan Murdoch
>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Best,
>>>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>> Jose Claudio Faria
>>>>>>>>>> UESC/DCET/Brasil
>>>>>>>>>> joseclaudio.faria at gmail.com
>>>>>>>>>> Telefones:
>>>>>>>>>> 55(73)3680.5545 - UESC
>>>>>>>>>> 55(73)99966.9100 - VIVO
>>>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>> If you have software to deal with statistics, you have arms,
>>>>>>>>>> if you have good software, you have arms and legs,
>>>>>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>>>>>> the height of your flight depends only on you.
>>>>>>>>>>
>>>>>>>>>> ??? [[alternative HTML version deleted]]
>>>>>>>>>>
>>>>>>>>>> ______________________________________________
>>>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>>>
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>
>>


From @eb|@||@cher @end|ng |rom gm@||@com  Tue May 24 09:01:17 2022
From: @eb|@||@cher @end|ng |rom gm@||@com (Sebastian Fischer)
Date: Tue, 24 May 2022 09:01:17 +0200
Subject: [Rd] How to access to internal header files
Message-ID: <eb74305f-37c2-4a36-4a68-4b6fbb62e6b4@gmail.com>

Dear R-devel Mailing List,

I would like to get a better understanding of R's internal structures by 
using R's
C API. For that I would like to have access to all the C header files 
that are listed
here: https://github.com/wch/r-source/tree/trunk/src/include. (i.e. I 
want to e.g.
#include <Defn.h>

However when I install R, there is only a subset of those header files 
available
on my system. While I am aware that files like Defn.h are not intended 
to be used by
R Extensions, I assume there must be some way to configure R's 
compilation to make
these definitions available for my exploration of the language.

I would appreciate any help.

Best regards

Sebastian Fischer


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue May 24 15:23:36 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 24 May 2022 15:23:36 +0200
Subject: [Rd] How to access to internal header files
In-Reply-To: <eb74305f-37c2-4a36-4a68-4b6fbb62e6b4@gmail.com>
References: <eb74305f-37c2-4a36-4a68-4b6fbb62e6b4@gmail.com>
Message-ID: <25228.56408.161051.748738@stat.math.ethz.ch>

>>>>> Sebastian Fischer 
>>>>>     on Tue, 24 May 2022 09:01:17 +0200 writes:

    > Dear R-devel Mailing List,

    > I would like to get a better understanding of R's internal structures by 
    > using R's
    > C API. For that I would like to have access to all the C header files 
    > that are listed
    > here: https://github.com/wch/r-source/tree/trunk/src/include. (i.e. I 
    > want to e.g.
    > #include <Defn.h>

    > However when I install R, there is only a subset of those header files 
    > available on my system. 

Of course, very much on purpose.
Headers such as Defn.h are *not* part of the API and hence
should not be visible.

    > While I am aware that files like Defn.h are not intended  to be used by
    > R Extensions, I assume there must be some way to configure R's 
    > compilation to make
    > these definitions available for my exploration of the language.

Well, if you want to explore how R is written ... and that's the
only good reason for looking into such private header files ...
then get the sources of R and explore...

The official sources (and even daily snapshots from both
"R-patched" and "R-devel")  are available e.g. from

 https://cran.r-project.org/sources.html


    > I would appreciate any help.

    > Best regards

    > Sebastian Fischer

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From edd @end|ng |rom deb|@n@org  Tue May 24 15:50:13 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 24 May 2022 08:50:13 -0500
Subject: [Rd] How to access to internal header files
In-Reply-To: <25228.56408.161051.748738@stat.math.ethz.ch>
References: <eb74305f-37c2-4a36-4a68-4b6fbb62e6b4@gmail.com>
 <25228.56408.161051.748738@stat.math.ethz.ch>
Message-ID: <25228.58005.323968.769062@rob.eddelbuettel.com>


On 24 May 2022 at 15:23, Martin Maechler wrote:
| Well, if you want to explore how R is written ... and that's the
| only good reason for looking into such private header files ...
| then get the sources of R and explore...
| 
| The official sources (and even daily snapshots from both
| "R-patched" and "R-devel")  are available e.g. from
| 
|  https://cran.r-project.org/sources.html

And for those who prefer the GitHub interface (including reasonably powerful
searches, now even via two APIs, as well as editor support) there are the
mirrors of the svn repo at GitHub of which

   https://github.com/r-devel/r-svn

is the more recent variant with extra polish to better map original commits
to a nicely browseable git commit history.  It also has all the branches.

I still keep an svn checkout for local builds of r-devel as I have since
'forever' but find the github access extremely valuable for browsing.

So a cheers for Jeroen for taking care of this.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @eb|@||@cher @end|ng |rom gm@||@com  Tue May 24 16:59:00 2022
From: @eb|@||@cher @end|ng |rom gm@||@com (Sebastian Fischer)
Date: Tue, 24 May 2022 16:59:00 +0200
Subject: [Rd] How to access to internal header files
In-Reply-To: <25228.58005.323968.769062@rob.eddelbuettel.com>
References: <eb74305f-37c2-4a36-4a68-4b6fbb62e6b4@gmail.com>
 <25228.56408.161051.748738@stat.math.ethz.ch>
 <25228.58005.323968.769062@rob.eddelbuettel.com>
Message-ID: <CAPDYroXoJ2p-KnbkfPmgF8rJmbEF4OoqDx=ndj=rrorsK_ETrA@mail.gmail.com>

Thanks, It would be great to get instructions on how I can compile R, so
that those header files are visible and can be used when compiling
via R CMD SHLIB,

best regards

Sebastian Fischer

Am Di., 24. Mai 2022 um 15:50 Uhr schrieb Dirk Eddelbuettel <edd at debian.org
>:

>
> On 24 May 2022 at 15:23, Martin Maechler wrote:
> | Well, if you want to explore how R is written ... and that's the
> | only good reason for looking into such private header files ...
> | then get the sources of R and explore...
> |
> | The official sources (and even daily snapshots from both
> | "R-patched" and "R-devel")  are available e.g. from
> |
> |  https://cran.r-project.org/sources.html
>
> And for those who prefer the GitHub interface (including reasonably
> powerful
> searches, now even via two APIs, as well as editor support) there are the
> mirrors of the svn repo at GitHub of which
>
>    https://github.com/r-devel/r-svn
>
> is the more recent variant with extra polish to better map original commits
> to a nicely browseable git commit history.  It also has all the branches.
>
> I still keep an svn checkout for local builds of r-devel as I have since
> 'forever' but find the github access extremely valuable for browsing.
>
> So a cheers for Jeroen for taking care of this.
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Tue May 24 17:32:06 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 24 May 2022 10:32:06 -0500
Subject: [Rd] How to access to internal header files
In-Reply-To: <CAPDYroXoJ2p-KnbkfPmgF8rJmbEF4OoqDx=ndj=rrorsK_ETrA@mail.gmail.com>
References: <eb74305f-37c2-4a36-4a68-4b6fbb62e6b4@gmail.com>
 <25228.56408.161051.748738@stat.math.ethz.ch>
 <25228.58005.323968.769062@rob.eddelbuettel.com>
 <CAPDYroXoJ2p-KnbkfPmgF8rJmbEF4OoqDx=ndj=rrorsK_ETrA@mail.gmail.com>
Message-ID: <25228.64118.571060.660058@rob.eddelbuettel.com>


On 24 May 2022 at 16:59, Sebastian Fischer wrote:
| Thanks, It would be great to get instructions on how I can compile R, so
| that those header files are visible and can be used when compiling
| via R CMD SHLIB,

You are in luck because R Core anticipated your question and shipped your
version of R with a manual on 'Installation and Administration' of R. You can
also browse it at different spot on the internet, my favourite currently is

   https://rstudio.github.io/r-manuals/r-admin/

But note what Martin said: you are looking at _internal_ headers meaning they
should _not_ be used in an R package. For test purposes and study you can
work around this and set the -I directory to tell the compiler.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Tue May 24 17:43:45 2022
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Sokol Serguei)
Date: Tue, 24 May 2022 17:43:45 +0200
Subject: [Rd] How to access to internal header files
In-Reply-To: <CAPDYroXoJ2p-KnbkfPmgF8rJmbEF4OoqDx=ndj=rrorsK_ETrA@mail.gmail.com>
References: <eb74305f-37c2-4a36-4a68-4b6fbb62e6b4@gmail.com>
 <25228.56408.161051.748738@stat.math.ethz.ch>
 <25228.58005.323968.769062@rob.eddelbuettel.com>
 <CAPDYroXoJ2p-KnbkfPmgF8rJmbEF4OoqDx=ndj=rrorsK_ETrA@mail.gmail.com>
Message-ID: <f2b1c631-512b-744e-a7e0-f75c4a97d849@insa-toulouse.fr>

Le 24/05/2022 ? 16:59, Sebastian Fischer a ?crit?:
> Thanks, It would be great to get instructions on how I can compile R, so
> that those header files are visible and can be used when compiling

"R Installation and Administration" can help 
https://cran.r-project.org/doc/manuals/r-release/R-admin.html


> via R CMD SHLIB,

If you search to compile R itself, it will be with "make ". "R CMD 
SHLIB" is rather for your own source files.

Best,
Serguei.

>
> best regards
>
> Sebastian Fischer
>
> Am Di., 24. Mai 2022 um 15:50 Uhr schrieb Dirk Eddelbuettel <edd at debian.org
>> :
>> On 24 May 2022 at 15:23, Martin Maechler wrote:
>> | Well, if you want to explore how R is written ... and that's the
>> | only good reason for looking into such private header files ...
>> | then get the sources of R and explore...
>> |
>> | The official sources (and even daily snapshots from both
>> | "R-patched" and "R-devel")  are available e.g. from
>> |
>> |  https://cran.r-project.org/sources.html
>>
>> And for those who prefer the GitHub interface (including reasonably
>> powerful
>> searches, now even via two APIs, as well as editor support) there are the
>> mirrors of the svn repo at GitHub of which
>>
>>     https://github.com/r-devel/r-svn
>>
>> is the more recent variant with extra polish to better map original commits
>> to a nicely browseable git commit history.  It also has all the branches.
>>
>> I still keep an svn checkout for local builds of r-devel as I have since
>> 'forever' but find the github access extremely valuable for browsing.
>>
>> So a cheers for Jeroen for taking care of this.
>>
>> Dirk
>>
>> --
>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue May 24 19:17:33 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 24 May 2022 10:17:33 -0700
Subject: [Rd] How to access to internal header files
In-Reply-To: <f2b1c631-512b-744e-a7e0-f75c4a97d849@insa-toulouse.fr>
References: <eb74305f-37c2-4a36-4a68-4b6fbb62e6b4@gmail.com>
 <25228.56408.161051.748738@stat.math.ethz.ch>
 <25228.58005.323968.769062@rob.eddelbuettel.com>
 <CAPDYroXoJ2p-KnbkfPmgF8rJmbEF4OoqDx=ndj=rrorsK_ETrA@mail.gmail.com>
 <f2b1c631-512b-744e-a7e0-f75c4a97d849@insa-toulouse.fr>
Message-ID: <CAFDcVCT5TBZABychrzd47Kre2oy7SFZgLfL+BqQtjFvaHQXGHA@mail.gmail.com>

Ramiro Magno has started the c3po package/project:

 https://rmagno.eu/c3po/

"c3po is a documentation-only package for the journey from R to C and
back again."

It documents the C-level R API using R's help system, e.g.

> library(c3po)
> ?asLogical

Rf_asLogical               package:c3po                R Documentation

Convert an R scalar logical vector to a C int

Description:

     *Function, pure* *R to C*

     Converts a scalar (length one) 'logical' vector ('SEXP') 'x' to a
     C 'int'.

Arguments:

       x: a pointer 'SEXP', referring to an object of type 'LGLSXP'.

Value:

     A C 'int' value.

Declaration:

     int asLogical(SEXP x);

     In Rinternals.h.

Definition:

     int asLogical(SEXP x)
     {
       return asLogical2(x, /* checking = */ 0, R_NilValue, R_NilValue);
     }

     In coerce.c.

Examples:

     # Convert an R length one logical vector to a C int number
     # Please note that the double backslash in "\n" in Rprintf is only required
     # because of the inlining of the code here.
     rlogical_to_cint <- inline::cfunction(c(x = "logical"),
      ' int x_;
        x_ = Rf_asLogical(x);
        Rprintf("x_ is %d\\n", x_);
        return R_NilValue;
      ')
     # NA is mapped to INT_MIN
     invisible(rlogical_to_cint(NA))

     # Empty logical is also mapped to INT_MIN
     invisible(rlogical_to_cint(NA))

     # FALSE is internally mapped to 0
     invisible(rlogical_to_cint(FALSE))

     # TRUE is internally mapped to 1
     invisible(rlogical_to_cint(TRUE))

As with all R help pages, it's renders nicely as HTML with links etc.,
if you run help.start() first.

I think this is a great effort worth contributing to:
https://github.com/ramiromagno/c3po

/Henrik

On Tue, May 24, 2022 at 8:52 AM Sokol Serguei <sokol at insa-toulouse.fr> wrote:
>
> Le 24/05/2022 ? 16:59, Sebastian Fischer a ?crit :
> > Thanks, It would be great to get instructions on how I can compile R, so
> > that those header files are visible and can be used when compiling
>
> "R Installation and Administration" can help
> https://cran.r-project.org/doc/manuals/r-release/R-admin.html
>
>
> > via R CMD SHLIB,
>
> If you search to compile R itself, it will be with "make ". "R CMD
> SHLIB" is rather for your own source files.
>
> Best,
> Serguei.
>
> >
> > best regards
> >
> > Sebastian Fischer
> >
> > Am Di., 24. Mai 2022 um 15:50 Uhr schrieb Dirk Eddelbuettel <edd at debian.org
> >> :
> >> On 24 May 2022 at 15:23, Martin Maechler wrote:
> >> | Well, if you want to explore how R is written ... and that's the
> >> | only good reason for looking into such private header files ...
> >> | then get the sources of R and explore...
> >> |
> >> | The official sources (and even daily snapshots from both
> >> | "R-patched" and "R-devel")  are available e.g. from
> >> |
> >> |  https://cran.r-project.org/sources.html
> >>
> >> And for those who prefer the GitHub interface (including reasonably
> >> powerful
> >> searches, now even via two APIs, as well as editor support) there are the
> >> mirrors of the svn repo at GitHub of which
> >>
> >>     https://github.com/r-devel/r-svn
> >>
> >> is the more recent variant with extra polish to better map original commits
> >> to a nicely browseable git commit history.  It also has all the branches.
> >>
> >> I still keep an svn checkout for local builds of r-devel as I have since
> >> 'forever' but find the github access extremely valuable for browsing.
> >>
> >> So a cheers for Jeroen for taking care of this.
> >>
> >> Dirk
> >>
> >> --
> >> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >>
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Wed May 25 15:17:59 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Wed, 25 May 2022 13:17:59 +0000
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <cdec2d96-2178-f833-ce6e-d4cfe449ff1f@gmail.com>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
 <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
 <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>
 <82957f65-28f0-cc11-b07b-1e6076d23d9c@gmail.com>
 <a8733d02-ff78-a41b-446c-7347268bb27f@gmail.com>
 <emc6b82537-e5e2-4512-9a59-7a90dda45dfd@dell>
 <b821d61d-5eb9-41d4-41a3-7e500dee11ed@gmail.com>
 <cdec2d96-2178-f833-ce6e-d4cfe449ff1f@gmail.com>
Message-ID: <em7d1d9850-23ea-4818-86bf-db89b7ef4c48@dell>

Dear Tomas,

I've been getting copies of your emails - and also from 
r-devel at project.org - in my email client, I've been replying to 
everyone, but for some reason - probably associated with the server - 
I'm not able to see my replies at this URL: https: 
//stat.ethz.ch/pipermail/r-devel/2022-May/thread.html

Due to the content of your responses, I believe you are getting them.

Well, I'm grateful for all of your attention to the issues I've 
reported. I'll test your propositions and modifications in the R-devel 
code and as soon as possible I'll get back to you. I need time for 
testing and recoding.

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

------ Mensagem original ------
De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
Enviado(s): 24/05/2022 04:34:54
Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the 
Windows API's PostMessage function

>
>On 5/16/22 19:21, Tomas Kalibera wrote:
>>Dear Jose,
>>
>>On 5/15/22 01:31, jcfaria wrote:
>>>Dear Tomas,
>>>
>>>I am very grateful for your attention!
>>>
>>>I've been reading some things about the GraphApp toolkit(http://enchantia.com/software/graphapp/) that is being used in the development of new versions of Rgui.
>>>
>>>Really, if it's a matter of choice, the problems I reported cannot be considered a "bug". It's up to us - GUI and IDE application developers - to adapt to the new features.
>>>
>>>I'm studying how to get around the problem, but I still haven't found a simple way.
>>>
>>>The solution you proposed (code below) ran fine here in all versions of Rgui I have installed, but it's working only for very simple strings, like the one I tested. When testing the needs close to the real I found some problems.
>>>
>>>For example, when sending the string below:
>>>- char *s = "(s <- c('?', 'b', 'c', '?'))";
>>>
>>>Rgui receives:
>>> > 9s ,- c9'', 'b', 'c', ''00
>>>Error: unexpected symbol in "9s"
>>> >
>>>
>>>
>>>#include <windows.h>
>>>#include <stdio.h>
>>>#include <string.h>
>>>
>>>int main(int argc, char **argv) {
>>>    HWND hw;
>>>    int i, res;
>>>
>>>    printf("Getting Rgui window...\n");
>>>    hw = FindWindow(NULL, "R Console (64-bit)");
>>>
>>>    printf("Got window: %x\n", hw);
>>>    if (hw == NULL) {
>>>      printf("Could not get Rgui window: %x\n", GetLastError());
>>>      return 2;
>>>    }
>>>
>>>    //Samples to send:
>>>// char *s = "sd";
>>>    char *s = "(s <- c('?', 'b', 'c', '?'))";
>>>
>>>    for(i = 0; i < strlen(s); i++) {
>>>      res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(s[i]), 0);
>>>      printf("Sending char %c: %d.\n", s[i], res);
>>>    }
>>>
>>>    res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>>    printf("Sending return: %d\n.", res);
>>>    return 0;
>>>}
>>>
>>>The idea of Tinn-R communicating with Rgui.exe is to take advantage of the great stability of Rgui. Since communication with Rterm is done via pipe.
>>>
>>>I believe that developing a new interface using the resources of the R.dll library, as proposed, is outside the simple purposes of the Tinn-R project.
>>>
>>>Any help in this regard is welcome.
>>
>>If embedding R seems too involved, and the hack above doesn't work well enough, perhaps you could use SendInput() (also mentioned in the blog post [1] below as a more correct way to inject input as WM_KEYDOWN).  This is an example:
>>
>>---
>>
>>#include <windows.h>
>>#include <stdio.h>
>>
>>int main(int argc, char **argv) {
>>   HWND hw, ow;
>>   int i, res;
>>
>>   hw = FindWindow(NULL, "R Console (64-bit)");
>>   if (hw == NULL) {
>>     printf("Could not get Rgui window: %x\n", GetLastError());
>>     return 2;
>>   }
>>
>>   ow = GetForegroundWindow();
>>   if (ow == NULL)
>>     printf("Foreground window is NULL\n");
>>
>>   if (!SetForegroundWindow(hw))
>>     printf("Could not set Rgui as foreground window\n");
>>
>>   char *sd = "sd";
>>   for(i = 0; i < strlen(sd); i++) {
>>     INPUT input;
>>
>>     ZeroMemory(&input, sizeof(INPUT));
>>     input.type = INPUT_KEYBOARD;
>>     input.ki.dwFlags = KEYEVENTF_UNICODE;
>>     input.ki.wScan = (unsigned) sd[i];
>>     res = SendInput(1, &input, sizeof(INPUT));
>>
>>     printf("Sending char %c (%x): %d.\n", sd[i], sd[i], res);
>>   }
>>
>>   {
>>     INPUT input[2];
>>
>>     ZeroMemory(input, 2*sizeof(INPUT));
>>     input[0].type = input[1].type = INPUT_KEYBOARD;
>>     input[1].ki.dwFlags = KEYEVENTF_KEYUP;
>>     input[0].ki.wVk = input[1].ki.wVk = VK_RETURN;
>>     res = SendInput(2, input, sizeof(INPUT));
>>     printf("Sending return: %d.\n", res);
>>   }
>>
>>   if (!SetForegroundWindow(ow))
>>     printf("Could not set the original window as foreground");
>>
>>   return 0;
>>}
>
>Dear Jose,
>
>to send non-ASCII and repeated characters, you can modify the loop above as follows (use wchar_t to send Unicode characters, send also KEYEVENTF_KEYUP events to ensure that repeated characters such as ')' in the example are received). Otherwise, please refer to the MSDN documentation.
>
>   wchar_t *sd = L"(s <- c('?', 'b', 'c', '?'))";
>   for(i = 0; i < wcslen(sd); i++) {
>     INPUT input;
>
>     ZeroMemory(&input, sizeof(INPUT));
>     input.type = INPUT_KEYBOARD;
>     input.ki.dwFlags = KEYEVENTF_UNICODE;
>     input.ki.wScan = (unsigned) sd[i];
>     res1 = SendInput(1, &input, sizeof(INPUT));
>
>     ZeroMemory(&input, sizeof(INPUT));
>     input.type = INPUT_KEYBOARD;
>     input.ki.dwFlags = KEYEVENTF_UNICODE | KEYEVENTF_KEYUP;
>     input.ki.wScan = (unsigned) sd[i];
>     res2 = SendInput(1, &input, sizeof(INPUT));
>
>     printf("Sending char %lc (%x): %d,%d .\n", sd[i], sd[i], res1, res2);
>   }
>
>Best
>Tomas
>
>>
>>---
>>
>>This example works for me with R 4.1.3 and with R-devel 82368. It doesn't work with R 4.2.0 (see a related thread about Dasher on this list).
>>
>>Best
>>Tomas
>>
>>>
>>>Best,
>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>Jose Claudio Faria
>>>UESC/DCET/Brasil
>>>joseclaudio.faria at gmail.com
>>>Telefones:
>>>55(73)3680.5545 - UESC
>>>55(73)99966.9100 - VIVO
>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>If you have software to deal with statistics, you have arms,
>>>if you have good software, you have arms and legs,
>>>if you have software like R, you have arms, legs and wings...
>>>the height of your flight depends only on you.
>>>
>>>------ Mensagem original ------
>>>De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>>>Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" <murdoch.duncan at gmail.com>; r-devel at r-project.org
>>>Enviado(s): 11/05/2022 13:32:23
>>>Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>>
>>>>
>>>>On 5/11/22 15:39, Tomas Kalibera wrote:
>>>>>
>>>>>On 5/11/22 08:15, Tomas Kalibera wrote:
>>>>>>
>>>>>>On 5/11/22 03:02, jcfaria wrote:
>>>>>>>Dear Tomas,
>>>>>>>I've tried, but I don't have the necessary C/C++ programming skills to fulfill your request.
>>>>>>>
>>>>>>>Maybe someone can help us by transcribing the little code in object Pascal that I sent to C/C++.
>>>>>>>
>>>>>>>If a small executable, made in Object Pascal, can help in your debug, I can provide.
>>>>>>
>>>>>>Dear Jose,
>>>>>>
>>>>>>no problem, I can try out with the Pascal code.
>>>>>>Is there a free compiler I can use to build and run it?
>>>>>
>>>>>Actually I can reproduce it in a C program doing the same thing.
>>>>>
>>>>>The primary cause is that Rgui is using GraphApp Unicode windows on systems running in a multi-byte locale, which affects most systems since R 4.2 because of the switch to UTF-8. While Unicode windows have been used even in older versions of R, it was only on systems then running in a multi-byte locale, and apparently this hasn't been reported.
>>>>>
>>>>>When I modify R-devel to use non-Unicode GraphApp windows, the message sending works again. I will have a closer look, thanks for the report.
>>>>
>>>>I had a closer look and this doesn't really seem to be a bug in R to me. For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to read the keys instead of WM_CHAR, which it uses for non-Unicode windows. This is internal functionality of Rgui and a legitimate choice. Rgui cannot simply handle both messages in Unicode windows, because the characters would be doubled (if you see an easy, elegant change to Rgui that would mimic the previous behavior, let me know). This is certainly not a documented interface for Rgui, so I am afraid you would have to change something in your application.
>>>>
>>>>I read that using PostMessage to simulate keyboard input is considered wrong, see [1], and then one should instead use SendInput (which then requires bringing the window to the foreground), if at all simulating keyboard input. Maybe one could create a better working solution that way, or using some automation library.
>>>>
>>>>As a quick hack, I found that [2] happens to be working on my system, but again relying on the current implementation of Rgui (simply you send WM_KEYDOWN also for the characters other than the newline/return). It seems to be working also with R 4.1 for me.
>>>>
>>>>The usual way for GUIs/front-ends is to "embed" R, to link it as a DLL. Rgui itself does it and also external applications such as RStudio. Typically you would want to have a thin layer application embedding R and make your GUI communicate with that, but switching to that from sending the messages would require some work.
>>>>
>>>>Best
>>>>Tomas
>>>>
>>>>[1] https://devblogs.microsoft.com/oldnewthing/20050530-11/?p=35513
>>>>
>>>>[2]
>>>>#include <windows.h>
>>>>#include <stdio.h>
>>>>#include <string.h>
>>>>
>>>>int main(int argc, char **argv) {
>>>>   HWND hw;
>>>>   int i, res;
>>>>
>>>>   printf("Getting Rgui window...\n");
>>>>   hw = FindWindow(NULL, "R Console (64-bit)");
>>>>
>>>>   printf("Got window: %x\n", hw);
>>>>   if (hw == NULL) {
>>>>     printf("Could not get Rgui window: %x\n", GetLastError());
>>>>     return 2;
>>>>   }
>>>>
>>>>   char *sd = "sd";
>>>>   for(i = 0; i < strlen(sd); i++) {
>>>>     res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(sd[i]), 0);
>>>>     printf("Sending char %c: %d.\n", sd[i], res);
>>>>   }
>>>>
>>>>   res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>>>   printf("Sending return: %d\n.", res);
>>>>   return 0;
>>>>}
>>>>
>>>>
>>>>>
>>>>>For reference, to reproduce I ran
>>>>>
>>>>>Rgui --sdi
>>>>>
>>>>>and used this C example:
>>>>>
>>>>>#include <windows.h>
>>>>>#include <stdio.h>
>>>>>#include <string.h>
>>>>>
>>>>>int main(int argc, char **argv) {
>>>>>   HWND hw;
>>>>>   int i, res;
>>>>>
>>>>>   printf("Getting Rgui window...\n");
>>>>>   hw = FindWindow(NULL, "R Console (64-bit)");
>>>>>
>>>>>   printf("Got window: %x\n", hw);
>>>>>   if (hw == NULL) {
>>>>>     printf("Could not get Rgui window: %x\n", GetLastError());
>>>>>     return 2;
>>>>>   }
>>>>>
>>>>>   char *sd = "sd";
>>>>>   for(i = 0; i < strlen(sd); i++) {
>>>>>     res = PostMessage(hw, WM_CHAR, (unsigned int) sd[i], 0);
>>>>>     printf("Sending char %c: %d.\n", sd[i], res);
>>>>>   }
>>>>>
>>>>>   res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>>>>   printf("Sending return: %d\n.", res);
>>>>>   return 0;
>>>>>}
>>>>>
>>>>>Best
>>>>>Tomas
>>>>>
>>>>>
>>>>>>
>>>>>>Thanks
>>>>>>Tomas
>>>>>>
>>>>>>>
>>>>>>>Grateful for the attention,,
>>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>Jose Claudio Faria
>>>>>>>UESC/DCET/Brasil
>>>>>>>joseclaudio.faria at gmail.com
>>>>>>>Telefones:
>>>>>>>55(73)3680.5545 - UESC
>>>>>>>55(73)99966.9100 - VIVO
>>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>If you have software to deal with statistics, you have arms,
>>>>>>>if you have good software, you have arms and legs,
>>>>>>>if you have software like R, you have arms, legs and wings...
>>>>>>>the height of your flight depends only on you.
>>>>>>>
>>>>>>>------ Mensagem original ------
>>>>>>>De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>>>>>>>Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" <murdoch.duncan at gmail.com>; r-devel at r-project.org
>>>>>>>Enviado(s): 06/05/2022 04:24:44
>>>>>>>Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>>>>>>
>>>>>>>>
>>>>>>>>On 5/6/22 07:03, jcfaria wrote:
>>>>>>>>>Dear Duncan,
>>>>>>>>>I believe the problem is of a different nature.
>>>>>>>>>I get TRUE 3 times running the code below:
>>>>>>>>>
>>>>>>>>>procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>>>>var
>>>>>>>>>   i: integer;
>>>>>>>>>   sTmp: string;
>>>>>>>>>   hBN: HWND;
>>>>>>>>>   j: bool;
>>>>>>>>>
>>>>>>>>>begin
>>>>>>>>>   hBN:= FindWindowA(nil,
>>>>>>>>>                     'R Console (64-bit)');
>>>>>>>>>
>>>>>>>>>   sTmp:= 'sd';
>>>>>>>>>
>>>>>>>>>   for i:= 1 to Length(sTmp) do begin
>>>>>>>>>     j:= PostMessage(hBN,
>>>>>>>>>                     WM_CHAR,
>>>>>>>>>                     Ord(sTmp[i]),
>>>>>>>>>                     0);
>>>>>>>>>
>>>>>>>>>     ShowMessage(BoolToStr(j,
>>>>>>>>>                           True));
>>>>>>>>>   end;
>>>>>>>>>
>>>>>>>>>   j:= PostMessage(hBN,
>>>>>>>>>               WM_KEYDOWN,
>>>>>>>>>               VK_RETURN, 0);
>>>>>>>>>
>>>>>>>>>   ShowMessage(BoolToStr(j,
>>>>>>>>>                         True));
>>>>>>>>>end;
>>>>>>>>>
>>>>>>>>>That is, Rgui is receiving the message of the characters (via PostMessage), but it is blocking because it does not show them in the console.
>>>>>>>>>The only thing Rgui blames is Carriage Return, as it adds an additional prompt with each run.
>>>>>>>>
>>>>>>>>I can't provide a good guess what impacted your use, but if you could give me a full example, ideally in C, which can be compiled with Rtools42 (so gcc, MinGW) and I can edit/recompile, and works with R 4.1, I am happy to help debugging on 4.2.
>>>>>>>>
>>>>>>>>Rgui now uses GraphApp Unicode windows on systems where it didn't before, because it uses UTF-8 also on systems it didn't before (on systems that would use a single-byte locale in R 4.1). These Unicode windows are a different code path and there may be bugs not reported previously, including processing inputs (recently I fixed handling of accents, for example). Otherwise indeed R now uses UTF-8 as native encoding and UCRT as the C runtime.
>>>>>>>>
>>>>>>>>Best
>>>>>>>>Tomas
>>>>>>>>
>>>>>>>>
>>>>>>>>>
>>>>>>>>> >
>>>>>>>>> >
>>>>>>>>>
>>>>>>>>>Best,
>>>>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>Jose Claudio Faria
>>>>>>>>>UESC/DCET/Brasil
>>>>>>>>>joseclaudio.faria at gmail.com
>>>>>>>>>Telefones:
>>>>>>>>>55(73)3680.5545 - UESC
>>>>>>>>>55(73)99966.9100 - VIVO
>>>>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>If you have software to deal with statistics, you have arms,
>>>>>>>>>if you have good software, you have arms and legs,
>>>>>>>>>if you have software like R, you have arms, legs and wings...
>>>>>>>>>the height of your flight depends only on you.
>>>>>>>>>
>>>>>>>>>------ Mensagem original ------
>>>>>>>>>De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>>>>>>>>Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
>>>>>>>>>Enviado(s): 05/05/2022 13:17:53
>>>>>>>>>Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>>>>>>>>
>>>>>>>>>>On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>>>>>>>>Hello,
>>>>>>>>>>>
>>>>>>>>>>>Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>>>>>>>>PostMessage function.
>>>>>>>>>>>
>>>>>>>>>>>The Tinn-R project sends messages to Rgui.exe (SDI mode) via the Windows
>>>>>>>>>>>API's PostMessage function.
>>>>>>>>>>>A simplification of the code (in object Pascal) can be seen below.
>>>>>>>>>>>
>>>>>>>>>>>procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>>>>>>var
>>>>>>>>>>>     i: integer;
>>>>>>>>>>>     sTmp: WideString;
>>>>>>>>>>>     hBN: HWND;
>>>>>>>>>>>
>>>>>>>>>>>begin
>>>>>>>>>>>     hBN:= FindWindowA(nil,
>>>>>>>>>>>                       'R Console (64-bit)');
>>>>>>>>>>>
>>>>>>>>>>>     sTmp:= 'sd';
>>>>>>>>>>>
>>>>>>>>>>>     for i:= 1 to Length(sTmp) do begin
>>>>>>>>>>>       PostMessage(hBN,
>>>>>>>>>>>                   WM_CHAR,
>>>>>>>>>>>                   Ord(sTmp[i]),
>>>>>>>>>>>                   0);
>>>>>>>>>>>     end;
>>>>>>>>>>>
>>>>>>>>>>>     PostMessage(hBN,
>>>>>>>>>>>                 WM_KEYDOWN,
>>>>>>>>>>>                 VK_RETURN, 0);
>>>>>>>>>>>end;
>>>>>>>>>>>
>>>>>>>>>>>This code has always worked fine for all versions of Rgui.exe with the
>>>>>>>>>>>exception of the last one released, ie 4.2.0.
>>>>>>>>>>>
>>>>>>>>>>>We've been trying to get around the problem on the Object Pascal side,
>>>>>>>>>>>but without success so far.
>>>>>>>>>>>
>>>>>>>>>>>Does anyone connected to the compilation of Rqui.exe know what the
>>>>>>>>>>>problem is?
>>>>>>>>>>
>>>>>>>>>>It could be that the new build enforces Windows security more stringently.  More details are described in the answer to this question: https://stackoverflow.com/a/40139498/2554330, but at a minimum you should be checking the return value from PostMessage.
>>>>>>>>>>
>>>>>>>>>>Duncan Murdoch
>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>Best,
>>>>>>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>>>Jose Claudio Faria
>>>>>>>>>>>UESC/DCET/Brasil
>>>>>>>>>>>joseclaudio.faria at gmail.com
>>>>>>>>>>>Telefones:
>>>>>>>>>>>55(73)3680.5545 - UESC
>>>>>>>>>>>55(73)99966.9100 - VIVO
>>>>>>>>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>>>If you have software to deal with statistics, you have arms,
>>>>>>>>>>>if you have good software, you have arms and legs,
>>>>>>>>>>>if you have software like R, you have arms, legs and wings...
>>>>>>>>>>>the height of your flight depends only on you.
>>>>>>>>>>>
>>>>>>>>>>>     [[alternative HTML version deleted]]
>>>>>>>>>>>
>>>>>>>>>>>______________________________________________
>>>>>>>>>>>R-devel at r-project.org mailing list
>>>>>>>>>>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>>______________________________________________
>>>>>>>>>R-devel at r-project.org mailing list
>>>>>>>>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>
>>>


From pd@|gd @end|ng |rom gm@||@com  Wed May 25 15:53:07 2022
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Wed, 25 May 2022 15:53:07 +0200
Subject: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows
 API's PostMessage function
In-Reply-To: <em7d1d9850-23ea-4818-86bf-db89b7ef4c48@dell>
References: <em26d64aef-2f66-415f-be9d-ae71a91c1d56@dell>
 <8e41c7bc-466c-ca00-6141-66520f8818b8@gmail.com>
 <em8cb2eaf6-27fe-4d26-84b2-3eef11fa9530@dell>
 <5e580ff4-ac60-6b79-e0d7-f9a84ee200d7@gmail.com>
 <em46f02f23-aa3d-4db3-9f88-1b338b047298@dell>
 <7bbdbe00-51e2-e9cf-ae16-5e969fb756b7@gmail.com>
 <82957f65-28f0-cc11-b07b-1e6076d23d9c@gmail.com>
 <a8733d02-ff78-a41b-446c-7347268bb27f@gmail.com>
 <emc6b82537-e5e2-4512-9a59-7a90dda45dfd@dell>
 <b821d61d-5eb9-41d4-41a3-7e500dee11ed@gmail.com>
 <cdec2d96-2178-f833-ce6e-d4cfe449ff1f@gmail.com>
 <em7d1d9850-23ea-4818-86bf-db89b7ef4c48@dell>
Message-ID: <443B699B-4D7A-481D-B9EF-F0EF81ECAE17@gmail.com>

I see 5 messages from you in the thread, including this one... (Did you perhaps overlook that threads sort by date of _1st_ message?)

- pd

> On 25 May 2022, at 15:17 , jcfaria <joseclaudio.faria at gmail.com> wrote:
> 
> Dear Tomas,
> 
> I've been getting copies of your emails - and also from r-devel at project.org - in my email client, I've been replying to everyone, but for some reason - probably associated with the server - I'm not able to see my replies at this URL: https: //stat.ethz.ch/pipermail/r-devel/2022-May/thread.html
> 
> Due to the content of your responses, I believe you are getting them.
> 
> Well, I'm grateful for all of your attention to the issues I've reported. I'll test your propositions and modifications in the R-devel code and as soon as possible I'll get back to you. I need time for testing and recoding.
> 
> Best,
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> Jose Claudio Faria
> UESC/DCET/Brasil
> joseclaudio.faria at gmail.com
> Telefones:
> 55(73)3680.5545 - UESC
> 55(73)99966.9100 - VIVO
> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
> If you have software to deal with statistics, you have arms,
> if you have good software, you have arms and legs,
> if you have software like R, you have arms, legs and wings...
> the height of your flight depends only on you.
> 
> ------ Mensagem original ------
> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
> Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
> Enviado(s): 24/05/2022 04:34:54
> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
> 
>> 
>> On 5/16/22 19:21, Tomas Kalibera wrote:
>>> Dear Jose,
>>> 
>>> On 5/15/22 01:31, jcfaria wrote:
>>>> Dear Tomas,
>>>> 
>>>> I am very grateful for your attention!
>>>> 
>>>> I've been reading some things about the GraphApp toolkit(http://enchantia.com/software/graphapp/) that is being used in the development of new versions of Rgui.
>>>> 
>>>> Really, if it's a matter of choice, the problems I reported cannot be considered a "bug". It's up to us - GUI and IDE application developers - to adapt to the new features.
>>>> 
>>>> I'm studying how to get around the problem, but I still haven't found a simple way.
>>>> 
>>>> The solution you proposed (code below) ran fine here in all versions of Rgui I have installed, but it's working only for very simple strings, like the one I tested. When testing the needs close to the real I found some problems.
>>>> 
>>>> For example, when sending the string below:
>>>> - char *s = "(s <- c('?', 'b', 'c', '?'))";
>>>> 
>>>> Rgui receives:
>>>> > 9s ,- c9'', 'b', 'c', ''00
>>>> Error: unexpected symbol in "9s"
>>>> >
>>>> 
>>>> 
>>>> #include <windows.h>
>>>> #include <stdio.h>
>>>> #include <string.h>
>>>> 
>>>> int main(int argc, char **argv) {
>>>>   HWND hw;
>>>>   int i, res;
>>>> 
>>>>   printf("Getting Rgui window...\n");
>>>>   hw = FindWindow(NULL, "R Console (64-bit)");
>>>> 
>>>>   printf("Got window: %x\n", hw);
>>>>   if (hw == NULL) {
>>>>     printf("Could not get Rgui window: %x\n", GetLastError());
>>>>     return 2;
>>>>   }
>>>> 
>>>>   //Samples to send:
>>>> // char *s = "sd";
>>>>   char *s = "(s <- c('?', 'b', 'c', '?'))";
>>>> 
>>>>   for(i = 0; i < strlen(s); i++) {
>>>>     res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(s[i]), 0);
>>>>     printf("Sending char %c: %d.\n", s[i], res);
>>>>   }
>>>> 
>>>>   res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>>>   printf("Sending return: %d\n.", res);
>>>>   return 0;
>>>> }
>>>> 
>>>> The idea of Tinn-R communicating with Rgui.exe is to take advantage of the great stability of Rgui. Since communication with Rterm is done via pipe.
>>>> 
>>>> I believe that developing a new interface using the resources of the R.dll library, as proposed, is outside the simple purposes of the Tinn-R project.
>>>> 
>>>> Any help in this regard is welcome.
>>> 
>>> If embedding R seems too involved, and the hack above doesn't work well enough, perhaps you could use SendInput() (also mentioned in the blog post [1] below as a more correct way to inject input as WM_KEYDOWN).  This is an example:
>>> 
>>> ---
>>> 
>>> #include <windows.h>
>>> #include <stdio.h>
>>> 
>>> int main(int argc, char **argv) {
>>>  HWND hw, ow;
>>>  int i, res;
>>> 
>>>  hw = FindWindow(NULL, "R Console (64-bit)");
>>>  if (hw == NULL) {
>>>    printf("Could not get Rgui window: %x\n", GetLastError());
>>>    return 2;
>>>  }
>>> 
>>>  ow = GetForegroundWindow();
>>>  if (ow == NULL)
>>>    printf("Foreground window is NULL\n");
>>> 
>>>  if (!SetForegroundWindow(hw))
>>>    printf("Could not set Rgui as foreground window\n");
>>> 
>>>  char *sd = "sd";
>>>  for(i = 0; i < strlen(sd); i++) {
>>>    INPUT input;
>>> 
>>>    ZeroMemory(&input, sizeof(INPUT));
>>>    input.type = INPUT_KEYBOARD;
>>>    input.ki.dwFlags = KEYEVENTF_UNICODE;
>>>    input.ki.wScan = (unsigned) sd[i];
>>>    res = SendInput(1, &input, sizeof(INPUT));
>>> 
>>>    printf("Sending char %c (%x): %d.\n", sd[i], sd[i], res);
>>>  }
>>> 
>>>  {
>>>    INPUT input[2];
>>> 
>>>    ZeroMemory(input, 2*sizeof(INPUT));
>>>    input[0].type = input[1].type = INPUT_KEYBOARD;
>>>    input[1].ki.dwFlags = KEYEVENTF_KEYUP;
>>>    input[0].ki.wVk = input[1].ki.wVk = VK_RETURN;
>>>    res = SendInput(2, input, sizeof(INPUT));
>>>    printf("Sending return: %d.\n", res);
>>>  }
>>> 
>>>  if (!SetForegroundWindow(ow))
>>>    printf("Could not set the original window as foreground");
>>> 
>>>  return 0;
>>> }
>> 
>> Dear Jose,
>> 
>> to send non-ASCII and repeated characters, you can modify the loop above as follows (use wchar_t to send Unicode characters, send also KEYEVENTF_KEYUP events to ensure that repeated characters such as ')' in the example are received). Otherwise, please refer to the MSDN documentation.
>> 
>>  wchar_t *sd = L"(s <- c('?', 'b', 'c', '?'))";
>>  for(i = 0; i < wcslen(sd); i++) {
>>    INPUT input;
>> 
>>    ZeroMemory(&input, sizeof(INPUT));
>>    input.type = INPUT_KEYBOARD;
>>    input.ki.dwFlags = KEYEVENTF_UNICODE;
>>    input.ki.wScan = (unsigned) sd[i];
>>    res1 = SendInput(1, &input, sizeof(INPUT));
>> 
>>    ZeroMemory(&input, sizeof(INPUT));
>>    input.type = INPUT_KEYBOARD;
>>    input.ki.dwFlags = KEYEVENTF_UNICODE | KEYEVENTF_KEYUP;
>>    input.ki.wScan = (unsigned) sd[i];
>>    res2 = SendInput(1, &input, sizeof(INPUT));
>> 
>>    printf("Sending char %lc (%x): %d,%d .\n", sd[i], sd[i], res1, res2);
>>  }
>> 
>> Best
>> Tomas
>> 
>>> 
>>> ---
>>> 
>>> This example works for me with R 4.1.3 and with R-devel 82368. It doesn't work with R 4.2.0 (see a related thread about Dasher on this list).
>>> 
>>> Best
>>> Tomas
>>> 
>>>> 
>>>> Best,
>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>> Jose Claudio Faria
>>>> UESC/DCET/Brasil
>>>> joseclaudio.faria at gmail.com
>>>> Telefones:
>>>> 55(73)3680.5545 - UESC
>>>> 55(73)99966.9100 - VIVO
>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>> If you have software to deal with statistics, you have arms,
>>>> if you have good software, you have arms and legs,
>>>> if you have software like R, you have arms, legs and wings...
>>>> the height of your flight depends only on you.
>>>> 
>>>> ------ Mensagem original ------
>>>> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" <murdoch.duncan at gmail.com>; r-devel at r-project.org
>>>> Enviado(s): 11/05/2022 13:32:23
>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>>> 
>>>>> 
>>>>> On 5/11/22 15:39, Tomas Kalibera wrote:
>>>>>> 
>>>>>> On 5/11/22 08:15, Tomas Kalibera wrote:
>>>>>>> 
>>>>>>> On 5/11/22 03:02, jcfaria wrote:
>>>>>>>> Dear Tomas,
>>>>>>>> I've tried, but I don't have the necessary C/C++ programming skills to fulfill your request.
>>>>>>>> 
>>>>>>>> Maybe someone can help us by transcribing the little code in object Pascal that I sent to C/C++.
>>>>>>>> 
>>>>>>>> If a small executable, made in Object Pascal, can help in your debug, I can provide.
>>>>>>> 
>>>>>>> Dear Jose,
>>>>>>> 
>>>>>>> no problem, I can try out with the Pascal code.
>>>>>>> Is there a free compiler I can use to build and run it?
>>>>>> 
>>>>>> Actually I can reproduce it in a C program doing the same thing.
>>>>>> 
>>>>>> The primary cause is that Rgui is using GraphApp Unicode windows on systems running in a multi-byte locale, which affects most systems since R 4.2 because of the switch to UTF-8. While Unicode windows have been used even in older versions of R, it was only on systems then running in a multi-byte locale, and apparently this hasn't been reported.
>>>>>> 
>>>>>> When I modify R-devel to use non-Unicode GraphApp windows, the message sending works again. I will have a closer look, thanks for the report.
>>>>> 
>>>>> I had a closer look and this doesn't really seem to be a bug in R to me. For Unicode Windows, GraphApp uses WM_IME_COMPOSITION messages to read the keys instead of WM_CHAR, which it uses for non-Unicode windows. This is internal functionality of Rgui and a legitimate choice. Rgui cannot simply handle both messages in Unicode windows, because the characters would be doubled (if you see an easy, elegant change to Rgui that would mimic the previous behavior, let me know). This is certainly not a documented interface for Rgui, so I am afraid you would have to change something in your application.
>>>>> 
>>>>> I read that using PostMessage to simulate keyboard input is considered wrong, see [1], and then one should instead use SendInput (which then requires bringing the window to the foreground), if at all simulating keyboard input. Maybe one could create a better working solution that way, or using some automation library.
>>>>> 
>>>>> As a quick hack, I found that [2] happens to be working on my system, but again relying on the current implementation of Rgui (simply you send WM_KEYDOWN also for the characters other than the newline/return). It seems to be working also with R 4.1 for me.
>>>>> 
>>>>> The usual way for GUIs/front-ends is to "embed" R, to link it as a DLL. Rgui itself does it and also external applications such as RStudio. Typically you would want to have a thin layer application embedding R and make your GUI communicate with that, but switching to that from sending the messages would require some work.
>>>>> 
>>>>> Best
>>>>> Tomas
>>>>> 
>>>>> [1] https://devblogs.microsoft.com/oldnewthing/20050530-11/?p=35513
>>>>> 
>>>>> [2]
>>>>> #include <windows.h>
>>>>> #include <stdio.h>
>>>>> #include <string.h>
>>>>> 
>>>>> int main(int argc, char **argv) {
>>>>>  HWND hw;
>>>>>  int i, res;
>>>>> 
>>>>>  printf("Getting Rgui window...\n");
>>>>>  hw = FindWindow(NULL, "R Console (64-bit)");
>>>>> 
>>>>>  printf("Got window: %x\n", hw);
>>>>>  if (hw == NULL) {
>>>>>    printf("Could not get Rgui window: %x\n", GetLastError());
>>>>>    return 2;
>>>>>  }
>>>>> 
>>>>>  char *sd = "sd";
>>>>>  for(i = 0; i < strlen(sd); i++) {
>>>>>    res = PostMessage(hw, WM_KEYDOWN, VkKeyScan(sd[i]), 0);
>>>>>    printf("Sending char %c: %d.\n", sd[i], res);
>>>>>  }
>>>>> 
>>>>>  res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>>>>  printf("Sending return: %d\n.", res);
>>>>>  return 0;
>>>>> }
>>>>> 
>>>>> 
>>>>>> 
>>>>>> For reference, to reproduce I ran
>>>>>> 
>>>>>> Rgui --sdi
>>>>>> 
>>>>>> and used this C example:
>>>>>> 
>>>>>> #include <windows.h>
>>>>>> #include <stdio.h>
>>>>>> #include <string.h>
>>>>>> 
>>>>>> int main(int argc, char **argv) {
>>>>>>  HWND hw;
>>>>>>  int i, res;
>>>>>> 
>>>>>>  printf("Getting Rgui window...\n");
>>>>>>  hw = FindWindow(NULL, "R Console (64-bit)");
>>>>>> 
>>>>>>  printf("Got window: %x\n", hw);
>>>>>>  if (hw == NULL) {
>>>>>>    printf("Could not get Rgui window: %x\n", GetLastError());
>>>>>>    return 2;
>>>>>>  }
>>>>>> 
>>>>>>  char *sd = "sd";
>>>>>>  for(i = 0; i < strlen(sd); i++) {
>>>>>>    res = PostMessage(hw, WM_CHAR, (unsigned int) sd[i], 0);
>>>>>>    printf("Sending char %c: %d.\n", sd[i], res);
>>>>>>  }
>>>>>> 
>>>>>>  res = PostMessage(hw, WM_KEYDOWN, VK_RETURN, 0);
>>>>>>  printf("Sending return: %d\n.", res);
>>>>>>  return 0;
>>>>>> }
>>>>>> 
>>>>>> Best
>>>>>> Tomas
>>>>>> 
>>>>>> 
>>>>>>> 
>>>>>>> Thanks
>>>>>>> Tomas
>>>>>>> 
>>>>>>>> 
>>>>>>>> Grateful for the attention,,
>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>> Jose Claudio Faria
>>>>>>>> UESC/DCET/Brasil
>>>>>>>> joseclaudio.faria at gmail.com
>>>>>>>> Telefones:
>>>>>>>> 55(73)3680.5545 - UESC
>>>>>>>> 55(73)99966.9100 - VIVO
>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>> If you have software to deal with statistics, you have arms,
>>>>>>>> if you have good software, you have arms and legs,
>>>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>>>> the height of your flight depends only on you.
>>>>>>>> 
>>>>>>>> ------ Mensagem original ------
>>>>>>>> De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
>>>>>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; "Duncan Murdoch" <murdoch.duncan at gmail.com>; r-devel at r-project.org
>>>>>>>> Enviado(s): 06/05/2022 04:24:44
>>>>>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> On 5/6/22 07:03, jcfaria wrote:
>>>>>>>>>> Dear Duncan,
>>>>>>>>>> I believe the problem is of a different nature.
>>>>>>>>>> I get TRUE 3 times running the code below:
>>>>>>>>>> 
>>>>>>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>>>>> var
>>>>>>>>>>  i: integer;
>>>>>>>>>>  sTmp: string;
>>>>>>>>>>  hBN: HWND;
>>>>>>>>>>  j: bool;
>>>>>>>>>> 
>>>>>>>>>> begin
>>>>>>>>>>  hBN:= FindWindowA(nil,
>>>>>>>>>>                    'R Console (64-bit)');
>>>>>>>>>> 
>>>>>>>>>>  sTmp:= 'sd';
>>>>>>>>>> 
>>>>>>>>>>  for i:= 1 to Length(sTmp) do begin
>>>>>>>>>>    j:= PostMessage(hBN,
>>>>>>>>>>                    WM_CHAR,
>>>>>>>>>>                    Ord(sTmp[i]),
>>>>>>>>>>                    0);
>>>>>>>>>> 
>>>>>>>>>>    ShowMessage(BoolToStr(j,
>>>>>>>>>>                          True));
>>>>>>>>>>  end;
>>>>>>>>>> 
>>>>>>>>>>  j:= PostMessage(hBN,
>>>>>>>>>>              WM_KEYDOWN,
>>>>>>>>>>              VK_RETURN, 0);
>>>>>>>>>> 
>>>>>>>>>>  ShowMessage(BoolToStr(j,
>>>>>>>>>>                        True));
>>>>>>>>>> end;
>>>>>>>>>> 
>>>>>>>>>> That is, Rgui is receiving the message of the characters (via PostMessage), but it is blocking because it does not show them in the console.
>>>>>>>>>> The only thing Rgui blames is Carriage Return, as it adds an additional prompt with each run.
>>>>>>>>> 
>>>>>>>>> I can't provide a good guess what impacted your use, but if you could give me a full example, ideally in C, which can be compiled with Rtools42 (so gcc, MinGW) and I can edit/recompile, and works with R 4.1, I am happy to help debugging on 4.2.
>>>>>>>>> 
>>>>>>>>> Rgui now uses GraphApp Unicode windows on systems where it didn't before, because it uses UTF-8 also on systems it didn't before (on systems that would use a single-byte locale in R 4.1). These Unicode windows are a different code path and there may be bugs not reported previously, including processing inputs (recently I fixed handling of accents, for example). Otherwise indeed R now uses UTF-8 as native encoding and UCRT as the C runtime.
>>>>>>>>> 
>>>>>>>>> Best
>>>>>>>>> Tomas
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> >
>>>>>>>>>> >
>>>>>>>>>> 
>>>>>>>>>> Best,
>>>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>> Jose Claudio Faria
>>>>>>>>>> UESC/DCET/Brasil
>>>>>>>>>> joseclaudio.faria at gmail.com
>>>>>>>>>> Telefones:
>>>>>>>>>> 55(73)3680.5545 - UESC
>>>>>>>>>> 55(73)99966.9100 - VIVO
>>>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>> If you have software to deal with statistics, you have arms,
>>>>>>>>>> if you have good software, you have arms and legs,
>>>>>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>>>>>> the height of your flight depends only on you.
>>>>>>>>>> 
>>>>>>>>>> ------ Mensagem original ------
>>>>>>>>>> De: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>>>>>>>>>> Para: "jcfaria" <joseclaudio.faria at gmail.com>; r-devel at r-project.org
>>>>>>>>>> Enviado(s): 05/05/2022 13:17:53
>>>>>>>>>> Assunto: Re: [Rd] Rgui.exe 4.2.0 does not receive characters via the Windows API's PostMessage function
>>>>>>>>>> 
>>>>>>>>>>> On 05/05/2022 11:17 a.m., jcfaria wrote:
>>>>>>>>>>>> Hello,
>>>>>>>>>>>> 
>>>>>>>>>>>> Rgui.exe 4.2.0 does not receive characters via the Windows API's
>>>>>>>>>>>> PostMessage function.
>>>>>>>>>>>> 
>>>>>>>>>>>> The Tinn-R project sends messages to Rgui.exe (SDI mode) via the Windows
>>>>>>>>>>>> API's PostMessage function.
>>>>>>>>>>>> A simplification of the code (in object Pascal) can be seen below.
>>>>>>>>>>>> 
>>>>>>>>>>>> procedure TfMain.btnPasteClick(Sender: TObject);
>>>>>>>>>>>> var
>>>>>>>>>>>>    i: integer;
>>>>>>>>>>>>    sTmp: WideString;
>>>>>>>>>>>>    hBN: HWND;
>>>>>>>>>>>> 
>>>>>>>>>>>> begin
>>>>>>>>>>>>    hBN:= FindWindowA(nil,
>>>>>>>>>>>>                      'R Console (64-bit)');
>>>>>>>>>>>> 
>>>>>>>>>>>>    sTmp:= 'sd';
>>>>>>>>>>>> 
>>>>>>>>>>>>    for i:= 1 to Length(sTmp) do begin
>>>>>>>>>>>>      PostMessage(hBN,
>>>>>>>>>>>>                  WM_CHAR,
>>>>>>>>>>>>                  Ord(sTmp[i]),
>>>>>>>>>>>>                  0);
>>>>>>>>>>>>    end;
>>>>>>>>>>>> 
>>>>>>>>>>>>    PostMessage(hBN,
>>>>>>>>>>>>                WM_KEYDOWN,
>>>>>>>>>>>>                VK_RETURN, 0);
>>>>>>>>>>>> end;
>>>>>>>>>>>> 
>>>>>>>>>>>> This code has always worked fine for all versions of Rgui.exe with the
>>>>>>>>>>>> exception of the last one released, ie 4.2.0.
>>>>>>>>>>>> 
>>>>>>>>>>>> We've been trying to get around the problem on the Object Pascal side,
>>>>>>>>>>>> but without success so far.
>>>>>>>>>>>> 
>>>>>>>>>>>> Does anyone connected to the compilation of Rqui.exe know what the
>>>>>>>>>>>> problem is?
>>>>>>>>>>> 
>>>>>>>>>>> It could be that the new build enforces Windows security more stringently.  More details are described in the answer to this question: https://stackoverflow.com/a/40139498/2554330, but at a minimum you should be checking the return value from PostMessage.
>>>>>>>>>>> 
>>>>>>>>>>> Duncan Murdoch
>>>>>>>>>>> 
>>>>>>>>>>>> 
>>>>>>>>>>>> Best,
>>>>>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>>>> Jose Claudio Faria
>>>>>>>>>>>> UESC/DCET/Brasil
>>>>>>>>>>>> joseclaudio.faria at gmail.com
>>>>>>>>>>>> Telefones:
>>>>>>>>>>>> 55(73)3680.5545 - UESC
>>>>>>>>>>>> 55(73)99966.9100 - VIVO
>>>>>>>>>>>> ///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>>>>>>>>> If you have software to deal with statistics, you have arms,
>>>>>>>>>>>> if you have good software, you have arms and legs,
>>>>>>>>>>>> if you have software like R, you have arms, legs and wings...
>>>>>>>>>>>> the height of your flight depends only on you.
>>>>>>>>>>>> 
>>>>>>>>>>>>    [[alternative HTML version deleted]]
>>>>>>>>>>>> 
>>>>>>>>>>>> ______________________________________________
>>>>>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> ______________________________________________
>>>>>>>>>> R-devel at r-project.org mailing list
>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>>>> 
>>>> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sat May 28 17:33:47 2022
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sat, 28 May 2022 10:33:47 -0500
Subject: [Rd] bug in plot.table(..., log='y')?
Message-ID: <8e2e4e16-2f02-7049-675f-70eda9525021@prodsyse.com>

Dear R Developers:


	  Consider the following example:


(tstTable <- table(rep(1:3, 3:1)))
plot(tstTable)
plot(tstTable, log='y')


	  "plot(tstTable)" works as expected.  "plot(tstTable, log='y')" gives 
a warning:


Warning message:
In plot.window(...) :
   nonfinite axis=2 limits [GScale(-inf,0.477121,..); log=TRUE] -- 
corrected now


	  AND the plot has a y axis scale running from 1e-307 to 1e+13.


	  This is with R 4.2.0 (R Console and the current RStudio) under macOS 
11.6.6.


	  "plot(as.numeric(names(tstTable), as.numeric(tstTable), log='y'))" 
works as expected ;-)


	  Comments?
	  Thanks for your valuable work in making it easier for people 
everywhere to do quality statistics.


	  Spencer Graves


> sessionInfo()
R version 4.2.0 (2022-04-22)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 11.6.6

Matrix products: default
LAPACK: 
/Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods
[7] base

loaded via a namespace (and not attached):
[1] compiler_4.2.0 tools_4.2.0    knitr_1.39     xfun_0.30


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat May 28 18:23:37 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 28 May 2022 12:23:37 -0400
Subject: [Rd] bug in plot.table(..., log='y')?
In-Reply-To: <8e2e4e16-2f02-7049-675f-70eda9525021@prodsyse.com>
References: <8e2e4e16-2f02-7049-675f-70eda9525021@prodsyse.com>
Message-ID: <ae884572-7cec-8955-9961-707cc6949db1@gmail.com>

On 28/05/2022 11:33 a.m., Spencer Graves wrote:
> Dear R Developers:
> 
> 
> 	  Consider the following example:
> 
> 
> (tstTable <- table(rep(1:3, 3:1)))
> plot(tstTable)
> plot(tstTable, log='y')
> 
> 
> 	  "plot(tstTable)" works as expected.  "plot(tstTable, log='y')" gives
> a warning:
> 
> 
> Warning message:
> In plot.window(...) :
>     nonfinite axis=2 limits [GScale(-inf,0.477121,..); log=TRUE] --
> corrected now
> 
> 
> 	  AND the plot has a y axis scale running from 1e-307 to 1e+13.
> 
> 
> 	  This is with R 4.2.0 (R Console and the current RStudio) under macOS
> 11.6.6.
> 
> 
> 	  "plot(as.numeric(names(tstTable), as.numeric(tstTable), log='y'))"
> works as expected ;-)
> 
> 
> 	  Comments?
> 	  Thanks for your valuable work in making it easier for people
> everywhere to do quality statistics.

The help page ?plot.table says that ylim defaults to c(0, max(x)), i.e. 
c(0,3) in your example.  If you're asking to plot that on a log scale, 
there are bound to be problems.

If you specify ylim, e.g. as c(min(tstTable), max(tstTable)), things are 
fine in your example; they won't be in examples where the min is zero.

Duncan Murdoch


From @pencer@gr@ve@ @end|ng |rom prod@y@e@com  Sat May 28 18:41:49 2022
From: @pencer@gr@ve@ @end|ng |rom prod@y@e@com (Spencer Graves)
Date: Sat, 28 May 2022 11:41:49 -0500
Subject: [Rd] bug in plot.table(..., log='y')?
In-Reply-To: <ae884572-7cec-8955-9961-707cc6949db1@gmail.com>
References: <8e2e4e16-2f02-7049-675f-70eda9525021@prodsyse.com>
 <ae884572-7cec-8955-9961-707cc6949db1@gmail.com>
Message-ID: <04b4be1b-a42f-e0d4-21de-fc6d75dd729d@prodsyse.com>



On 5/28/22 11:23 AM, Duncan Murdoch wrote:
> On 28/05/2022 11:33 a.m., Spencer Graves wrote:
>> Dear R Developers:
>>
>>
>> ????? Consider the following example:
>>
>>
>> (tstTable <- table(rep(1:3, 3:1)))
>> plot(tstTable)
>> plot(tstTable, log='y')
>>
>>
>> ????? "plot(tstTable)" works as expected.? "plot(tstTable, log='y')" 
>> gives
>> a warning:
>>
>>
>> Warning message:
>> In plot.window(...) :
>> ??? nonfinite axis=2 limits [GScale(-inf,0.477121,..); log=TRUE] --
>> corrected now
>>
>>
>> ????? AND the plot has a y axis scale running from 1e-307 to 1e+13.
>>
>>
>> ????? This is with R 4.2.0 (R Console and the current RStudio) under 
>> macOS
>> 11.6.6.
>>
>>
>> ????? "plot(as.numeric(names(tstTable), as.numeric(tstTable), log='y'))"
>> works as expected ;-)
>>
>>
>> ????? Comments?
>> ????? Thanks for your valuable work in making it easier for people
>> everywhere to do quality statistics.
> 
> The help page ?plot.table says that ylim defaults to c(0, max(x)), i.e. 
> c(0,3) in your example.? If you're asking to plot that on a log scale, 
> there are bound to be problems.
> 
> If you specify ylim, e.g. as c(min(tstTable), max(tstTable)), things are 
> fine in your example; they won't be in examples where the min is zero.
> 
> Duncan Murdoch


	  Thanks.  I looked at the help file but didn't read it carefully enough.


	  Spencer


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon May 30 12:40:56 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 30 May 2022 12:40:56 +0200
Subject: [Rd] bug in plot.table(..., log='y')?
In-Reply-To: <04b4be1b-a42f-e0d4-21de-fc6d75dd729d@prodsyse.com>
References: <8e2e4e16-2f02-7049-675f-70eda9525021@prodsyse.com>
 <ae884572-7cec-8955-9961-707cc6949db1@gmail.com>
 <04b4be1b-a42f-e0d4-21de-fc6d75dd729d@prodsyse.com>
Message-ID: <25236.40760.561339.611249@stat.math.ethz.ch>

>>>>> Spencer Graves 
>>>>>     on Sat, 28 May 2022 11:41:49 -0500 writes:

    > On 5/28/22 11:23 AM, Duncan Murdoch wrote:
    >> On 28/05/2022 11:33 a.m., Spencer Graves wrote:
    >>> Dear R Developers:
    >>> 
    >>> 
    >>> ????? Consider the following example:
    >>> 
    >>> 
    >>> (tstTable <- table(rep(1:3, 3:1))) plot(tstTable)
    >>> plot(tstTable, log='y')
    >>> 
    >>> 
    >>> ????? "plot(tstTable)" works as expected.?
    >>> "plot(tstTable, log='y')" gives a warning:
    >>> 
    >>> 
    >>> Warning message: In plot.window(...) : ??? nonfinite
    >>> axis=2 limits [GScale(-inf,0.477121,..); log=TRUE] --
    >>> corrected now
    >>> 
    >>> 
    >>> ????? AND the plot has a y axis scale running from
    >>> 1e-307 to 1e+13.
    >>> 
    >>> 
    >>> ????? This is with R 4.2.0 (R Console and the current
    >>> RStudio) under macOS 11.6.6.
    >>> 
    >>> 
    >>> ????? "plot(as.numeric(names(tstTable),
    >>> as.numeric(tstTable), log='y'))" works as expected ;-)
    >>> 
    >>> 
    >>> ????? Comments?  ????? Thanks for your valuable work in
    >>> making it easier for people everywhere to do quality
    >>> statistics.
    >> 
    >> The help page ?plot.table says that ylim defaults to c(0,
    >> max(x)), i.e.  c(0,3) in your example.? If you're asking
    >> to plot that on a log scale, there are bound to be
    >> problems.
    >> 
    >> If you specify ylim, e.g. as c(min(tstTable),
    >> max(tstTable)), things are fine in your example; they
    >> won't be in examples where the min is zero.
    >> 
    >> Duncan Murdoch

    > 	  Thanks.  I looked at the help file but didn't read it
    > carefully enough.

    > 	  Spencer

If you have a table with  0  counts  and think you'd prefer
log="y" --- something I strongly agree is often a good idea,
giving much more useful plots --- 

I'd consider in this case using the good old  
   log( 1+   y )
or log( eps+ y )  trick.

My colleague Werner Stahel has spent quite a bit of effort in
order to make such "log-transformed plots in case of {zero etc}"
plot even smarter and convenient...
and has put this (and many more related ideas of doing smart and
robust good data analysis) in his package 'plgraphics'
(on R-forge, but still not on CRAN unfortunately).
With many thanks to Ian Howson, still nicely available also here:

    https://rdrr.io/rforge/plgraphics/

His generalized  log(1 + y)   is  plgraphics::logst(),
documented on the rdrr mirror here
  https://rdrr.io/rforge/plgraphics/man/logst.html

Martin


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Mon May 30 15:43:19 2022
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Mon, 30 May 2022 15:43:19 +0200
Subject: [Rd] CRAN meta archives
Message-ID: <CAN+W6_sS+-EWxtgTzRQu6Fj2aa4TQ3cYF35Mr6wCWGbyaAkyhQ@mail.gmail.com>

Dear all,

I'm trying to learn a bit about the CRAN history and how it is operated.
I was looking at the source code of the tools package and found in
CRANtools.R some internal functions retrieving files accessible
outside CRAN such as tools:::CRAN_archive_db().
There is a lot of information there, but I'm not sure I'm interpreting
it correctly.
I would appreciate it if someone could help regarding this.

For example, that file archive.rds has a list with the file.info
information of the packages archived. I see they match the date on the
websites such as https://cran.r-project.org/src/contrib/Archive/leaps/
But in other files (tools:::CRAN_current_db) the date matches the
publication date as shown in tools:::CRAN_package_db. Are these dates
(mtime) when the package was published or when the package was
archived?

These files also report a user name, does it mean that the user
archived or made the final decision to accept the package (and may or
may be not involved with archiving it)? I received mails from some
people at the CRAN team managing some submissions that do not seem to
appear on the files. Similarly, I see user names of people that as far
as I know are not in the CRAN team.

I'm also thinking about how often these files are updated. Are these
files updated daily at a fixed schedule or is the process more
complex?

I take the opportunity to thank Uwe Ligges, Kurt Hornik and Brian
Ripley for all your dedication to CRAN and I look forward to the next
20 years of CRAN success.

Best wishes,

Llu?s

PS: I only found a mention of this function in the list in the past
https://stat.ethz.ch/pipermail/r-devel/2017-February/073811.html but I
didn't find other mentions in the archives.


From jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com  Tue May 24 01:14:39 2022
From: jo@ec|@ud|o@|@r|@ @end|ng |rom gm@||@com (jcfaria)
Date: Mon, 23 May 2022 23:14:39 +0000
Subject: [Rd] Rgui.exe: bug associated with non-ASCII characters
In-Reply-To: <e1a3615a-46d5-5e80-e7a6-3030eb39320f@gmail.com>
References: <em548fa1a0-66b6-4b8f-851d-7ab68cb3be85@dell>
 <1030932979.579322.1653000917450@mail.yahoo.com>
 <em6eec9a06-ad9c-4819-bab4-1e20a1f6abba@dell>
 <bc0e132a-a5c3-7481-1a76-dba7c46e8e36@gmail.com>
 <e1a3615a-46d5-5e80-e7a6-3030eb39320f@gmail.com>
Message-ID: <em8b7ae387-4b12-4205-be85-0a08d0f25cda@dell>


Dear Tomas,

As soon as R-devel (82394) is available, I will carry out the requested 
tests and communicate the results obtained.

I'm not compiling R, so I have to wait for release 82394 to be available 
on the mirrors.

At the moment I'm finding compiled only 2022-05-22 r82390 development 
snapshot of R.

Best,
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
Jose Claudio Faria
UESC/DCET/Brasil
joseclaudio.faria at gmail.com
Telefones:
55(73)3680.5545 - UESC
55(73)99966.9100 - VIVO
///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
If you have software to deal with statistics, you have arms,
if you have good software, you have arms and legs,
if you have software like R, you have arms, legs and wings...
the height of your flight depends only on you.

------ Mensagem original ------
De: "Tomas Kalibera" <tomas.kalibera at gmail.com>
Para: "jcfaria" <joseclaudio.faria at gmail.com>; "r-devel at r-project.org" 
<r-devel at r-project.org>
Cc: "Brodie Gaslam" <brodie.gaslam at yahoo.com>
Enviado(s): 23/05/2022 10:35:22
Assunto: Re: [Rd] Rgui.exe: bug associated with non-ASCII characters

>
>On 5/20/22 20:50, Tomas Kalibera wrote:
>>
>>On 5/20/22 03:36, jcfaria wrote:
>>>Sorry, I noticed the bug but I really forgot to add the "c", for combine arguments, when I wrote the email.
>>>
>>>In fact, adding "c" R accepts sending the selection and copy/paste, but it does not accept the sending with the cursor at the beginning of the line.
>>>
>>>v1 <- c('p?', 'p?', 'p?', 'p?', 'p?')
>>>
>>>Place the cursor at the beginning of the line and try to send it via CTRL+R
>>>
>>> > v1 <- c('p
>>>   +
>>>
>>Thanks, I can reproduce the problem. Rgui uses via GraphApp an ANSI RichEdit window to implement the script editor. What happens is that the text obtained from that window is in Latin 1 encoding (on my machine, probably also on yours), even though Rgui runs in UTF-8 via the active code page specified in the manifest file, which I find rather surprising. You can see that even in R 4.1, you cannot use characters not representable in your native/ANSI encoding in the editor window. But, now you cannot even use characters with different representation between your ANSI code page and UTF-8 encoding (so only ASCII is safe). I will investigate further how this could be fixed, it may not be completely trivial as there are also other operations on the content of the window, and it would really be nice if the RichEdit window could be made to respect the active code page.
>
>Now fixed in R-devel (82394). Once the R-devel snapshot build is of this or later release, could you please test? Ideally not only this example, but also other uses of the script editor. Thanks.
>
>Technically, after some more investigation I found out that RichEdit20W class of the Rich Edit control (so the Unicode version of it) actually respects the ACP when it is UTF-8, even when using the *A interface. RichEdit20A class doesn't. I don't see this in the documentation, though.
>
>Compared to R 4.1, one can now use in the script editor even characters not representable in the Windows ANSI encoding. All scripts saved to disk should be now in UTF-8 to be used with the script editor (on recent Windows where the native encoding in R is UTF-8), if they contain any non-ASCII characters.
>
>Best
>Tomas
>
>>
>>Best
>>Tomas
>>
>>
>>>Best,
>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>Jose Claudio Faria
>>>UESC/DCET/Brasil
>>>joseclaudio.faria at gmail.com
>>>Telefones:
>>>55(73)3680.5545 - UESC
>>>55(73)99966.9100 - VIVO
>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>If you have software to deal with statistics, you have arms,
>>>if you have good software, you have arms and legs,
>>>if you have software like R, you have arms, legs and wings...
>>>the height of your flight depends only on you.
>>>
>>>------ Mensagem original ------
>>>De: "Brodie Gaslam" <brodie.gaslam at yahoo.com>
>>>Para: "r-devel at r-project.org" <r-devel at r-project.org>; "jcfaria" <joseclaudio.faria at gmail.com>
>>>Enviado(s): 19/05/2022 19:55:17
>>>Assunto: Re: [Rd] Rgui.exe: bug associated with non-ASCII characters
>>>
>>>>Is it possible you intended to use:
>>>>
>>>>c('p?', 'p?', 'p?', 'p?', 'p?')
>>>>
>>>>instead of:
>>>>
>>>>('p?', 'p?', 'p?', 'p?', 'p?')
>>>>
>>>>Note the missing `c` in the second one.  That's just not a valid R expression.
>>>>
>>>>I don't use Rgui but if I just type (1,2) in my R terminal I get the same error.
>>>>
>>>>Best,
>>>>
>>>>B.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>On Thursday, May 19, 2022, 06:01:40 PM EDT, jcfaria <joseclaudio.faria at gmail.com> wrote:
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>Hello,
>>>>
>>>>R devel R82368
>>>>
>>>>1- Open Rgui.exe
>>>>2- New script (Rgui's built-in editor)
>>>>3- Type the below
>>>>
>>>>v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
>>>>
>>>>4- Select the entire line and try to send using the shortcut CTRL+R
>>>>
>>>>>  v1 <- ('p?', 'p?', 'p?', 'p?', '?')
>>>>Error: unexpected ',' in "v1 <- ('p?',"
>>>>>
>>>>
>>>>5- If you try to select the entire text (CTRL+C) and to paste (CTRL+V)
>>>>into the console:
>>>>
>>>>>  v1 <- ('p?', 'p?', 'p?', 'p?', 'p?')
>>>>Error: unexpected ',' in "v1 <- ('p?',"
>>>>>
>>>>
>>>>i.e. the same result,
>>>>
>>>>6- Place the cursor at the beginning of the line and try to send it via
>>>>CTRL+R
>>>>
>>>>>  v1 <- ('p
>>>>+
>>>>
>>>>We have a problem there, don't we?
>>>>
>>>>Best,
>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>Jose Claudio Faria
>>>>UESC/DCET/Brasil
>>>>joseclaudio.faria at gmail.com
>>>>Telefones:
>>>>55(73)3680.5545 - UESC
>>>>55(73)99966.9100 - VIVO
>>>>///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\///\\\
>>>>If you have software to deal with statistics, you have arms,
>>>>if you have good software, you have arms and legs,
>>>>if you have software like R, you have arms, legs and wings...
>>>>the height of your flight depends only on you.
>>>>
>>>>     [[alternative HTML version deleted]]
>>>>
>>>>______________________________________________
>>>>R-devel at r-project.org mailing list
>>>>https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>>______________________________________________
>>>R-devel at r-project.org mailing list
>>>https://stat.ethz.ch/mailman/listinfo/r-devel


From w||||@mwdun|@p @end|ng |rom gm@||@com  Mon May 30 18:38:45 2022
From: w||||@mwdun|@p @end|ng |rom gm@||@com (Bill Dunlap)
Date: Mon, 30 May 2022 09:38:45 -0700
Subject: [Rd] bug in plot.table(..., log='y')?
In-Reply-To: <25236.40760.561339.611249@stat.math.ethz.ch>
References: <8e2e4e16-2f02-7049-675f-70eda9525021@prodsyse.com>
 <ae884572-7cec-8955-9961-707cc6949db1@gmail.com>
 <04b4be1b-a42f-e0d4-21de-fc6d75dd729d@prodsyse.com>
 <25236.40760.561339.611249@stat.math.ethz.ch>
Message-ID: <CAHqSRuQ3GrK1NSHaNkaiwc3qc1UhEZA5hXFT0w8AL9JXJJb6yw@mail.gmail.com>

Martin wrote

If you have a table with  0  counts  and think you'd prefer
log="y" --- something I strongly agree is often a good idea,
giving much more useful plots ---

I'd consider in this case using the good old
   log( 1+   y )
or log( eps+ y )  trick.


One could also sqrt(y), which helps stabilize the variances of count data.

Making nicely spaced and labelled tick marks for these transformations can
be a pain.  Perhaps some package already does this.

-Bill

On Mon, May 30, 2022 at 3:41 AM Martin Maechler <maechler at stat.math.ethz.ch>
wrote:

> >>>>> Spencer Graves
> >>>>>     on Sat, 28 May 2022 11:41:49 -0500 writes:
>
>     > On 5/28/22 11:23 AM, Duncan Murdoch wrote:
>     >> On 28/05/2022 11:33 a.m., Spencer Graves wrote:
>     >>> Dear R Developers:
>     >>>
>     >>>
>     >>>       Consider the following example:
>     >>>
>     >>>
>     >>> (tstTable <- table(rep(1:3, 3:1))) plot(tstTable)
>     >>> plot(tstTable, log='y')
>     >>>
>     >>>
>     >>>       "plot(tstTable)" works as expected.
>     >>> "plot(tstTable, log='y')" gives a warning:
>     >>>
>     >>>
>     >>> Warning message: In plot.window(...) :     nonfinite
>     >>> axis=2 limits [GScale(-inf,0.477121,..); log=TRUE] --
>     >>> corrected now
>     >>>
>     >>>
>     >>>       AND the plot has a y axis scale running from
>     >>> 1e-307 to 1e+13.
>     >>>
>     >>>
>     >>>       This is with R 4.2.0 (R Console and the current
>     >>> RStudio) under macOS 11.6.6.
>     >>>
>     >>>
>     >>>       "plot(as.numeric(names(tstTable),
>     >>> as.numeric(tstTable), log='y'))" works as expected ;-)
>     >>>
>     >>>
>     >>>       Comments?        Thanks for your valuable work in
>     >>> making it easier for people everywhere to do quality
>     >>> statistics.
>     >>
>     >> The help page ?plot.table says that ylim defaults to c(0,
>     >> max(x)), i.e.  c(0,3) in your example.  If you're asking
>     >> to plot that on a log scale, there are bound to be
>     >> problems.
>     >>
>     >> If you specify ylim, e.g. as c(min(tstTable),
>     >> max(tstTable)), things are fine in your example; they
>     >> won't be in examples where the min is zero.
>     >>
>     >> Duncan Murdoch
>
>     >     Thanks.  I looked at the help file but didn't read it
>     > carefully enough.
>
>     >     Spencer
>
> If you have a table with  0  counts  and think you'd prefer
> log="y" --- something I strongly agree is often a good idea,
> giving much more useful plots ---
>
> I'd consider in this case using the good old
>    log( 1+   y )
> or log( eps+ y )  trick.
>
> My colleague Werner Stahel has spent quite a bit of effort in
> order to make such "log-transformed plots in case of {zero etc}"
> plot even smarter and convenient...
> and has put this (and many more related ideas of doing smart and
> robust good data analysis) in his package 'plgraphics'
> (on R-forge, but still not on CRAN unfortunately).
> With many thanks to Ian Howson, still nicely available also here:
>
>     https://rdrr.io/rforge/plgraphics/
>
> His generalized  log(1 + y)   is  plgraphics::logst(),
> documented on the rdrr mirror here
>   https://rdrr.io/rforge/plgraphics/man/logst.html
>
> Martin
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue May 31 12:13:07 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 31 May 2022 12:13:07 +0200
Subject: [Rd] bug in plot.table(..., log='y')?
In-Reply-To: <CAHqSRuQ3GrK1NSHaNkaiwc3qc1UhEZA5hXFT0w8AL9JXJJb6yw@mail.gmail.com>
References: <8e2e4e16-2f02-7049-675f-70eda9525021@prodsyse.com>
 <ae884572-7cec-8955-9961-707cc6949db1@gmail.com>
 <04b4be1b-a42f-e0d4-21de-fc6d75dd729d@prodsyse.com>
 <25236.40760.561339.611249@stat.math.ethz.ch>
 <CAHqSRuQ3GrK1NSHaNkaiwc3qc1UhEZA5hXFT0w8AL9JXJJb6yw@mail.gmail.com>
Message-ID: <25237.59955.348420.995532@stat.math.ethz.ch>

>>>>> Bill Dunlap 
>>>>>     on Mon, 30 May 2022 09:38:45 -0700 writes:

    > Martin wrote

    > If you have a table with  0  counts  and think you'd prefer
    > log="y" --- something I strongly agree is often a good idea,
    > giving much more useful plots ---

    > I'd consider in this case using the good old
    > log( 1+   y )
    > or log( eps+ y )  trick.


    > One could also sqrt(y), which helps stabilize the variances of count data.

Definitely,  thank you, Bill!

What I mean above (and I think you understood, but probably not
many other readers because I was too terse), 
was of course to use   log="y"  with the "+ eps" trick,
i.e., {in a general situation}

      plot(x, y+eps, log="y")

so the labels show numbers on the y+eps scale, and for smallish
eps, this is visually the same as y-scale - unless you are close to y=0.


    > Making nicely spaced and labelled tick marks for these transformations can
    > be a pain.  Perhaps some package already does this.

    > -Bill

Not used yet, but from documentation, Stahel's 'plgraphics'
package (see bottom below),  does allow "arbitrary" transformation.

For the specific case of table() {or xtable()} results with true counts,
I agree it would be nice to have something like  'sqrt="y"' or
just 'sqrt=TRUE' which would "show" sqrt(<count>) but label the
axis non-equidistantly with counts.

A bit like

   y <- sort(rlnorm(333, 3))
   plot(qnorm(ppoints(y)), y, log="y", yaxt="n")
   sfsmisc::eaxis(2, sub=1)

does for log-transformed.

The simple traditional-graphics    plot(*, log="y") is often
good enough, but I like to see from the ticks that there was a
transformation.

Martin

    > On Mon, May 30, 2022 at 3:41 AM Martin Maechler <maechler at stat.math.ethz.ch>
    > wrote:

    >> >>>>> Spencer Graves
    >> >>>>>     on Sat, 28 May 2022 11:41:49 -0500 writes:
    >> 
    >> > On 5/28/22 11:23 AM, Duncan Murdoch wrote:
    >> >> On 28/05/2022 11:33 a.m., Spencer Graves wrote:
    >> >>> Dear R Developers:
    >> >>>
    >> >>>
    >> >>>       Consider the following example:
    >> >>>
    >> >>>
    >> >>> (tstTable <- table(rep(1:3, 3:1))) plot(tstTable)
    >> >>> plot(tstTable, log='y')
    >> >>>
    >> >>>
    >> >>>       "plot(tstTable)" works as expected.
    >> >>> "plot(tstTable, log='y')" gives a warning:
    >> >>>
    >> >>>
    >> >>> Warning message: In plot.window(...) :     nonfinite
    >> >>> axis=2 limits [GScale(-inf,0.477121,..); log=TRUE] --
    >> >>> corrected now
    >> >>>
    >> >>>
    >> >>>       AND the plot has a y axis scale running from
    >> >>> 1e-307 to 1e+13.
    >> >>>
    >> >>>
    >> >>>       This is with R 4.2.0 (R Console and the current
    >> >>> RStudio) under macOS 11.6.6.
    >> >>>
    >> >>>
    >> >>>       "plot(as.numeric(names(tstTable),
    >> >>> as.numeric(tstTable), log='y'))" works as expected ;-)
    >> >>>
    >> >>>
    >> >>>       Comments?        Thanks for your valuable work in
    >> >>> making it easier for people everywhere to do quality
    >> >>> statistics.
    >> >>
    >> >> The help page ?plot.table says that ylim defaults to c(0,
    >> >> max(x)), i.e.  c(0,3) in your example.  If you're asking
    >> >> to plot that on a log scale, there are bound to be
    >> >> problems.
    >> >>
    >> >> If you specify ylim, e.g. as c(min(tstTable),
    >> >> max(tstTable)), things are fine in your example; they
    >> >> won't be in examples where the min is zero.
    >> >>
    >> >> Duncan Murdoch
    >> 
    >> >     Thanks.  I looked at the help file but didn't read it
    >> > carefully enough.
    >> 
    >> >     Spencer
    >> 
    >> If you have a table with  0  counts  and think you'd prefer
    >> log="y" --- something I strongly agree is often a good idea,
    >> giving much more useful plots ---
    >> 
    >> I'd consider in this case using the good old
    >> log( 1+   y )
    >> or log( eps+ y )  trick.
    >> 
    >> My colleague Werner Stahel has spent quite a bit of effort in
    >> order to make such "log-transformed plots in case of {zero etc}"
    >> plot even smarter and convenient...
    >> and has put this (and many more related ideas of doing smart and
    >> robust good data analysis) in his package 'plgraphics'
    >> (on R-forge, but still not on CRAN unfortunately).
    >> With many thanks to Ian Howson, still nicely available also here:
    >> 
    >> https://rdrr.io/rforge/plgraphics/
    >> 
    >> His generalized  log(1 + y)   is  plgraphics::logst(),
    >> documented on the rdrr mirror here
    >> https://rdrr.io/rforge/plgraphics/man/logst.html
    >> 
    >> Martin


From j|ox @end|ng |rom mcm@@ter@c@  Tue May 31 14:29:37 2022
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Tue, 31 May 2022 08:29:37 -0400
Subject: [Rd] bug in plot.table(..., log='y')?
In-Reply-To: <20728_1653992003_24VADMKx008865_25237.59955.348420.995532@stat.math.ethz.ch>
References: <8e2e4e16-2f02-7049-675f-70eda9525021@prodsyse.com>
 <ae884572-7cec-8955-9961-707cc6949db1@gmail.com>
 <04b4be1b-a42f-e0d4-21de-fc6d75dd729d@prodsyse.com>
 <25236.40760.561339.611249@stat.math.ethz.ch>
 <CAHqSRuQ3GrK1NSHaNkaiwc3qc1UhEZA5hXFT0w8AL9JXJJb6yw@mail.gmail.com>
 <20728_1653992003_24VADMKx008865_25237.59955.348420.995532@stat.math.ethz.ch>
Message-ID: <807ab4c9-3131-5f66-c6fb-b2eda1e3d331@mcmaster.ca>

Dear Martin and Bill,

If I understand correctly, the basicPowerAxis() or bcPowerAxis() (for 
Box-Cox transformations) in the car package do what you describe, 
treating log (to any base) as a "0th" power and making provision for a 
"start," such as 1. There are also functions for two families of 
power-like transformations (Hawkins-Weisberg and Yeo-Johnson) that 
handle 0 and negative values naturally.

I hope this helps,
  John

On 2022-05-31 6:13 a.m., Martin Maechler wrote:
>>>>>> Bill Dunlap
>>>>>>      on Mon, 30 May 2022 09:38:45 -0700 writes:
> 
>      > Martin wrote
> 
>      > If you have a table with  0  counts  and think you'd prefer
>      > log="y" --- something I strongly agree is often a good idea,
>      > giving much more useful plots ---
> 
>      > I'd consider in this case using the good old
>      > log( 1+   y )
>      > or log( eps+ y )  trick.
> 
> 
>      > One could also sqrt(y), which helps stabilize the variances of count data.
> 
> Definitely,  thank you, Bill!
> 
> What I mean above (and I think you understood, but probably not
> many other readers because I was too terse),
> was of course to use   log="y"  with the "+ eps" trick,
> i.e., {in a general situation}
> 
>        plot(x, y+eps, log="y")
> 
> so the labels show numbers on the y+eps scale, and for smallish
> eps, this is visually the same as y-scale - unless you are close to y=0.
> 
> 
>      > Making nicely spaced and labelled tick marks for these transformations can
>      > be a pain.  Perhaps some package already does this.
> 
>      > -Bill
> 
> Not used yet, but from documentation, Stahel's 'plgraphics'
> package (see bottom below),  does allow "arbitrary" transformation.
> 
> For the specific case of table() {or xtable()} results with true counts,
> I agree it would be nice to have something like  'sqrt="y"' or
> just 'sqrt=TRUE' which would "show" sqrt(<count>) but label the
> axis non-equidistantly with counts.
> 
> A bit like
> 
>     y <- sort(rlnorm(333, 3))
>     plot(qnorm(ppoints(y)), y, log="y", yaxt="n")
>     sfsmisc::eaxis(2, sub=1)
> 
> does for log-transformed.
> 
> The simple traditional-graphics    plot(*, log="y") is often
> good enough, but I like to see from the ticks that there was a
> transformation.
> 
> Martin
> 
>      > On Mon, May 30, 2022 at 3:41 AM Martin Maechler <maechler at stat.math.ethz.ch>
>      > wrote:
> 
>      >> >>>>> Spencer Graves
>      >> >>>>>     on Sat, 28 May 2022 11:41:49 -0500 writes:
>      >>
>      >> > On 5/28/22 11:23 AM, Duncan Murdoch wrote:
>      >> >> On 28/05/2022 11:33 a.m., Spencer Graves wrote:
>      >> >>> Dear R Developers:
>      >> >>>
>      >> >>>
>      >> >>>       Consider the following example:
>      >> >>>
>      >> >>>
>      >> >>> (tstTable <- table(rep(1:3, 3:1))) plot(tstTable)
>      >> >>> plot(tstTable, log='y')
>      >> >>>
>      >> >>>
>      >> >>>       "plot(tstTable)" works as expected.
>      >> >>> "plot(tstTable, log='y')" gives a warning:
>      >> >>>
>      >> >>>
>      >> >>> Warning message: In plot.window(...) :     nonfinite
>      >> >>> axis=2 limits [GScale(-inf,0.477121,..); log=TRUE] --
>      >> >>> corrected now
>      >> >>>
>      >> >>>
>      >> >>>       AND the plot has a y axis scale running from
>      >> >>> 1e-307 to 1e+13.
>      >> >>>
>      >> >>>
>      >> >>>       This is with R 4.2.0 (R Console and the current
>      >> >>> RStudio) under macOS 11.6.6.
>      >> >>>
>      >> >>>
>      >> >>>       "plot(as.numeric(names(tstTable),
>      >> >>> as.numeric(tstTable), log='y'))" works as expected ;-)
>      >> >>>
>      >> >>>
>      >> >>>       Comments?        Thanks for your valuable work in
>      >> >>> making it easier for people everywhere to do quality
>      >> >>> statistics.
>      >> >>
>      >> >> The help page ?plot.table says that ylim defaults to c(0,
>      >> >> max(x)), i.e.  c(0,3) in your example.  If you're asking
>      >> >> to plot that on a log scale, there are bound to be
>      >> >> problems.
>      >> >>
>      >> >> If you specify ylim, e.g. as c(min(tstTable),
>      >> >> max(tstTable)), things are fine in your example; they
>      >> >> won't be in examples where the min is zero.
>      >> >>
>      >> >> Duncan Murdoch
>      >>
>      >> >     Thanks.  I looked at the help file but didn't read it
>      >> > carefully enough.
>      >>
>      >> >     Spencer
>      >>
>      >> If you have a table with  0  counts  and think you'd prefer
>      >> log="y" --- something I strongly agree is often a good idea,
>      >> giving much more useful plots ---
>      >>
>      >> I'd consider in this case using the good old
>      >> log( 1+   y )
>      >> or log( eps+ y )  trick.
>      >>
>      >> My colleague Werner Stahel has spent quite a bit of effort in
>      >> order to make such "log-transformed plots in case of {zero etc}"
>      >> plot even smarter and convenient...
>      >> and has put this (and many more related ideas of doing smart and
>      >> robust good data analysis) in his package 'plgraphics'
>      >> (on R-forge, but still not on CRAN unfortunately).
>      >> With many thanks to Ian Howson, still nicely available also here:
>      >>
>      >> https://rdrr.io/rforge/plgraphics/
>      >>
>      >> His generalized  log(1 + y)   is  plgraphics::logst(),
>      >> documented on the rdrr mirror here
>      >> https://rdrr.io/rforge/plgraphics/man/logst.html
>      >>
>      >> Martin
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/


