From sokol at insa-toulouse.fr  Thu Jun  1 11:40:29 2017
From: sokol at insa-toulouse.fr (Serguei Sokol)
Date: Thu, 1 Jun 2017 11:40:29 +0200
Subject: [Rd] stats::line() does not produce correct Tukey line when n
 mod 6 is 2 or 3
In-Reply-To: <22831.8402.627874.808222@stat.math.ethz.ch>
References: <CAN7_cLjefc605D1ATS__MOV4gN7fKDBo5Nx_CNB_B9cDbAxc6w@mail.gmail.com>
 <CAN7_cLjmQFtZf9z-qJKdWRCaRY2uxfP8k5=QJsptz3U+TtP8oA@mail.gmail.com>
 <CAN7_cLjbz6S8u79jtx52XgfD1LcpO8CePYUhrunYqrzXHMMN8A@mail.gmail.com>
 <024A7E7D-45F8-4C95-A9BD-DBEB1D085BFA@gmail.com>
 <94b65a5b-da9e-ec5c-e428-7c5dbf175ec1@insa-toulouse.fr>
 <8c167bbb-130d-3798-a9e8-24c4377db313@insa-toulouse.fr>
 <d10ebb8c-0c49-5b0e-5b3c-b06073bfe447@insa-toulouse.fr>
 <22829.8246.695545.320438@stat.math.ethz.ch>
 <396781eb-1712-aa54-96f2-a6c4df0284f4@insa-toulouse.fr>
 <22829.41724.818300.640880@stat.math.ethz.ch>
 <c9af2c00-3653-29f8-7c6a-5a08d6de498e@insa-toulouse.fr>
 <CAO1zAVb8faubH7FrBfsx8c04xsZce2p2Ei9NaBELrfn2Q8JMEA@mail.gmail.com>
 <055b3d48-5f94-d087-74b8-b511e6c45baf@insa-toulouse.fr>
 <CAO1zAVa3=dA_atBNxj9kAX_Rh=5pCMiLK7BAuwq9hhY6KACQag@mail.gmail.com>
 <8fc861d2-1f45-f171-b135-000a668f73b7@insa-toulouse.fr>
 <001b1eec-e582-3d29-2b65-107957f57cf3@insa-toulouse.fr>
 <22831.8402.627874.808222@stat.math.ethz.ch>
Message-ID: <0fe164b3-c33d-dda4-1063-ea29e7b17dcd@insa-toulouse.fr>

Le 31/05/2017 ? 22:00, Martin Maechler a ?crit :
>>>>>> Serguei Sokol <sokol at insa-toulouse.fr>
>>>>>>      on Wed, 31 May 2017 18:46:34 +0200 writes:
>      > Le 31/05/2017 ? 17:30, Serguei Sokol a ?crit :
>      >>
>      >> More thorough reading revealed that I have overlooked this phrase in the
>      >> line's doc: "left and right /thirds/ of the data" (emphasis is mine).
>      > Oops. I have read the first ref returned by google and it happened to be
>      > tibco's doc, not the R's one. The layout is very similar hence my mistake.
>      > The latter does not mention "thirds" but ...
>      > Anyway, here is a new line's patch which still gives a result slightly different
>      > form MMline(). The slope is the same but not the intercept.
>      > What are the exact terms for intercept calculation that should be implemented?
>
>      > Serguei.
>
> Sorry Serguei,   I have new version of line.c  since yesterday,
> and will not be disturbed anymore.
>
> Note that I *did* give the litterature, and it seems most
> discussants don't have paper books in physical libraries anymore;
> In this case, interestingly, you need one of those I think -
> almost everything I found online did not have the exact details.
Fortunately, you keep old good habits regarding paper books ;)

> Peter Dalgaard definitely was right that Tukey did not use
> quantiles at all, and notably did *not* define the three groups
> via   {i;  x_i <= x_L}  and {i; x_i >= X_R}  which (as I think
> you noticed) may make the groups quite unbalanced in case of duplicated x's.
>
> But then, for now I had decided to fix the bug (namely computing
> the x-medians wrongly as you diagnosed correctly(!) -- but your
> first 2 patches only fixed partly) *and* go at least one step in
> the direction of Tukey's original, namely by allowing iteration via a new 'iter' argument.
Hm, I did not use iterations. A newly introduced indx is used to keep
index permutation when x is sorted.

> I have also updated the help page to document what  line()  has
> been computing all these years {apart from the bug which
> typically shows for non-equidistant x[]}.
You mean "non equally sized"? (bis ;) )

> We could also consider to eventually add a new   'method = <string>'
> argument to line()  one version of which would continue to
> compute the current solution,
If the current solution is considered as plainly wrong, why to continue
to implement it? Unless "by current version" you mean your implementation
equivalent to my patch2 which fixes group sizes.

>   another would compute the one
> corresponding to Velleman & Hoaglin (1981)'s  FORTRAN
> implementation (which had to be corrected for some infinite-loop
> cases!)... not in the close future though
What would be the interest of this fortran version? Faster? More accurate?

> Given all this discussions here, I think I should commit what I
> currently have  ASAP.
+1.

Serguei.


From hpages at fredhutch.org  Fri Jun  2 13:05:15 2017
From: hpages at fredhutch.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Fri, 02 Jun 2017 04:05:15 -0700
Subject: [Rd] sum() returns NA on a long *logical* vector when nb of TRUE
 values exceeds 2^31
Message-ID: <5931466B.1060407@fredhutch.org>

Hi,

I have a long numeric vector 'xx' and I want to use sum() to count
the number of elements that satisfy some criteria like non-zero
values or values lower than a certain threshold etc...

The problem is: sum() returns an NA (with a warning) if the count
is greater than 2^31. For example:

   > xx <- runif(3e9)
   > sum(xx < 0.9)
   [1] NA
   Warning message:
   In sum(xx < 0.9) : integer overflow - use sum(as.numeric(.))

This already takes a long time and doing sum(as.numeric(.)) would
take even longer and require allocation of 24Gb of memory just to
store an intermediate numeric vector made of 0s and 1s. Plus, having
to do sum(as.numeric(.)) every time I need to count things is not
convenient and is easy to forget.

It seems that sum() on a logical vector could be modified to return
the count as a double when it cannot be represented as an integer.
Note that length() already does this so that wouldn't create a
precedent. Also and FWIW prod() avoids the problem by always returning
a double, whatever the type of the input is (except on a complex
vector).

I can provide a patch if this change sounds reasonable.

Cheers,
H.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From henrik.bengtsson at gmail.com  Fri Jun  2 22:58:59 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Fri, 2 Jun 2017 13:58:59 -0700
Subject: [Rd] sum() returns NA on a long *logical* vector when nb of
 TRUE values exceeds 2^31
In-Reply-To: <5931466B.1060407@fredhutch.org>
References: <5931466B.1060407@fredhutch.org>
Message-ID: <CAFDcVCRt1=-1t8=-x5TLhe3y0T_tpZUkTAH1W-hyMKqFH-eJYg@mail.gmail.com>

I second this feature request (it's understandable that this and
possibly other parts of the code was left behind / forgotten after the
introduction of long vector).

I think mean() avoids full copies, so in the meanwhile, you can work
around this limitation using:

countTRUE <- function(x, na.rm = FALSE) {
  nx <- length(x)
  if (nx < .Machine$integer.max) return(sum(x, na.rm = na.rm))
  nx * mean(x, na.rm = na.rm)
}

(not sure if one needs to worry about rounding errors, i.e. where n %% 0 != 0)

x <- rep(TRUE, times = .Machine$integer.max+1)
object.size(x)
## 8589934632 bytes

p <- profmem::profmem( n <- countTRUE(x) )
str(n)
## num 2.15e+09
print(n == .Machine$integer.max + 1)
## [1] TRUE

print(p)
## Rprofmem memory profiling of:
## n <- countTRUE(x)
##
## Memory allocations:
##      bytes calls
## total     0


FYI / related: I've just updated matrixStats::sum2() to support
logicals (develop branch) and I'll also try to update
matrixStats::count() to count beyond .Machine$integer.max.

/Henrik

On Fri, Jun 2, 2017 at 4:05 AM, Herv? Pag?s <hpages at fredhutch.org> wrote:
> Hi,
>
> I have a long numeric vector 'xx' and I want to use sum() to count
> the number of elements that satisfy some criteria like non-zero
> values or values lower than a certain threshold etc...
>
> The problem is: sum() returns an NA (with a warning) if the count
> is greater than 2^31. For example:
>
>   > xx <- runif(3e9)
>   > sum(xx < 0.9)
>   [1] NA
>   Warning message:
>   In sum(xx < 0.9) : integer overflow - use sum(as.numeric(.))
>
> This already takes a long time and doing sum(as.numeric(.)) would
> take even longer and require allocation of 24Gb of memory just to
> store an intermediate numeric vector made of 0s and 1s. Plus, having
> to do sum(as.numeric(.)) every time I need to count things is not
> convenient and is easy to forget.
>
> It seems that sum() on a logical vector could be modified to return
> the count as a double when it cannot be represented as an integer.
> Note that length() already does this so that wouldn't create a
> precedent. Also and FWIW prod() avoids the problem by always returning
> a double, whatever the type of the input is (except on a complex
> vector).
>
> I can provide a patch if this change sounds reasonable.
>
> Cheers,
> H.
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From jinghuazhao at hotmail.com  Sun Jun  4 11:50:35 2017
From: jinghuazhao at hotmail.com (jing hua zhao)
Date: Sun, 4 Jun 2017 09:50:35 +0000
Subject: [Rd] read.table
Message-ID: <LOXP12301MB1656AF9A6E8C2F23651DB36FA5F50@LOXP12301MB1656.GBRP123.PROD.OUTLOOK.COM>

Hi All,


I wonder if there should be one character for quote= in read.table, i.e.,


> args(read.table)
function (file, header = FALSE, sep = "", quote = "\"'", dec = ".",
...

I have a file containing the following lines,


08248-GOTERM    3'-phosphoadenosine 5'-phosphosulfate biosynthetic process
08279-GOTERM    3'-phosphoadenosine 5'-phosphosulfate binding
08494-GOTERM    'de novo' posttranslational protein folding
08712-GOTERM    ATP-dependent polyribonucleotide 5'-hydroxyl-kinase activity
08759-GOTERM    double-stranded DNA specific 5'-3' exodeoxyribonuclease activity
09127-GOTERM    'de novo' actin filament nucleation
09180-GOTERM    5'-tyrosyl-DNA phosphodiesterase activity
09282-GOTERM    deoxyribonucleoside 5'-monophosphate N-glycosidase activity
09330-GOTERM    3'-UTR-mediated mRNA stabilization
09355-GOTERM    histone pre-mRNA 3'end processing complex


which has two tab-delimited columns. I used read.table("",as.is=TRUE) and ended up with fewer lines so I have to use quote="" which also works if  any line contains only a singe double (") quote.


Thanks,



Jing hua


	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Sun Jun  4 17:12:41 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sun, 4 Jun 2017 17:12:41 +0200
Subject: [Rd] read.table
In-Reply-To: <LOXP12301MB1656AF9A6E8C2F23651DB36FA5F50@LOXP12301MB1656.GBRP123.PROD.OUTLOOK.COM>
References: <LOXP12301MB1656AF9A6E8C2F23651DB36FA5F50@LOXP12301MB1656.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <0580ed80-53af-82cd-429a-8d51523138eb@statistik.tu-dortmund.de>



On 04.06.2017 11:50, jing hua zhao wrote:
> Hi All,
> 
> 
> I wonder if there should be one character for quote= in read.table, i.e.,
> 
> 
>> args(read.table)
> function (file, header = FALSE, sep = "", quote = "\"'", dec = ".",
> ...
> 
> I have a file containing the following lines,
> 
> 
> 08248-GOTERM    3'-phosphoadenosine 5'-phosphosulfate biosynthetic process
> 08279-GOTERM    3'-phosphoadenosine 5'-phosphosulfate binding
> 08494-GOTERM    'de novo' posttranslational protein folding
> 08712-GOTERM    ATP-dependent polyribonucleotide 5'-hydroxyl-kinase activity
> 08759-GOTERM    double-stranded DNA specific 5'-3' exodeoxyribonuclease activity
> 09127-GOTERM    'de novo' actin filament nucleation
> 09180-GOTERM    5'-tyrosyl-DNA phosphodiesterase activity
> 09282-GOTERM    deoxyribonucleoside 5'-monophosphate N-glycosidase activity
> 09330-GOTERM    3'-UTR-mediated mRNA stabilization
> 09355-GOTERM    histone pre-mRNA 3'end processing complex
> 
> 
> which has two tab-delimited columns. I used read.table("",as.is=TRUE) and ended up with fewer lines so I have to use quote="" which also works if  any line contains only a singe double (") quote.


Yes, you do not use the ' as a quote, hence you have to remove it from 
the default setting of its meaning as a quote....

Best,
Uwe Ligges


> 
> Thanks,
> 
> 
> 
> Jing hua
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From jinghuazhao at hotmail.com  Sun Jun  4 21:49:27 2017
From: jinghuazhao at hotmail.com (jing hua zhao)
Date: Sun, 4 Jun 2017 19:49:27 +0000
Subject: [Rd] read.table
In-Reply-To: <0580ed80-53af-82cd-429a-8d51523138eb@statistik.tu-dortmund.de>
References: <LOXP12301MB1656AF9A6E8C2F23651DB36FA5F50@LOXP12301MB1656.GBRP123.PROD.OUTLOOK.COM>,
 <0580ed80-53af-82cd-429a-8d51523138eb@statistik.tu-dortmund.de>
Message-ID: <LOXP12301MB165687FE8DEE205D9F829EA2A5F50@LOXP12301MB1656.GBRP123.PROD.OUTLOOK.COM>

Thanks Uwe.


Jing hua


________________________________
From: Uwe Ligges <ligges at statistik.tu-dortmund.de>
Sent: 04 June 2017 15:12
To: jing hua zhao; R-devel
Subject: Re: [Rd] read.table



On 04.06.2017 11:50, jing hua zhao wrote:
> Hi All,
>
>
> I wonder if there should be one character for quote= in read.table, i.e.,
>
>
>> args(read.table)
> function (file, header = FALSE, sep = "", quote = "\"'", dec = ".",
> ...
>
> I have a file containing the following lines,
>
>
> 08248-GOTERM    3'-phosphoadenosine 5'-phosphosulfate biosynthetic process
> 08279-GOTERM    3'-phosphoadenosine 5'-phosphosulfate binding
> 08494-GOTERM    'de novo' posttranslational protein folding
> 08712-GOTERM    ATP-dependent polyribonucleotide 5'-hydroxyl-kinase activity
> 08759-GOTERM    double-stranded DNA specific 5'-3' exodeoxyribonuclease activity
> 09127-GOTERM    'de novo' actin filament nucleation
> 09180-GOTERM    5'-tyrosyl-DNA phosphodiesterase activity
> 09282-GOTERM    deoxyribonucleoside 5'-monophosphate N-glycosidase activity
> 09330-GOTERM    3'-UTR-mediated mRNA stabilization
> 09355-GOTERM    histone pre-mRNA 3'end processing complex
>
>
> which has two tab-delimited columns. I used read.table("",as.is=TRUE) and ended up with fewer lines so I have to use quote="" which also works if  any line contains only a singe double (") quote.


Yes, you do not use the ' as a quote, hence you have to remove it from
the default setting of its meaning as a quote....

Best,
Uwe Ligges


>
> Thanks,
>
>
>
> Jing hua
>
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From kirill.mueller at ivt.baug.ethz.ch  Mon Jun  5 17:30:20 2017
From: kirill.mueller at ivt.baug.ethz.ch (=?UTF-8?Q?Kirill_M=c3=bcller?=)
Date: Mon, 5 Jun 2017 17:30:20 +0200
Subject: [Rd] Usage of PROTECT_WITH_INDEX in R-exts
Message-ID: <7f60a4f4-3d29-1e2b-04e1-4bfd1d2bc4d0@ivt.baug.ethz.ch>

Hi


I've noted a minor inconsistency in the documentation: Current R-exts reads

s = PROTECT_WITH_INDEX(eval(OS->R_fcall, OS->R_env), &ipx);

but I believe it has to be

PROTECT_WITH_INDEX(s = eval(OS->R_fcall, OS->R_env), &ipx);

because PROTECT_WITH_INDEX() returns void.


Best regards

Kirill


From hpages at fredhutch.org  Tue Jun  6 03:08:24 2017
From: hpages at fredhutch.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Mon, 05 Jun 2017 18:08:24 -0700
Subject: [Rd] surprisingly,
 S4 classes with a "dim" or "dimnames" slot are final (in the Java
 sense)
Message-ID: <59360088.2060800@fredhutch.org>

Hi,

It's nice to be able to define S4 classes with slots that correspond
to standard attributes:

   setClass("A1", slots=c(names="character"))
   setClass("A2", slots=c(dim="integer"))
   setClass("A3", slots=c(dimnames="list"))

By doing this, one gets a few methods for free:

   a1 <- new("A1", names=letters[1:3])
   names(a1)     # "a" "b" "c"
   a2 <- new("A2", dim=4:3)
   nrow(a2)      # 4
   a3 <- new("A3", dimnames=list(NULL, letters[1:3]))
   colnames(a3)  # "a" "b" "c"

However, when it comes to subclassing, some of these slots cause
problems. I can extend A1:

   setClass("B1", contains="A1")

but trying to extend A2 or A3 produces an error (with a non-informative
message in the 1st case and a somewhat obscure one in the 2nd):

   setClass("B2", contains="A2")
   # Error in attr(prototype, slotName) <- attr(pri, slotName) :
   #   invalid first argument

   setClass("B3", contains="A3")
   # Error in attr(prototype, slotName) <- attr(pri, slotName) :
   #   'dimnames' applied to non-array

So it seems that the presence of a "dim" or "dimnames" slot prevents a
class from being extended. Is this expected? I couldn't find anything
in TFM about this. Sorry if I missed it.

Thanks,
H.

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From maechler at stat.math.ethz.ch  Tue Jun  6 09:45:44 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 6 Jun 2017 09:45:44 +0200
Subject: [Rd] sum() returns NA on a long *logical* vector when nb of
 TRUE values exceeds 2^31
In-Reply-To: <5931466B.1060407@fredhutch.org>
References: <5931466B.1060407@fredhutch.org>
Message-ID: <22838.23976.676449.177879@stat.math.ethz.ch>

>>>>> Herv? Pag?s <hpages at fredhutch.org>
>>>>>     on Fri, 2 Jun 2017 04:05:15 -0700 writes:

    > Hi, I have a long numeric vector 'xx' and I want to use
    > sum() to count the number of elements that satisfy some
    > criteria like non-zero values or values lower than a
    > certain threshold etc...

    > The problem is: sum() returns an NA (with a warning) if
    > the count is greater than 2^31. For example:

    >> xx <- runif(3e9) sum(xx < 0.9)
    >    [1] NA Warning message: In sum(xx < 0.9) : integer
    > overflow - use sum(as.numeric(.))

    > This already takes a long time and doing
    > sum(as.numeric(.)) would take even longer and require
    > allocation of 24Gb of memory just to store an intermediate
    > numeric vector made of 0s and 1s. Plus, having to do
    > sum(as.numeric(.)) every time I need to count things is
    > not convenient and is easy to forget.

    > It seems that sum() on a logical vector could be modified
    > to return the count as a double when it cannot be
    > represented as an integer.  Note that length() already
    > does this so that wouldn't create a precedent. Also and
    > FWIW prod() avoids the problem by always returning a
    > double, whatever the type of the input is (except on a
    > complex vector).

    > I can provide a patch if this change sounds reasonable.

This sounds very reasonable,  thank you Herv?, for the report,
and even more for a (small) patch.

Martin

    > Cheers, H.

    > -- 
    > Herv? Pag?s

    > Program in Computational Biology Division of Public Health
    > Sciences Fred Hutchinson Cancer Research Center 1100
    > Fairview Ave. N, M1-B514 P.O. Box 19024 Seattle, WA
    > 98109-1024

    > E-mail: hpages at fredhutch.org Phone: (206) 667-5791 Fax:
    > (206) 667-1319

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Tue Jun  6 10:07:05 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 6 Jun 2017 10:07:05 +0200
Subject: [Rd] Usage of PROTECT_WITH_INDEX in R-exts
In-Reply-To: <7f60a4f4-3d29-1e2b-04e1-4bfd1d2bc4d0@ivt.baug.ethz.ch>
References: <7f60a4f4-3d29-1e2b-04e1-4bfd1d2bc4d0@ivt.baug.ethz.ch>
Message-ID: <22838.25257.371534.516276@stat.math.ethz.ch>

>>>>> Kirill M?ller <kirill.mueller at ivt.baug.ethz.ch>
>>>>>     on Mon, 5 Jun 2017 17:30:20 +0200 writes:

    > Hi I've noted a minor inconsistency in the documentation:
    > Current R-exts reads

    > s = PROTECT_WITH_INDEX(eval(OS->R_fcall, OS->R_env), &ipx);

    > but I believe it has to be

    > PROTECT_WITH_INDEX(s = eval(OS->R_fcall, OS->R_env), &ipx);

    > because PROTECT_WITH_INDEX() returns void.

Yes indeed, thank you Kirill!

note that the same is true for its partner function|macro REPROTECT()

However, as  PROTECT() is used a gazillion times  and
PROTECT_WITH_INDEX() is used about 100 x less, and PROTECT()
*does* return the SEXP,
I do wonder why PROTECT_WITH_INDEX() and REPROTECT() could not
behave the same as PROTECT()
(a view at the source code seems to suggest a change to be trivial).
I assume usual compiler optimization would not create less
efficient code in case the idiom   PROTECT_WITH_INDEX(s = ...)
is used, i.e., in case the return value is not used ?

Maybe this is mainly a matter of taste,  but I find the use of

   SEXP s = PROTECT(........);

quite nice in typical cases where this appears early in a function.
Also for that reason -- but even more for consistency -- it
would also be nice if  PROTECT_WITH_INDEX()  behaved the same.

Martin

    > Best regards
    > Kirill


From lawrence.michael at gene.com  Tue Jun  6 14:16:24 2017
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Tue, 6 Jun 2017 05:16:24 -0700
Subject: [Rd] surprisingly,
 S4 classes with a "dim" or "dimnames" slot are final (in the Java
 sense)
In-Reply-To: <59360088.2060800@fredhutch.org>
References: <59360088.2060800@fredhutch.org>
Message-ID: <CAOQ5NyfV+Ga2_e2gg2VCdoAR6zFsS2GZYLM3V1m9gb4J10XwUQ@mail.gmail.com>

Thanks for the report. The issue is that one cannot set special attributes
like names, dim, dimnames, etc on S4 objects. I was aready working on this
and will have a fix soon.

> a2 <- new("A2")
> dim(a2) <- c(2, 3)
Error in dim(a2) <- c(2, 3) : invalid first argument


On Mon, Jun 5, 2017 at 6:08 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:

> Hi,
>
> It's nice to be able to define S4 classes with slots that correspond
> to standard attributes:
>
>   setClass("A1", slots=c(names="character"))
>   setClass("A2", slots=c(dim="integer"))
>   setClass("A3", slots=c(dimnames="list"))
>
> By doing this, one gets a few methods for free:
>
>   a1 <- new("A1", names=letters[1:3])
>   names(a1)     # "a" "b" "c"
>   a2 <- new("A2", dim=4:3)
>   nrow(a2)      # 4
>   a3 <- new("A3", dimnames=list(NULL, letters[1:3]))
>   colnames(a3)  # "a" "b" "c"
>
> However, when it comes to subclassing, some of these slots cause
> problems. I can extend A1:
>
>   setClass("B1", contains="A1")
>
> but trying to extend A2 or A3 produces an error (with a non-informative
> message in the 1st case and a somewhat obscure one in the 2nd):
>
>   setClass("B2", contains="A2")
>   # Error in attr(prototype, slotName) <- attr(pri, slotName) :
>   #   invalid first argument
>
>   setClass("B3", contains="A3")
>   # Error in attr(prototype, slotName) <- attr(pri, slotName) :
>   #   'dimnames' applied to non-array
>
> So it seems that the presence of a "dim" or "dimnames" slot prevents a
> class from being extended. Is this expected? I couldn't find anything
> in TFM about this. Sorry if I missed it.
>
> Thanks,
> H.
>
> --
> Herv? Pag?s
>
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M1-B514
> P.O. Box 19024
> Seattle, WA 98109-1024
>
> E-mail: hpages at fredhutch.org
> Phone:  (206) 667-5791
> Fax:    (206) 667-1319
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Tue Jun  6 18:42:57 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 6 Jun 2017 18:42:57 +0200
Subject: [Rd]
	=?utf-8?q?=5Bbug=5D_droplevels=28=29_also_drop_object_attrib?=
	=?utf-8?b?dXRlcyAoY29tbWVudOKApik=?=
In-Reply-To: <22810.49123.10886.612295@stat.math.ethz.ch>
References: <f72658b5-4f45-4936-afb9-a4b4b78dc9a1@Spark>
 <22810.49123.10886.612295@stat.math.ethz.ch>
Message-ID: <22838.56209.805669.458934@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 16 May 2017 11:01:23 +0200 writes:

>>>>> Serge Bibauw <sbibauw at gmail.com>
>>>>>     on Mon, 15 May 2017 11:59:32 -0400 writes:

    >> Hi,

    >> Just reporting a small bug? not really a big deal, but I
    >> don?t think that is intended: droplevels()?also drops all
    >> object?s attributes.

    > Yes.  The help page for droplevels (or the simple
    > definition of 'droplevels.factor') clearly indicate that
    > the method for factors is really just a call to factor(x,
    > exclude = *)

    > and that _is_ quite an important base function whose
    > semantic should not be changed lightly. Still, let's
    > continue :

    > Looking a bit, I see that the current behavior of factor()
    > {and hence droplevels} has been unchanged in this respect
    > for the whole history of R, well, at least for more than
    > 17 years (R 1.0.1, April 2000).

    > I'd agree there _is_ a bug, at least in the documentation
    > which does *not* mention that currently, all attributes
    > are dropped but "names", "levels" (and "class").

    > OTOH, factor() would only need a small change to make it
    > preserve all attributes (but "class" and "levels" which
    > are set explicitly).

    > I'm sure this will break some checks in some packages.  Is
    > it worth it?

> e.g., our own R  QC checks currently check (the printing of) the
> following (in tests/reg-tests-2.R ):

> 	> ## some tests of factor matrices
> 	> A <- factor(7:12)
> 	> dim(A) <- c(2, 3)
> 	> A
> 	     [,1] [,2] [,3]
> 	[1,] 7    9    11  
> 	[2,] 8    10   12  
> 	Levels: 7 8 9 10 11 12
> 	> str(A)
> 	 factor [1:2, 1:3] 7 8 9 10 ...
> 	 - attr(*, "levels")= chr [1:6] "7" "8" "9" "10" ...
> 	> A[, 1:2]
> 	     [,1] [,2]
> 	[1,] 7    9   
> 	[2,] 8    10  
> 	Levels: 7 8 9 10 11 12
> 	> A[, 1:2, drop=TRUE]
> 	[1] 7  8  9  10
> 	Levels: 7 8 9 10
> 
>     with the proposed change to factor(),
>     the last call would change its result:
> 
> 	> A[, 1:2, drop=TRUE]
> 	     [,1] [,2]
> 	[1,] 7    9   
> 	[2,] 8    10  
> 	Levels: 7 8 9 10

    > because 'drop=TRUE' calls factor(..) and that would also
    > preserve the "dim" attribute.  I would think that the
    > changed behavior _is_ better, and is also according to
    > documentation, because the help page for [.factor explains
    > that 'drop = TRUE' drops levels, but _not_ that it
    > transforms a factor matrix into a factor (vector).

    > Martin

I'm finally coming back to this.
It still seems to make sense to change factor() and hence
droplevels() behavior here, and plan to commit this change
within a day.

Martin Maechler
ETH Zurich


From hongooi at microsoft.com  Tue Jun  6 18:50:34 2017
From: hongooi at microsoft.com (Hong Ooi)
Date: Tue, 6 Jun 2017 16:50:34 +0000
Subject: [Rd] Unexpected interaction between missing() and a blank expression
Message-ID: <HK2P15301MB0083C322D8EB5606878CFC60A6CB0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>

This is something I came across just now:

f <- function(x) missing(x)
z <- quote(expr=)

f(z)
# TRUE

The object z contains the equivalent of a missing function argument. Another method for generating a missing arg would be alist(a=)$a .

Should f(z) return TRUE in this case? I interpret missing() as checking whether the parent function call had a value supplied for the given argument. Here, I have supplied an argument (z), so I would expect f to return FALSE.


From pdalgd at gmail.com  Tue Jun  6 20:37:47 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Tue, 6 Jun 2017 20:37:47 +0200
Subject: [Rd] Unexpected interaction between missing() and a blank
 expression
In-Reply-To: <HK2P15301MB0083C322D8EB5606878CFC60A6CB0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>
References: <HK2P15301MB0083C322D8EB5606878CFC60A6CB0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>
Message-ID: <3E910E0D-D822-4FBC-AE31-8B9751B64109@gmail.com>


> On 6 Jun 2017, at 18:50 , Hong Ooi via R-devel <r-devel at r-project.org> wrote:
> 
> This is something I came across just now:
> 
> f <- function(x) missing(x)
> z <- quote(expr=)
> 
> f(z)
> # TRUE
> 
> The object z contains the equivalent of a missing function argument. Another method for generating a missing arg would be alist(a=)$a .
> 
> Should f(z) return TRUE in this case? I interpret missing() as checking whether the parent function call had a value supplied for the given argument. Here, I have supplied an argument (z), so I would expect f to return FALSE.

Missing values propagate in R, e.g.

> f <- function(x) missing(x)
> g <- function(y) f(y)
> g()
[1] TRUE

This is technically done by having a "missing" object, which is not really intended to be visible to users, but pops up in a few esoteric constructions. Trying do anything constructive with the missing object usually leads to grief, or at least surprises, e.g.:

> z <-quote(expr=)
> z <- z
Error: argument "z" is missing, with no default

-pd
-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From lawrence.michael at gene.com  Tue Jun  6 20:48:36 2017
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Tue, 6 Jun 2017 11:48:36 -0700
Subject: [Rd] surprisingly,
 S4 classes with a "dim" or "dimnames" slot are final (in the Java
 sense)
In-Reply-To: <CAOQ5NyfV+Ga2_e2gg2VCdoAR6zFsS2GZYLM3V1m9gb4J10XwUQ@mail.gmail.com>
References: <59360088.2060800@fredhutch.org>
 <CAOQ5NyfV+Ga2_e2gg2VCdoAR6zFsS2GZYLM3V1m9gb4J10XwUQ@mail.gmail.com>
Message-ID: <CAOQ5NycTo42rLtRyh_Xpu78exP7eLnKt2_eDuKWrG5OrQGpiiQ@mail.gmail.com>

I've fixed this and will commit soon.

Disregard my dim<-() example; that behaves as expected (the class needs a
dim<-() method).

Michael

On Tue, Jun 6, 2017 at 5:16 AM, Michael Lawrence <michafla at gene.com> wrote:

> Thanks for the report. The issue is that one cannot set special attributes
> like names, dim, dimnames, etc on S4 objects. I was aready working on this
> and will have a fix soon.
>
> > a2 <- new("A2")
> > dim(a2) <- c(2, 3)
> Error in dim(a2) <- c(2, 3) : invalid first argument
>
>
> On Mon, Jun 5, 2017 at 6:08 PM, Herv? Pag?s <hpages at fredhutch.org> wrote:
>
>> Hi,
>>
>> It's nice to be able to define S4 classes with slots that correspond
>> to standard attributes:
>>
>>   setClass("A1", slots=c(names="character"))
>>   setClass("A2", slots=c(dim="integer"))
>>   setClass("A3", slots=c(dimnames="list"))
>>
>> By doing this, one gets a few methods for free:
>>
>>   a1 <- new("A1", names=letters[1:3])
>>   names(a1)     # "a" "b" "c"
>>   a2 <- new("A2", dim=4:3)
>>   nrow(a2)      # 4
>>   a3 <- new("A3", dimnames=list(NULL, letters[1:3]))
>>   colnames(a3)  # "a" "b" "c"
>>
>> However, when it comes to subclassing, some of these slots cause
>> problems. I can extend A1:
>>
>>   setClass("B1", contains="A1")
>>
>> but trying to extend A2 or A3 produces an error (with a non-informative
>> message in the 1st case and a somewhat obscure one in the 2nd):
>>
>>   setClass("B2", contains="A2")
>>   # Error in attr(prototype, slotName) <- attr(pri, slotName) :
>>   #   invalid first argument
>>
>>   setClass("B3", contains="A3")
>>   # Error in attr(prototype, slotName) <- attr(pri, slotName) :
>>   #   'dimnames' applied to non-array
>>
>> So it seems that the presence of a "dim" or "dimnames" slot prevents a
>> class from being extended. Is this expected? I couldn't find anything
>> in TFM about this. Sorry if I missed it.
>>
>> Thanks,
>> H.
>>
>> --
>> Herv? Pag?s
>>
>> Program in Computational Biology
>> Division of Public Health Sciences
>> Fred Hutchinson Cancer Research Center
>> 1100 Fairview Ave. N, M1-B514
>> P.O. Box 19024
>> Seattle, WA 98109-1024
>>
>> E-mail: hpages at fredhutch.org
>> Phone:  (206) 667-5791
>> Fax:    (206) 667-1319
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

	[[alternative HTML version deleted]]


From kirill.mueller at ivt.baug.ethz.ch  Tue Jun  6 22:14:03 2017
From: kirill.mueller at ivt.baug.ethz.ch (=?UTF-8?Q?Kirill_M=c3=bcller?=)
Date: Tue, 6 Jun 2017 22:14:03 +0200
Subject: [Rd] Usage of PROTECT_WITH_INDEX in R-exts
In-Reply-To: <22838.25257.371534.516276@stat.math.ethz.ch>
References: <7f60a4f4-3d29-1e2b-04e1-4bfd1d2bc4d0@ivt.baug.ethz.ch>
 <22838.25257.371534.516276@stat.math.ethz.ch>
Message-ID: <8a9a6084-2e39-50f1-d043-fa8c5ebdbd66@ivt.baug.ethz.ch>



On 06.06.2017 10:07, Martin Maechler wrote:
>>>>>> Kirill M?ller <kirill.mueller at ivt.baug.ethz.ch>
>>>>>>      on Mon, 5 Jun 2017 17:30:20 +0200 writes:
>      > Hi I've noted a minor inconsistency in the documentation:
>      > Current R-exts reads
>
>      > s = PROTECT_WITH_INDEX(eval(OS->R_fcall, OS->R_env), &ipx);
>
>      > but I believe it has to be
>
>      > PROTECT_WITH_INDEX(s = eval(OS->R_fcall, OS->R_env), &ipx);
>
>      > because PROTECT_WITH_INDEX() returns void.
>
> Yes indeed, thank you Kirill!
>
> note that the same is true for its partner function|macro REPROTECT()
>
> However, as  PROTECT() is used a gazillion times  and
> PROTECT_WITH_INDEX() is used about 100 x less, and PROTECT()
> *does* return the SEXP,
> I do wonder why PROTECT_WITH_INDEX() and REPROTECT() could not
> behave the same as PROTECT()
> (a view at the source code seems to suggest a change to be trivial).
> I assume usual compiler optimization would not create less
> efficient code in case the idiom   PROTECT_WITH_INDEX(s = ...)
> is used, i.e., in case the return value is not used ?
>
> Maybe this is mainly a matter of taste,  but I find the use of
>
>     SEXP s = PROTECT(........);
>
> quite nice in typical cases where this appears early in a function.
> Also for that reason -- but even more for consistency -- it
> would also be nice if  PROTECT_WITH_INDEX()  behaved the same.
Thanks, Martin, this sounds reasonable. I've put together a patch for 
review [1], a diff for applying to SVN (via `cat | patch -p1`) would be 
[2]. The code compiles on my system.


-Kirill


[1] https://github.com/krlmlr/r-source/pull/5/files

[2] https://patch-diff.githubusercontent.com/raw/krlmlr/r-source/pull/5.diff


>
> Martin
>
>      > Best regards
>      > Kirill


From avraham.adler at gmail.com  Tue Jun  6 22:27:23 2017
From: avraham.adler at gmail.com (Avraham Adler)
Date: Tue, 6 Jun 2017 16:27:23 -0400
Subject: [Rd] Philosophy behind converting Fortran to C for use in R
Message-ID: <CAL6gwn+ecV5vU+acf89icX6zYb519M2TbXQAFjyBqQ4MOQqkJA@mail.gmail.com>

Hello.

This is not a question about a bug or even best practices; rather I'm
trying to understand the philosophy or theory as to why certain
portions of the R codebase are written as they are. If this question
is better posed elsewhere, please point me in the proper direction.

In the thread about the issues with the Tukey line, Martin said [1]:

> when this topic came up last (for me) in Dec. 2014, I did spend about 2 days work (or more?)
> to get the FORTRAN code from the 1981 - book (which is abbreviated the "ABC of EDA")
> from a somewhat useful OCR scan into compilable Fortran code and then f2c'ed,
> wrote an R interface function found problems?

I have seen this in the R source code and elsewhere, that native
Fortran is converted to C via f2c and then run as C within R. This is
notwithstanding R's ability to use Fortran, either directly through
.Fortran() [2] or via .Call() using simple helper C-wrappers [3].

I'm curious as to the reason. Is it because much of the code was
written before Fortran 90 compilers were freely available? Does it
help with maintenance or make debugging easier? Is it faster or more
likely to compile cleanly?

Thank you,

Avi

[1] https://stat.ethz.ch/pipermail/r-devel/2017-May/074363.html
[2] Such as kmeans does for the Hartigan-Wong method in the stats package
[2] Such as the mvtnorm package does


From wdunlap at tibco.com  Tue Jun  6 23:34:25 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 6 Jun 2017 14:34:25 -0700
Subject: [Rd] Philosophy behind converting Fortran to C for use in R
In-Reply-To: <CAL6gwn+ecV5vU+acf89icX6zYb519M2TbXQAFjyBqQ4MOQqkJA@mail.gmail.com>
References: <CAL6gwn+ecV5vU+acf89icX6zYb519M2TbXQAFjyBqQ4MOQqkJA@mail.gmail.com>
Message-ID: <CAF8bMcYjWOXhdM05Ce7SZZmkg=H+PYE364ncSM06P_omTmVC=w@mail.gmail.com>

Here are three reasons for converting Fortran code, especially older
Fortran code, to C:

1. The C-Fortran interface is not standardized.  Various Fortran compilers
pass logical and character arguments in various ways.  Various Fortran
compilers mangle function and common block names in variousl ways.  You can
avoid that problem by restricting R to using a certain Fortran compiler,
but that can make porting R to a new platform difficult.

2. By default, variables in Fortran routines are not allocated on the
stack, but are statically allocated, making recursion hard.

3. New CS graduates tend not to know Fortran.

(There are good reasons for not translating as well, risk and time being
the main ones.)


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Tue, Jun 6, 2017 at 1:27 PM, Avraham Adler <avraham.adler at gmail.com>
wrote:

> Hello.
>
> This is not a question about a bug or even best practices; rather I'm
> trying to understand the philosophy or theory as to why certain
> portions of the R codebase are written as they are. If this question
> is better posed elsewhere, please point me in the proper direction.
>
> In the thread about the issues with the Tukey line, Martin said [1]:
>
> > when this topic came up last (for me) in Dec. 2014, I did spend about 2
> days work (or more?)
> > to get the FORTRAN code from the 1981 - book (which is abbreviated the
> "ABC of EDA")
> > from a somewhat useful OCR scan into compilable Fortran code and then
> f2c'ed,
> > wrote an R interface function found problems?
>
> I have seen this in the R source code and elsewhere, that native
> Fortran is converted to C via f2c and then run as C within R. This is
> notwithstanding R's ability to use Fortran, either directly through
> .Fortran() [2] or via .Call() using simple helper C-wrappers [3].
>
> I'm curious as to the reason. Is it because much of the code was
> written before Fortran 90 compilers were freely available? Does it
> help with maintenance or make debugging easier? Is it faster or more
> likely to compile cleanly?
>
> Thank you,
>
> Avi
>
> [1] https://stat.ethz.ch/pipermail/r-devel/2017-May/074363.html
> [2] Such as kmeans does for the Hartigan-Wong method in the stats package
> [2] Such as the mvtnorm package does
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From hpages at fredhutch.org  Wed Jun  7 01:22:32 2017
From: hpages at fredhutch.org (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Tue, 06 Jun 2017 16:22:32 -0700
Subject: [Rd] surprisingly,
 S4 classes with a "dim" or "dimnames" slot are final (in the Java
 sense)
In-Reply-To: <CAOQ5NycTo42rLtRyh_Xpu78exP7eLnKt2_eDuKWrG5OrQGpiiQ@mail.gmail.com>
References: <59360088.2060800@fredhutch.org>
 <CAOQ5NyfV+Ga2_e2gg2VCdoAR6zFsS2GZYLM3V1m9gb4J10XwUQ@mail.gmail.com>
 <CAOQ5NycTo42rLtRyh_Xpu78exP7eLnKt2_eDuKWrG5OrQGpiiQ@mail.gmail.com>
Message-ID: <59373938.7000808@fredhutch.org>

Thanks Michael for taking care of this.  H.

On 06/06/2017 11:48 AM, Michael Lawrence wrote:
> I've fixed this and will commit soon.
>
> Disregard my dim<-() example; that behaves as expected (the class needs
> a dim<-() method).
>
> Michael
>
> On Tue, Jun 6, 2017 at 5:16 AM, Michael Lawrence <michafla at gene.com
> <mailto:michafla at gene.com>> wrote:
>
>     Thanks for the report. The issue is that one cannot set special
>     attributes like names, dim, dimnames, etc on S4 objects. I was
>     aready working on this and will have a fix soon.
>
>      > a2 <- new("A2")
>      > dim(a2) <- c(2, 3)
>     Error in dim(a2) <- c(2, 3) : invalid first argument
>
>
>     On Mon, Jun 5, 2017 at 6:08 PM, Herv? Pag?s <hpages at fredhutch.org
>     <mailto:hpages at fredhutch.org>> wrote:
>
>         Hi,
>
>         It's nice to be able to define S4 classes with slots that correspond
>         to standard attributes:
>
>            setClass("A1", slots=c(names="character"))
>            setClass("A2", slots=c(dim="integer"))
>            setClass("A3", slots=c(dimnames="list"))
>
>         By doing this, one gets a few methods for free:
>
>            a1 <- new("A1", names=letters[1:3])
>            names(a1)     # "a" "b" "c"
>            a2 <- new("A2", dim=4:3)
>            nrow(a2)      # 4
>            a3 <- new("A3", dimnames=list(NULL, letters[1:3]))
>            colnames(a3)  # "a" "b" "c"
>
>         However, when it comes to subclassing, some of these slots cause
>         problems. I can extend A1:
>
>            setClass("B1", contains="A1")
>
>         but trying to extend A2 or A3 produces an error (with a
>         non-informative
>         message in the 1st case and a somewhat obscure one in the 2nd):
>
>            setClass("B2", contains="A2")
>            # Error in attr(prototype, slotName) <- attr(pri, slotName) :
>            #   invalid first argument
>
>            setClass("B3", contains="A3")
>            # Error in attr(prototype, slotName) <- attr(pri, slotName) :
>            #   'dimnames' applied to non-array
>
>         So it seems that the presence of a "dim" or "dimnames" slot
>         prevents a
>         class from being extended. Is this expected? I couldn't find
>         anything
>         in TFM about this. Sorry if I missed it.
>
>         Thanks,
>         H.
>
>         --
>         Herv? Pag?s
>
>         Program in Computational Biology
>         Division of Public Health Sciences
>         Fred Hutchinson Cancer Research Center
>         1100 Fairview Ave. N, M1-B514
>         P.O. Box 19024
>         Seattle, WA 98109-1024
>
>         E-mail: hpages at fredhutch.org <mailto:hpages at fredhutch.org>
>         Phone: (206) 667-5791 <tel:%28206%29%20667-5791>
>         Fax: (206) 667-1319 <tel:%28206%29%20667-1319>
>
>         ______________________________________________
>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-devel
>         <https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwMFaQ&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=7MsydJAWI1B1wsZHDmsO-mpZ_vfvDpTo-YMHgUXrQKQ&s=dXHseRValxgm4TXgSsjasFRGgqAf46IivoNi4VnRj3o&e=>
>
>
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From martyn.byng at nag.co.uk  Wed Jun  7 09:07:33 2017
From: martyn.byng at nag.co.uk (Martyn Byng)
Date: Wed, 7 Jun 2017 07:07:33 +0000
Subject: [Rd] Philosophy behind converting Fortran to C for use in R
In-Reply-To: <CAF8bMcYjWOXhdM05Ce7SZZmkg=H+PYE364ncSM06P_omTmVC=w@mail.gmail.com>
References: <CAL6gwn+ecV5vU+acf89icX6zYb519M2TbXQAFjyBqQ4MOQqkJA@mail.gmail.com>
 <CAF8bMcYjWOXhdM05Ce7SZZmkg=H+PYE364ncSM06P_omTmVC=w@mail.gmail.com>
Message-ID: <DB5PR05MB15284C373683C21D617DBC40A1C80@DB5PR05MB1528.eurprd05.prod.outlook.com>

Hi,

Just a quick comment on (1).

The C-Fortran interface has been standardized since Fortran 2003.  However, it does require the Fortran interface that is being called from C  to have been written with C operability in mind as specific C interoperable types etc. must be used.

Trying to call a Fortran interface that hasn't been written using C interoperable types still suffers from the issues that Bill describes.
 
Martyn

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of William Dunlap via R-devel
Sent: 06 June 2017 22:34
To: Avraham Adler <avraham.adler at gmail.com>
Cc: R-devel <r-devel at r-project.org>
Subject: Re: [Rd] Philosophy behind converting Fortran to C for use in R

Here are three reasons for converting Fortran code, especially older
Fortran code, to C:

1. The C-Fortran interface is not standardized.  Various Fortran compilers
pass logical and character arguments in various ways.  Various Fortran
compilers mangle function and common block names in variousl ways.  You can
avoid that problem by restricting R to using a certain Fortran compiler,
but that can make porting R to a new platform difficult.

2. By default, variables in Fortran routines are not allocated on the
stack, but are statically allocated, making recursion hard.

3. New CS graduates tend not to know Fortran.

(There are good reasons for not translating as well, risk and time being
the main ones.)


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Tue, Jun 6, 2017 at 1:27 PM, Avraham Adler <avraham.adler at gmail.com>
wrote:

> Hello.
>
> This is not a question about a bug or even best practices; rather I'm
> trying to understand the philosophy or theory as to why certain
> portions of the R codebase are written as they are. If this question
> is better posed elsewhere, please point me in the proper direction.
>
> In the thread about the issues with the Tukey line, Martin said [1]:
>
> > when this topic came up last (for me) in Dec. 2014, I did spend about 2
> days work (or more?)
> > to get the FORTRAN code from the 1981 - book (which is abbreviated the
> "ABC of EDA")
> > from a somewhat useful OCR scan into compilable Fortran code and then
> f2c'ed,
> > wrote an R interface function found problems?
>
> I have seen this in the R source code and elsewhere, that native
> Fortran is converted to C via f2c and then run as C within R. This is
> notwithstanding R's ability to use Fortran, either directly through
> .Fortran() [2] or via .Call() using simple helper C-wrappers [3].
>
> I'm curious as to the reason. Is it because much of the code was
> written before Fortran 90 compilers were freely available? Does it
> help with maintenance or make debugging easier? Is it faster or more
> likely to compile cleanly?
>
> Thank you,
>
> Avi
>
> [1] https://stat.ethz.ch/pipermail/r-devel/2017-May/074363.html
> [2] Such as kmeans does for the Hartigan-Wong method in the stats package
> [2] Such as the mvtnorm package does
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

________________________________________________________________________
This e-mail has been scanned for all viruses by Star.
________________________________________________________________________

From maechler at stat.math.ethz.ch  Wed Jun  7 12:54:19 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 7 Jun 2017 12:54:19 +0200
Subject: [Rd] sum() returns NA on a long *logical* vector when nb of
 TRUE values exceeds 2^31
In-Reply-To: <22838.23976.676449.177879@stat.math.ethz.ch>
References: <5931466B.1060407@fredhutch.org>
 <22838.23976.676449.177879@stat.math.ethz.ch>
Message-ID: <22839.56155.109904.1726@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 6 Jun 2017 09:45:44 +0200 writes:

>>>>> Herv? Pag?s <hpages at fredhutch.org>
>>>>>     on Fri, 2 Jun 2017 04:05:15 -0700 writes:

    >> Hi, I have a long numeric vector 'xx' and I want to use
    >> sum() to count the number of elements that satisfy some
    >> criteria like non-zero values or values lower than a
    >> certain threshold etc...

    >> The problem is: sum() returns an NA (with a warning) if
    >> the count is greater than 2^31. For example:

    >>> xx <- runif(3e9) sum(xx < 0.9)
    >> [1] NA Warning message: In sum(xx < 0.9) : integer
    >> overflow - use sum(as.numeric(.))

    >> This already takes a long time and doing
    >> sum(as.numeric(.)) would take even longer and require
    >> allocation of 24Gb of memory just to store an
    >> intermediate numeric vector made of 0s and 1s. Plus,
    >> having to do sum(as.numeric(.)) every time I need to
    >> count things is not convenient and is easy to forget.

    >> It seems that sum() on a logical vector could be modified
    >> to return the count as a double when it cannot be
    >> represented as an integer.  Note that length() already
    >> does this so that wouldn't create a precedent. Also and
    >> FWIW prod() avoids the problem by always returning a
    >> double, whatever the type of the input is (except on a
    >> complex vector).

    >> I can provide a patch if this change sounds reasonable.

    > This sounds very reasonable, thank you Herv?, for the
    > report, and even more for a (small) patch.

I was made aware of the fact, that R treats logical and
integer very often identically in the C code, and in general we
even mention that logicals are treated as 0/1/NA integers in
arithmetic.

For the present case that would mean that we should also
safe-guard against *integer* overflow in sum(.)  and that is
not something we have done / wanted to do in the past...  Speed
being one reason.

So this ends up being more delicate than I had thought at first,
because changing  sum(<logical>)  only would mean that

  sum(LOGI)   	  		  and
  sum(as.integer(LOGI))

would start differ for a logical vector LOGI.

So, for now this is something that must be approached carefully,
and the R Core team may want discuss "in private" first.

I'm sorry for having raised possibly unrealistic expectations.
Martin

    > Martin

    >> Cheers, H.

    >> -- 
    >> Herv? Pag?s

    >> Program in Computational Biology Division of Public
    >> Health Sciences Fred Hutchinson Cancer Research Center
    >> 1100 Fairview Ave. N, M1-B514 P.O. Box 19024 Seattle, WA
    >> 98109-1024

    >> E-mail: hpages at fredhutch.org Phone: (206) 667-5791 Fax:
    >> (206) 667-1319

    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From hpages at fredhutch.org  Thu Jun  8 06:38:10 2017
From: hpages at fredhutch.org (=?ISO-8859-1?Q?Herv=E9_Pag=E8s?=)
Date: Wed, 07 Jun 2017 21:38:10 -0700
Subject: [Rd] sum() returns NA on a long *logical* vector when nb of
 TRUE values exceeds 2^31
In-Reply-To: <22839.56155.109904.1726@stat.math.ethz.ch>
References: <5931466B.1060407@fredhutch.org>	<22838.23976.676449.177879@stat.math.ethz.ch>
 <22839.56155.109904.1726@stat.math.ethz.ch>
Message-ID: <5938D4B2.4080000@fredhutch.org>

Hi Martin,

On 06/07/2017 03:54 AM, Martin Maechler wrote:
>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>      on Tue, 6 Jun 2017 09:45:44 +0200 writes:
>
>>>>>> Herv? Pag?s <hpages at fredhutch.org>
>>>>>>      on Fri, 2 Jun 2017 04:05:15 -0700 writes:
>
>      >> Hi, I have a long numeric vector 'xx' and I want to use
>      >> sum() to count the number of elements that satisfy some
>      >> criteria like non-zero values or values lower than a
>      >> certain threshold etc...
>
>      >> The problem is: sum() returns an NA (with a warning) if
>      >> the count is greater than 2^31. For example:
>
>      >>> xx <- runif(3e9) sum(xx < 0.9)
>      >> [1] NA Warning message: In sum(xx < 0.9) : integer
>      >> overflow - use sum(as.numeric(.))
>
>      >> This already takes a long time and doing
>      >> sum(as.numeric(.)) would take even longer and require
>      >> allocation of 24Gb of memory just to store an
>      >> intermediate numeric vector made of 0s and 1s. Plus,
>      >> having to do sum(as.numeric(.)) every time I need to
>      >> count things is not convenient and is easy to forget.
>
>      >> It seems that sum() on a logical vector could be modified
>      >> to return the count as a double when it cannot be
>      >> represented as an integer.  Note that length() already
>      >> does this so that wouldn't create a precedent. Also and
>      >> FWIW prod() avoids the problem by always returning a
>      >> double, whatever the type of the input is (except on a
>      >> complex vector).
>
>      >> I can provide a patch if this change sounds reasonable.
>
>      > This sounds very reasonable, thank you Herv?, for the
>      > report, and even more for a (small) patch.
>
> I was made aware of the fact, that R treats logical and
> integer very often identically in the C code, and in general we
> even mention that logicals are treated as 0/1/NA integers in
> arithmetic.
>
> For the present case that would mean that we should also
> safe-guard against *integer* overflow in sum(.)  and that is
> not something we have done / wanted to do in the past...  Speed
> being one reason.
>
> So this ends up being more delicate than I had thought at first,
> because changing  sum(<logical>)  only would mean that
>
>    sum(LOGI)   	  		  and
>    sum(as.integer(LOGI))
>
> would start differ for a logical vector LOGI.
>
> So, for now this is something that must be approached carefully,
> and the R Core team may want discuss "in private" first.
>
> I'm sorry for having raised possibly unrealistic expectations.

No worries. Thanks for taking my proposal into consideration.
Note that the isum() function in src/main/summary.c is already using
a 64-bit accumulator to accommodate intermediate sums > INT_MAX.
So it should be easy to modify the function to make it overflow for
much bigger final sums without altering performance. Seems like
R_XLEN_T_MAX would be the natural threshold.

Cheers,
H.


> Martin
>
>      > Martin
>
>      >> Cheers, H.
>
>      >> --
>      >> Herv? Pag?s
>
>      >> Program in Computational Biology Division of Public
>      >> Health Sciences Fred Hutchinson Cancer Research Center
>      >> 1100 Fairview Ave. N, M1-B514 P.O. Box 19024 Seattle, WA
>      >> 98109-1024
>
>      >> E-mail: hpages at fredhutch.org Phone: (206) 667-5791 Fax:
>      >> (206) 667-1319
>
>      >> ______________________________________________
>      >> R-devel at r-project.org mailing list
>      >> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIDAw&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=dyRNzyVdDYXzNX0sXIl5sdDqDXSxROm4-uM_XMquX_E&s=Qq6QdMWvudWgR_WGKdbBVNnVs5JO6s692MxjDo2JR9Y&e=
>
>      > ______________________________________________
>      > R-devel at r-project.org mailing list
>      > https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Ddevel&d=DwIDAw&c=eRAMFD45gAfqt84VtBcfhQ&r=BK7q3XeAvimeWdGbWY_wJYbW0WYiZvSXAJJKaaPhzWA&m=dyRNzyVdDYXzNX0sXIl5sdDqDXSxROm4-uM_XMquX_E&s=Qq6QdMWvudWgR_WGKdbBVNnVs5JO6s692MxjDo2JR9Y&e=
>

-- 
Herv? Pag?s

Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M1-B514
P.O. Box 19024
Seattle, WA 98109-1024

E-mail: hpages at fredhutch.org
Phone:  (206) 667-5791
Fax:    (206) 667-1319


From JTELLERIA at external.gamesacorp.com  Thu Jun  8 12:31:59 2017
From: JTELLERIA at external.gamesacorp.com (TELLERIA RUIZ DE AGUIRRE, JUAN)
Date: Thu, 8 Jun 2017 10:31:59 +0000
Subject: [Rd] SUGGESTION: Use JIRA for Bug Reporting,
 Package Development and Project Management
Message-ID: <C7D958509BBBF44A8F8F9CBE5BE9400764C6A9D1@EXDG04.usr.corp.gamesa.es>

Dear R Developers,

I started programming in R just last January, for which I read (, summarized and memorized) 2 incredible R Programming books: "R Cookbook" and "R Graphics Cookbook".

However, I did before know how to program in MariaDB SQL language, and had submitted for their bug platform previously some bugs (https://jira.mariadb.org/projects/MDEV/issues), which is based on JIRA:

https://www.atlassian.com/software/jira

On the other hand, R has the mailing list, which is really simple, but:
a) I found it really difficult at first to understand how it worked.
b) I feel it does not fully respect the privacy of the package maintainers.
c) And it can give place to e-mail Spam.

In fact, Rstudio has disabled bug.report(package = "somePkg") command in order to avoid misuse.

That is why I would suggest that, being JIRA free for Open Source Projects such as R:

https://de.atlassian.com/software/views/open-source-license-request

It would be really worth it to start using this modern platform gradually instead of Bugzilla, or the mailing lists, for new R developed packages.

This would imply a considerable change to the R community, but I really think it would be worth it, and would help it to improve and be even greater. Although I might be wrong, and there might be different point of views which could be better than mine. However, I do sincerely think that testing this platform instead of Bugzilla would be really worth it.

Hope my suggestion is useful.

Kind regards,
Juan Telleria

	[[alternative HTML version deleted]]


From kirill.mueller at ivt.baug.ethz.ch  Thu Jun  8 12:55:26 2017
From: kirill.mueller at ivt.baug.ethz.ch (=?UTF-8?Q?Kirill_M=c3=bcller?=)
Date: Thu, 8 Jun 2017 12:55:26 +0200
Subject: [Rd] Usage of PROTECT_WITH_INDEX in R-exts
In-Reply-To: <8a9a6084-2e39-50f1-d043-fa8c5ebdbd66@ivt.baug.ethz.ch>
References: <7f60a4f4-3d29-1e2b-04e1-4bfd1d2bc4d0@ivt.baug.ethz.ch>
 <22838.25257.371534.516276@stat.math.ethz.ch>
 <8a9a6084-2e39-50f1-d043-fa8c5ebdbd66@ivt.baug.ethz.ch>
Message-ID: <0e511f62-2372-a0d3-6962-3de22246eb78@ivt.baug.ethz.ch>

On 06.06.2017 22:14, Kirill M?ller wrote:
>
>
> On 06.06.2017 10:07, Martin Maechler wrote:
>>>>>>> Kirill M?ller <kirill.mueller at ivt.baug.ethz.ch>
>>>>>>>      on Mon, 5 Jun 2017 17:30:20 +0200 writes:
>>      > Hi I've noted a minor inconsistency in the documentation:
>>      > Current R-exts reads
>>
>>      > s = PROTECT_WITH_INDEX(eval(OS->R_fcall, OS->R_env), &ipx);
>>
>>      > but I believe it has to be
>>
>>      > PROTECT_WITH_INDEX(s = eval(OS->R_fcall, OS->R_env), &ipx);
>>
>>      > because PROTECT_WITH_INDEX() returns void.
>>
>> Yes indeed, thank you Kirill!
>>
>> note that the same is true for its partner function|macro REPROTECT()
>>
>> However, as  PROTECT() is used a gazillion times  and
>> PROTECT_WITH_INDEX() is used about 100 x less, and PROTECT()
>> *does* return the SEXP,
>> I do wonder why PROTECT_WITH_INDEX() and REPROTECT() could not
>> behave the same as PROTECT()
>> (a view at the source code seems to suggest a change to be trivial).
>> I assume usual compiler optimization would not create less
>> efficient code in case the idiom   PROTECT_WITH_INDEX(s = ...)
>> is used, i.e., in case the return value is not used ?
>>
>> Maybe this is mainly a matter of taste,  but I find the use of
>>
>>     SEXP s = PROTECT(........);
>>
>> quite nice in typical cases where this appears early in a function.
>> Also for that reason -- but even more for consistency -- it
>> would also be nice if  PROTECT_WITH_INDEX()  behaved the same.
> Thanks, Martin, this sounds reasonable. I've put together a patch for 
> review [1], a diff for applying to SVN (via `cat | patch -p1`) would 
> be [2]. The code compiles on my system.
>
>
> -Kirill
>
>
> [1] https://github.com/krlmlr/r-source/pull/5/files
>
> [2] 
> https://patch-diff.githubusercontent.com/raw/krlmlr/r-source/pull/5.diff

I forgot to mention that this patch applies cleanly to r72768.


-Kirill

>
>
>>
>> Martin
>>
>>      > Best regards
>>      > Kirill
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From sahil.kang at asilaycomputing.com  Thu Jun  8 13:23:42 2017
From: sahil.kang at asilaycomputing.com (Sahil Kang)
Date: Thu, 08 Jun 2017 04:23:42 -0700
Subject: [Rd] SUGGESTION: Use JIRA for Bug Reporting,
	Package Development and Project Management
In-Reply-To: <C7D958509BBBF44A8F8F9CBE5BE9400764C6A9D1@EXDG04.usr.corp.gamesa.es>
References: <C7D958509BBBF44A8F8F9CBE5BE9400764C6A9D1@EXDG04.usr.corp.gamesa.es>
Message-ID: <529E426D-252E-4062-9712-663DD2FCCAE4@asilaycomputing.com>

I enjoy the simplicity of a mailing list; I'd prefer not to create a new user account to participate in a software project. Plenty of other software communities utilize mailing lists, and I think you'll also begin to prefer email as you get more involved with software projects.

R is also a GNU package? so I don't think it's a good idea to use a closed source product like JIRA. I also think it's easier for the core devs to manage a mailing list instead of a JIRA instance.

I'm not sure what you mean about privacy concerns for package maintainers; can you elaborate?

Sahil


From JTELLERIA at external.gamesacorp.com  Thu Jun  8 13:41:27 2017
From: JTELLERIA at external.gamesacorp.com (TELLERIA RUIZ DE AGUIRRE, JUAN)
Date: Thu, 8 Jun 2017 11:41:27 +0000
Subject: [Rd] SUGGESTION: Use JIRA for Bug Reporting,
 Package Development and Project Management
In-Reply-To: <529E426D-252E-4062-9712-663DD2FCCAE4@asilaycomputing.com>
References: <C7D958509BBBF44A8F8F9CBE5BE9400764C6A9D1@EXDG04.usr.corp.gamesa.es>
 <529E426D-252E-4062-9712-663DD2FCCAE4@asilaycomputing.com>
Message-ID: <C7D958509BBBF44A8F8F9CBE5BE9400764C6B1FB@EXDG04.usr.corp.gamesa.es>

#############################################################################################################################
## JIRA
#############################################################################################################################

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# - Advantages
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- It would allow the community (other than maintainers) to freely contribute giving suggestions to R patches on Packages, or R Base Code , boosting innovation.

- It does allow to attach documents, and sample files directly in the platform.

- Agile Project Management, open and in eyes of the community during the development.

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# - Disadvantages
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- That JIRA stops being Free at some time for Open Source Project (Maybe in 20 years from now). So it would be critical to be able to ensure, by some sort of agreement, 
   that JIRA will be ALWAYS be free for R, as a life-long project.

- Need an account.

- ?Complex?

#############################################################################################################################
## Mailing List & Bugzilla
#############################################################################################################################

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# - Privacy
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- What I mean with privacy concerns is that a developer has its e-mail exposed to the whole Internet, which might be what is desired, or not.

- ?Spam?

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# - Advantages
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- Simplicity.

- Accessible.

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# - Disadvantages
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-  Easy to manage if you are part of few projects, but ?Is it also easy to manage when you are part of a lot of projects? ?And deliver all of them on time? 

-  Does not allow big file sharing, neither have them saved.

From murdoch.duncan at gmail.com  Thu Jun  8 16:51:40 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 8 Jun 2017 10:51:40 -0400
Subject: [Rd] SUGGESTION: Use JIRA for Bug Reporting,
 Package Development and Project Management
In-Reply-To: <C7D958509BBBF44A8F8F9CBE5BE9400764C6A9D1@EXDG04.usr.corp.gamesa.es>
References: <C7D958509BBBF44A8F8F9CBE5BE9400764C6A9D1@EXDG04.usr.corp.gamesa.es>
Message-ID: <edf35ca1-2d66-d2aa-014b-34989ef95a10@gmail.com>

On 08/06/2017 6:31 AM, TELLERIA RUIZ DE AGUIRRE, JUAN wrote:
> Dear R Developers,
>
> I started programming in R just last January, for which I read (, summarized and memorized) 2 incredible R Programming books: "R Cookbook" and "R Graphics Cookbook".
>
> However, I did before know how to program in MariaDB SQL language, and had submitted for their bug platform previously some bugs (https://jira.mariadb.org/projects/MDEV/issues), which is based on JIRA:
>
> https://www.atlassian.com/software/jira
>
> On the other hand, R has the mailing list, which is really simple, but:
> a) I found it really difficult at first to understand how it worked.
> b) I feel it does not fully respect the privacy of the package maintainers.
> c) And it can give place to e-mail Spam.
>
> In fact, Rstudio has disabled bug.report(package = "somePkg") command in order to avoid misuse.
>
> That is why I would suggest that, being JIRA free for Open Source Projects such as R:
>
> https://de.atlassian.com/software/views/open-source-license-request
>
> It would be really worth it to start using this modern platform gradually instead of Bugzilla, or the mailing lists, for new R developed packages.
>
> This would imply a considerable change to the R community, but I really think it would be worth it, and would help it to improve and be even greater. Although I might be wrong, and there might be different point of views which could be better than mine. However, I do sincerely think that testing this platform instead of Bugzilla would be really worth it.
>
> Hope my suggestion is useful.

You are talking about R and its packages as though they are all part of 
one project, but in fact most packages are separate projects.  Many of 
them use other systems for bug reporting and contributions.  Github is 
quite popular these days; many older packages use R-forge, and of course 
Bioconductor provides its own facilities.

I think it's unlikely that R itself would move to JIRA, for the reasons 
Sahil gave, and other reasons (including inertia).  But if you are 
arguing that individual packages should move to JIRA, you need to 
explain why it is better than Github, R-forge, Bioconductor, etc, not 
just better than the mailing lists.  I think it will be hard to make the 
argument, because all of those have R-specific features, as well as 
existing communities to go to for help.

Duncan Murdoch


From JTELLERIA at external.gamesacorp.com  Thu Jun  8 17:13:42 2017
From: JTELLERIA at external.gamesacorp.com (TELLERIA RUIZ DE AGUIRRE, JUAN)
Date: Thu, 8 Jun 2017 15:13:42 +0000
Subject: [Rd] SUGGESTION: Use JIRA for Bug Reporting,
 Package Development and Project Management
In-Reply-To: <edf35ca1-2d66-d2aa-014b-34989ef95a10@gmail.com>
References: <C7D958509BBBF44A8F8F9CBE5BE9400764C6A9D1@EXDG04.usr.corp.gamesa.es>
 <edf35ca1-2d66-d2aa-014b-34989ef95a10@gmail.com>
Message-ID: <C7D958509BBBF44A8F8F9CBE5BE9400764C6B249@EXDG04.usr.corp.gamesa.es>

Thank you Duncan.

You really have a point. 

I made my suggestion based on a comparison between MariaDB Server (GNU GPL v2) Bug Reporting System (JIRA: https://jira.mariadb.org/projects/MDEV/issues & Github: https://github.com/MariaDB) and R (GNU GPL v2); and I thought "Base R" (Bugzilla / R-Devel) or "Packages" (Github, R-forge, Bioconductor, Mailing-List) could benefit from it, at it is a powerful resource in my opinion that community shall be aware off.

However, as it is right now it is also great.

Kind regards,
Juan

-----Mensaje original-----
De: Duncan Murdoch [mailto:murdoch.duncan at gmail.com] 
Enviado el: jueves, 08 de junio de 2017 16:52
Para: TELLERIA RUIZ DE AGUIRRE, JUAN; r-devel at r-project.org
Asunto: Re: [Rd] SUGGESTION: Use JIRA for Bug Reporting, Package Development and Project Management

On 08/06/2017 6:31 AM, TELLERIA RUIZ DE AGUIRRE, JUAN wrote:
> Dear R Developers,
>
> I started programming in R just last January, for which I read (, summarized and memorized) 2 incredible R Programming books: "R Cookbook" and "R Graphics Cookbook".
>
> However, I did before know how to program in MariaDB SQL language, and had submitted for their bug platform previously some bugs (https://jira.mariadb.org/projects/MDEV/issues), which is based on JIRA:
>
> https://www.atlassian.com/software/jira
>
> On the other hand, R has the mailing list, which is really simple, but:
> a) I found it really difficult at first to understand how it worked.
> b) I feel it does not fully respect the privacy of the package maintainers.
> c) And it can give place to e-mail Spam.
>
> In fact, Rstudio has disabled bug.report(package = "somePkg") command in order to avoid misuse.
>
> That is why I would suggest that, being JIRA free for Open Source Projects such as R:
>
> https://de.atlassian.com/software/views/open-source-license-request
>
> It would be really worth it to start using this modern platform gradually instead of Bugzilla, or the mailing lists, for new R developed packages.
>
> This would imply a considerable change to the R community, but I really think it would be worth it, and would help it to improve and be even greater. Although I might be wrong, and there might be different point of views which could be better than mine. However, I do sincerely think that testing this platform instead of Bugzilla would be really worth it.
>
> Hope my suggestion is useful.

You are talking about R and its packages as though they are all part of one project, but in fact most packages are separate projects.  Many of them use other systems for bug reporting and contributions.  Github is quite popular these days; many older packages use R-forge, and of course Bioconductor provides its own facilities.

I think it's unlikely that R itself would move to JIRA, for the reasons Sahil gave, and other reasons (including inertia).  But if you are arguing that individual packages should move to JIRA, you need to explain why it is better than Github, R-forge, Bioconductor, etc, not just better than the mailing lists.  I think it will be hard to make the argument, because all of those have R-specific features, as well as existing communities to go to for help.

Duncan Murdoch


From suharto_anggono at yahoo.com  Thu Jun  8 18:43:48 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Thu, 8 Jun 2017 16:43:48 +0000 (UTC)
Subject: [Rd]
 =?utf-8?q?=5Bbug=5D_droplevels=28=29_also_drop_object_attrib?=
 =?utf-8?b?dXRlcyAoY29tbWVudOKApik=?=
References: <1712849959.4690482.1496940228671.ref@mail.yahoo.com>
Message-ID: <1712849959.4690482.1496940228671@mail.yahoo.com>

* Be careful with "contrasts" attribute. If the number of levels is reduced, the original contrasts matrix is no longer valid.
Example case:
x <- factor(c("a", "a", "b", "b", "b"), levels = c("a", "b", "c"))
contrasts(x) <- contr.treatment(levels(x), contrasts=FALSE)[, -2, drop=FALSE]
droplevels(x)

* If function 'factor' is changed, make sure that as.factor(x) and factor(x) is the same for 'x' where is.integer(x) is TRUE. Currently, as.factor(<integer>) is treated specially.

* It is possible that names(x) is not attr(x, "names"). For example, 'x' is a "POSIXlt" object.
Look at this example, which works in R 3.3.2.
x <- as.POSIXlt("2017-01-01", tz="UTC")
factor(x, levels=x)


By the way, in NEWS, in "CHANGES IN R 3.4.0", in "SIGNIFICANT USER-VISIBLE CHANGES", there is "factor() now uses order() to sort its levels". It is false. Code of function 'factor' in R 3.4.0 (https://svn.r-project.org/R/tags/R-3-4-0/src/library/base/R/factor.R) still uses 'sort.list', not 'order'.

--------------------------------
>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 16 May 2017 11:01:23 +0200 writes:

>>>>> Serge Bibauw <sbibauw at gmail.com>
>>>>>     on Mon, 15 May 2017 11:59:32 -0400 writes:

    >> Hi,

    >> Just reporting a small bug? not really a big deal, but I
    >> don?t think that is intended: droplevels() also drops all
    >> object?s attributes.

    > Yes.  The help page for droplevels (or the simple
    > definition of 'droplevels.factor') clearly indicate that
    > the method for factors is really just a call to factor(x,
    > exclude = *)

    > and that _is_ quite an important base function whose
    > semantic should not be changed lightly. Still, let's
    > continue :

    > Looking a bit, I see that the current behavior of factor()
    > {and hence droplevels} has been unchanged in this respect
    > for the whole history of R, well, at least for more than
    > 17 years (R 1.0.1, April 2000).

    > I'd agree there _is_ a bug, at least in the documentation
    > which does *not* mention that currently, all attributes
    > are dropped but "names", "levels" (and "class").

    > OTOH, factor() would only need a small change to make it
    > preserve all attributes (but "class" and "levels" which
    > are set explicitly).

    > I'm sure this will break some checks in some packages.  Is
    > it worth it?

> e.g., our own R  QC checks currently check (the printing of) the
> following (in tests/reg-tests-2.R ):

> 	> ## some tests of factor matrices
> 	> A <- factor(7:12)
> 	> dim(A) <- c(2, 3)
> 	> A
> 	     [,1] [,2] [,3]
> 	[1,] 7    9    11  
> 	[2,] 8    10   12  
> 	Levels: 7 8 9 10 11 12
> 	> str(A)
> 	 factor [1:2, 1:3] 7 8 9 10 ...
> 	 - attr(*, "levels")= chr [1:6] "7" "8" "9" "10" ...
> 	> A[, 1:2]
> 	     [,1] [,2]
> 	[1,] 7    9   
> 	[2,] 8    10  
> 	Levels: 7 8 9 10 11 12
> 	> A[, 1:2, drop=TRUE]
> 	[1] 7  8  9  10
> 	Levels: 7 8 9 10
> 
>     with the proposed change to factor(),
>     the last call would change its result:
> 
> 	> A[, 1:2, drop=TRUE]
> 	     [,1] [,2]
> 	[1,] 7    9   
> 	[2,] 8    10  
> 	Levels: 7 8 9 10

    > because 'drop=TRUE' calls factor(..) and that would also
    > preserve the "dim" attribute.  I would think that the
    > changed behavior _is_ better, and is also according to
    > documentation, because the help page for [.factor explains
    > that 'drop = TRUE' drops levels, but _not_ that it
    > transforms a factor matrix into a factor (vector).

    > Martin

I'm finally coming back to this.
It still seems to make sense to change factor() and hence
droplevels() behavior here, and plan to commit this change
within a day.

Martin Maechler
ETH Zurich


From jgbradley1 at gmail.com  Thu Jun  8 23:29:00 2017
From: jgbradley1 at gmail.com (Joshua Bradley)
Date: Thu, 8 Jun 2017 17:29:00 -0400
Subject: [Rd] Creating a private CRAN with webpages
Message-ID: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>

Hello,

I am trying to setup a private CRAN for work (behind a firewall). The best
options available include miniCRAN
<https://github.com/RevolutionAnalytics/miniCRAN>, drat
<https://github.com/eddelbuettel/drat> and packrat
<https://rstudio.github.io/packrat/>. One problem is these packages do not
automatically generate the web pages that are on the CRAN.

Examples:
https://cran.r-project.org/web/packages/index.html
https://cran.r-project.org/web/packages/available_packages_by_name.html

Each time the CRAN adds a package, there must be an automated process in
place to regenerate the pages again with the new package added (example - A3
<https://cran.r-project.org/web/packages/A3/index.html>). I read somewhere
(possibly on stackoverflow) that the CRAN html pages are statically built.
I would like for users to be able to explore the packages in my private
CRAN just like the public CRAN without having to open R and search for
packages/documentation through the command line.

The R Manual includes a small section
<https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Setting-up-a-package-repository>
on setting up a repository but it only discusses the structure of the
directories needed to host packages. Nothing is mentioned about how the
CRAN creates/updates the /web directory. What is the best way to
generate/maintain the web pages for a private CRAN?

P.S. Let me know if this question is best answered on one of the other
mailing lists.

Josh Bradley

	[[alternative HTML version deleted]]


From Rainer at krugs.de  Fri Jun  9 08:36:31 2017
From: Rainer at krugs.de (Rainer Krug)
Date: Fri, 9 Jun 2017 08:36:31 +0200
Subject: [Rd] Creating a private CRAN with webpages
In-Reply-To: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
References: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
Message-ID: <EE6556A9-D7B8-4D72-A36A-5CB876854ED1@krugs.de>

If I understand you correctly, you want to have a mirror of CRAN on a private server behind your firewall. Check out https://cran.rstudio.com/mirror-howto.html <https://cran.rstudio.com/mirror-howto.html> which gives instructions on how to do this.

Cheers,

Rainer

> On 8 Jun 2017, at 23:29, Joshua Bradley <jgbradley1 at gmail.com> wrote:
> 
> Hello,
> 
> I am trying to setup a private CRAN for work (behind a firewall). The best
> options available include miniCRAN
> <https://github.com/RevolutionAnalytics/miniCRAN>, drat
> <https://github.com/eddelbuettel/drat> and packrat
> <https://rstudio.github.io/packrat/>. One problem is these packages do not
> automatically generate the web pages that are on the CRAN.
> 
> Examples:
> https://cran.r-project.org/web/packages/index.html
> https://cran.r-project.org/web/packages/available_packages_by_name.html
> 
> Each time the CRAN adds a package, there must be an automated process in
> place to regenerate the pages again with the new package added (example - A3
> <https://cran.r-project.org/web/packages/A3/index.html>). I read somewhere
> (possibly on stackoverflow) that the CRAN html pages are statically built.
> I would like for users to be able to explore the packages in my private
> CRAN just like the public CRAN without having to open R and search for
> packages/documentation through the command line.
> 
> The R Manual includes a small section
> <https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Setting-up-a-package-repository>
> on setting up a repository but it only discusses the structure of the
> directories needed to host packages. Nothing is mentioned about how the
> CRAN creates/updates the /web directory. What is the best way to
> generate/maintain the web pages for a private CRAN?
> 
> P.S. Let me know if this question is best answered on one of the other
> mailing lists.
> 
> Josh Bradley
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57

Fax (D):    +49 - (0)3 21 21 25 22 44

email:      Rainer at krugs.de

Skype:      RMkrug

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170609/05d46fa8/attachment.sig>

From jgbradley1 at gmail.com  Fri Jun  9 08:44:52 2017
From: jgbradley1 at gmail.com (Joshua Bradley)
Date: Fri, 9 Jun 2017 02:44:52 -0400
Subject: [Rd] Creating a private CRAN with webpages
In-Reply-To: <CED2E38E-2C4C-452F-AFCF-46416C1836EC@icloud.com>
References: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
 <CED2E38E-2C4C-452F-AFCF-46416C1836EC@icloud.com>
Message-ID: <CAKShX4DwkwUcxfx32V1FiOzTnGCUrki5YQ2fxLFqtwU0o6zCaA@mail.gmail.com>

I'm not trying to create a mirror of the CRAN. I also do not want to create
a "subset" of CRAN packages. Sorry if my explanation was confusing. There
are internal proprietary R packages that I would like to host on a private
repo. I like the CRAN web pages that allow a user to browse the various
packages from a browser without having to first install them. I want to
duplicate the process that CRAN goes through when it generate the webpages.

Josh Bradley

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Fri Jun  9 08:47:25 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 9 Jun 2017 08:47:25 +0200
Subject: [Rd] Creating a private CRAN with webpages
In-Reply-To: <EE6556A9-D7B8-4D72-A36A-5CB876854ED1@krugs.de>
References: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
 <EE6556A9-D7B8-4D72-A36A-5CB876854ED1@krugs.de>
Message-ID: <22842.17533.29059.81844@stat.math.ethz.ch>

>>>>> Rainer Krug <Rainer at krugs.de>
>>>>>     on Fri, 9 Jun 2017 08:36:31 +0200 writes:

    > If I understand you correctly, you want to have a mirror
    > of CRAN on a private server behind your firewall. Check
    > out https://cran.rstudio.com/mirror-howto.html
    > <https://cran.rstudio.com/mirror-howto.html> which gives
    > instructions on how to do this.  Cheers,

    > Rainer

Yes, definitely:  Just use your private CRAN mirror... and instead
of the above URL, one with the same speed (and AFAIK still
sponsored by the same monney) is
  https://cloud.r-project.org/mirror-howto.html

There it tells you to use  rsync, and I strongly recommend you do!  

Martin Maechler,
ETH Zurich
(running one of the oldest - public - CRAN Mirrors)


    >> On 8 Jun 2017, at 23:29, Joshua Bradley
    >> <jgbradley1 at gmail.com> wrote:
    >> 
    >> Hello,
    >> 
    >> I am trying to setup a private CRAN for work (behind a
    >> firewall). The best options available include miniCRAN
    >> <https://github.com/RevolutionAnalytics/miniCRAN>, drat
    >> <https://github.com/eddelbuettel/drat> and packrat
    >> <https://rstudio.github.io/packrat/>. One problem is
    >> these packages do not automatically generate the web
    >> pages that are on the CRAN.
    >> 
    >> Examples:
    >> https://cran.r-project.org/web/packages/index.html
    >> https://cran.r-project.org/web/packages/available_packages_by_name.html
    >> 
    >> Each time the CRAN adds a package, there must be an
    >> automated process in place to regenerate the pages again
    >> with the new package added (example - A3
    >> <https://cran.r-project.org/web/packages/A3/index.html>). I
    >> read somewhere (possibly on stackoverflow) that the CRAN
    >> html pages are statically built.  I would like for users
    >> to be able to explore the packages in my private CRAN
    >> just like the public CRAN without having to open R and
    >> search for packages/documentation through the command
    >> line.
    >> 
    >> The R Manual includes a small section
    >> <https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Setting-up-a-package-repository>
    >> on setting up a repository but it only discusses the
    >> structure of the directories needed to host
    >> packages. Nothing is mentioned about how the CRAN
    >> creates/updates the /web directory. What is the best way
    >> to generate/maintain the web pages for a private CRAN?
    >> 
    >> P.S. Let me know if this question is best answered on one
    >> of the other mailing lists.
    >> 
    >> Josh Bradley
    >> 
    >> [[alternative HTML version deleted]]
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > --
    > Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc
    > (Conservation Biology, UCT), Dipl. Phys. (Germany)

    > University of Z?rich

    > Cell: +41 (0)78 630 66 57

    > Fax (D): +49 - (0)3 21 21 25 22 44

    > email: Rainer at krugs.de

    > Skype: RMkrug

    > xapplication/pgp-signature [Click mouse-2 to save to a
    > file]

    > ----------------------------------------------------------------------
    > ______________________________________________
    > R-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Fri Jun  9 13:23:07 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 9 Jun 2017 13:23:07 +0200
Subject: [Rd] Usage of PROTECT_WITH_INDEX in R-exts
In-Reply-To: <0e511f62-2372-a0d3-6962-3de22246eb78@ivt.baug.ethz.ch>
References: <7f60a4f4-3d29-1e2b-04e1-4bfd1d2bc4d0@ivt.baug.ethz.ch>
 <22838.25257.371534.516276@stat.math.ethz.ch>
 <8a9a6084-2e39-50f1-d043-fa8c5ebdbd66@ivt.baug.ethz.ch>
 <0e511f62-2372-a0d3-6962-3de22246eb78@ivt.baug.ethz.ch>
Message-ID: <22842.34075.222428.216738@stat.math.ethz.ch>

>>>>> Kirill M?ller <kirill.mueller at ivt.baug.ethz.ch>
>>>>>     on Thu, 8 Jun 2017 12:55:26 +0200 writes:

    > On 06.06.2017 22:14, Kirill M?ller wrote:
    >> 
    >> 
    >> On 06.06.2017 10:07, Martin Maechler wrote:
    >>>>>>>> Kirill M?ller <kirill.mueller at ivt.baug.ethz.ch> on
    >>>>>>>> Mon, 5 Jun 2017 17:30:20 +0200 writes:
    >>> > Hi I've noted a minor inconsistency in the
    >>> documentation: > Current R-exts reads
    >>> 
    >>> > s = PROTECT_WITH_INDEX(eval(OS->R_fcall, OS->R_env),
    >>> &ipx);
    >>> 
    >>> > but I believe it has to be
    >>> 
    >>> > PROTECT_WITH_INDEX(s = eval(OS->R_fcall, OS->R_env),
    >>> &ipx);
    >>> 
    >>> > because PROTECT_WITH_INDEX() returns void.
    >>> 
    >>> Yes indeed, thank you Kirill!
    >>> 
    >>> note that the same is true for its partner
    >>> function|macro REPROTECT()
    >>> 
    >>> However, as PROTECT() is used a gazillion times and
    >>> PROTECT_WITH_INDEX() is used about 100 x less, and
    >>> PROTECT() *does* return the SEXP, I do wonder why
    >>> PROTECT_WITH_INDEX() and REPROTECT() could not behave
    >>> the same as PROTECT() (a view at the source code seems
    >>> to suggest a change to be trivial).  I assume usual
    >>> compiler optimization would not create less efficient
    >>> code in case the idiom PROTECT_WITH_INDEX(s = ...)  is
    >>> used, i.e., in case the return value is not used ?
    >>> 
    >>> Maybe this is mainly a matter of taste, but I find the
    >>> use of
    >>> 
    >>> SEXP s = PROTECT(........);
    >>> 
    >>> quite nice in typical cases where this appears early in
    >>> a function.  Also for that reason -- but even more for
    >>> consistency -- it would also be nice if
    >>> PROTECT_WITH_INDEX() behaved the same.
    >> Thanks, Martin, this sounds reasonable. I've put together
    >> a patch for review [1], a diff for applying to SVN (via
    >> `cat | patch -p1`) would be [2]. The code compiles on my
    >> system.
    >> 
    >> 
    >> -Kirill
    >> 
    >> 
    >> [1] https://github.com/krlmlr/r-source/pull/5/files
    >> 
    >> [2]
    >> https://patch-diff.githubusercontent.com/raw/krlmlr/r-source/pull/5.diff

    > I forgot to mention that this patch applies cleanly to r72768.

Thank you, Kirill.
I've been a bit busy so did not get to reply more quickly.

Just to be clear: I did not ask for a patch but was _asking_ /
requesting comments about the possibility to do that.

In the mean time, within the core team, the opinions were
mixed and costs of the change (recompilations needed, C source level
check tools would need updating / depend on R versions) are
clearly non-zero.

As a consquence, we will fix the documentation, rather than changing the API.
Martin


From edd at debian.org  Fri Jun  9 13:34:58 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 9 Jun 2017 06:34:58 -0500
Subject: [Rd] Creating a private CRAN with webpages
In-Reply-To: <CAKShX4DwkwUcxfx32V1FiOzTnGCUrki5YQ2fxLFqtwU0o6zCaA@mail.gmail.com>
References: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
 <CED2E38E-2C4C-452F-AFCF-46416C1836EC@icloud.com>
 <CAKShX4DwkwUcxfx32V1FiOzTnGCUrki5YQ2fxLFqtwU0o6zCaA@mail.gmail.com>
Message-ID: <22842.34786.743789.364253@max.eddelbuettel.com>


On 9 June 2017 at 02:44, Joshua Bradley wrote:
| repo. I like the CRAN web pages that allow a user to browse the various
| packages from a browser without having to first install them. I want to
| duplicate the process that CRAN goes through when it generate the webpages.

As your initial email correctly identified, none of miniCRAN, drat, ... do
this currently.

So this is how open source works: you identified a need, now you can go off
and fill it. ;-) You have the PACKAGES{,.gz,.rds} files from your repo. So
accessing packageDescription() for each package is a given.  I do so in
CRANberries for new packages, and while that (ugly) code is (still) not
public, the relevant function for that is

writeNewBlogEntry <- function(curPkg, curVer, reposurl) {
    ## and compute some sort of output for new package -- maybe get description ? NB does NOT work for BioC
    blogpost <- file.path(blogInputDir, "new", paste(curPkg, "_", curVer, ".txt", sep=""))
    con <- file(blogpost, "wt")
    cat("New package", curPkg, "with initial version", curVer,"\n\n", file=con)
    dcf <- read.dcf( url(getDescriptionUrl(curPkg, reposurl)) )
    for (i in 1:ncol(dcf)) {
        cat("<strong>", colnames(dcf)[i], "</strong>: ", htmlEscape(dcf[1,i]), "<br>\n", sep="", file=con)
    }
    closeBlogPost(con, reposurl, curPkg)
}

(The read.dcf() off the package URL is no longer needed with CRAN_package_db().)

A corresponding file for the most recent 'new' package:

-----------------------------------------------------------------------------
New package Risk with initial version 1.0 

<strong>Package</strong>: Risk<br>
<strong>Type</strong>: Package<br>
<strong>Title</strong>: Computes 26 Financial Risk Measures for Any Continuous
Distribution<br>
<strong>Version</strong>: 1.0<br>
<strong>Date</strong>: 2017-06-05<br>
<strong>Author</strong>: Saralees Nadarajah, Stephen Chan<br>
<strong>Maintainer</strong>: Saralees Nadarajah &lt;mbbsssn2 at manchester.ac.uk&gt;<br>
<strong>Depends</strong>: R (&gt;= 3.0.1)<br>
<strong>Description</strong>: Computes 26 financial risk measures for any continuous distribution.  The 26 financial risk measures  include value at risk, expected shortfall due to Artzner et al. (1999) &lt;DOI:10.1007/s10957-011-9968-2&gt;, tail conditional median due to Kou et al. (2013) &lt;DOI:10.1287/moor.1120.0577&gt;, expectiles due to Newey and Powell (1987) &lt;DOI:10.2307/1911031&gt;, beyond value at risk due to Longin (2001) &lt;DOI:10.3905/jod.2001.319161&gt;, expected proportional shortfall due to Belzunce et al. (2012) &lt;DOI:10.1016/j.insmatheco.2012.05.003&gt;, elementary risk measure due to Ahmadi-Javid (2012) &lt;DOI:10.1007/s10957-011-9968-2&gt;, omega due to Shadwick and Keating (2002), sortino ratio due to Rollinger and Hoffman (2013), kappa  due to Kaplan and Knowles  (2004), Wang (1998)'s &lt;DOI:10.1080/10920277.1998.10595708&gt; risk measures, Stone (1973)'s &lt;DOI:10.2307/2978638&gt; risk measures, Luce (1980)'s &lt;DOI:10.1007/BF00135033&gt; risk measures, Sarin (1987)'s &lt;DOI:10.1007/BF00126387&gt; risk measures, Bronshtein and Kurelenkova (2009)'s risk measures.<br>
<strong>License</strong>: GPL (&gt;= 2)<br>
<strong>Packaged</strong>: 2017-06-08 13:57:28 UTC; mbbsssn2<br>
<strong>NeedsCompilation</strong>: no<br>
<strong>Repository</strong>: CRAN<br>
<strong>Date/Publication</strong>: 2017-06-08 15:19:54 UTC<br>

<p>
<a href="https://cran.r-project.org/package=Risk">More information about Risk at CRAN</a>
-----------------------------------------------------------------------------

If I did it today, I'd start with markdown, but you get the idea.  The page
is the (current) top of http://dirk.eddelbuettel.com/cranberries/cran/new/

I write these as minimal html (as I wrote that code ~ 10 years ago in the
pre-pandoc days) which then get fed into the blog engine.  That helps keeping
content and presentation (css, ...) separate.

I think you have everything you need in the PACKAGES.rds which you get back
as a (large) data.frame from tools::CRAN_package_db().

Hope this helps,  Dirk



-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

From ripley at stats.ox.ac.uk  Fri Jun  9 16:47:31 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 9 Jun 2017 15:47:31 +0100
Subject: [Rd] Creating a private CRAN with webpages
In-Reply-To: <CAKShX4DwkwUcxfx32V1FiOzTnGCUrki5YQ2fxLFqtwU0o6zCaA@mail.gmail.com>
References: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
 <CED2E38E-2C4C-452F-AFCF-46416C1836EC@icloud.com>
 <CAKShX4DwkwUcxfx32V1FiOzTnGCUrki5YQ2fxLFqtwU0o6zCaA@mail.gmail.com>
Message-ID: <deb0dd75-aac3-3ee9-525f-bfc37319b8bc@stats.ox.ac.uk>

On 09/06/2017 07:44, Joshua Bradley wrote:
> I'm not trying to create a mirror of the CRAN. I also do not want to create
> a "subset" of CRAN packages. Sorry if my explanation was confusing. There
> are internal proprietary R packages that I would like to host on a private
> repo. I like the CRAN web pages that allow a user to browse the various
> packages from a browser without having to first install them. I want to
> duplicate the process that CRAN goes through when it generate the webpages.

But for a repository of your own packages, not CRAN's packages? 
Everyone who has replied so far seems to have assumed the latter ....

The scripts CRAN uses to make its 'web' area are not public.  If you can 
formulate a crystal-clear message, you could ask them for a copy.

> 
> Josh Bradley
> 
> 	[[alternative HTML version deleted]]

Please do follow the posting guide: CRAN too does not appreciate HTML mail.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From edd at debian.org  Fri Jun  9 16:54:47 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 9 Jun 2017 09:54:47 -0500
Subject: [Rd] Creating a private CRAN with webpages
In-Reply-To: <deb0dd75-aac3-3ee9-525f-bfc37319b8bc@stats.ox.ac.uk>
References: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
 <CED2E38E-2C4C-452F-AFCF-46416C1836EC@icloud.com>
 <CAKShX4DwkwUcxfx32V1FiOzTnGCUrki5YQ2fxLFqtwU0o6zCaA@mail.gmail.com>
 <deb0dd75-aac3-3ee9-525f-bfc37319b8bc@stats.ox.ac.uk>
Message-ID: <22842.46775.477517.647178@max.eddelbuettel.com>


On 9 June 2017 at 15:47, Prof Brian Ripley wrote:
| On 09/06/2017 07:44, Joshua Bradley wrote:
| > I'm not trying to create a mirror of the CRAN. I also do not want to create
| > a "subset" of CRAN packages. Sorry if my explanation was confusing. There
| > are internal proprietary R packages that I would like to host on a private
| > repo. I like the CRAN web pages that allow a user to browse the various
| > packages from a browser without having to first install them. I want to
| > duplicate the process that CRAN goes through when it generate the webpages.
| 
| But for a repository of your own packages, not CRAN's packages? 
| Everyone who has replied so far seems to have assumed the latter ....

I didn't. 
 
| The scripts CRAN uses to make its 'web' area are not public.  If you can 
| formulate a crystal-clear message, you could ask them for a copy.

No, write it anew, and make it prettier than the still rather awful CRAN
pages which even two years (?) after the overhaul of www.r-project.org have
the pristine and crisp look of 1998 about them. We can do better. It is 2017.

As I showed, turning packageDescription() into a paragraph of text is
trivial.  Displaying reverseDepends and what is too (per CRAN_package_db()).

So just do it.

Make it pretty enough, and hopefully one day someone will give us a prettier
version of CRAN too (beating the combination of inertia, already having
something "good enough", not enough time, and more important things to do --
really not blaming anyone here).

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From kamvarz at science.oregonstate.edu  Fri Jun  9 17:02:17 2017
From: kamvarz at science.oregonstate.edu (Zhian Kamvar)
Date: Fri, 9 Jun 2017 10:02:17 -0500
Subject: [Rd] Creating a private CRAN with webpages
In-Reply-To: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
References: <CAKShX4CtPHh=KjAksnYtv7zaBX3-9Qrzv-Jw0udx4njWmvPC2g@mail.gmail.com>
Message-ID: <A9D99479-BACD-4CDE-9834-F6FE93835D6F@science.oregonstate.edu>

Hi Josh,

If you aren't opposed to using bootstrap, you could check out pkgdown: http://hadley.github.io/pkgdown/index.html <http://hadley.github.io/pkgdown/index.html>

From my experience, it works pretty well out of the box. 

HTH,
Zhian

-----
Zhian N. Kamvar, Ph. D.
Postdoctoral Researcher (Everhart Lab)
Department of Plant Pathology
University of Nebraska-Lincoln

> On Jun 8, 2017, at 16:29 , Joshua Bradley <jgbradley1 at gmail.com> wrote:
> 
> Hello,
> 
> I am trying to setup a private CRAN for work (behind a firewall). The best
> options available include miniCRAN
> <https://github.com/RevolutionAnalytics/miniCRAN>, drat
> <https://github.com/eddelbuettel/drat> and packrat
> <https://rstudio.github.io/packrat/>. One problem is these packages do not
> automatically generate the web pages that are on the CRAN.
> 
> Examples:
> https://cran.r-project.org/web/packages/index.html
> https://cran.r-project.org/web/packages/available_packages_by_name.html
> 
> Each time the CRAN adds a package, there must be an automated process in
> place to regenerate the pages again with the new package added (example - A3
> <https://cran.r-project.org/web/packages/A3/index.html>). I read somewhere
> (possibly on stackoverflow) that the CRAN html pages are statically built.
> I would like for users to be able to explore the packages in my private
> CRAN just like the public CRAN without having to open R and search for
> packages/documentation through the command line.
> 
> The R Manual includes a small section
> <https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Setting-up-a-package-repository>
> on setting up a repository but it only discusses the structure of the
> directories needed to host packages. Nothing is mentioned about how the
> CRAN creates/updates the /web directory. What is the best way to
> generate/maintain the web pages for a private CRAN?
> 
> P.S. Let me know if this question is best answered on one of the other
> mailing lists.
> 
> Josh Bradley
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


	[[alternative HTML version deleted]]


From kirill.mueller at ivt.baug.ethz.ch  Fri Jun  9 17:06:12 2017
From: kirill.mueller at ivt.baug.ethz.ch (=?UTF-8?Q?Kirill_M=c3=bcller?=)
Date: Fri, 9 Jun 2017 17:06:12 +0200
Subject: [Rd] Usage of PROTECT_WITH_INDEX in R-exts
In-Reply-To: <22842.34075.222428.216738@stat.math.ethz.ch>
References: <7f60a4f4-3d29-1e2b-04e1-4bfd1d2bc4d0@ivt.baug.ethz.ch>
 <22838.25257.371534.516276@stat.math.ethz.ch>
 <8a9a6084-2e39-50f1-d043-fa8c5ebdbd66@ivt.baug.ethz.ch>
 <0e511f62-2372-a0d3-6962-3de22246eb78@ivt.baug.ethz.ch>
 <22842.34075.222428.216738@stat.math.ethz.ch>
Message-ID: <c33d624e-eeb7-3c68-8644-a347d47675b0@ivt.baug.ethz.ch>

On 09.06.2017 13:23, Martin Maechler wrote:
>>>>>> Kirill M?ller <kirill.mueller at ivt.baug.ethz.ch>
>>>>>>      on Thu, 8 Jun 2017 12:55:26 +0200 writes:
>      > On 06.06.2017 22:14, Kirill M?ller wrote:
>      >>
>      >>
>      >> On 06.06.2017 10:07, Martin Maechler wrote:
>      >>>>>>>> Kirill M?ller <kirill.mueller at ivt.baug.ethz.ch> on
>      >>>>>>>> Mon, 5 Jun 2017 17:30:20 +0200 writes:
>      >>> > Hi I've noted a minor inconsistency in the
>      >>> documentation: > Current R-exts reads
>      >>>
>      >>> > s = PROTECT_WITH_INDEX(eval(OS->R_fcall, OS->R_env),
>      >>> &ipx);
>      >>>
>      >>> > but I believe it has to be
>      >>>
>      >>> > PROTECT_WITH_INDEX(s = eval(OS->R_fcall, OS->R_env),
>      >>> &ipx);
>      >>>
>      >>> > because PROTECT_WITH_INDEX() returns void.
>      >>>
>      >>> Yes indeed, thank you Kirill!
>      >>>
>      >>> note that the same is true for its partner
>      >>> function|macro REPROTECT()
>      >>>
>      >>> However, as PROTECT() is used a gazillion times and
>      >>> PROTECT_WITH_INDEX() is used about 100 x less, and
>      >>> PROTECT() *does* return the SEXP, I do wonder why
>      >>> PROTECT_WITH_INDEX() and REPROTECT() could not behave
>      >>> the same as PROTECT() (a view at the source code seems
>      >>> to suggest a change to be trivial).  I assume usual
>      >>> compiler optimization would not create less efficient
>      >>> code in case the idiom PROTECT_WITH_INDEX(s = ...)  is
>      >>> used, i.e., in case the return value is not used ?
>      >>>
>      >>> Maybe this is mainly a matter of taste, but I find the
>      >>> use of
>      >>>
>      >>> SEXP s = PROTECT(........);
>      >>>
>      >>> quite nice in typical cases where this appears early in
>      >>> a function.  Also for that reason -- but even more for
>      >>> consistency -- it would also be nice if
>      >>> PROTECT_WITH_INDEX() behaved the same.
>      >> Thanks, Martin, this sounds reasonable. I've put together
>      >> a patch for review [1], a diff for applying to SVN (via
>      >> `cat | patch -p1`) would be [2]. The code compiles on my
>      >> system.
>      >>
>      >>
>      >> -Kirill
>      >>
>      >>
>      >> [1] https://github.com/krlmlr/r-source/pull/5/files
>      >>
>      >> [2]
>      >> https://patch-diff.githubusercontent.com/raw/krlmlr/r-source/pull/5.diff
>
>      > I forgot to mention that this patch applies cleanly to r72768.
>
> Thank you, Kirill.
> I've been a bit busy so did not get to reply more quickly.
>
> Just to be clear: I did not ask for a patch but was _asking_ /
> requesting comments about the possibility to do that.
>
> In the mean time, within the core team, the opinions were
> mixed and costs of the change (recompilations needed, C source level
> check tools would need updating / depend on R versions) are
> clearly non-zero.
>
> As a consquence, we will fix the documentation, rather than changing the API.
Thanks for looking into this. The patch was more a proof of concept, I 
don't mind throwing it away.


-Kirill
> Martin


From maechler at stat.math.ethz.ch  Sat Jun 10 00:54:10 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 10 Jun 2017 00:54:10 +0200
Subject: [Rd]
	=?utf-8?q?=5Bbug=5D_droplevels=28=29_also_drop_object_attrib?=
	=?utf-8?b?dXRlcyAoY29tbWVudOKApik=?=
In-Reply-To: <22838.56209.805669.458934@stat.math.ethz.ch>
References: <f72658b5-4f45-4936-afb9-a4b4b78dc9a1@Spark>
 <22810.49123.10886.612295@stat.math.ethz.ch>
 <22838.56209.805669.458934@stat.math.ethz.ch>
Message-ID: <22843.10002.25342.908818@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>     on Thu, 8 Jun 2017 16:43:48 +0000 writes:

    > * Be careful with "contrasts" attribute. If the number of levels is reduced, the original contrasts matrix is no longer valid.
    > Example case:
    > x <- factor(c("a", "a", "b", "b", "b"), levels = c("a", "b", "c"))
    > contrasts(x) <- contr.treatment(levels(x), contrasts=FALSE)[, -2, drop=FALSE]
    > droplevels(x)

    > * If function 'factor' is changed, make sure that as.factor(x) and factor(x) is the same for 'x' where is.integer(x) is TRUE. Currently, as.factor(<integer>) is treated specially.

    > * It is possible that names(x) is not attr(x, "names"). For example, 'x' is a "POSIXlt" object.
    > Look at this example, which works in R 3.3.2.
    > x <- as.POSIXlt("2017-01-01", tz="UTC")
    > factor(x, levels=x)


    > By the way, in NEWS, in "CHANGES IN R 3.4.0", in "SIGNIFICANT USER-VISIBLE CHANGES", there is "factor() now uses order() to sort its levels". It is false. Code of function 'factor' in R 3.4.0 (https://svn.r-project.org/R/tags/R-3-4-0/src/library/base/R/factor.R) still uses 'sort.list', not 'order'.

    > --------------------------------
>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Tue, 16 May 2017 11:01:23 +0200 writes:

>>>>> Serge Bibauw <sbibauw at gmail.com>
>>>>>     on Mon, 15 May 2017 11:59:32 -0400 writes:

    >>> Hi,

    >>> Just reporting a small bug? not really a big deal, but I
    >>> don?t think that is intended: droplevels() also drops all
    >>> object?s attributes.

    >> Yes.  The help page for droplevels (or the simple
    >> definition of 'droplevels.factor') clearly indicate that
    >> the method for factors is really just a call to factor(x,
    >> exclude = *)

    >> and that _is_ quite an important base function whose
    >> semantic should not be changed lightly. Still, let's
    >> continue :

    >> Looking a bit, I see that the current behavior of factor()
    >> {and hence droplevels} has been unchanged in this respect
    >> for the whole history of R, well, at least for more than
    >> 17 years (R 1.0.1, April 2000).

    >> I'd agree there _is_ a bug, at least in the documentation
    >> which does *not* mention that currently, all attributes
    >> are dropped but "names", "levels" (and "class").

    >> OTOH, factor() would only need a small change to make it
    >> preserve all attributes (but "class" and "levels" which
    >> are set explicitly).

    >> I'm sure this will break some checks in some packages.  Is
    >> it worth it?

    >> e.g., our own R  QC checks currently check (the printing of) the
    >> following (in tests/reg-tests-2.R ):

    >> > ## some tests of factor matrices
    >> > A <- factor(7:12)
    >> > dim(A) <- c(2, 3)
    >> > A
    >> [,1] [,2] [,3]
    >> [1,] 7    9    11  
    >> [2,] 8    10   12  
    >> Levels: 7 8 9 10 11 12
    >> > str(A)
    >> factor [1:2, 1:3] 7 8 9 10 ...
    >> - attr(*, "levels")= chr [1:6] "7" "8" "9" "10" ...
    >> > A[, 1:2]
    >> [,1] [,2]
    >> [1,] 7    9   
    >> [2,] 8    10  
    >> Levels: 7 8 9 10 11 12
    >> > A[, 1:2, drop=TRUE]
    >> [1] 7  8  9  10
    >> Levels: 7 8 9 10
    >> 
    >> with the proposed change to factor(),
    >> the last call would change its result:
    >> 
    >> > A[, 1:2, drop=TRUE]
    >> [,1] [,2]
    >> [1,] 7    9   
    >> [2,] 8    10  
    >> Levels: 7 8 9 10

    >> because 'drop=TRUE' calls factor(..) and that would also
    >> preserve the "dim" attribute.  I would think that the
    >> changed behavior _is_ better, and is also according to
    >> documentation, because the help page for [.factor explains
    >> that 'drop = TRUE' drops levels, but _not_ that it
    >> transforms a factor matrix into a factor (vector).

    >> Martin

    > I'm finally coming back to this.
    > It still seems to make sense to change factor() and hence
    > droplevels() behavior here, and plan to commit this change
    > within a day.

I had committed these (including regression checks and *.Rd
changes) as  svn rev 72771  to R-devel..

As Suharto also warned, this change had more severe effects in
package space than I expected.

Notably the fact that the "dim" attribute was kept there, lead
to several errors in CRAN packages / their checks.

Of course, I could have patched the change by explicitely *not*
keeping certain attributes such as "dim" and "contrasts".

But I've decided that in this case it seems more rational,
notably for back compatibility reasons, to keep factor()'s and hence
droplevel()'s behaviour  and rather document it.
So the "bug" is solved differently, by documenting the behavior
that has been in place "forever".

With svn's 72773, we are back to the previous state with the
addition of mentioning in help(factor) that attributes are "lost".

Martin Maechler
ETH Zurich


From suharto_anggono at yahoo.com  Sat Jun 10 16:14:49 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sat, 10 Jun 2017 14:14:49 +0000 (UTC)
Subject: [Rd] translateChar in NewName in bind.c
References: <1085350361.6137677.1497104089412.ref@mail.yahoo.com>
Message-ID: <1085350361.6137677.1497104089412@mail.yahoo.com>

In function 'NewName' in bind.c (https://svn.r-project.org/R/trunk/src/main/bind.c), in
else if (*CHAR(base)) ,
'translateChar' is used. Should it be 'translateCharUTF8' instead? The end result is marked as UTF-8:
mkCharCE(cbuf, CE_UTF8)
Other cases already use 'translateCharUTF8'.


From 2005.morgan at gmail.com  Sat Jun 10 20:38:14 2017
From: 2005.morgan at gmail.com (Morgan)
Date: Sat, 10 Jun 2017 19:38:14 +0100
Subject: [Rd] Question about R developpment
In-Reply-To: <CAOSKuBRUrJdK6zLwU39YMfGYzhYaPvNbeYJV8BbmP3RSYVdonQ@mail.gmail.com>
References: <CAOSKuBTvjXs3j4+XeMtK1twenvJEHJzdUEjTGdYk95izm7X7pw@mail.gmail.com>
 <CAOSKuBTYHP_FRnSbbjv7Y=ypPWN+aL+8S7pnspks=J+jbzBi4A@mail.gmail.com>
 <CAOSKuBQF9dE6138uQcPDfnqxG5LAGHnr1R+1TCdNkEfw=F_fkw@mail.gmail.com>
 <CAOSKuBQc9UE+UuqVEtYURyq-qOwxm=q2W1SBaCqbpKDrk661Aw@mail.gmail.com>
 <CAOSKuBSi4M3SwnNd0BaXpCO8YtJ8s-me5BzW41JrNO3Qon6_Fw@mail.gmail.com>
 <CAOSKuBQMuah7jeXjocdOFGZJGbAR91mMJmnB+boZHbSbMX435g@mail.gmail.com>
 <CAOSKuBSpWrz_LNS=fAm8ZG0SyhiVqavwTZLtBcNwzw7DQQMefg@mail.gmail.com>
 <CAOSKuBRUrJdK6zLwU39YMfGYzhYaPvNbeYJV8BbmP3RSYVdonQ@mail.gmail.com>
Message-ID: <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>

Hi,

I had a question that might not seem obvious to me.

I was wondering why there was no patnership between microsoft the R core
team and eventually other developpers to improve R in one unified version
instead of having different teams developping their own version of R.

Is it because they don't want to team up? Is it because you don't want? Any
particular reasons? Different philosophies?

Thank you
Kind regards
Morgan

	[[alternative HTML version deleted]]


From roy.mendelssohn at noaa.gov  Sat Jun 10 22:57:05 2017
From: roy.mendelssohn at noaa.gov (Roy Mendelssohn - NOAA Federal)
Date: Sat, 10 Jun 2017 13:57:05 -0700
Subject: [Rd] Question about R developpment
In-Reply-To: <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>
References: <CAOSKuBTvjXs3j4+XeMtK1twenvJEHJzdUEjTGdYk95izm7X7pw@mail.gmail.com>
 <CAOSKuBTYHP_FRnSbbjv7Y=ypPWN+aL+8S7pnspks=J+jbzBi4A@mail.gmail.com>
 <CAOSKuBQF9dE6138uQcPDfnqxG5LAGHnr1R+1TCdNkEfw=F_fkw@mail.gmail.com>
 <CAOSKuBQc9UE+UuqVEtYURyq-qOwxm=q2W1SBaCqbpKDrk661Aw@mail.gmail.com>
 <CAOSKuBSi4M3SwnNd0BaXpCO8YtJ8s-me5BzW41JrNO3Qon6_Fw@mail.gmail.com>
 <CAOSKuBQMuah7jeXjocdOFGZJGbAR91mMJmnB+boZHbSbMX435g@mail.gmail.com>
 <CAOSKuBSpWrz_LNS=fAm8ZG0SyhiVqavwTZLtBcNwzw7DQQMefg@mail.gmail.com>
 <CAOSKuBRUrJdK6zLwU39YMfGYzhYaPvNbeYJV8BbmP3RSYVdonQ@mail.gmail.com>
 <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>
Message-ID: <D5F9F8EB-8591-4195-A68C-ED28175B304F@noaa.gov>

https://www.r-consortium.org

-Roy

> On Jun 10, 2017, at 11:38 AM, Morgan <2005.morgan at gmail.com> wrote:
> 
> Hi,
> 
> I had a question that might not seem obvious to me.
> 
> I was wondering why there was no patnership between microsoft the R core
> team and eventually other developpers to improve R in one unified version
> instead of having different teams developping their own version of R.
> 
> Is it because they don't want to team up? Is it because you don't want? Any
> particular reasons? Different philosophies?
> 
> Thank you
> Kind regards
> Morgan
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From murdoch.duncan at gmail.com  Sun Jun 11 00:09:55 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 10 Jun 2017 18:09:55 -0400
Subject: [Rd] Question about R developpment
In-Reply-To: <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>
References: <CAOSKuBTvjXs3j4+XeMtK1twenvJEHJzdUEjTGdYk95izm7X7pw@mail.gmail.com>
 <CAOSKuBTYHP_FRnSbbjv7Y=ypPWN+aL+8S7pnspks=J+jbzBi4A@mail.gmail.com>
 <CAOSKuBQF9dE6138uQcPDfnqxG5LAGHnr1R+1TCdNkEfw=F_fkw@mail.gmail.com>
 <CAOSKuBQc9UE+UuqVEtYURyq-qOwxm=q2W1SBaCqbpKDrk661Aw@mail.gmail.com>
 <CAOSKuBSi4M3SwnNd0BaXpCO8YtJ8s-me5BzW41JrNO3Qon6_Fw@mail.gmail.com>
 <CAOSKuBQMuah7jeXjocdOFGZJGbAR91mMJmnB+boZHbSbMX435g@mail.gmail.com>
 <CAOSKuBSpWrz_LNS=fAm8ZG0SyhiVqavwTZLtBcNwzw7DQQMefg@mail.gmail.com>
 <CAOSKuBRUrJdK6zLwU39YMfGYzhYaPvNbeYJV8BbmP3RSYVdonQ@mail.gmail.com>
 <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>
Message-ID: <427cb72f-6d61-c334-f7ba-92e904c0bfac@gmail.com>

On 10/06/2017 2:38 PM, Morgan wrote:
> Hi,
>
> I had a question that might not seem obvious to me.
>
> I was wondering why there was no patnership between microsoft the R core
> team and eventually other developpers to improve R in one unified version
> instead of having different teams developping their own version of R.

As far as I know, there's only one version of R currently being 
developed.  Microsoft doesn't offer anything different; they just offer 
a build of a slightly older version of base R, and a few packages that 
are not in the base version.

Duncan Murdoch


From plummerm at iarc.fr  Sun Jun 11 01:06:24 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Sat, 10 Jun 2017 23:06:24 +0000
Subject: [Rd] Question about R developpment
In-Reply-To: <427cb72f-6d61-c334-f7ba-92e904c0bfac@gmail.com>
References: <CAOSKuBTvjXs3j4+XeMtK1twenvJEHJzdUEjTGdYk95izm7X7pw@mail.gmail.com>
 <CAOSKuBTYHP_FRnSbbjv7Y=ypPWN+aL+8S7pnspks=J+jbzBi4A@mail.gmail.com>
 <CAOSKuBQF9dE6138uQcPDfnqxG5LAGHnr1R+1TCdNkEfw=F_fkw@mail.gmail.com>
 <CAOSKuBQc9UE+UuqVEtYURyq-qOwxm=q2W1SBaCqbpKDrk661Aw@mail.gmail.com>
 <CAOSKuBSi4M3SwnNd0BaXpCO8YtJ8s-me5BzW41JrNO3Qon6_Fw@mail.gmail.com>
 <CAOSKuBQMuah7jeXjocdOFGZJGbAR91mMJmnB+boZHbSbMX435g@mail.gmail.com>
 <CAOSKuBSpWrz_LNS=fAm8ZG0SyhiVqavwTZLtBcNwzw7DQQMefg@mail.gmail.com>
 <CAOSKuBRUrJdK6zLwU39YMfGYzhYaPvNbeYJV8BbmP3RSYVdonQ@mail.gmail.com>
 <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>,
 <427cb72f-6d61-c334-f7ba-92e904c0bfac@gmail.com>
Message-ID: <1497135984899.97655@iarc.fr>

I would describe MRO as a distribution of R, in the same way that Fedora, Debian, SUSE etc are distributions of Linux. It is not fundamentally different from the version of R that you can download from CRAN but the binary builds offer some specific features:

1) The binary build is linked to the Intel Math Kernel Library (MKL) which may increase the speed of some matrix operations
2) Packages are downloaded from MRAN, Microsoft's time-stamped copy of CRAN. This can help with reproducibility of analyses that rely on CRAN packages.

As far as I know, all of the additional packages that are bundled with MRO are freely distributable and also available from CRAN. As Roy points out, both Microsoft and the R Foundation are partners in the R Consortium. So we do talk to each other as well as other stakeholders who participate in the Consortium.

Martyn
________________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Duncan Murdoch <murdoch.duncan at gmail.com>
Sent: 11 June 2017 00:09
To: Morgan; r-devel at r-project.org
Subject: Re: [Rd] Question about R developpment

On 10/06/2017 2:38 PM, Morgan wrote:
> Hi,
>
> I had a question that might not seem obvious to me.
>
> I was wondering why there was no patnership between microsoft the R core
> team and eventually other developpers to improve R in one unified version
> instead of having different teams developping their own version of R.

As far as I know, there's only one version of R currently being
developed.  Microsoft doesn't offer anything different; they just offer
a build of a slightly older version of base R, and a few packages that
are not in the base version.

Duncan Murdoch

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel
-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From apdevries at gmail.com  Sun Jun 11 01:50:09 2017
From: apdevries at gmail.com (Andrie de Vries)
Date: Sat, 10 Jun 2017 16:50:09 -0700
Subject: [Rd] Question about R developpment
In-Reply-To: <1497135984899.97655@iarc.fr>
References: <CAOSKuBTvjXs3j4+XeMtK1twenvJEHJzdUEjTGdYk95izm7X7pw@mail.gmail.com>
 <CAOSKuBTYHP_FRnSbbjv7Y=ypPWN+aL+8S7pnspks=J+jbzBi4A@mail.gmail.com>
 <CAOSKuBQF9dE6138uQcPDfnqxG5LAGHnr1R+1TCdNkEfw=F_fkw@mail.gmail.com>
 <CAOSKuBQc9UE+UuqVEtYURyq-qOwxm=q2W1SBaCqbpKDrk661Aw@mail.gmail.com>
 <CAOSKuBSi4M3SwnNd0BaXpCO8YtJ8s-me5BzW41JrNO3Qon6_Fw@mail.gmail.com>
 <CAOSKuBQMuah7jeXjocdOFGZJGbAR91mMJmnB+boZHbSbMX435g@mail.gmail.com>
 <CAOSKuBSpWrz_LNS=fAm8ZG0SyhiVqavwTZLtBcNwzw7DQQMefg@mail.gmail.com>
 <CAOSKuBRUrJdK6zLwU39YMfGYzhYaPvNbeYJV8BbmP3RSYVdonQ@mail.gmail.com>
 <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>,
 <427cb72f-6d61-c334-f7ba-92e904c0bfac@gmail.com> <1497135984899.97655@iarc.fr>
Message-ID: <001c01d2e244$4c09cd50$e41d67f0$@gmail.com>

Martyn and Duncan are both correct. 

I am on the Microsoft team that creates and distributes Microsoft R Open
(MRO).  We make absolutely no changes to R at all, just some enchancements
in the distribution.  As already pointed out:
* We add the Intel MKL to replace the built-in BLAS. This is similar to
replacing the BLAS with OpenBLAS or Atlas - readily available for Linux
distributions of R
* We make some changes in the RProfile.site file, notably pointing to an
MRAN snapshot, in turn a timestamped mirror of CRAN
* We add some package, e.g. foreach and iterators - all of these packages
are on CRAN.

In Microsoft R Client and Microsoft R Server we go further:
* We add proprietary packages that add scalability and connectivity to SQL
Server, Hadoop and other big data platforms
* But, again, the underlying R code remains unchanged.

In addition, Microsoft provides bug fixes and other enhancements to R
itself.

Microsoft remains committed to supporting both the R Foundation and the R
Consortium.

I hope this helps.

Andrie

(Andrie de Vries, Senior Programme Manager, Microsoft)
(You can also contact me at mailto:adevries at microsoft.com)

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Martyn
Plummer
Sent: 10 June 2017 16:06
To: Duncan Murdoch <murdoch.duncan at gmail.com>; Morgan
<2005.morgan at gmail.com>; r-devel at r-project.org
Subject: Re: [Rd] Question about R developpment

I would describe MRO as a distribution of R, in the same way that Fedora,
Debian, SUSE etc are distributions of Linux. It is not fundamentally
different from the version of R that you can download from CRAN but the
binary builds offer some specific features:

1) The binary build is linked to the Intel Math Kernel Library (MKL) which
may increase the speed of some matrix operations
2) Packages are downloaded from MRAN, Microsoft's time-stamped copy of CRAN.
This can help with reproducibility of analyses that rely on CRAN packages.

As far as I know, all of the additional packages that are bundled with MRO
are freely distributable and also available from CRAN. As Roy points out,
both Microsoft and the R Foundation are partners in the R Consortium. So we
do talk to each other as well as other stakeholders who participate in the
Consortium.

Martyn
________________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Duncan Murdoch
<murdoch.duncan at gmail.com>
Sent: 11 June 2017 00:09
To: Morgan; r-devel at r-project.org
Subject: Re: [Rd] Question about R developpment

On 10/06/2017 2:38 PM, Morgan wrote:
> Hi,
>
> I had a question that might not seem obvious to me.
>
> I was wondering why there was no patnership between microsoft the R 
> core team and eventually other developpers to improve R in one unified 
> version instead of having different teams developping their own version of
R.

As far as I know, there's only one version of R currently being developed.
Microsoft doesn't offer anything different; they just offer a build of a
slightly older version of base R, and a few packages that are not in the
base version.

Duncan Murdoch

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel
-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch.duncan at gmail.com  Sun Jun 11 03:47:25 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 10 Jun 2017 21:47:25 -0400
Subject: [Rd] Question about R developpment
In-Reply-To: <427cb72f-6d61-c334-f7ba-92e904c0bfac@gmail.com>
References: <CAOSKuBTvjXs3j4+XeMtK1twenvJEHJzdUEjTGdYk95izm7X7pw@mail.gmail.com>
 <CAOSKuBTYHP_FRnSbbjv7Y=ypPWN+aL+8S7pnspks=J+jbzBi4A@mail.gmail.com>
 <CAOSKuBQF9dE6138uQcPDfnqxG5LAGHnr1R+1TCdNkEfw=F_fkw@mail.gmail.com>
 <CAOSKuBQc9UE+UuqVEtYURyq-qOwxm=q2W1SBaCqbpKDrk661Aw@mail.gmail.com>
 <CAOSKuBSi4M3SwnNd0BaXpCO8YtJ8s-me5BzW41JrNO3Qon6_Fw@mail.gmail.com>
 <CAOSKuBQMuah7jeXjocdOFGZJGbAR91mMJmnB+boZHbSbMX435g@mail.gmail.com>
 <CAOSKuBSpWrz_LNS=fAm8ZG0SyhiVqavwTZLtBcNwzw7DQQMefg@mail.gmail.com>
 <CAOSKuBRUrJdK6zLwU39YMfGYzhYaPvNbeYJV8BbmP3RSYVdonQ@mail.gmail.com>
 <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>
 <427cb72f-6d61-c334-f7ba-92e904c0bfac@gmail.com>
Message-ID: <e803893f-1f7c-8869-dd8f-417ac326c53b@gmail.com>

On 10/06/2017 6:09 PM, Duncan Murdoch wrote:
> On 10/06/2017 2:38 PM, Morgan wrote:
>> Hi,
>>
>> I had a question that might not seem obvious to me.
>>
>> I was wondering why there was no patnership between microsoft the R core
>> team and eventually other developpers to improve R in one unified version
>> instead of having different teams developping their own version of R.
>
> As far as I know, there's only one version of R currently being
> developed.  Microsoft doesn't offer anything different; they just offer
> a build of a slightly older version of base R, and a few packages that
> are not in the base version.

Actually, I think my first sentence above is wrong.  Besides the base R 
that the core R team works on, there are a few other implementations of 
the language:  pqR, for instance.  But as others have said, the 
Microsoft product is simply a repackaging of the core R, so my second 
sentence is right.

Duncan Murdoch


From suharto_anggono at yahoo.com  Sun Jun 11 14:30:10 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Sun, 11 Jun 2017 12:30:10 +0000 (UTC)
Subject: [Rd] translateChar in NewName in bind.c
References: <1484198017.6589962.1497184210220.ref@mail.yahoo.com>
Message-ID: <1484198017.6589962.1497184210220@mail.yahoo.com>

I see another thing in function 'NewName' in bind.c. In
else if (*CHAR(tag)) ,
'ans' is basically copied from 'tag'. Could the whole thing there be just the following?
ans = tag;
It seems to me that it can also replace
ans = R_BlankString;
in 'else'; so,
else if (*CHAR(tag))
and
else
can be merged to be just
else .

--------------------------------------------


 Subject: translateChar in NewName in bind.c
 To: r-devel at r-project.org
 Date: Saturday, 10 June, 2017, 9:14 PM
 
 In function 'NewName' in bind.c (https://svn.r-project.org/R/trunk/src/main/bind.c), in
 else if (*CHAR(base)) ,
 'translateChar' is used. Should it be
 'translateCharUTF8' instead? The end result is marked as
 UTF-8:
 mkCharCE(cbuf, CE_UTF8)
 Other cases already use
 'translateCharUTF8'.


From 2005.morgan at gmail.com  Mon Jun 12 10:21:00 2017
From: 2005.morgan at gmail.com (Morgan)
Date: Mon, 12 Jun 2017 09:21:00 +0100
Subject: [Rd] Question about R developpment
In-Reply-To: <e803893f-1f7c-8869-dd8f-417ac326c53b@gmail.com>
References: <CAOSKuBTvjXs3j4+XeMtK1twenvJEHJzdUEjTGdYk95izm7X7pw@mail.gmail.com>
 <CAOSKuBTYHP_FRnSbbjv7Y=ypPWN+aL+8S7pnspks=J+jbzBi4A@mail.gmail.com>
 <CAOSKuBQF9dE6138uQcPDfnqxG5LAGHnr1R+1TCdNkEfw=F_fkw@mail.gmail.com>
 <CAOSKuBQc9UE+UuqVEtYURyq-qOwxm=q2W1SBaCqbpKDrk661Aw@mail.gmail.com>
 <CAOSKuBSi4M3SwnNd0BaXpCO8YtJ8s-me5BzW41JrNO3Qon6_Fw@mail.gmail.com>
 <CAOSKuBQMuah7jeXjocdOFGZJGbAR91mMJmnB+boZHbSbMX435g@mail.gmail.com>
 <CAOSKuBSpWrz_LNS=fAm8ZG0SyhiVqavwTZLtBcNwzw7DQQMefg@mail.gmail.com>
 <CAOSKuBRUrJdK6zLwU39YMfGYzhYaPvNbeYJV8BbmP3RSYVdonQ@mail.gmail.com>
 <CAOSKuBQdbCBRd6P_DdvH6u+BTQTWJTKF2gWPWN+j8K=2HKNS1w@mail.gmail.com>
 <427cb72f-6d61-c334-f7ba-92e904c0bfac@gmail.com>
 <e803893f-1f7c-8869-dd8f-417ac326c53b@gmail.com>
Message-ID: <CAOSKuBRazt4EvzyVfhesV_3euPuwzM=r-Sybhm6wVJcX8Uo7_A@mail.gmail.com>

Thank you all for these explanations.
Kind regards,
Morgan

On 11 Jun 2017 02:47, "Duncan Murdoch" <murdoch.duncan at gmail.com> wrote:

> On 10/06/2017 6:09 PM, Duncan Murdoch wrote:
>
>> On 10/06/2017 2:38 PM, Morgan wrote:
>>
>>> Hi,
>>>
>>> I had a question that might not seem obvious to me.
>>>
>>> I was wondering why there was no patnership between microsoft the R core
>>> team and eventually other developpers to improve R in one unified version
>>> instead of having different teams developping their own version of R.
>>>
>>
>> As far as I know, there's only one version of R currently being
>> developed.  Microsoft doesn't offer anything different; they just offer
>> a build of a slightly older version of base R, and a few packages that
>> are not in the base version.
>>
>
> Actually, I think my first sentence above is wrong.  Besides the base R
> that the core R team works on, there are a few other implementations of the
> language:  pqR, for instance.  But as others have said, the Microsoft
> product is simply a repackaging of the core R, so my second sentence is
> right.
>
> Duncan Murdoch
>
>

	[[alternative HTML version deleted]]


From bhh at xs4all.nl  Mon Jun 12 19:33:25 2017
From: bhh at xs4all.nl (Berend Hasselman)
Date: Mon, 12 Jun 2017 19:33:25 +0200
Subject: [Rd] Possible with enableJIT function
Message-ID: <05109DDA-8981-48AC-AFBA-AF2EE3C5471A@xs4all.nl>



In this email to the R-help list: https://stat.ethz.ch/pipermail/r-help/2017-June/447474.html
and in this question on Stackoverflow: https://stackoverflow.com/questions/44486643/nleqslv-memory-use-in-r

Andrew Leach has raised a question about the memory usage of my package nleqslv.
In a model with a loop within a function he has experienced continuously increasing memory usage
by package nleqslv leading to an out of memory condition.

I have been able to reproduce the continuously increasing memory usage with the following small example.

<code>
library(nleqslv,lib.loc="../nleqslv.Rcheck")
library(pryr)
dslnex <- function(x) {
    y <- numeric(2)
    y[1] <- x[1]^2 + x[2]^2 - 2
    y[2] <- exp(x[1]-1) + x[2]^3 - 2
    y
}
xstart <- c(x1=1.5,x2=2)
nsims <- 10
for(test_iter in seq_len(nsims)){
    z <- nleqslv(xstart,dslnex,jacobian=NULL)
    print(paste("nleqslv iteration",test_iter,"and memory used is",mem_used()))
}
memory.profile()
gc()
print(paste("At end memory used is", mem_used()))
</code>

The final output is

<output>
[1] "nleqslv iteration 1 and memory used is 28921288"
[1] "nleqslv iteration 2 and memory used is 29133256"
[1] "nleqslv iteration 3 and memory used is 29132992"
[1] "nleqslv iteration 4 and memory used is 29134712"
[1] "nleqslv iteration 5 and memory used is 29136432"
[1] "nleqslv iteration 6 and memory used is 29138152"
[1] "nleqslv iteration 7 and memory used is 29139872"
[1] "nleqslv iteration 8 and memory used is 29141592"
[1] "nleqslv iteration 9 and memory used is 29143312"
[1] "nleqslv iteration 10 and memory used is 29145032"
>
> memory.profile()
       NULL      symbol    pairlist     closure environment     promise
          1        8554      194726        4230        1065        6534
   language     special     builtin        char     logical     integer
      51374          45         671        9786        8030       37258
     double     complex   character         ...         any        list
       2645           1       53795           0           0       18487
 expression    bytecode externalptr     weakref         raw          S4
          1       14662        2233         592         593        1049
> gc()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 416340 22.3     750400 40.1   581181 31.1
Vcells 726127  5.6    1308461 10.0  1191521  9.1
> print(paste("At end memory used is", mem_used()))
[1] "At end memory used is 29126472"
</output>

Indeed memory used increases in each pass of the for loop.

I have added these two lines at the top of the code after the  library(pryr) invocation.

library(compiler)
oldJIT <- enableJIT(0)

This resolves the issue in the sense that memory used remains constant after the first iteration.
Output in the for loop is now:
<output>
[1] "nleqslv iteration 1 and memory used is 24487784"
[1] "nleqslv iteration 2 and memory used is 24495816"
[1] "nleqslv iteration 3 and memory used is 24495816"
[1] "nleqslv iteration 4 and memory used is 24495816"
[1] "nleqslv iteration 5 and memory used is 24495816"
[1] "nleqslv iteration 6 and memory used is 24495816"
[1] "nleqslv iteration 7 and memory used is 24495816"
[1] "nleqslv iteration 8 and memory used is 24495816"
[1] "nleqslv iteration 9 and memory used is 24495816"
[1] "nleqslv iteration 10 and memory used is 24495816"
</output>

My questions are

- is this a bug(let) in the JIT compiler?
- if it isn't what would need to be changed in nleqslv.R in the package source? (I haven't a clue)

regards

Berend Hasselman

My sessionInfo:

R version 3.4.0 (2017-04-21)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Sierra 10.12.5

Matrix products: default
BLAS: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylib

locale:
[1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.4.0


From csardi.gabor at gmail.com  Tue Jun 13 01:03:11 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 13 Jun 2017 00:03:11 +0100
Subject: [Rd] Custom connections
Message-ID: <CABtg=K=+ZmEP_Rxb408sO9CEihOF_mYYXK7teJC+iC-odOFT6g@mail.gmail.com>

Dear all,

I hope somebody can help me understand if package authors are allowed
to create custom R connections or not.

Until today, I thought that R had an "official" way to define custom
connections. E.g. this is an old commit message that was supposed to
create an API, maybe internal, though.

> r62016 | urbaneks | 2013-02-21 14:29:44 -0500 (Thu, 21 Feb 2013) | 1 line
> add API to create custom connections

The /src/include/R_ext/Connections.h file mentions "connection APIs".
"Writing R Extensions" has:

> Facilities for defining custom connection implementations are provided in
> R_ext/Connections.h, but make sure you consult the file before use.

This appeared in the R 3.3.0 NEWS:

> The connections API now includes a function R_GetConnection() which allows packages
>  implementing connections to convert R connection objects to Rconnection handles used in the
> API. Code which previously used the low-level R-internal getConnection() entry point should
> switch to the official API.

However, from today, the R 3.3.0 NEWS item reads somewhat differently:
https://github.com/wch/r-source/commit/7e9889fa9bb9269ffadfe67f3ded4bdca51b8ed9

And perhaps more importantly, R CMD check gives a NOTE about
R_new_custom_connection and some other connection related functions
now:
https://github.com/wch/r-source/commit/e55605767570fc424b6c281e0b7489e8dc77b53f

I am not sure what this means for package authors.

Can package authors use R_new_custom_connection to create custom connections?

If not, is there another way to create custom connections?

Thank you,
Gabor


From simon.urbanek at r-project.org  Tue Jun 13 03:34:10 2017
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Mon, 12 Jun 2017 21:34:10 -0400
Subject: [Rd] Custom connections
In-Reply-To: <CABtg=K=+ZmEP_Rxb408sO9CEihOF_mYYXK7teJC+iC-odOFT6g@mail.gmail.com>
References: <CABtg=K=+ZmEP_Rxb408sO9CEihOF_mYYXK7teJC+iC-odOFT6g@mail.gmail.com>
Message-ID: <39E86F0F-6E89-4396-9645-6F421ECC1FEA@r-project.org>


> On Jun 12, 2017, at 7:03 PM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
> Dear all,
> 
> I hope somebody can help me understand if package authors are allowed
> to create custom R connections or not.
> 
> Until today, I thought that R had an "official" way to define custom
> connections. E.g. this is an old commit message that was supposed to
> create an API, maybe internal, though.
> 
>> r62016 | urbaneks | 2013-02-21 14:29:44 -0500 (Thu, 21 Feb 2013) | 1 line
>> add API to create custom connections
> 
> The /src/include/R_ext/Connections.h file mentions "connection APIs".
> "Writing R Extensions" has:
> 
>> Facilities for defining custom connection implementations are provided in
>> R_ext/Connections.h, but make sure you consult the file before use.
> 
> This appeared in the R 3.3.0 NEWS:
> 
>> The connections API now includes a function R_GetConnection() which allows packages
>> implementing connections to convert R connection objects to Rconnection handles used in the
>> API. Code which previously used the low-level R-internal getConnection() entry point should
>> switch to the official API.
> 
> However, from today, the R 3.3.0 NEWS item reads somewhat differently:
> https://github.com/wch/r-source/commit/7e9889fa9bb9269ffadfe67f3ded4bdca51b8ed9
> 
> And perhaps more importantly, R CMD check gives a NOTE about
> R_new_custom_connection and some other connection related functions
> now:
> https://github.com/wch/r-source/commit/e55605767570fc424b6c281e0b7489e8dc77b53f
> 
> I am not sure what this means for package authors.
> 
> Can package authors use R_new_custom_connection to create custom connections?
> 
> If not, is there another way to create custom connections?
> 

No. Unfortunately, recent somewhat careless changes in R-devel have triggered a discussion about the connection API which was broken by that commit so R-devel cannot be used reliably. The API was precisely intended to be used by packages so it's ok to use it on CRAN. Although I cannot speak for the author, I suspect this change merely helps to flag where the API is used to follow the trail of breakage in R-devel.

Cheers,
Simon




> Thank you,
> Gabor
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


From tomas.kalibera at gmail.com  Tue Jun 13 09:35:50 2017
From: tomas.kalibera at gmail.com (Tomas Kalibera)
Date: Tue, 13 Jun 2017 09:35:50 +0200
Subject: [Rd] translateChar in NewName in bind.c
In-Reply-To: <1484198017.6589962.1497184210220@mail.yahoo.com>
References: <1484198017.6589962.1497184210220.ref@mail.yahoo.com>
 <1484198017.6589962.1497184210220@mail.yahoo.com>
Message-ID: <73f9e2e7-3b4b-f057-0c3c-329d1f6c4509@gmail.com>

Thanks, fixed in R-devel.
Best
Tomas

On 06/11/2017 02:30 PM, Suharto Anggono Suharto Anggono via R-devel wrote:
> I see another thing in function 'NewName' in bind.c. In
> else if (*CHAR(tag)) ,
> 'ans' is basically copied from 'tag'. Could the whole thing there be just the following?
> ans = tag;
> It seems to me that it can also replace
> ans = R_BlankString;
> in 'else'; so,
> else if (*CHAR(tag))
> and
> else
> can be merged to be just
> else .
>
> --------------------------------------------
>
>
>   Subject: translateChar in NewName in bind.c
>   To: r-devel at r-project.org
>   Date: Saturday, 10 June, 2017, 9:14 PM
>   
>   In function 'NewName' in bind.c (https://svn.r-project.org/R/trunk/src/main/bind.c), in
>   else if (*CHAR(base)) ,
>   'translateChar' is used. Should it be
>   'translateCharUTF8' instead? The end result is marked as
>   UTF-8:
>   mkCharCE(cbuf, CE_UTF8)
>   Other cases already use
>   'translateCharUTF8'.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From r-devel at akersting.de  Tue Jun 13 12:57:39 2017
From: r-devel at akersting.de (Andreas Kersting)
Date: Tue, 13 Jun 2017 12:57:39 +0200
Subject: [Rd] print for lists evaluates "AsIs"-elements of type "language"
Message-ID: <99eb6384-8dab-745b-2565-8c216e84f995@akersting.de>

Consider the following code snippets:

 > list(quote(1 + 1), I(quote(1 + 1)))
[[1]]
1 + 1

[[2]]
[1] 2  # should also be 1 + 1!?

 > str(list(quote(1 + 1), I(quote(1 + 1))))
List of 2
  $ : language 1 + 1
  $ : language + 1 1  # why is this line different from the one above?
   ..- attr(*, "class")= chr "AsIs"

 > quote(1 + 1)
1 + 1

 > I(quote(1 + 1))
1 + 1  # OK

 > str(quote(1 + 1))
  language 1 + 1

 > str(I(quote(1 + 1)))
  language + 1 1  # again different
  - attr(*, "class")= chr "AsIs"


This inconsistency is particularly striking when printing the individual 
elements of a list works but printing the whole list does not:

 > l <- list(quote(length(a)), I(quote(length(a))))

 > l[[1]]
length(a)

 > l[[2]]
length(a)

 > l
[[1]]
length(a)

[[2]]
Error in print(length(a)) : object 'a' not found


Should we consider this a bug? If so, I can add it to Bugzilla.


From luke-tierney at uiowa.edu  Tue Jun 13 22:05:18 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Tue, 13 Jun 2017 15:05:18 -0500 (CDT)
Subject: [Rd] Possible with enableJIT function
In-Reply-To: <05109DDA-8981-48AC-AFBA-AF2EE3C5471A@xs4all.nl>
References: <05109DDA-8981-48AC-AFBA-AF2EE3C5471A@xs4all.nl>
Message-ID: <alpine.DEB.2.20.1706131505140.3321@luke-Latitude>

Thanks. This should be resolved in R-devel(r72788) and R-patched
(r72789)

Best,

luke

On Mon, 12 Jun 2017, Berend Hasselman wrote:

>
>
> In this email to the R-help list: https://stat.ethz.ch/pipermail/r-help/2017-June/447474.html
> and in this question on Stackoverflow: https://stackoverflow.com/questions/44486643/nleqslv-memory-use-in-r
>
> Andrew Leach has raised a question about the memory usage of my package nleqslv.
> In a model with a loop within a function he has experienced continuously increasing memory usage
> by package nleqslv leading to an out of memory condition.
>
> I have been able to reproduce the continuously increasing memory usage with the following small example.
>
> <code>
> library(nleqslv,lib.loc="../nleqslv.Rcheck")
> library(pryr)
> dslnex <- function(x) {
>    y <- numeric(2)
>    y[1] <- x[1]^2 + x[2]^2 - 2
>    y[2] <- exp(x[1]-1) + x[2]^3 - 2
>    y
> }
> xstart <- c(x1=1.5,x2=2)
> nsims <- 10
> for(test_iter in seq_len(nsims)){
>    z <- nleqslv(xstart,dslnex,jacobian=NULL)
>    print(paste("nleqslv iteration",test_iter,"and memory used is",mem_used()))
> }
> memory.profile()
> gc()
> print(paste("At end memory used is", mem_used()))
> </code>
>
> The final output is
>
> <output>
> [1] "nleqslv iteration 1 and memory used is 28921288"
> [1] "nleqslv iteration 2 and memory used is 29133256"
> [1] "nleqslv iteration 3 and memory used is 29132992"
> [1] "nleqslv iteration 4 and memory used is 29134712"
> [1] "nleqslv iteration 5 and memory used is 29136432"
> [1] "nleqslv iteration 6 and memory used is 29138152"
> [1] "nleqslv iteration 7 and memory used is 29139872"
> [1] "nleqslv iteration 8 and memory used is 29141592"
> [1] "nleqslv iteration 9 and memory used is 29143312"
> [1] "nleqslv iteration 10 and memory used is 29145032"
>>
>> memory.profile()
>       NULL      symbol    pairlist     closure environment     promise
>          1        8554      194726        4230        1065        6534
>   language     special     builtin        char     logical     integer
>      51374          45         671        9786        8030       37258
>     double     complex   character         ...         any        list
>       2645           1       53795           0           0       18487
> expression    bytecode externalptr     weakref         raw          S4
>          1       14662        2233         592         593        1049
>> gc()
>         used (Mb) gc trigger (Mb) max used (Mb)
> Ncells 416340 22.3     750400 40.1   581181 31.1
> Vcells 726127  5.6    1308461 10.0  1191521  9.1
>> print(paste("At end memory used is", mem_used()))
> [1] "At end memory used is 29126472"
> </output>
>
> Indeed memory used increases in each pass of the for loop.
>
> I have added these two lines at the top of the code after the  library(pryr) invocation.
>
> library(compiler)
> oldJIT <- enableJIT(0)
>
> This resolves the issue in the sense that memory used remains constant after the first iteration.
> Output in the for loop is now:
> <output>
> [1] "nleqslv iteration 1 and memory used is 24487784"
> [1] "nleqslv iteration 2 and memory used is 24495816"
> [1] "nleqslv iteration 3 and memory used is 24495816"
> [1] "nleqslv iteration 4 and memory used is 24495816"
> [1] "nleqslv iteration 5 and memory used is 24495816"
> [1] "nleqslv iteration 6 and memory used is 24495816"
> [1] "nleqslv iteration 7 and memory used is 24495816"
> [1] "nleqslv iteration 8 and memory used is 24495816"
> [1] "nleqslv iteration 9 and memory used is 24495816"
> [1] "nleqslv iteration 10 and memory used is 24495816"
> </output>
>
> My questions are
>
> - is this a bug(let) in the JIT compiler?
> - if it isn't what would need to be changed in nleqslv.R in the package source? (I haven't a clue)
>
> regards
>
> Berend Hasselman
>
> My sessionInfo:
>
> R version 3.4.0 (2017-04-21)
> Platform: x86_64-apple-darwin15.6.0 (64-bit)
> Running under: macOS Sierra 10.12.5
>
> Matrix products: default
> BLAS: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRblas.0.dylib
> LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylib
>
> locale:
> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] compiler_3.4.0
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From r-devel at akersting.de  Wed Jun 14 12:58:38 2017
From: r-devel at akersting.de (Andreas Kersting)
Date: Wed, 14 Jun 2017 12:58:38 +0200
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
Message-ID: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>

Hi,

I would really like to have a way to split long string literals across 
multiple lines in R.

Currently, if a string literal spans multiple lines, there is no way to 
inhibit the introduction of newline characters:

 > "aaa
+ bbb"
[1] "aaa\nbbb"


If a line ends with a backslash, it is just ignored:

 > "aaa\
+ bbb"
[1] "aaa\nbbb"


We could use this fact to implement string splitting in a fairly 
backward-compatible way, since currently such trailing backslashes 
should hardly be used as they do not have any effect. The attached patch 
makes the parser ignore a newline character directly following a backslash:

 > "aaa\
+ bbb"
[1] "aaabbb"


I personally would also prefer if leading blanks (spaces and tabs) in 
the second line are ignored to allow for proper indentation:

 >   "aaa \
+    bbb"
[1] "aaa bbb"

 >   "aaa\
+    \ bbb"
[1] "aaa bbb"

This is also implemented by this patch.


An alternative approach could be to have something like

("aaa "
"bbb")

or

("aaa ",
"bbb")

be interpreted as "aaa bbb".

I don't know the ins and outs of the parser of R (hence: please very 
carefully review the attached patch), but I guess this would be more 
work to implement!?


What do you think? Is there anybody else who is missing this feature in 
the first place?

Regards,
Andreas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: patch.diff
Type: text/x-patch
Size: 2598 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170614/7986e543/attachment.bin>

From murdoch.duncan at gmail.com  Wed Jun 14 13:12:09 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 14 Jun 2017 06:12:09 -0500
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
Message-ID: <85c4570d-fac2-7715-487a-b175cb54a098@gmail.com>

On 14/06/2017 5:58 AM, Andreas Kersting wrote:
> Hi,
>
> I would really like to have a way to split long string literals across
> multiple lines in R.

I don't understand why you require the string to be a literal.  Why not 
construct the long string in an expression like

  paste0("aaa",
         "bbb")

?  Surely the execution time of the paste0 call is negligible.

Duncan Murdoch

>
> Currently, if a string literal spans multiple lines, there is no way to
> inhibit the introduction of newline characters:
>
>  > "aaa
> + bbb"
> [1] "aaa\nbbb"
>
>
> If a line ends with a backslash, it is just ignored:
>
>  > "aaa\
> + bbb"
> [1] "aaa\nbbb"
>
>
> We could use this fact to implement string splitting in a fairly
> backward-compatible way, since currently such trailing backslashes
> should hardly be used as they do not have any effect. The attached patch
> makes the parser ignore a newline character directly following a backslash:
>
>  > "aaa\
> + bbb"
> [1] "aaabbb"
>
>
> I personally would also prefer if leading blanks (spaces and tabs) in
> the second line are ignored to allow for proper indentation:
>
>  >   "aaa \
> +    bbb"
> [1] "aaa bbb"
>
>  >   "aaa\
> +    \ bbb"
> [1] "aaa bbb"
>
> This is also implemented by this patch.
>
>
> An alternative approach could be to have something like
>
> ("aaa "
> "bbb")
>
> or
>
> ("aaa ",
> "bbb")
>
> be interpreted as "aaa bbb".
>
> I don't know the ins and outs of the parser of R (hence: please very
> carefully review the attached patch), but I guess this would be more
> work to implement!?
>
>
> What do you think? Is there anybody else who is missing this feature in
> the first place?
>
> Regards,
> Andreas
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From csardi.gabor at gmail.com  Wed Jun 14 13:17:05 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 14 Jun 2017 12:17:05 +0100
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <85c4570d-fac2-7715-487a-b175cb54a098@gmail.com>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
 <85c4570d-fac2-7715-487a-b175cb54a098@gmail.com>
Message-ID: <CABtg=KngLWeUVgDWaEv1MWuvwBrOzbDxnTMRGRpEtbVknZF-3Q@mail.gmail.com>

On Wed, Jun 14, 2017 at 12:12 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 14/06/2017 5:58 AM, Andreas Kersting wrote:
>>
>> Hi,
>>
>> I would really like to have a way to split long string literals across
>> multiple lines in R.

You can also look at the glue package, it supports continuation and a lot more:

glue("
    A formatted string \\
    can also be on a \\
    single line
    ")
#> A formatted string can also be on a single line

Gabor

[...]


From r-devel at akersting.de  Wed Jun 14 13:45:37 2017
From: r-devel at akersting.de (Andreas Kersting)
Date: Wed, 14 Jun 2017 13:45:37 +0200 (CEST)
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <85c4570d-fac2-7715-487a-b175cb54a098@gmail.com>
Message-ID: <E1dL6jx-0006Ct-C4@rmmprod06.runbox>

On Wed, 14 Jun 2017 06:12:09 -0500, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

> On 14/06/2017 5:58 AM, Andreas Kersting wrote:
> > Hi,
> >
> > I would really like to have a way to split long string literals across
> > multiple lines in R.
> 
> I don't understand why you require the string to be a literal.  Why not 
> construct the long string in an expression like
> 
>   paste0("aaa",
>          "bbb")
> 
> ?  Surely the execution time of the paste0 call is negligible.
> 
> Duncan Murdoch

Actually "execution time" is precisely one of the reasons why I would like to see this feature as - depending on the context (e.g. in a tight loop) - the execution time of paste0 (or probably also glue, thanks Gabor) is not necessarily insignificant. 

The other reason is style: I think it is cleaner if we can construct such a long string literal without the need for a function call.

Andreas

> >
> > Currently, if a string literal spans multiple lines, there is no way to
> > inhibit the introduction of newline characters:
> >
> >  > "aaa
> > + bbb"
> > [1] "aaa\nbbb"
> >
> >
> > If a line ends with a backslash, it is just ignored:
> >
> >  > "aaa\
> > + bbb"
> > [1] "aaa\nbbb"
> >
> >
> > We could use this fact to implement string splitting in a fairly
> > backward-compatible way, since currently such trailing backslashes
> > should hardly be used as they do not have any effect. The attached patch
> > makes the parser ignore a newline character directly following a backslash:
> >
> >  > "aaa\
> > + bbb"
> > [1] "aaabbb"
> >
> >
> > I personally would also prefer if leading blanks (spaces and tabs) in
> > the second line are ignored to allow for proper indentation:
> >
> >  >   "aaa \
> > +    bbb"
> > [1] "aaa bbb"
> >
> >  >   "aaa\
> > +    \ bbb"
> > [1] "aaa bbb"
> >
> > This is also implemented by this patch.
> >
> >
> > An alternative approach could be to have something like
> >
> > ("aaa "
> > "bbb")
> >
> > or
> >
> > ("aaa ",
> > "bbb")
> >
> > be interpreted as "aaa bbb".
> >
> > I don't know the ins and outs of the parser of R (hence: please very
> > carefully review the attached patch), but I guess this would be more
> > work to implement!?
> >
> >
> > What do you think? Is there anybody else who is missing this feature in
> > the first place?
> >
> > Regards,
> > Andreas
> >
> >
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >


From mark.vanderloo at gmail.com  Wed Jun 14 14:00:00 2017
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Wed, 14 Jun 2017 12:00:00 +0000
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <E1dL6jx-0006Ct-C4@rmmprod06.runbox>
References: <85c4570d-fac2-7715-487a-b175cb54a098@gmail.com>
 <E1dL6jx-0006Ct-C4@rmmprod06.runbox>
Message-ID: <CAOKDuOjjxP9wsZo6Rqw9UpJfKwgXr_ON_Ee7kPt8syqj_1JzrA@mail.gmail.com>

Having some line-breaking character for string literals would have benefits
as string literals can then be constructed parse-time rather than run-time.
I have run into this myself a few times as well. One way to at least
emulate something like that is the following.

`%+%` <- function(x,y) paste0(x,y)

"hello" %+%
  " pretty" %+%
  " world"


-Mark



Op wo 14 jun. 2017 om 13:53 schreef Andreas Kersting <r-devel at akersting.de>:

> On Wed, 14 Jun 2017 06:12:09 -0500, Duncan Murdoch <
> murdoch.duncan at gmail.com> wrote:
>
> > On 14/06/2017 5:58 AM, Andreas Kersting wrote:
> > > Hi,
> > >
> > > I would really like to have a way to split long string literals across
> > > multiple lines in R.
> >
> > I don't understand why you require the string to be a literal.  Why not
> > construct the long string in an expression like
> >
> >   paste0("aaa",
> >          "bbb")
> >
> > ?  Surely the execution time of the paste0 call is negligible.
> >
> > Duncan Murdoch
>
> Actually "execution time" is precisely one of the reasons why I would like
> to see this feature as - depending on the context (e.g. in a tight loop) -
> the execution time of paste0 (or probably also glue, thanks Gabor) is not
> necessarily insignificant.
>
> The other reason is style: I think it is cleaner if we can construct such
> a long string literal without the need for a function call.
>
> Andreas
>
> > >
> > > Currently, if a string literal spans multiple lines, there is no way to
> > > inhibit the introduction of newline characters:
> > >
> > >  > "aaa
> > > + bbb"
> > > [1] "aaa\nbbb"
> > >
> > >
> > > If a line ends with a backslash, it is just ignored:
> > >
> > >  > "aaa\
> > > + bbb"
> > > [1] "aaa\nbbb"
> > >
> > >
> > > We could use this fact to implement string splitting in a fairly
> > > backward-compatible way, since currently such trailing backslashes
> > > should hardly be used as they do not have any effect. The attached
> patch
> > > makes the parser ignore a newline character directly following a
> backslash:
> > >
> > >  > "aaa\
> > > + bbb"
> > > [1] "aaabbb"
> > >
> > >
> > > I personally would also prefer if leading blanks (spaces and tabs) in
> > > the second line are ignored to allow for proper indentation:
> > >
> > >  >   "aaa \
> > > +    bbb"
> > > [1] "aaa bbb"
> > >
> > >  >   "aaa\
> > > +    \ bbb"
> > > [1] "aaa bbb"
> > >
> > > This is also implemented by this patch.
> > >
> > >
> > > An alternative approach could be to have something like
> > >
> > > ("aaa "
> > > "bbb")
> > >
> > > or
> > >
> > > ("aaa ",
> > > "bbb")
> > >
> > > be interpreted as "aaa bbb".
> > >
> > > I don't know the ins and outs of the parser of R (hence: please very
> > > carefully review the attached patch), but I guess this would be more
> > > work to implement!?
> > >
> > >
> > > What do you think? Is there anybody else who is missing this feature in
> > > the first place?
> > >
> > > Regards,
> > > Andreas
> > >
> > >
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From jorismeys at gmail.com  Wed Jun 14 14:18:15 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Wed, 14 Jun 2017 14:18:15 +0200
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <CAOKDuOjjxP9wsZo6Rqw9UpJfKwgXr_ON_Ee7kPt8syqj_1JzrA@mail.gmail.com>
References: <85c4570d-fac2-7715-487a-b175cb54a098@gmail.com>
 <E1dL6jx-0006Ct-C4@rmmprod06.runbox>
 <CAOKDuOjjxP9wsZo6Rqw9UpJfKwgXr_ON_Ee7kPt8syqj_1JzrA@mail.gmail.com>
Message-ID: <CAO1zAVb4ufzpSZALz=sZiR=a1iH=Th3hednmBiP+Abnnph-NCw@mail.gmail.com>

Mark, that's actually a fair statement, although your extra operator
doesn't cause construction at parse time. You still call paste0(), but just
add an extra layer on top of it.

I also doubt that even in gigantic loops the benefit is going to be
significant. Take following example:

atestfun <- function(x){
  y <- paste0("a very long",
         "string for testing")
  grep(x, y)
}
atestfun2 <- function(x){
  y <- "a very long
string for testing"
  grep(x,y)
}
cfun <- cmpfun(atestfun)
cfun2 <- cmpfun(atestfun2)

require(rbenchmark)
benchmark(atestfun("a"),
          atestfun2("a"),
          cfun("a"),
          cfun2("a"),
          replications = 100000)

Which gives after 100,000 replications:

            test replications elapsed relative
1  atestfun("a")       100000    0.83    1.339
2 atestfun2("a")       100000    0.62    1.000
3      cfun("a")       100000    0.81    1.306
4     cfun2("a")       100000    0.62    1.000

The patch can in principle make similar code marginally faster, but I'm not
convinced the patch is going to make any real difference except for in some
very specific and exotic cases. Even more, calling a function like the
examples inside the loop is the only way I can come up with where this
might be a problem. If you just construct the string inside the loop,
there's two possibilities:

- the string does not need to change, and then you better construct it
outside of the loop
- the string does need to change, and then you need paste() or paste0()
anyway

I'm not against incorporating the patch, as it would eliminate a few
keystrokes. It's a neat idea, but I don't expect any other noticeable
advantage from it.

my humble 2 cents
Cheers
Joris

On Wed, Jun 14, 2017 at 2:00 PM, Mark van der Loo <mark.vanderloo at gmail.com>
wrote:

> Having some line-breaking character for string literals would have benefits
> as string literals can then be constructed parse-time rather than run-time.
> I have run into this myself a few times as well. One way to at least
> emulate something like that is the following.
>
> `%+%` <- function(x,y) paste0(x,y)
>
> "hello" %+%
>   " pretty" %+%
>   " world"
>
>
> -Mark
>
>
>
> Op wo 14 jun. 2017 om 13:53 schreef Andreas Kersting <r-devel at akersting.de
> >:
>
> > On Wed, 14 Jun 2017 06:12:09 -0500, Duncan Murdoch <
> > murdoch.duncan at gmail.com> wrote:
> >
> > > On 14/06/2017 5:58 AM, Andreas Kersting wrote:
> > > > Hi,
> > > >
> > > > I would really like to have a way to split long string literals
> across
> > > > multiple lines in R.
> > >
> > > I don't understand why you require the string to be a literal.  Why not
> > > construct the long string in an expression like
> > >
> > >   paste0("aaa",
> > >          "bbb")
> > >
> > > ?  Surely the execution time of the paste0 call is negligible.
> > >
> > > Duncan Murdoch
> >
> > Actually "execution time" is precisely one of the reasons why I would
> like
> > to see this feature as - depending on the context (e.g. in a tight loop)
> -
> > the execution time of paste0 (or probably also glue, thanks Gabor) is not
> > necessarily insignificant.
> >
> > The other reason is style: I think it is cleaner if we can construct such
> > a long string literal without the need for a function call.
> >
> > Andreas
> >
> > > >
> > > > Currently, if a string literal spans multiple lines, there is no way
> to
> > > > inhibit the introduction of newline characters:
> > > >
> > > >  > "aaa
> > > > + bbb"
> > > > [1] "aaa\nbbb"
> > > >
> > > >
> > > > If a line ends with a backslash, it is just ignored:
> > > >
> > > >  > "aaa\
> > > > + bbb"
> > > > [1] "aaa\nbbb"
> > > >
> > > >
> > > > We could use this fact to implement string splitting in a fairly
> > > > backward-compatible way, since currently such trailing backslashes
> > > > should hardly be used as they do not have any effect. The attached
> > patch
> > > > makes the parser ignore a newline character directly following a
> > backslash:
> > > >
> > > >  > "aaa\
> > > > + bbb"
> > > > [1] "aaabbb"
> > > >
> > > >
> > > > I personally would also prefer if leading blanks (spaces and tabs) in
> > > > the second line are ignored to allow for proper indentation:
> > > >
> > > >  >   "aaa \
> > > > +    bbb"
> > > > [1] "aaa bbb"
> > > >
> > > >  >   "aaa\
> > > > +    \ bbb"
> > > > [1] "aaa bbb"
> > > >
> > > > This is also implemented by this patch.
> > > >
> > > >
> > > > An alternative approach could be to have something like
> > > >
> > > > ("aaa "
> > > > "bbb")
> > > >
> > > > or
> > > >
> > > > ("aaa ",
> > > > "bbb")
> > > >
> > > > be interpreted as "aaa bbb".
> > > >
> > > > I don't know the ins and outs of the parser of R (hence: please very
> > > > carefully review the attached patch), but I guess this would be more
> > > > work to implement!?
> > > >
> > > >
> > > > What do you think? Is there anybody else who is missing this feature
> in
> > > > the first place?
> > > >
> > > > Regards,
> > > > Andreas
> > > >
> > > >
> > > >
> > > > ______________________________________________
> > > > R-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > > >
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From mark.vanderloo at gmail.com  Wed Jun 14 14:23:01 2017
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Wed, 14 Jun 2017 12:23:01 +0000
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <CAO1zAVb4ufzpSZALz=sZiR=a1iH=Th3hednmBiP+Abnnph-NCw@mail.gmail.com>
References: <85c4570d-fac2-7715-487a-b175cb54a098@gmail.com>
 <E1dL6jx-0006Ct-C4@rmmprod06.runbox>
 <CAOKDuOjjxP9wsZo6Rqw9UpJfKwgXr_ON_Ee7kPt8syqj_1JzrA@mail.gmail.com>
 <CAO1zAVb4ufzpSZALz=sZiR=a1iH=Th3hednmBiP+Abnnph-NCw@mail.gmail.com>
Message-ID: <CAOKDuOiByrgcMVmq8gnpcbangymgs6qH1j82yhKeSSxOLzttCg@mail.gmail.com>

I know it doesn't cause construction at parse time, and it was also not
what I said. What I meant was that it makes the syntax at least look a
little as if you have a line-breaking character within string literals.

Op wo 14 jun. 2017 om 14:18 schreef Joris Meys <jorismeys at gmail.com>:

> Mark, that's actually a fair statement, although your extra operator
> doesn't cause construction at parse time. You still call paste0(), but just
> add an extra layer on top of it.
>
> I also doubt that even in gigantic loops the benefit is going to be
> significant. Take following example:
>
> atestfun <- function(x){
>   y <- paste0("a very long",
>          "string for testing")
>   grep(x, y)
> }
> atestfun2 <- function(x){
>   y <- "a very long
> string for testing"
>   grep(x,y)
> }
> cfun <- cmpfun(atestfun)
> cfun2 <- cmpfun(atestfun2)
>
> require(rbenchmark)
> benchmark(atestfun("a"),
>           atestfun2("a"),
>           cfun("a"),
>           cfun2("a"),
>           replications = 100000)
>
> Which gives after 100,000 replications:
>
>             test replications elapsed relative
> 1  atestfun("a")       100000    0.83    1.339
> 2 atestfun2("a")       100000    0.62    1.000
> 3      cfun("a")       100000    0.81    1.306
> 4     cfun2("a")       100000    0.62    1.000
>
> The patch can in principle make similar code marginally faster, but I'm
> not convinced the patch is going to make any real difference except for in
> some very specific and exotic cases. Even more, calling a function like the
> examples inside the loop is the only way I can come up with where this
> might be a problem. If you just construct the string inside the loop,
> there's two possibilities:
>
> - the string does not need to change, and then you better construct it
> outside of the loop
> - the string does need to change, and then you need paste() or paste0()
> anyway
>
> I'm not against incorporating the patch, as it would eliminate a few
> keystrokes. It's a neat idea, but I don't expect any other noticeable
> advantage from it.
>
> my humble 2 cents
> Cheers
> Joris
>
> On Wed, Jun 14, 2017 at 2:00 PM, Mark van der Loo <
> mark.vanderloo at gmail.com> wrote:
>
>> Having some line-breaking character for string literals would have
>> benefits
>> as string literals can then be constructed parse-time rather than
>> run-time.
>> I have run into this myself a few times as well. One way to at least
>> emulate something like that is the following.
>>
>> `%+%` <- function(x,y) paste0(x,y)
>>
>> "hello" %+%
>>   " pretty" %+%
>>   " world"
>>
>>
>> -Mark
>>
>>
>>
>> Op wo 14 jun. 2017 om 13:53 schreef Andreas Kersting <
>> r-devel at akersting.de>:
>>
>> > On Wed, 14 Jun 2017 06:12:09 -0500, Duncan Murdoch <
>> > murdoch.duncan at gmail.com> wrote:
>> >
>> > > On 14/06/2017 5:58 AM, Andreas Kersting wrote:
>> > > > Hi,
>> > > >
>> > > > I would really like to have a way to split long string literals
>> across
>> > > > multiple lines in R.
>> > >
>> > > I don't understand why you require the string to be a literal.  Why
>> not
>> > > construct the long string in an expression like
>> > >
>> > >   paste0("aaa",
>> > >          "bbb")
>> > >
>> > > ?  Surely the execution time of the paste0 call is negligible.
>> > >
>> > > Duncan Murdoch
>> >
>> > Actually "execution time" is precisely one of the reasons why I would
>> like
>> > to see this feature as - depending on the context (e.g. in a tight
>> loop) -
>> > the execution time of paste0 (or probably also glue, thanks Gabor) is
>> not
>> > necessarily insignificant.
>> >
>> > The other reason is style: I think it is cleaner if we can construct
>> such
>> > a long string literal without the need for a function call.
>> >
>> > Andreas
>> >
>> > > >
>> > > > Currently, if a string literal spans multiple lines, there is no
>> way to
>> > > > inhibit the introduction of newline characters:
>> > > >
>> > > >  > "aaa
>> > > > + bbb"
>> > > > [1] "aaa\nbbb"
>> > > >
>> > > >
>> > > > If a line ends with a backslash, it is just ignored:
>> > > >
>> > > >  > "aaa\
>> > > > + bbb"
>> > > > [1] "aaa\nbbb"
>> > > >
>> > > >
>> > > > We could use this fact to implement string splitting in a fairly
>> > > > backward-compatible way, since currently such trailing backslashes
>> > > > should hardly be used as they do not have any effect. The attached
>> > patch
>> > > > makes the parser ignore a newline character directly following a
>> > backslash:
>> > > >
>> > > >  > "aaa\
>> > > > + bbb"
>> > > > [1] "aaabbb"
>> > > >
>> > > >
>> > > > I personally would also prefer if leading blanks (spaces and tabs)
>> in
>> > > > the second line are ignored to allow for proper indentation:
>> > > >
>> > > >  >   "aaa \
>> > > > +    bbb"
>> > > > [1] "aaa bbb"
>> > > >
>> > > >  >   "aaa\
>> > > > +    \ bbb"
>> > > > [1] "aaa bbb"
>> > > >
>> > > > This is also implemented by this patch.
>> > > >
>> > > >
>> > > > An alternative approach could be to have something like
>> > > >
>> > > > ("aaa "
>> > > > "bbb")
>> > > >
>> > > > or
>> > > >
>> > > > ("aaa ",
>> > > > "bbb")
>> > > >
>> > > > be interpreted as "aaa bbb".
>> > > >
>> > > > I don't know the ins and outs of the parser of R (hence: please very
>> > > > carefully review the attached patch), but I guess this would be more
>> > > > work to implement!?
>> > > >
>> > > >
>> > > > What do you think? Is there anybody else who is missing this
>> feature in
>> > > > the first place?
>> > > >
>> > > > Regards,
>> > > > Andreas
>> > > >
>> > > >
>> > > >
>> > > > ______________________________________________
>> > > > R-devel at r-project.org mailing list
>> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> > > >
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>>
>>         [[alternative HTML version deleted]]
>
>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
>
> --
> Joris Meys
> Statistical consultant
>
> Ghent University
> Faculty of Bioscience Engineering
> Department of Mathematical Modelling, Statistics and Bio-Informatics
>
> tel :  +32 (0)9 264 61 79 <+32%209%20264%2061%2079>
> Joris.Meys at Ugent.be
> -------------------------------
> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
>

	[[alternative HTML version deleted]]


From jorismeys at gmail.com  Wed Jun 14 14:35:11 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Wed, 14 Jun 2017 14:35:11 +0200
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <CAOKDuOiByrgcMVmq8gnpcbangymgs6qH1j82yhKeSSxOLzttCg@mail.gmail.com>
References: <85c4570d-fac2-7715-487a-b175cb54a098@gmail.com>
 <E1dL6jx-0006Ct-C4@rmmprod06.runbox>
 <CAOKDuOjjxP9wsZo6Rqw9UpJfKwgXr_ON_Ee7kPt8syqj_1JzrA@mail.gmail.com>
 <CAO1zAVb4ufzpSZALz=sZiR=a1iH=Th3hednmBiP+Abnnph-NCw@mail.gmail.com>
 <CAOKDuOiByrgcMVmq8gnpcbangymgs6qH1j82yhKeSSxOLzttCg@mail.gmail.com>
Message-ID: <CAO1zAVanEwHFYVePhxcjR3c1t2kNygb9x-br8k_wdNFVpmcNLg@mail.gmail.com>

Hi Mark,

I got you. I just pointed out the obvious to illustrate why your emulation
didn't eliminate the need for the real thing. I didn't mean to imply you
weren't aware of this, even though it may seem so. Sometimes I'm not 100%
aware of the subtleties of the English language. This seems one of those
cases.

Met vriendelijke groeten
Joris

On Wed, Jun 14, 2017 at 2:23 PM, Mark van der Loo <mark.vanderloo at gmail.com>
wrote:

> I know it doesn't cause construction at parse time, and it was also not
> what I said. What I meant was that it makes the syntax at least look a
> little as if you have a line-breaking character within string literals.
>
> Op wo 14 jun. 2017 om 14:18 schreef Joris Meys <jorismeys at gmail.com>:
>
>> Mark, that's actually a fair statement, although your extra operator
>> doesn't cause construction at parse time. You still call paste0(), but just
>> add an extra layer on top of it.
>>
>> I also doubt that even in gigantic loops the benefit is going to be
>> significant. Take following example:
>>
>> atestfun <- function(x){
>>   y <- paste0("a very long",
>>          "string for testing")
>>   grep(x, y)
>> }
>> atestfun2 <- function(x){
>>   y <- "a very long
>> string for testing"
>>   grep(x,y)
>> }
>> cfun <- cmpfun(atestfun)
>> cfun2 <- cmpfun(atestfun2)
>>
>> require(rbenchmark)
>> benchmark(atestfun("a"),
>>           atestfun2("a"),
>>           cfun("a"),
>>           cfun2("a"),
>>           replications = 100000)
>>
>> Which gives after 100,000 replications:
>>
>>             test replications elapsed relative
>> 1  atestfun("a")       100000    0.83    1.339
>> 2 atestfun2("a")       100000    0.62    1.000
>> 3      cfun("a")       100000    0.81    1.306
>> 4     cfun2("a")       100000    0.62    1.000
>>
>> The patch can in principle make similar code marginally faster, but I'm
>> not convinced the patch is going to make any real difference except for in
>> some very specific and exotic cases. Even more, calling a function like the
>> examples inside the loop is the only way I can come up with where this
>> might be a problem. If you just construct the string inside the loop,
>> there's two possibilities:
>>
>> - the string does not need to change, and then you better construct it
>> outside of the loop
>> - the string does need to change, and then you need paste() or paste0()
>> anyway
>>
>> I'm not against incorporating the patch, as it would eliminate a few
>> keystrokes. It's a neat idea, but I don't expect any other noticeable
>> advantage from it.
>>
>> my humble 2 cents
>> Cheers
>> Joris
>>
>> On Wed, Jun 14, 2017 at 2:00 PM, Mark van der Loo <
>> mark.vanderloo at gmail.com> wrote:
>>
>>> Having some line-breaking character for string literals would have
>>> benefits
>>> as string literals can then be constructed parse-time rather than
>>> run-time.
>>> I have run into this myself a few times as well. One way to at least
>>> emulate something like that is the following.
>>>
>>> `%+%` <- function(x,y) paste0(x,y)
>>>
>>> "hello" %+%
>>>   " pretty" %+%
>>>   " world"
>>>
>>>
>>> -Mark
>>>
>>>
>>>
>>> Op wo 14 jun. 2017 om 13:53 schreef Andreas Kersting <
>>> r-devel at akersting.de>:
>>>
>>> > On Wed, 14 Jun 2017 06:12:09 -0500, Duncan Murdoch <
>>> > murdoch.duncan at gmail.com> wrote:
>>> >
>>> > > On 14/06/2017 5:58 AM, Andreas Kersting wrote:
>>> > > > Hi,
>>> > > >
>>> > > > I would really like to have a way to split long string literals
>>> across
>>> > > > multiple lines in R.
>>> > >
>>> > > I don't understand why you require the string to be a literal.  Why
>>> not
>>> > > construct the long string in an expression like
>>> > >
>>> > >   paste0("aaa",
>>> > >          "bbb")
>>> > >
>>> > > ?  Surely the execution time of the paste0 call is negligible.
>>> > >
>>> > > Duncan Murdoch
>>> >
>>> > Actually "execution time" is precisely one of the reasons why I would
>>> like
>>> > to see this feature as - depending on the context (e.g. in a tight
>>> loop) -
>>> > the execution time of paste0 (or probably also glue, thanks Gabor) is
>>> not
>>> > necessarily insignificant.
>>> >
>>> > The other reason is style: I think it is cleaner if we can construct
>>> such
>>> > a long string literal without the need for a function call.
>>> >
>>> > Andreas
>>> >
>>> > > >
>>> > > > Currently, if a string literal spans multiple lines, there is no
>>> way to
>>> > > > inhibit the introduction of newline characters:
>>> > > >
>>> > > >  > "aaa
>>> > > > + bbb"
>>> > > > [1] "aaa\nbbb"
>>> > > >
>>> > > >
>>> > > > If a line ends with a backslash, it is just ignored:
>>> > > >
>>> > > >  > "aaa\
>>> > > > + bbb"
>>> > > > [1] "aaa\nbbb"
>>> > > >
>>> > > >
>>> > > > We could use this fact to implement string splitting in a fairly
>>> > > > backward-compatible way, since currently such trailing backslashes
>>> > > > should hardly be used as they do not have any effect. The attached
>>> > patch
>>> > > > makes the parser ignore a newline character directly following a
>>> > backslash:
>>> > > >
>>> > > >  > "aaa\
>>> > > > + bbb"
>>> > > > [1] "aaabbb"
>>> > > >
>>> > > >
>>> > > > I personally would also prefer if leading blanks (spaces and tabs)
>>> in
>>> > > > the second line are ignored to allow for proper indentation:
>>> > > >
>>> > > >  >   "aaa \
>>> > > > +    bbb"
>>> > > > [1] "aaa bbb"
>>> > > >
>>> > > >  >   "aaa\
>>> > > > +    \ bbb"
>>> > > > [1] "aaa bbb"
>>> > > >
>>> > > > This is also implemented by this patch.
>>> > > >
>>> > > >
>>> > > > An alternative approach could be to have something like
>>> > > >
>>> > > > ("aaa "
>>> > > > "bbb")
>>> > > >
>>> > > > or
>>> > > >
>>> > > > ("aaa ",
>>> > > > "bbb")
>>> > > >
>>> > > > be interpreted as "aaa bbb".
>>> > > >
>>> > > > I don't know the ins and outs of the parser of R (hence: please
>>> very
>>> > > > carefully review the attached patch), but I guess this would be
>>> more
>>> > > > work to implement!?
>>> > > >
>>> > > >
>>> > > > What do you think? Is there anybody else who is missing this
>>> feature in
>>> > > > the first place?
>>> > > >
>>> > > > Regards,
>>> > > > Andreas
>>> > > >
>>> > > >
>>> > > >
>>> > > > ______________________________________________
>>> > > > R-devel at r-project.org mailing list
>>> > > > https://stat.ethz.ch/mailman/listinfo/r-devel
>>> > > >
>>> >
>>> > ______________________________________________
>>> > R-devel at r-project.org mailing list
>>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>>> >
>>>
>>>         [[alternative HTML version deleted]]
>>
>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>>
>>
>> --
>> Joris Meys
>> Statistical consultant
>>
>> Ghent University
>> Faculty of Bioscience Engineering
>> Department of Mathematical Modelling, Statistics and Bio-Informatics
>>
>> tel :  +32 (0)9 264 61 79 <+32%209%20264%2061%2079>
>> Joris.Meys at Ugent.be
>> -------------------------------
>> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
>>
>


-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From therneau at mayo.edu  Wed Jun 14 15:02:52 2017
From: therneau at mayo.edu (Therneau, Terry M., Ph.D.)
Date: Wed, 14 Jun 2017 08:02:52 -0500
Subject: [Rd] spurious warning in ave()
Message-ID: <9153c6$71a8hp@ironport10.mayo.edu>

Consider the following simple data set and a call to ave:

 > tdata <- data.frame(f1=c(1,1,1,1,2,2,2,2), f2=c(1,2,1,2,1,1,1,1), y=1:8)
 > with(tdata, table(f1, f2))
    f2
f1  1 2
   1 2 2
   2 4 0

 > with(tdata, ave(y, f1, f2, FUN=max))

[1] 3 4 3 4 8 8 8 8
Warning message:
In FUN(X[[i]], ...) : no non-missing arguments to max; returning -Inf

There are no missing values in the result.  The fact that ave() apparently tried to find 
the max for a combination it did not need is irrelvant to the user, and the warning is 
counterproductive.

Terry T.


From murdoch.duncan at gmail.com  Wed Jun 14 15:36:37 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 14 Jun 2017 08:36:37 -0500
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <E1dL6jx-0006Ct-C4@rmmprod06.runbox>
References: <E1dL6jx-0006Ct-C4@rmmprod06.runbox>
Message-ID: <c5d21403-c6e6-988d-96ee-9e64ffd71ac5@gmail.com>

On 14/06/2017 6:45 AM, Andreas Kersting wrote:
> On Wed, 14 Jun 2017 06:12:09 -0500, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
>> On 14/06/2017 5:58 AM, Andreas Kersting wrote:
>>> Hi,
>>>
>>> I would really like to have a way to split long string literals across
>>> multiple lines in R.
>>
>> I don't understand why you require the string to be a literal.  Why not
>> construct the long string in an expression like
>>
>>   paste0("aaa",
>>          "bbb")
>>
>> ?  Surely the execution time of the paste0 call is negligible.
>>
>> Duncan Murdoch
>
> Actually "execution time" is precisely one of the reasons why I would like to see this feature as - depending on the context (e.g. in a tight loop) - the execution time of paste0 (or probably also glue, thanks Gabor) is not necessarily insignificant.

You also need to consider implementation time.  This is not just changes 
to R itself; trailing backslashes *are* used in some packages (e.g. 
geoparser), so those packages would need to be identified and modified 
and resubmitted to CRAN.

Core changes to existing behaviour need really strong arguments, and I'm 
just not seeing those here.

Duncan Murdoch

> The other reason is style: I think it is cleaner if we can construct such a long string literal without the need for a function call.
>
> Andreas
>
>>>
>>> Currently, if a string literal spans multiple lines, there is no way to
>>> inhibit the introduction of newline characters:
>>>
>>>  > "aaa
>>> + bbb"
>>> [1] "aaa\nbbb"
>>>
>>>
>>> If a line ends with a backslash, it is just ignored:
>>>
>>>  > "aaa\
>>> + bbb"
>>> [1] "aaa\nbbb"
>>>
>>>
>>> We could use this fact to implement string splitting in a fairly
>>> backward-compatible way, since currently such trailing backslashes
>>> should hardly be used as they do not have any effect. The attached patch
>>> makes the parser ignore a newline character directly following a backslash:
>>>
>>>  > "aaa\
>>> + bbb"
>>> [1] "aaabbb"
>>>
>>>
>>> I personally would also prefer if leading blanks (spaces and tabs) in
>>> the second line are ignored to allow for proper indentation:
>>>
>>>  >   "aaa \
>>> +    bbb"
>>> [1] "aaa bbb"
>>>
>>>  >   "aaa\
>>> +    \ bbb"
>>> [1] "aaa bbb"
>>>
>>> This is also implemented by this patch.
>>>
>>>
>>> An alternative approach could be to have something like
>>>
>>> ("aaa "
>>> "bbb")
>>>
>>> or
>>>
>>> ("aaa ",
>>> "bbb")
>>>
>>> be interpreted as "aaa bbb".
>>>
>>> I don't know the ins and outs of the parser of R (hence: please very
>>> carefully review the attached patch), but I guess this would be more
>>> work to implement!?
>>>
>>>
>>> What do you think? Is there anybody else who is missing this feature in
>>> the first place?
>>>
>>> Regards,
>>> Andreas
>>>
>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>
>


From simon.urbanek at r-project.org  Wed Jun 14 15:48:22 2017
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 14 Jun 2017 09:48:22 -0400
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
Message-ID: <81A8A8F5-4BE7-4747-8C9F-B95C45434180@r-project.org>

As I recall this has been discussed at least a few times (unfortunately I'm traveling so can't check the references), but the justification was never satisfactory.

Personally, I wouldn't mind string continuation supported since it makes for more readable code (I had one of my packages raise a NOTE in examples because there is no way in R to split a long hash into multiple lines), but I would be strongly against random removal of whitespaces as it's counter-intuitive, misleading and makes it impossible to continue spaces on the next line. None of the languages that I can think of with multiline strings do that as that's way too dangerous.

Cheers,
Simon


> On Jun 14, 2017, at 6:58 AM, Andreas Kersting <r-devel at akersting.de> wrote:
> 
> Hi,
> 
> I would really like to have a way to split long string literals across multiple lines in R.
> 
> Currently, if a string literal spans multiple lines, there is no way to inhibit the introduction of newline characters:
> 
> > "aaa
> + bbb"
> [1] "aaa\nbbb"
> 
> 
> If a line ends with a backslash, it is just ignored:
> 
> > "aaa\
> + bbb"
> [1] "aaa\nbbb"
> 
> 
> We could use this fact to implement string splitting in a fairly backward-compatible way, since currently such trailing backslashes should hardly be used as they do not have any effect. The attached patch makes the parser ignore a newline character directly following a backslash:
> 
> > "aaa\
> + bbb"
> [1] "aaabbb"
> 
> 
> I personally would also prefer if leading blanks (spaces and tabs) in the second line are ignored to allow for proper indentation:
> 
> >   "aaa \
> +    bbb"
> [1] "aaa bbb"
> 
> >   "aaa\
> +    \ bbb"
> [1] "aaa bbb"
> 
> This is also implemented by this patch.
> 
> 
> An alternative approach could be to have something like
> 
> ("aaa "
> "bbb")
> 
> or
> 
> ("aaa ",
> "bbb")
> 
> be interpreted as "aaa bbb".
> 
> I don't know the ins and outs of the parser of R (hence: please very carefully review the attached patch), but I guess this would be more work to implement!?
> 
> 
> What do you think? Is there anybody else who is missing this feature in the first place?
> 
> Regards,
> Andreas
> <patch.diff>______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From bhh at xs4all.nl  Wed Jun 14 16:48:50 2017
From: bhh at xs4all.nl (Berend Hasselman)
Date: Wed, 14 Jun 2017 16:48:50 +0200
Subject: [Rd] Possible with enableJIT function
In-Reply-To: <alpine.DEB.2.20.1706131505140.3321@luke-Latitude>
References: <05109DDA-8981-48AC-AFBA-AF2EE3C5471A@xs4all.nl>
 <alpine.DEB.2.20.1706131505140.3321@luke-Latitude>
Message-ID: <C94A5283-7D1C-4686-9D6A-56A4A63F7DDA@xs4all.nl>


> On 13 Jun 2017, at 22:05, luke-tierney at uiowa.edu wrote:
> 
> Thanks. This should be resolved in R-devel(r72788) and R-patched
> (r72789)
> 

Also thanks.
It is resolved in R-patched.

Berend

> Best,
> 
> luke
> 
> On Mon, 12 Jun 2017, Berend Hasselman wrote:
> 
>> 
>> 
>> In this email to the R-help list: https://stat.ethz.ch/pipermail/r-help/2017-June/447474.html
>> and in this question on Stackoverflow: https://stackoverflow.com/questions/44486643/nleqslv-memory-use-in-r
>> 
>> Andrew Leach has raised a question about the memory usage of my package nleqslv.
>> In a model with a loop within a function he has experienced continuously increasing memory usage
>> by package nleqslv leading to an out of memory condition.
>> 
>> I have been able to reproduce the continuously increasing memory usage with the following small example.
>> 
>> <code>
>> library(nleqslv,lib.loc="../nleqslv.Rcheck")
>> library(pryr)
>> dslnex <- function(x) {
>>   y <- numeric(2)
>>   y[1] <- x[1]^2 + x[2]^2 - 2
>>   y[2] <- exp(x[1]-1) + x[2]^3 - 2
>>   y
>> }
>> xstart <- c(x1=1.5,x2=2)
>> nsims <- 10
>> for(test_iter in seq_len(nsims)){
>>   z <- nleqslv(xstart,dslnex,jacobian=NULL)
>>   print(paste("nleqslv iteration",test_iter,"and memory used is",mem_used()))
>> }
>> memory.profile()
>> gc()
>> print(paste("At end memory used is", mem_used()))
>> </code>
>> 
>> The final output is
>> 
>> <output>
>> [1] "nleqslv iteration 1 and memory used is 28921288"
>> [1] "nleqslv iteration 2 and memory used is 29133256"
>> [1] "nleqslv iteration 3 and memory used is 29132992"
>> [1] "nleqslv iteration 4 and memory used is 29134712"
>> [1] "nleqslv iteration 5 and memory used is 29136432"
>> [1] "nleqslv iteration 6 and memory used is 29138152"
>> [1] "nleqslv iteration 7 and memory used is 29139872"
>> [1] "nleqslv iteration 8 and memory used is 29141592"
>> [1] "nleqslv iteration 9 and memory used is 29143312"
>> [1] "nleqslv iteration 10 and memory used is 29145032"
>>> 
>>> memory.profile()
>>      NULL      symbol    pairlist     closure environment     promise
>>         1        8554      194726        4230        1065        6534
>>  language     special     builtin        char     logical     integer
>>     51374          45         671        9786        8030       37258
>>    double     complex   character         ...         any        list
>>      2645           1       53795           0           0       18487
>> expression    bytecode externalptr     weakref         raw          S4
>>         1       14662        2233         592         593        1049
>>> gc()
>>        used (Mb) gc trigger (Mb) max used (Mb)
>> Ncells 416340 22.3     750400 40.1   581181 31.1
>> Vcells 726127  5.6    1308461 10.0  1191521  9.1
>>> print(paste("At end memory used is", mem_used()))
>> [1] "At end memory used is 29126472"
>> </output>
>> 
>> Indeed memory used increases in each pass of the for loop.
>> 
>> I have added these two lines at the top of the code after the  library(pryr) invocation.
>> 
>> library(compiler)
>> oldJIT <- enableJIT(0)
>> 
>> This resolves the issue in the sense that memory used remains constant after the first iteration.
>> Output in the for loop is now:
>> <output>
>> [1] "nleqslv iteration 1 and memory used is 24487784"
>> [1] "nleqslv iteration 2 and memory used is 24495816"
>> [1] "nleqslv iteration 3 and memory used is 24495816"
>> [1] "nleqslv iteration 4 and memory used is 24495816"
>> [1] "nleqslv iteration 5 and memory used is 24495816"
>> [1] "nleqslv iteration 6 and memory used is 24495816"
>> [1] "nleqslv iteration 7 and memory used is 24495816"
>> [1] "nleqslv iteration 8 and memory used is 24495816"
>> [1] "nleqslv iteration 9 and memory used is 24495816"
>> [1] "nleqslv iteration 10 and memory used is 24495816"
>> </output>
>> 
>> My questions are
>> 
>> - is this a bug(let) in the JIT compiler?
>> - if it isn't what would need to be changed in nleqslv.R in the package source? (I haven't a clue)
>> 
>> regards
>> 
>> Berend Hasselman
>> 
>> My sessionInfo:
>> 
>> R version 3.4.0 (2017-04-21)
>> Platform: x86_64-apple-darwin15.6.0 (64-bit)
>> Running under: macOS Sierra 10.12.5
>> 
>> Matrix products: default
>> BLAS: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRblas.0.dylib
>> LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylib
>> 
>> locale:
>> [1] en_IE.UTF-8/en_IE.UTF-8/en_IE.UTF-8/C/en_IE.UTF-8/en_IE.UTF-8
>> 
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>> 
>> loaded via a namespace (and not attached):
>> [1] compiler_3.4.0
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> 
> 
> -- 
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>   Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From h.wickham at gmail.com  Wed Jun 14 16:51:24 2017
From: h.wickham at gmail.com (Hadley Wickham)
Date: Wed, 14 Jun 2017 09:51:24 -0500
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <81A8A8F5-4BE7-4747-8C9F-B95C45434180@r-project.org>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
 <81A8A8F5-4BE7-4747-8C9F-B95C45434180@r-project.org>
Message-ID: <CABdHhvF7tK2JyGDGNC0DtunFVBi5sabQN1UEQoqFEPSMku8CXQ@mail.gmail.com>

On Wed, Jun 14, 2017 at 8:48 AM, Simon Urbanek
<simon.urbanek at r-project.org> wrote:
> As I recall this has been discussed at least a few times (unfortunately I'm traveling so can't check the references), but the justification was never satisfactory.
>
> Personally, I wouldn't mind string continuation supported since it makes for more readable code (I had one of my packages raise a NOTE in examples because there is no way in R to split a long hash into multiple lines), but I would be strongly against random removal of whitespaces as it's counter-intuitive, misleading and makes it impossible to continue spaces on the next line. None of the languages that I can think of with multiline strings do that as that's way too dangerous.

Julia does, but uses triple quotes:
https://docs.julialang.org/en/stable/manual/strings/#triple-quoted-string-literals

Hadley

-- 
http://hadley.nz


From sokol at insa-toulouse.fr  Wed Jun 14 17:06:12 2017
From: sokol at insa-toulouse.fr (Serguei Sokol)
Date: Wed, 14 Jun 2017 17:06:12 +0200
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
Message-ID: <b28789ef-19dc-b78a-467c-c5c62bdfb86e@insa-toulouse.fr>

Le 14/06/2017 ? 12:58, Andreas Kersting a ?crit :
> Hi,
>
> I would really like to have a way to split long string literals across multiple lines in R.
>
> ...
> An alternative approach could be to have something like
>
> ("aaa "
> "bbb")
This is C-style and if the core-team decides to implement it,
it could be useful and intuitive.


From r-devel at akersting.de  Wed Jun 14 17:05:19 2017
From: r-devel at akersting.de (Andreas Kersting)
Date: Wed, 14 Jun 2017 17:05:19 +0200
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <c5d21403-c6e6-988d-96ee-9e64ffd71ac5@gmail.com>
References: <E1dL6jx-0006Ct-C4@rmmprod06.runbox>
 <c5d21403-c6e6-988d-96ee-9e64ffd71ac5@gmail.com>
Message-ID: <1f77a4fa-b8b5-002c-79bf-abdad3f4d2c9@akersting.de>


-------- Original Message --------
From: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
Sent: Wednesday, Jun 14, 2017 1:36 PM GMT
To: Andreas Kersting
Cc: r-devel
Subject: [Rd] [WISH / PATCH] possibility to split string literals across 
multiple lines

> On 14/06/2017 6:45 AM, Andreas Kersting wrote:
>> On Wed, 14 Jun 2017 06:12:09 -0500, Duncan Murdoch
>> <murdoch.duncan at gmail.com> wrote:
>>
>>> On 14/06/2017 5:58 AM, Andreas Kersting wrote:
>>>> Hi,
>>>>
>>>> I would really like to have a way to split long string literals across
>>>> multiple lines in R.
>>>
>>> I don't understand why you require the string to be a literal.  Why not
>>> construct the long string in an expression like
>>>
>>>   paste0("aaa",
>>>          "bbb")
>>>
>>> ?  Surely the execution time of the paste0 call is negligible.
>>>
>>> Duncan Murdoch
>>
>> Actually "execution time" is precisely one of the reasons why I would
>> like to see this feature as - depending on the context (e.g. in a
>> tight loop) - the execution time of paste0 (or probably also glue,
>> thanks Gabor) is not necessarily insignificant.
>
> You also need to consider implementation time.  This is not just changes
> to R itself; trailing backslashes *are* used in some packages (e.g.
> geoparser), so those packages would need to be identified and modified
> and resubmitted to CRAN.

I am totally with you on this "runtime vs. implementation-time"-issue. 
That is why I proposed the patch as I did: It seemed to require only 
minor changes to base R and I didn't see how it could be incompatible 
with existing code.

Actually I can still not see how a package could have potentially *used* 
backslashes immediately followed by newlines up to now, since those 
backslashes were just ignored by the parser (And changes to the function 
StringValue are just about the parser, aren't they?). Of course I cannot 
rule out the possibility that there is code like
var <- "aaa\
bbb"
around, but this would be based on the undocumented(?) features that 
"backslash newline" is a valid escape sequence and that it is treated as 
"newline".

Maybe its a good idea to show some more examples how the patched parser 
behaves. There should only be difference to the current implementation 
if a string literal spans multiple lines and a line ends in an odd 
number of backslashes (see last example):

 > "aaa\\
+ bbb"
[1] "aaa\\\nbbb"

 > "aaa\\nbbb"
[1] "aaa\\nbbb"

 > "aaa\\\nbbb"
[1] "aaa\\\nbbb"

 > "aaa\\"
[1] "aaa\\"

 > "aaa\\\n"
[1] "aaa\\\n"

 > "aaa\\\\"
[1] "aaa\\\\"

 > "aaa\\\\\n"
[1] "aaa\\\\\n"

 > "aaa\\\\
+ bbb"
[1] "aaa\\\\\nbbb"

 > "aaa\\\
+ bbb"
[1] "aaa\\bbb"

Andreas

> Core changes to existing behaviour need really strong arguments, and I'm
> just not seeing those here.
>
> Duncan Murdoch
>
>> The other reason is style: I think it is cleaner if we can construct
>> such a long string literal without the need for a function call.
>>
>> Andreas
>>
>>>>
>>>> Currently, if a string literal spans multiple lines, there is no way to
>>>> inhibit the introduction of newline characters:
>>>>
>>>>  > "aaa
>>>> + bbb"
>>>> [1] "aaa\nbbb"
>>>>
>>>>
>>>> If a line ends with a backslash, it is just ignored:
>>>>
>>>>  > "aaa\
>>>> + bbb"
>>>> [1] "aaa\nbbb"
>>>>
>>>>
>>>> We could use this fact to implement string splitting in a fairly
>>>> backward-compatible way, since currently such trailing backslashes
>>>> should hardly be used as they do not have any effect. The attached
>>>> patch
>>>> makes the parser ignore a newline character directly following a
>>>> backslash:
>>>>
>>>>  > "aaa\
>>>> + bbb"
>>>> [1] "aaabbb"
>>>>
>>>>
>>>> I personally would also prefer if leading blanks (spaces and tabs) in
>>>> the second line are ignored to allow for proper indentation:
>>>>
>>>>  >   "aaa \
>>>> +    bbb"
>>>> [1] "aaa bbb"
>>>>
>>>>  >   "aaa\
>>>> +    \ bbb"
>>>> [1] "aaa bbb"
>>>>
>>>> This is also implemented by this patch.
>>>>
>>>>
>>>> An alternative approach could be to have something like
>>>>
>>>> ("aaa "
>>>> "bbb")
>>>>
>>>> or
>>>>
>>>> ("aaa ",
>>>> "bbb")
>>>>
>>>> be interpreted as "aaa bbb".
>>>>
>>>> I don't know the ins and outs of the parser of R (hence: please very
>>>> carefully review the attached patch), but I guess this would be more
>>>> work to implement!?
>>>>
>>>>
>>>> What do you think? Is there anybody else who is missing this feature in
>>>> the first place?
>>>>
>>>> Regards,
>>>> Andreas
>>>>
>>>>
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>
>>
>
>


From wdunlap at tibco.com  Wed Jun 14 17:12:38 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 14 Jun 2017 08:12:38 -0700
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
Message-ID: <CAF8bMcZ-6yZaxuWuKg9hQQYDJm2gnsGWiSWqu47xdoHwCjWnMA@mail.gmail.com>

If you are changing the parser (which is a major change) you
might consider treating strings in the C/C++ way:
   char *s = "A"
                   "B";
means the same as
   char *s = "AB";

I am not a big fan of that syntax but it is widely used.

A backslash at the end of the line leads to errors when you accidently
put a space after the backslash and the editor doesn't flag it.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Wed, Jun 14, 2017 at 3:58 AM, Andreas Kersting <r-devel at akersting.de>
wrote:

> Hi,
>
> I would really like to have a way to split long string literals across
> multiple lines in R.
>
> Currently, if a string literal spans multiple lines, there is no way to
> inhibit the introduction of newline characters:
>
> > "aaa
> + bbb"
> [1] "aaa\nbbb"
>
>
> If a line ends with a backslash, it is just ignored:
>
> > "aaa\
> + bbb"
> [1] "aaa\nbbb"
>
>
> We could use this fact to implement string splitting in a fairly
> backward-compatible way, since currently such trailing backslashes should
> hardly be used as they do not have any effect. The attached patch makes the
> parser ignore a newline character directly following a backslash:
>
> > "aaa\
> + bbb"
> [1] "aaabbb"
>
>
> I personally would also prefer if leading blanks (spaces and tabs) in the
> second line are ignored to allow for proper indentation:
>
> >   "aaa \
> +    bbb"
> [1] "aaa bbb"
>
> >   "aaa\
> +    \ bbb"
> [1] "aaa bbb"
>
> This is also implemented by this patch.
>
>
> An alternative approach could be to have something like
>
> ("aaa "
> "bbb")
>
> or
>
> ("aaa ",
> "bbb")
>
> be interpreted as "aaa bbb".
>
> I don't know the ins and outs of the parser of R (hence: please very
> carefully review the attached patch), but I guess this would be more work
> to implement!?
>
>
> What do you think? Is there anybody else who is missing this feature in
> the first place?
>
> Regards,
> Andreas
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Wed Jun 14 17:18:44 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 14 Jun 2017 16:18:44 +0100
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <CAF8bMcZ-6yZaxuWuKg9hQQYDJm2gnsGWiSWqu47xdoHwCjWnMA@mail.gmail.com>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
 <CAF8bMcZ-6yZaxuWuKg9hQQYDJm2gnsGWiSWqu47xdoHwCjWnMA@mail.gmail.com>
Message-ID: <CABtg=KmhJzsbTrNTtd3XWeN=++GmgFVYD18s3BgWfnJ8Hk0MsQ@mail.gmail.com>

I don't think it is reasonable to change the parser this way. This is
currently valid R code:

a <- "foo"
"bar"

and with the new syntax, it is also valid, but with a different
meaning. Or you can even consider

a <- "foo"
bar %>% func() %>% print()

etc.

I like the idea of string literals, but the C/C++ way clearly does not
work. The Python/Julia way might, i.e.:

"""this is a
multi-line
lineral"""

Gabor

On Wed, Jun 14, 2017 at 4:12 PM, William Dunlap via R-devel
<r-devel at r-project.org> wrote:
> If you are changing the parser (which is a major change) you
> might consider treating strings in the C/C++ way:
>    char *s = "A"
>                    "B";
> means the same as
>    char *s = "AB";
>
> I am not a big fan of that syntax but it is widely used.
>
> A backslash at the end of the line leads to errors when you accidently
> put a space after the backslash and the editor doesn't flag it.
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Wed, Jun 14, 2017 at 3:58 AM, Andreas Kersting <r-devel at akersting.de>
> wrote:
>
>> Hi,
>>
>> I would really like to have a way to split long string literals across
>> multiple lines in R.
>>
>> Currently, if a string literal spans multiple lines, there is no way to
>> inhibit the introduction of newline characters:
>>
>> > "aaa
>> + bbb"
>> [1] "aaa\nbbb"
>>
>>
>> If a line ends with a backslash, it is just ignored:
>>
>> > "aaa\
>> + bbb"
>> [1] "aaa\nbbb"
>>
>>
>> We could use this fact to implement string splitting in a fairly
>> backward-compatible way, since currently such trailing backslashes should
>> hardly be used as they do not have any effect. The attached patch makes the
>> parser ignore a newline character directly following a backslash:
>>
>> > "aaa\
>> + bbb"
>> [1] "aaabbb"
>>
>>
>> I personally would also prefer if leading blanks (spaces and tabs) in the
>> second line are ignored to allow for proper indentation:
>>
>> >   "aaa \
>> +    bbb"
>> [1] "aaa bbb"
>>
>> >   "aaa\
>> +    \ bbb"
>> [1] "aaa bbb"
>>
>> This is also implemented by this patch.
>>
>>
>> An alternative approach could be to have something like
>>
>> ("aaa "
>> "bbb")
>>
>> or
>>
>> ("aaa ",
>> "bbb")
>>
>> be interpreted as "aaa bbb".
>>
>> I don't know the ins and outs of the parser of R (hence: please very
>> carefully review the attached patch), but I guess this would be more work
>> to implement!?
>>
>>
>> What do you think? Is there anybody else who is missing this feature in
>> the first place?
>>
>> Regards,
>> Andreas
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From r-devel at akersting.de  Wed Jun 14 17:21:33 2017
From: r-devel at akersting.de (Andreas Kersting)
Date: Wed, 14 Jun 2017 17:21:33 +0200
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <CABdHhvF7tK2JyGDGNC0DtunFVBi5sabQN1UEQoqFEPSMku8CXQ@mail.gmail.com>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
 <81A8A8F5-4BE7-4747-8C9F-B95C45434180@r-project.org>
 <CABdHhvF7tK2JyGDGNC0DtunFVBi5sabQN1UEQoqFEPSMku8CXQ@mail.gmail.com>
Message-ID: <714393c8-d328-80d4-3630-693d6e6a9f72@akersting.de>

-------- Original Message --------
From: Hadley Wickham [mailto:h.wickham at gmail.com]
Sent: Wednesday, Jun 14, 2017 2:51 PM GMT
To: Simon Urbanek
Cc: Andreas Kersting; r-devel at r-project.org
Subject: [Rd] [WISH / PATCH] possibility to split string literals across 
multiple lines

> On Wed, Jun 14, 2017 at 8:48 AM, Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>> As I recall this has been discussed at least a few times (unfortunately I'm traveling so can't check the references), but the justification was never satisfactory.
>>
>> Personally, I wouldn't mind string continuation supported since it makes for more readable code (I had one of my packages raise a NOTE in examples because there is no way in R to split a long hash into multiple lines), but I would be strongly against random removal of whitespaces as it's counter-intuitive, misleading and makes it impossible to continue spaces on the next line. None of the languages that I can think of with multiline strings do that as that's way too dangerous.
>
> Julia does, but uses triple quotes:
> https://docs.julialang.org/en/stable/manual/strings/#triple-quoted-string-literals
>
> Hadley
>

If we consider bash a programming language: Here documents 
(http://tldp.org/LDP/abs/html/here-docs.html) can have leading tabs be 
removed (see Example 19-4).


From wdunlap at tibco.com  Wed Jun 14 17:27:39 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Wed, 14 Jun 2017 08:27:39 -0700
Subject: [Rd] spurious warning in ave()
In-Reply-To: <9153c6$71a8hp@ironport10.mayo.edu>
References: <9153c6$71a8hp@ironport10.mayo.edu>
Message-ID: <CAF8bMcY0E+zV5knhPUixKR4AOuD5cR9gexEHiuj047WpBNiVBA@mail.gmail.com>

You can avoid the warnings and the unneeded calls to FUN by adding
drop=TRUE to the call to ave(), since all of its ... arguments are passed
to interaction (I think).

In TERR we dealt with this problem by adding drop=TRUE to ave's
argument list and we pass ... and drop=drop to interaction.  I'm not sure
drop=FALSE is ever desirable.


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Wed, Jun 14, 2017 at 6:02 AM, Therneau, Terry M., Ph.D. <
therneau at mayo.edu> wrote:

> Consider the following simple data set and a call to ave:
>
> > tdata <- data.frame(f1=c(1,1,1,1,2,2,2,2), f2=c(1,2,1,2,1,1,1,1), y=1:8)
> > with(tdata, table(f1, f2))
>    f2
> f1  1 2
>   1 2 2
>   2 4 0
>
> > with(tdata, ave(y, f1, f2, FUN=max))
>
> [1] 3 4 3 4 8 8 8 8
> Warning message:
> In FUN(X[[i]], ...) : no non-missing arguments to max; returning -Inf
>
> There are no missing values in the result.  The fact that ave() apparently
> tried to find the max for a combination it did not need is irrelvant to the
> user, and the warning is counterproductive.
>
> Terry T.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From suharto_anggono at yahoo.com  Wed Jun 14 19:17:38 2017
From: suharto_anggono at yahoo.com (Suharto Anggono Suharto Anggono)
Date: Wed, 14 Jun 2017 17:17:38 +0000 (UTC)
Subject: [Rd]
 =?utf-8?q?=5Bbug=5D_droplevels=28=29_also_drop_object_attrib?=
 =?utf-8?b?dXRlcyAoY29tbWVudOKApik=?=
References: <1417410960.9617550.1497460658946.ref@mail.yahoo.com>
Message-ID: <1417410960.9617550.1497460658946@mail.yahoo.com>

In R devel r72789, the added part in 'factor' documentation (factor.Rd) is the following.
Undocumentedly for a long time, \code{factor(x)} loses all \code{\link{attributes}(x)} but \code{"names"}, and resets \code{"levels"} and \code{"class"}.

In the code of function 'factor', names(x) is copied to the result. As I mentioned before, names(x) is _not_ "names" attribute of 'x' when 'x' is a "POSIXlt" object. In R devel r72789,
factor(x)
is successful when 'x' is a "POSIXlt" object.

I think, it is better to accurately state what the code does, maybe like this.
Undocumentedly for a long time, \code{factor(x)} loses all \code{\link{attributes}(x)}, but has a copy of \code{\link{names}(x)}.

Attributes "levels" and "class" are already documented right before the statement.


To be more balanced, I am pointing out that, currently, levels replacement of a factor ('levels<-.factor') keeps attributes. My previous statement about "contrasts" attribute also holds there. By replacing levels, number of levels can change and, consequently, the original contrasts matrix is no longer valid. It can be argued that 'levels<-.factor' doesn't know "contrasts" attribute, as function 'contrasts' is in package stats, different from 'levels<-.factor' that is in package base. However, factor subsetting ('[.factor') knows "contrasts" attribute.

--------------------------------------------
On Sat, 10/6/17, Martin Maechler <maechler at stat.math.ethz.ch> wrote:

 Subject: Re: [Rd] [bug] droplevels() also drop object attributes (comment?)
 To: "R Development" <R-devel at r-project.org>
 Cc: "Serge Bibauw" <sbibauw at gmail.com>, "Suharto Anggono" <suharto_anggono
 Date: Saturday, 10 June, 2017, 5:54 AM

>>>>> Suharto Anggono Suharto Anggono via R-devel <r-devel at r-project.org>
>>>>>? ?? on Thu, 8 Jun 2017 16:43:48 +0000 writes:

? ? > * Be careful with "contrasts" attribute. If the number of levels is reduced, the original contrasts matrix is no longer valid.
? ? > Example case:
? ? > x <- factor(c("a", "a", "b", "b", "b"), levels = c("a", "b", "c"))
? ? > contrasts(x) <- contr.treatment(levels(x), contrasts=FALSE)[, -2, drop=FALSE]
? ? > droplevels(x)

? ? > * If function 'factor' is changed, make sure that as.factor(x) and factor(x) is the same for 'x' where is.integer(x) is TRUE. Currently, as.factor(<integer>) is treated specially.

? ? > * It is possible that names(x) is not attr(x, "names"). For example, 'x' is a "POSIXlt" object.
? ? > Look at this example, which works in R 3.3.2.
? ? > x <- as.POSIXlt("2017-01-01", tz="UTC")
? ? > factor(x, levels=x)


? ? > By the way, in NEWS, in "CHANGES IN R 3.4.0", in "SIGNIFICANT USER-VISIBLE CHANGES", there is "factor() now uses order() to sort its levels". It is false. Code of function 'factor' in R 3.4.0 (https://svn.r-project.org/R/tags/R-3-4-0/src/library/base/R/factor.R) still uses 'sort.list', not 'order'.

? ? > --------------------------------
>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>? ?? on Tue, 16 May 2017 11:01:23 +0200 writes:

>>>>> Serge Bibauw <sbibauw at gmail.com>
>>>>>? ?? on Mon, 15 May 2017 11:59:32 -0400 writes:

? ? >>> Hi,

? ? >>> Just reporting a small bug? not really a big deal, but I
? ? >>> don?t think that is intended: droplevels() also drops all
? ? >>> object?s attributes.

? ? >> Yes.? The help page for droplevels (or the simple
? ? >> definition of 'droplevels.factor') clearly indicate that
? ? >> the method for factors is really just a call to factor(x,
? ? >> exclude = *)

? ? >> and that _is_ quite an important base function whose
? ? >> semantic should not be changed lightly. Still, let's
? ? >> continue :

? ? >> Looking a bit, I see that the current behavior of factor()
? ? >> {and hence droplevels} has been unchanged in this respect
? ? >> for the whole history of R, well, at least for more than
? ? >> 17 years (R 1.0.1, April 2000).

? ? >> I'd agree there _is_ a bug, at least in the documentation
? ? >> which does *not* mention that currently, all attributes
? ? >> are dropped but "names", "levels" (and "class").

? ? >> OTOH, factor() would only need a small change to make it
? ? >> preserve all attributes (but "class" and "levels" which
? ? >> are set explicitly).

? ? >> I'm sure this will break some checks in some packages.? Is
? ? >> it worth it?

? ? >> e.g., our own R? QC checks currently check (the printing of) the
? ? >> following (in tests/reg-tests-2.R ):

? ? >> > ## some tests of factor matrices
? ? >> > A <- factor(7:12)
? ? >> > dim(A) <- c(2, 3)
? ? >> > A
? ? >> [,1] [,2] [,3]
? ? >> [1,] 7? ? 9? ? 11? 
? ? >> [2,] 8? ? 10?? 12? 
? ? >> Levels: 7 8 9 10 11 12
? ? >> > str(A)
? ? >> factor [1:2, 1:3] 7 8 9 10 ...
? ? >> - attr(*, "levels")= chr [1:6] "7" "8" "9" "10" ...
? ? >> > A[, 1:2]
? ? >> [,1] [,2]
? ? >> [1,] 7? ? 9?? 
? ? >> [2,] 8? ? 10? 
? ? >> Levels: 7 8 9 10 11 12
? ? >> > A[, 1:2, drop=TRUE]
? ? >> [1] 7? 8? 9? 10
? ? >> Levels: 7 8 9 10
? ? >> 
? ? >> with the proposed change to factor(),
? ? >> the last call would change its result:
? ? >> 
? ? >> > A[, 1:2, drop=TRUE]
? ? >> [,1] [,2]
? ? >> [1,] 7? ? 9?? 
? ? >> [2,] 8? ? 10? 
? ? >> Levels: 7 8 9 10

? ? >> because 'drop=TRUE' calls factor(..) and that would also
? ? >> preserve the "dim" attribute.? I would think that the
? ? >> changed behavior _is_ better, and is also according to
? ? >> documentation, because the help page for [.factor explains
? ? >> that 'drop = TRUE' drops levels, but _not_ that it
? ? >> transforms a factor matrix into a factor (vector).

? ? >> Martin

? ? > I'm finally coming back to this.
? ? > It still seems to make sense to change factor() and hence
? ? > droplevels() behavior here, and plan to commit this change
? ? > within a day.

I had committed these (including regression checks and *.Rd
changes) as? svn rev 72771? to R-devel..

As Suharto also warned, this change had more severe effects in
package space than I expected.

Notably the fact that the "dim" attribute was kept there, lead
to several errors in CRAN packages / their checks.

Of course, I could have patched the change by explicitely *not*
keeping certain attributes such as "dim" and "contrasts".

But I've decided that in this case it seems more rational,
notably for back compatibility reasons, to keep factor()'s and hence
droplevel()'s behaviour? and rather document it.
So the "bug" is solved differently, by documenting the behavior
that has been in place "forever".

With svn's 72773, we are back to the previous state with the
addition of mentioning in help(factor) that attributes are "lost".

Martin Maechler
ETH Zurich


From pauljohn32 at gmail.com  Thu Jun 15 02:00:11 2017
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Wed, 14 Jun 2017 19:00:11 -0500
Subject: [Rd] duplicated factor labels.
Message-ID: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>

Dear R devel

I've been wondering about this for a while. I am sorry to ask for your
time, but can one of you help me understand this?

This concerns duplicated labels, not levels, in the factor function.

I think it is hard to understand that factor() fails, but levels()
after does not

>  x <- 1:6
> xlevels <- 1:6
> xlabels <- c(1, NA, NA, 4, 4, 4)
> y <- factor(x, levels = xlevels, labels = xlabels)
Error in `levels<-`(`*tmp*`, value = if (nl == nL)
as.character(labels) else paste0(labels,  :
  factor level [3] is duplicated
> y <- factor(x, levels = xlevels)
> levels(y) <- xlabels
> y
[1] 1    <NA> <NA> 4    4    4
Levels: 1 4

If the latter use of levels() causes a good, expected result, couldn't
factor(..., labels = xlabels) be made to the same thing?

That's the gist of it. To signal to you that I've been trying to
figure this out on my own, here is a revision I've tested in R's
factor function which "seems" to fix the matter. (Of course, probably
causes lots of other problems I don't understand, that's why I'm
writing to  you now.)

In the factor function, the class of f is assigned *after* levels(f) is called

    levels(f) <- ## nl == nL or 1
    if (nl == nL) as.character(labels)
    else paste0(labels, seq_along(levels))
    class(f) <- c(if(ordered) "ordered", "factor")

At that point, f is an integer, and levels(f) is a primitive

> `levels<-`
function (x, value)  .Primitive("levels<-")

That's what generates the error.  I don't understand well what
.Primitive means here. I need to walk past that detail.

Suppose I revise the factor function to put the class(f) line before
the level(). Then `levels<-.factor` is called and all seems well.

factor <- function (x = character(), levels, labels = levels, exclude = NA,
    ordered = is.ordered(x), nmax = NA)
{
    if (is.null(x))
        x <- character()
    nx <- names(x)
    if (missing(levels)) {
        y <- unique(x, nmax = nmax)
        ind <- sort.list(y)
        levels <- unique(as.character(y)[ind])
    }
    force(ordered)
    if (!is.character(x))
        x <- as.character(x)
    levels <- levels[is.na(match(levels, exclude))]
    f <- match(x, levels)
    if (!is.null(nx))
        names(f) <- nx
    nl <- length(labels)
    nL <- length(levels)
    if (!any(nl == c(1L, nL)))
        stop(gettextf("invalid 'labels'; length %d should be 1 or %d",
            nl, nL), domain = NA)
    ## class() moved up 3 rows
    class(f) <- c(if (ordered) "ordered", "factor")
    levels(f) <- if (nl == nL)
                  as.character(labels)
         else paste0(labels, seq_along(levels))
    f
}

> assignInNamespace("factor", factor, "base")
> x <- 1:6
> xlevels <- 1:6
> xlabels <- c(1, NA, NA, 4, 4, 4)
> y <- factor(x, levels = xlevels, labels = xlabels)
> y
[1] 1    <NA> <NA> 4    4    4
Levels: 1 4
> attributes(y)
$class
[1] "factor"

$levels
[1] "1" "4"

That's a "good" answer for me.

But I broke your function. I eliminated the check for duplicated levels.

> y <- factor(x, levels = c(1, 1, 1, 2, 2, 2), labels = xlabels)
> y
[1] 1    4    <NA> <NA> <NA> <NA>
Levels: 1 4

Rather than have factor return the "duplicated levels" error when
there are duplicated values in labels, I wonder why it is not better
to have a check for duplicated levels directly. For example, insert a
new else in this stanza

    if (missing(levels)) {
        y <- unique(x, nmax = nmax)
        ind <- sort.list(y)
        levels <- unique(as.character(y)[ind])
    } ##next is new part
        else {
        levels <- unique(levels)
    }

That will cause an error when there are duplicated levels because
there are more labels than levels:

> y <- factor(x, levels = c(1, 1, 1, 2, 2, 2), labels = xlabels)
Error in factor(x, levels = c(1, 1, 1, 2, 2, 2), labels = xlabels) :
  invalid 'labels'; length 6 should be 1 or 2

So, in conclusion, if levels() can work after creating a factor, I
wish equivalent labels argument would be accepted. What is your
opinion?

pj
-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From radford at cs.toronto.edu  Thu Jun 15 16:46:47 2017
From: radford at cs.toronto.edu (Radford Neal)
Date: Thu, 15 Jun 2017 10:46:47 -0400
Subject: [Rd] [WISH / PATCH] possibility to split string literals
In-Reply-To: <mailman.7.1497520801.60581.r-devel@r-project.org>
References: <mailman.7.1497520801.60581.r-devel@r-project.org>
Message-ID: <20170615144647.GA14863@mail.cs.toronto.edu>

> <csardi.gabor at gmail.com>:

> I don't think it is reasonable to change the parser this way. This is
> currently valid R code:
> 
> a <- "foo"
> "bar"
> 
> and with the new syntax, it is also valid, but with a different
> meaning. 

Yes.  The meaning of that would certainly need to stay the same.

However, the following is currently invalid, but would mean what is desired 
if consecutive string literals were merged by the parser, as in C:

  a <- ("foo"
        "bar")

In practice, most uses will be of something like

  cat ("I'd like to teach "
       "the world to sing"
       "\n")

which unambigously means the right thing without further effort.

So just doing like in C seems the way to go to me.

    Radford


From maechler at stat.math.ethz.ch  Thu Jun 15 17:15:17 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 15 Jun 2017 17:15:17 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
Message-ID: <22850.42117.436677.257822@stat.math.ethz.ch>

>>>>> Paul Johnson <pauljohn32 at gmail.com>
>>>>>     on Wed, 14 Jun 2017 19:00:11 -0500 writes:

    > Dear R devel
    > I've been wondering about this for a while. I am sorry to ask for your
    > time, but can one of you help me understand this?

    > This concerns duplicated labels, not levels, in the factor function.

    > I think it is hard to understand that factor() fails, but levels()
    > after does not

    >> x <- 1:6
    >> xlevels <- 1:6
    >> xlabels <- c(1, NA, NA, 4, 4, 4)
    >> y <- factor(x, levels = xlevels, labels = xlabels)
    > Error in `levels<-`(`*tmp*`, value = if (nl == nL)
    > as.character(labels) else paste0(labels,  :
    > factor level [3] is duplicated
    >> y <- factor(x, levels = xlevels)
    >> levels(y) <- xlabels
    >> y
    > [1] 1    <NA> <NA> 4    4    4
    > Levels: 1 4

    > If the latter use of levels() causes a good, expected result, couldn't
    > factor(..., labels = xlabels) be made to the same thing?

I may misunderstand, but I think you are confusing 'labels' and 'levels'
here, (and you are not alone in this!) mostly because  R's
factor() function treats them as arguments in a way that can be
confusing.. (but I don't think we'd want to change that; it's
been documented and in use for  > 25 year (in S, S+, R).

Note that after the above,

> dput(y)
structure(c(1L, NA, NA, 2L, 2L, 2L), .Label = c("1", "4"), class = "factor")

and that of course _is_ a valid factor .. which you can easily
get directly via e.g.

> identical(y, factor(c(1,NA,NA,4,4,4)))
[1] TRUE

or also  via

> identical(y, factor(c("1",NA,NA,"4","4","4")))
[1] TRUE

I really don't see a need for a change of factor().
It should remain as simple as possible (but not simpler :-).

Martin


From maechler at stat.math.ethz.ch  Thu Jun 15 17:36:35 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 15 Jun 2017 17:36:35 +0200
Subject: [Rd] "factor now uses order() to sort its levels" not yet in R
	3.4.0
In-Reply-To: <1417410960.9617550.1497460658946@mail.yahoo.com>
References: <1417410960.9617550.1497460658946.ref@mail.yahoo.com>
 <1417410960.9617550.1497460658946@mail.yahoo.com>
Message-ID: <22850.43395.740099.999868@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono <suharto_anggono at yahoo.com>
>>>>>     on Wed, 14 Jun 2017 17:17:38 +0000 writes:

 [............quite important stuff, taking _longer_ to reply .......]

    > ? ? > By the way, in NEWS, in "CHANGES IN R 3.4.0", in "SIGNIFICANT USER-VISIBLE CHANGES", there is "factor() now uses order() to sort its levels". It is false. Code of function 'factor' in R 3.4.0 (https://svn.r-project.org/R/tags/R-3-4-0/src/library/base/R/factor.R) still uses 'sort.list', not 'order'.

Thanks a lot for spotting and mentioning this!
I have now moved the entry to the NEW FEATURES of 'R devel'.

It could also go to 'R 3.4.0 patched --- to become R 3.4.1 at
around "useR! 2017" --- but it was not my change so don't know
how important or how "dangerous" the change is, so would leave
this to my R core colleague (BCC ed).

Martin


From luke-tierney at uiowa.edu  Thu Jun 15 18:21:41 2017
From: luke-tierney at uiowa.edu (luke-tierney at uiowa.edu)
Date: Thu, 15 Jun 2017 11:21:41 -0500 (CDT)
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <CABtg=KmhJzsbTrNTtd3XWeN=++GmgFVYD18s3BgWfnJ8Hk0MsQ@mail.gmail.com>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
 <CAF8bMcZ-6yZaxuWuKg9hQQYDJm2gnsGWiSWqu47xdoHwCjWnMA@mail.gmail.com>
 <CABtg=KmhJzsbTrNTtd3XWeN=++GmgFVYD18s3BgWfnJ8Hk0MsQ@mail.gmail.com>
Message-ID: <alpine.DEB.2.20.1706151118590.4244@luke-Latitude>

On Wed, 14 Jun 2017, G?bor Cs?rdi wrote:

> I don't think it is reasonable to change the parser this way. This is
> currently valid R code:
>
> a <- "foo"
> "bar"
>
> and with the new syntax, it is also valid, but with a different
> meaning. Or you can even consider
>
> a <- "foo"
> bar %>% func() %>% print()
>
> etc.
>
> I like the idea of string literals, but the C/C++ way clearly does not
> work. The Python/Julia way might, i.e.:
>
> """this is a
> multi-line
> lineral"""

This does look like a promising option; some more careful checking
would be needed to make sure there aren't cases where currently
working code would be broken.

Another Python idea worth considering is the raw string notation
r"xyx" that does not process escape sequences -- this would make
writing things like regular expressions easier.

Best,

luke

>
> Gabor
>
> On Wed, Jun 14, 2017 at 4:12 PM, William Dunlap via R-devel
> <r-devel at r-project.org> wrote:
>> If you are changing the parser (which is a major change) you
>> might consider treating strings in the C/C++ way:
>>    char *s = "A"
>>                    "B";
>> means the same as
>>    char *s = "AB";
>>
>> I am not a big fan of that syntax but it is widely used.
>>
>> A backslash at the end of the line leads to errors when you accidently
>> put a space after the backslash and the editor doesn't flag it.
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> On Wed, Jun 14, 2017 at 3:58 AM, Andreas Kersting <r-devel at akersting.de>
>> wrote:
>>
>>> Hi,
>>>
>>> I would really like to have a way to split long string literals across
>>> multiple lines in R.
>>>
>>> Currently, if a string literal spans multiple lines, there is no way to
>>> inhibit the introduction of newline characters:
>>>
>>>> "aaa
>>> + bbb"
>>> [1] "aaa\nbbb"
>>>
>>>
>>> If a line ends with a backslash, it is just ignored:
>>>
>>>> "aaa\
>>> + bbb"
>>> [1] "aaa\nbbb"
>>>
>>>
>>> We could use this fact to implement string splitting in a fairly
>>> backward-compatible way, since currently such trailing backslashes should
>>> hardly be used as they do not have any effect. The attached patch makes the
>>> parser ignore a newline character directly following a backslash:
>>>
>>>> "aaa\
>>> + bbb"
>>> [1] "aaabbb"
>>>
>>>
>>> I personally would also prefer if leading blanks (spaces and tabs) in the
>>> second line are ignored to allow for proper indentation:
>>>
>>>>   "aaa \
>>> +    bbb"
>>> [1] "aaa bbb"
>>>
>>>>   "aaa\
>>> +    \ bbb"
>>> [1] "aaa bbb"
>>>
>>> This is also implemented by this patch.
>>>
>>>
>>> An alternative approach could be to have something like
>>>
>>> ("aaa "
>>> "bbb")
>>>
>>> or
>>>
>>> ("aaa ",
>>> "bbb")
>>>
>>> be interpreted as "aaa bbb".
>>>
>>> I don't know the ins and outs of the parser of R (hence: please very
>>> carefully review the attached patch), but I guess this would be more work
>>> to implement!?
>>>
>>>
>>> What do you think? Is there anybody else who is missing this feature in
>>> the first place?
>>>
>>> Regards,
>>> Andreas
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From dstr7320 at uni.sydney.edu.au  Fri Jun 16 08:00:20 2017
From: dstr7320 at uni.sydney.edu.au (Dario Strbenac)
Date: Fri, 16 Jun 2017 06:00:20 +0000
Subject: [Rd] Simplify and By Convert Factors To Numeric Values
Message-ID: <DM5PR01MB32592033EEE2E8C8CC012DABCDC10@DM5PR01MB3259.prod.exchangelabs.com>

Good day,

It's not described anywhere in the help page, but tapply and by functions will, by default, convert factors into numeric values. Perhaps this needs to be documented or the behaviour changed.

> tapply(1:3, 1:3, function(x) factor(LETTERS[x], levels = LETTERS))
1 2 3 
1 2 3

The documentation states "... tapply returns a multi-way array containing the values ..." but doesn't mention anything about converting factors into integers. I'd expect the values to be of the same type.

R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 8 (jessie)

Matrix products: default
BLAS: /dskh/nobackup/biostat/software/R-3.4.0/lib/libRblas.so
LAPACK: /dskh/nobackup/biostat/software/R-3.4.0/lib/libRlapack.so

--------------------------------------
Dario Strbenac
University of Sydney
Camperdown NSW 2050
Australia


From jorismeys at gmail.com  Fri Jun 16 09:35:35 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Fri, 16 Jun 2017 09:35:35 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <22850.42117.436677.257822@stat.math.ethz.ch>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
Message-ID: <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>

To extwnd on Martin 's explanation :

In factor(), levels are the unique input values and labels the unique
output values. So the function levels() actually displays the labels.

Cheers
Joris


On 15 Jun 2017 17:15, "Martin Maechler" <maechler at stat.math.ethz.ch> wrote:

>>>>> Paul Johnson <pauljohn32 at gmail.com>
>>>>>     on Wed, 14 Jun 2017 19:00:11 -0500 writes:

    > Dear R devel
    > I've been wondering about this for a while. I am sorry to ask for your
    > time, but can one of you help me understand this?

    > This concerns duplicated labels, not levels, in the factor function.

    > I think it is hard to understand that factor() fails, but levels()
    > after does not

    >> x <- 1:6
    >> xlevels <- 1:6
    >> xlabels <- c(1, NA, NA, 4, 4, 4)
    >> y <- factor(x, levels = xlevels, labels = xlabels)
    > Error in `levels<-`(`*tmp*`, value = if (nl == nL)
    > as.character(labels) else paste0(labels,  :
    > factor level [3] is duplicated
    >> y <- factor(x, levels = xlevels)
    >> levels(y) <- xlabels
    >> y
    > [1] 1    <NA> <NA> 4    4    4
    > Levels: 1 4

    > If the latter use of levels() causes a good, expected result, couldn't
    > factor(..., labels = xlabels) be made to the same thing?

I may misunderstand, but I think you are confusing 'labels' and 'levels'
here, (and you are not alone in this!) mostly because  R's
factor() function treats them as arguments in a way that can be
confusing.. (but I don't think we'd want to change that; it's
been documented and in use for  > 25 year (in S, S+, R).

Note that after the above,

> dput(y)
structure(c(1L, NA, NA, 2L, 2L, 2L), .Label = c("1", "4"), class = "factor")

and that of course _is_ a valid factor .. which you can easily
get directly via e.g.

> identical(y, factor(c(1,NA,NA,4,4,4)))
[1] TRUE

or also  via

> identical(y, factor(c("1",NA,NA,"4","4","4")))
[1] TRUE

I really don't see a need for a change of factor().
It should remain as simple as possible (but not simpler :-).

Martin

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From jens.oehlschlaegel at truecluster.com  Fri Jun 16 15:03:45 2017
From: jens.oehlschlaegel at truecluster.com (=?UTF-8?Q?=22Jens_Oehlschl=C3=A4gel=22?=)
Date: Fri, 16 Jun 2017 15:03:45 +0200
Subject: [Rd] 'ordered' destroyed to 'factor'
Message-ID: <trinity-35849798-65be-4033-aa6e-d006a5defe16-1497618225192@3capp-webde-bs21>

Dear all,
?
I don't know if you consider this a bug or feature, but it breaks reasonable code: 'unlist' and 'sapply' convert 'ordered' to 'factor' even if all levels are equal. Here is a simple example:

o <- ordered(letters)
o[[1]]
lapply(o, min)[[1]]??????????# ordered factor
unlist(lapply(o, min))[[1]]? # no longer ordered
sapply(o, min)[[1]]??????????# no longer ordered

Jens?Oehlschl?gel
?
?
P.S: The above examples are silly for simple reproduction. The current behavior broke my use-case which had a structure like this
?
# have some data
x <- 1:20
# apply some function to each element
somefunc <- function(x){
? # do something and return an ordinal level
? sample(o, 1)
}
x <- sapply(x, somefunc)
# get minimum result
min(x)
# Error in Summary.factor(c(2L, 26L), na.rm = FALSE) :
#?? ?min? not meaningful for factors
?
?
> version
?????????????? _????????????????????????? ?
platform?????? x86_64-pc-linux-gnu??????? ?
arch?????????? x86_64???????????????????? ?
os???????????? linux-gnu????????????????? ?
system???????? x86_64, linux-gnu????????? ?
status??????????????????????????????????? ?
major????????? 3????????????????????????? ?
minor????????? 4.0??????????????????????? ?
year?????????? 2017?????????????????????? ?
month????????? 04???????????????????????? ?
day??????????? 21???????????????????????? ?
svn rev??????? 72570????????????????????? ?
language?????? R????????????????????????? ?
version.string R version 3.4.0 (2017-04-21)
nickname?????? You Stupid Darkness????????


From h.wickham at gmail.com  Fri Jun 16 15:57:30 2017
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 16 Jun 2017 08:57:30 -0500
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <alpine.DEB.2.20.1706151118590.4244@luke-Latitude>
References: <73ec8f95-9607-80ee-0e37-ff0d739d289d@akersting.de>
 <CAF8bMcZ-6yZaxuWuKg9hQQYDJm2gnsGWiSWqu47xdoHwCjWnMA@mail.gmail.com>
 <CABtg=KmhJzsbTrNTtd3XWeN=++GmgFVYD18s3BgWfnJ8Hk0MsQ@mail.gmail.com>
 <alpine.DEB.2.20.1706151118590.4244@luke-Latitude>
Message-ID: <CABdHhvFp8Au_zk86F0vVP6U7qjFPO6=FOwcqqvxhgkk32DLc_w@mail.gmail.com>

>> I don't think it is reasonable to change the parser this way. This is
>> currently valid R code:
>>
>> a <- "foo"
>> "bar"
>>
>> and with the new syntax, it is also valid, but with a different
>> meaning. Or you can even consider
>>
>> a <- "foo"
>> bar %>% func() %>% print()
>>
>> etc.
>>
>> I like the idea of string literals, but the C/C++ way clearly does not
>> work. The Python/Julia way might, i.e.:
>>
>> """this is a
>> multi-line
>> lineral"""
>
>
> This does look like a promising option; some more careful checking
> would be needed to make sure there aren't cases where currently
> working code would be broken.
>
> Another Python idea worth considering is the raw string notation
> r"xyx" that does not process escape sequences -- this would make
> writing things like regular expressions easier.

If this is something you would consider, we'd be happy to put together
a patch for review.

Hadley


-- 
http://hadley.nz


From rmcgehee at walleyetrading.net  Fri Jun 16 15:59:45 2017
From: rmcgehee at walleyetrading.net (Robert McGehee)
Date: Fri, 16 Jun 2017 13:59:45 +0000
Subject: [Rd] 'ordered' destroyed to 'factor'
In-Reply-To: <trinity-35849798-65be-4033-aa6e-d006a5defe16-1497618225192@3capp-webde-bs21>
References: <trinity-35849798-65be-4033-aa6e-d006a5defe16-1497618225192@3capp-webde-bs21>
Message-ID: <30D28A63376088428E8318DD67FD407F78BCE6@ny-mailstore1.walleyetrading.net>

Hi,
It's been my experience that when you combine or aggregate vectors of factors using a function, you should be prepared for surprises, as it's not obvious what the "right" way to combine factors is (ordered or not), especially if two vectors of factors have different levels or (if ordered) are ordered in a different way.

For instance, what would you expect to get from unlist() if each element of the list had different levels, or were both ordered, but in a different way, or if some elements of the list were factors and others were ordered factors?
> unlist(list(ordered(c("a","b")), ordered(c("b","a"))))
[1] ?

Honestly, my biggest surprise from your question was that unlist even returned a factor at all. For example, the c() function just converts factors to integers.
> c(ordered(c("a","b")), ordered(c("a","b")))
[1] 1 2 1 2

And here's one that's especially weird. When rbind() data frames with an ordered factor, you still get an ordered factor back, but the order may be different from either of the original orders:

> x1 <- data.frame(a=ordered(c("b","c")))
> x2 <- data.frame(a=ordered(c("a","b","c")))
> str(rbind(x1,x2)) #  Note b < a
 'data.frame':	5 obs. of  1 variable:
 $ a: Ord.factor w/ 3 levels "b"<"c"<"a": 1 2 3 1 2

Should rbind just have returned an integer like c(), or returned a factor like unlist(), or should it kept the result as an ordered factor, but ordered the result in a different way? I have no idea.

So in short, IMO, there are definitely inconsistencies in how ordered/factors are handled across functions, but I think it would be hard to point to any single function and say it is wrong or needs to be changed. My best advice, is to just be careful when combining or aggregating factors.
--Robert

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of "Jens Oehlschl?gel"
Sent: Friday, June 16, 2017 9:04 AM
To: r-devel at r-project.org
Cc: jens.oehlschlaegel at truecluster.com
Subject: [Rd] 'ordered' destroyed to 'factor'

Dear all,
?
I don't know if you consider this a bug or feature, but it breaks reasonable code: 'unlist' and 'sapply' convert 'ordered' to 'factor' even if all levels are equal. Here is a simple example:

o <- ordered(letters)
o[[1]]
lapply(o, min)[[1]]??????????# ordered factor
unlist(lapply(o, min))[[1]]? # no longer ordered
sapply(o, min)[[1]]??????????# no longer ordered

Jens?Oehlschl?gel
?
?
P.S: The above examples are silly for simple reproduction. The current behavior broke my use-case which had a structure like this
?
# have some data
x <- 1:20
# apply some function to each element
somefunc <- function(x){
? # do something and return an ordinal level
? sample(o, 1)
}
x <- sapply(x, somefunc)
# get minimum result
min(x)
# Error in Summary.factor(c(2L, 26L), na.rm = FALSE) :
#?? ?min? not meaningful for factors
?
?
> version
?????????????? _????????????????????????? ?
platform?????? x86_64-pc-linux-gnu??????? ?
arch?????????? x86_64???????????????????? ?
os???????????? linux-gnu????????????????? ?
system???????? x86_64, linux-gnu????????? ?
status??????????????????????????????????? ?
major????????? 3????????????????????????? ?
minor????????? 4.0??????????????????????? ?
year?????????? 2017?????????????????????? ?
month????????? 04???????????????????????? ?
day??????????? 21???????????????????????? ?
svn rev??????? 72570????????????????????? ?
language?????? R????????????????????????? ?
version.string R version 3.4.0 (2017-04-21)
nickname?????? You Stupid Darkness????????

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel

From jorismeys at gmail.com  Fri Jun 16 16:00:59 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Fri, 16 Jun 2017 16:00:59 +0200
Subject: [Rd] 'ordered' destroyed to 'factor'
In-Reply-To: <trinity-35849798-65be-4033-aa6e-d006a5defe16-1497618225192@3capp-webde-bs21>
References: <trinity-35849798-65be-4033-aa6e-d006a5defe16-1497618225192@3capp-webde-bs21>
Message-ID: <CAO1zAVZv6Aq47EdkfX4SJwZ8Vo2Nzf=nvA4EoeFyq2owsebEZA@mail.gmail.com>

This can be traced back to the following line in unlist():

structure(res, levels = lv, names = nm, class = "factor")

The Details section of ?unlist states specifically how it treats factors,
so this is documented and expected behaviour.

This is also the appropriate behaviour. In your case one could argue that
unlist should maintain the order, as there's only a single factor. However,
the moment you have 2 ordered factors, there's no guarantee that the levels
are the same, or even in the same order. Hence it is impossible to
determine what should be the correct order. For this reason, the only
logical object to be returned in case of a list of factors, is an unordered
factor.

In your use case (so with a list of factors with identical ordered levels)
the solution is one extra step:

x <- list(
  factor(c("a","b"),
         levels = c("a","b","c"),
         ordered = TRUE),
  factor(c("b","c"),
         levels = c("a","b","c"),
         ordered = TRUE)
)
res <- sapply(x, min)
res <- ordered(res, levels = levels(res))
min(res)


I hope this explains

Cheers
Joris


On Fri, Jun 16, 2017 at 3:03 PM, "Jens Oehlschl?gel" <
jens.oehlschlaegel at truecluster.com> wrote:

> Dear all,
>
> I don't know if you consider this a bug or feature, but it breaks
> reasonable code: 'unlist' and 'sapply' convert 'ordered' to 'factor' even
> if all levels are equal. Here is a simple example:
>
> o <- ordered(letters)
> o[[1]]
> lapply(o, min)[[1]]          # ordered factor
> unlist(lapply(o, min))[[1]]  # no longer ordered
> sapply(o, min)[[1]]          # no longer ordered
>
> Jens Oehlschl?gel
>
>
> P.S: The above examples are silly for simple reproduction. The current
> behavior broke my use-case which had a structure like this
>
> # have some data
> x <- 1:20
> # apply some function to each element
> somefunc <- function(x){
>   # do something and return an ordinal level
>   sample(o, 1)
> }
> x <- sapply(x, somefunc)
> # get minimum result
> min(x)
> # Error in Summary.factor(c(2L, 26L), na.rm = FALSE) :
> #   ?min? not meaningful for factors
>
>
> > version
>                _
> platform       x86_64-pc-linux-gnu
> arch           x86_64
> os             linux-gnu
> system         x86_64, linux-gnu
> status
> major          3
> minor          4.0
> year           2017
> month          04
> day            21
> svn rev        72570
> language       R
> version.string R version 3.4.0 (2017-04-21)
> nickname       You Stupid Darkness
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel




-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From henrik.bengtsson at gmail.com  Fri Jun 16 17:54:00 2017
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Fri, 16 Jun 2017 08:54:00 -0700
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character_?=
	=?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
Message-ID: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>

I'm just curious (no complaints), what was the reason for choosing the
letter 'L' as a suffix for integer constants?  Does it stand for
something (literal?), is it because it visually stands out, ..., or no
specific reason at all?

/Henrik


From sokol at insa-toulouse.fr  Fri Jun 16 18:00:09 2017
From: sokol at insa-toulouse.fr (Serguei Sokol)
Date: Fri, 16 Jun 2017 18:00:09 +0200
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character_?=
 =?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
In-Reply-To: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
References: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
Message-ID: <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>

Le 16/06/2017 ? 17:54, Henrik Bengtsson a ?crit :
> I'm just curious (no complaints), what was the reason for choosing the
> letter 'L' as a suffix for integer constants?  Does it stand for
> something (literal?), is it because it visually stands out, ..., or no
> specific reason at all?
My guess is that it is inherited form C "long integer" type (contrary to "short integer" or simply "integer")
https://en.wikipedia.org/wiki/C_data_types


From pauljohn32 at gmail.com  Fri Jun 16 18:02:34 2017
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Fri, 16 Jun 2017 11:02:34 -0500
Subject: [Rd] duplicated factor labels.
In-Reply-To: <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
Message-ID: <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>

On Fri, Jun 16, 2017 at 2:35 AM, Joris Meys <jorismeys at gmail.com> wrote:
> To extwnd on Martin 's explanation :
>
> In factor(), levels are the unique input values and labels the unique output
> values. So the function levels() actually displays the labels.
>

Dear Joris

I think we agree. Currently, factor insists both levels and labels be unique.

I wish that it would not accept nonunique labels. I also understand it
is impractical to change this now in base R.

I don't think I succeeded in explaining why this would be nicer.
Here's another example. Fairly often, we see input data like

x <- c("Male", "Man", "male", "Man", "Female")

The first four represent the same value.  I'd like to go in one step
to a new factor variable with enumerated types "Male" and "Female".
This fails

xf <- factor(x, levels = c("Male", "Man", "male", "Female"),
        labels = c("Male", "Male", "Male", "Female"))

Instead, we need 2 steps.

xf <- factor(x, levels = c("Male", "Man", "male", "Female"))
levels(xf) <- c("Male", "Male", "Male", "Female")

I think it is quirky that `levels<-.factor` allows the duplicated
labels, whereas factor does not.

I wrote a function rockchalk::combineLevels to simplify combining
levels, but most of the students here like plyr::mapvalues to do it.
The use of levels() can be tricky because one must enumerate all
values, not just the ones being changed.

But I do understand Martin's point. Its been this way 25 years, it
won't change. :).

> Cheers
> Joris
>
>


-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From jorismeys at gmail.com  Fri Jun 16 18:24:34 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Fri, 16 Jun 2017 18:24:34 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
 <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
Message-ID: <CAO1zAVb4_zuLxukRpevoLWxenr8rawLL4ALRkDfNYnTLaxvtDA@mail.gmail.com>

Hi Paul,

Now I see what you're getting at. I misread your original mail completely.
So we definitely agree, and wholeheartedly even.

The use case you just gave, is definitely in my top 5 of frustrations about
R. I would like to be able to assign the same label to multiple levels
without having to use eg dplyr::recode_factor() or some other vectorized
switch statement to recode all data first.

I understand "it's been like that 25 years", but I've looked hard to find a
use case where adding this behaviour would invalid existing code and
couldn't come up with something.

So I add my (totally insignificant) vote for adding the possibility of
assigning the same label to multiple levels in factor() itself.

Cheers and thank you for bringing this up!


On Fri, Jun 16, 2017 at 6:02 PM, Paul Johnson <pauljohn32 at gmail.com> wrote:

> On Fri, Jun 16, 2017 at 2:35 AM, Joris Meys <jorismeys at gmail.com> wrote:
> > To extwnd on Martin 's explanation :
> >
> > In factor(), levels are the unique input values and labels the unique
> output
> > values. So the function levels() actually displays the labels.
> >
>
> Dear Joris
>
> I think we agree. Currently, factor insists both levels and labels be
> unique.
>
> I wish that it would not accept nonunique labels. I also understand it
> is impractical to change this now in base R.
>
> I don't think I succeeded in explaining why this would be nicer.
> Here's another example. Fairly often, we see input data like
>
> x <- c("Male", "Man", "male", "Man", "Female")
>
> The first four represent the same value.  I'd like to go in one step
> to a new factor variable with enumerated types "Male" and "Female".
> This fails
>
> xf <- factor(x, levels = c("Male", "Man", "male", "Female"),
>         labels = c("Male", "Male", "Male", "Female"))
>
> Instead, we need 2 steps.
>
> xf <- factor(x, levels = c("Male", "Man", "male", "Female"))
> levels(xf) <- c("Male", "Male", "Male", "Female")
>
> I think it is quirky that `levels<-.factor` allows the duplicated
> labels, whereas factor does not.
>
> I wrote a function rockchalk::combineLevels to simplify combining
> levels, but most of the students here like plyr::mapvalues to do it.
> The use of levels() can be tricky because one must enumerate all
> values, not just the ones being changed.
>
> But I do understand Martin's point. Its been this way 25 years, it
> won't change. :).
>
> > Cheers
> > Joris
> >
> >
>
>
> --
> Paul E. Johnson   http://pj.freefaculty.org
> Director, Center for Research Methods and Data Analysis
> http://crmda.ku.edu
>
> To write to me directly, please address me at pauljohn at ku.edu.
>



-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Fri Jun 16 18:31:47 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 16 Jun 2017 18:31:47 +0200
Subject: [Rd] 'ordered' destroyed to 'factor'
In-Reply-To: <30D28A63376088428E8318DD67FD407F78BCE6@ny-mailstore1.walleyetrading.net>
References: <trinity-35849798-65be-4033-aa6e-d006a5defe16-1497618225192@3capp-webde-bs21>
 <30D28A63376088428E8318DD67FD407F78BCE6@ny-mailstore1.walleyetrading.net>
Message-ID: <77AA9D07-5621-44CC-8A72-D41F98186AB6@gmail.com>


> On 16 Jun 2017, at 15:59 , Robert McGehee <rmcgehee at walleyetrading.net> wrote:
> 
> For instance, what would you expect to get from unlist() if each element of the list had different levels, or were both ordered, but in a different way, or if some elements of the list were factors and others were ordered factors?
>> unlist(list(ordered(c("a","b")), ordered(c("b","a"))))
> [1] ?

Those actually have the same levels in the same order: a < b

Possibly, this brings the point home more clearly

unlist(list(ordered(c("a","c")), ordered(c("b","d"))))

(Notice that alphabetical order is largely irrelevant, so all of these level orderings are equally possible:

a < c < b < d
a < b < c < d
a < b < d < c
b < a < c < d
b < a < d < c
b < d < a < c

).

-pd
-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From xie at yihui.name  Fri Jun 16 19:47:55 2017
From: xie at yihui.name (Yihui Xie)
Date: Fri, 16 Jun 2017 12:47:55 -0500
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character_?=
	=?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
In-Reply-To: <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>
References: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
 <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>
Message-ID: <CANROs4dp_GKt0GMSX50R0h9TY7X=d87v_5pX6Tb0vg8_KmnmFQ@mail.gmail.com>

Yeah, that was what I heard from our instructor when I was a graduate
student: L stands for Long (integer).

Regards,
Yihui
--
https://yihui.name


On Fri, Jun 16, 2017 at 11:00 AM, Serguei Sokol <sokol at insa-toulouse.fr> wrote:
> Le 16/06/2017 ? 17:54, Henrik Bengtsson a ?crit :
>>
>> I'm just curious (no complaints), what was the reason for choosing the
>> letter 'L' as a suffix for integer constants?  Does it stand for
>> something (literal?), is it because it visually stands out, ..., or no
>> specific reason at all?
>
> My guess is that it is inherited form C "long integer" type (contrary to
> "short integer" or simply "integer")
> https://en.wikipedia.org/wiki/C_data_types


From radford at cs.toronto.edu  Fri Jun 16 20:04:25 2017
From: radford at cs.toronto.edu (Radford Neal)
Date: Fri, 16 Jun 2017 14:04:25 -0400
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <mailman.5.1497607202.2257.r-devel@r-project.org>
References: <mailman.5.1497607202.2257.r-devel@r-project.org>
Message-ID: <20170616180425.GA24745@mail.cs.toronto.edu>

> On Wed, 14 Jun 2017, G?bor Cs?rdi wrote:
>
> > I like the idea of string literals, but the C/C++ way clearly does not
> > work. The Python/Julia way might, i.e.:
> >
> > """this is a
> > multi-line
> > lineral"""
> 
> luke-tierney at uiowa.edu:

> This does look like a promising option; some more careful checking
> would be needed to make sure there aren't cases where currently
> working code would be broken.

I don't see how this proposal solves any problem of interest.

String literals can already be as long as you like.  The problem is
that they will get wrapped around in an editor (or not all be
visible), destroying the nice formatting of your program.

With the proposed extension, you can write long string literals with
short lines only if they were long only because they consisted of
multiple lines.  Getting a string literal that's 79 characters long
with no newlines (a perfectly good error message, for example) to fit
in your 80-character-wide editing window would still be impossible.

Furthermore, these Python-style literals have to have their second
and later lines start at the left edge, destroying the indentation
of your program (supposing you actually wanted to use one).

In contrast, C-style concatenation (by the parser) of consecutive
string literals works just fine for what you'd want to do in a
program.  The only thing they wouldn't do that the Python-style
literals would do is allow you to put big blocks of literal text in
your program, without having to put quotes around each line.  But
shouldn't such text really be stored in a separate file that gets
read, rather than in the program source?

   Radford Neal


From csardi.gabor at gmail.com  Fri Jun 16 20:14:25 2017
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 16 Jun 2017 19:14:25 +0100
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <20170616180425.GA24745@mail.cs.toronto.edu>
References: <mailman.5.1497607202.2257.r-devel@r-project.org>
 <20170616180425.GA24745@mail.cs.toronto.edu>
Message-ID: <CABtg=K=QBhSwhL4eJZH9Zq_JPCidTvK7ZSoUEXUQTutT8D4fkQ@mail.gmail.com>

On Fri, Jun 16, 2017 at 7:04 PM, Radford Neal <radford at cs.toronto.edu> wrote:
>> On Wed, 14 Jun 2017, G?bor Cs?rdi wrote:
>>
>> > I like the idea of string literals, but the C/C++ way clearly does not
>> > work. The Python/Julia way might, i.e.:
>> >
>> > """this is a
>> > multi-line
>> > lineral"""
>>
>> luke-tierney at uiowa.edu:
>
>> This does look like a promising option; some more careful checking
>> would be needed to make sure there aren't cases where currently
>> working code would be broken.
>
> I don't see how this proposal solves any problem of interest.
>
> String literals can already be as long as you like.  The problem is
> that they will get wrapped around in an editor (or not all be
> visible), destroying the nice formatting of your program.

>From the Python docs:

String literals can span multiple lines. One way is using
triple-quotes: """...""" or '''...'''. End of lines are automatically
included in the string, but it?s possible to prevent this by adding a
\ at the end of the line.

[...]

Gabor


From wdunlap at tibco.com  Fri Jun 16 20:20:49 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 16 Jun 2017 11:20:49 -0700
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character_?=
	=?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
In-Reply-To: <CANROs4dp_GKt0GMSX50R0h9TY7X=d87v_5pX6Tb0vg8_KmnmFQ@mail.gmail.com>
References: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
 <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>
 <CANROs4dp_GKt0GMSX50R0h9TY7X=d87v_5pX6Tb0vg8_KmnmFQ@mail.gmail.com>
Message-ID: <CAF8bMca+f_rV4qGBGNb68Atbm+Mr3t9Bv9EAPTLksBrRUyWcqg@mail.gmail.com>

But R "integers" are C "ints", as opposed to S "integers", which are C
"long ints".  (I suppose R never had to run on ancient hardware with 16 bit
ints.)

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Fri, Jun 16, 2017 at 10:47 AM, Yihui Xie <xie at yihui.name> wrote:

> Yeah, that was what I heard from our instructor when I was a graduate
> student: L stands for Long (integer).
>
> Regards,
> Yihui
> --
> https://yihui.name
>
>
> On Fri, Jun 16, 2017 at 11:00 AM, Serguei Sokol <sokol at insa-toulouse.fr>
> wrote:
> > Le 16/06/2017 ? 17:54, Henrik Bengtsson a ?crit :
> >>
> >> I'm just curious (no complaints), what was the reason for choosing the
> >> letter 'L' as a suffix for integer constants?  Does it stand for
> >> something (literal?), is it because it visually stands out, ..., or no
> >> specific reason at all?
> >
> > My guess is that it is inherited form C "long integer" type (contrary to
> > "short integer" or simply "integer")
> > https://en.wikipedia.org/wiki/C_data_types
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Fri Jun 16 20:53:01 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 16 Jun 2017 20:53:01 +0200
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character_?=
 =?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
In-Reply-To: <CAF8bMca+f_rV4qGBGNb68Atbm+Mr3t9Bv9EAPTLksBrRUyWcqg@mail.gmail.com>
References: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
 <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>
 <CANROs4dp_GKt0GMSX50R0h9TY7X=d87v_5pX6Tb0vg8_KmnmFQ@mail.gmail.com>
 <CAF8bMca+f_rV4qGBGNb68Atbm+Mr3t9Bv9EAPTLksBrRUyWcqg@mail.gmail.com>
Message-ID: <24C37219-4592-49FB-9A27-5A7440774401@gmail.com>

Wikipedia claims that C ints are still only guaranteed to be at least 16 bits, and longs are at least 32 bits. So no, R's integers are long.

-pd

> On 16 Jun 2017, at 20:20 , William Dunlap via R-devel <r-devel at r-project.org> wrote:
> 
> But R "integers" are C "ints", as opposed to S "integers", which are C
> "long ints".  (I suppose R never had to run on ancient hardware with 16 bit
> ints.)
> 
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
> 
> On Fri, Jun 16, 2017 at 10:47 AM, Yihui Xie <xie at yihui.name> wrote:
> 
>> Yeah, that was what I heard from our instructor when I was a graduate
>> student: L stands for Long (integer).
>> 
>> Regards,
>> Yihui
>> --
>> https://yihui.name
>> 
>> 
>> On Fri, Jun 16, 2017 at 11:00 AM, Serguei Sokol <sokol at insa-toulouse.fr>
>> wrote:
>>> Le 16/06/2017 ? 17:54, Henrik Bengtsson a ?crit :
>>>> 
>>>> I'm just curious (no complaints), what was the reason for choosing the
>>>> letter 'L' as a suffix for integer constants?  Does it stand for
>>>> something (literal?), is it because it visually stands out, ..., or no
>>>> specific reason at all?
>>> 
>>> My guess is that it is inherited form C "long integer" type (contrary to
>>> "short integer" or simply "integer")
>>> https://en.wikipedia.org/wiki/C_data_types
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From wdunlap at tibco.com  Fri Jun 16 21:01:25 2017
From: wdunlap at tibco.com (William Dunlap)
Date: Fri, 16 Jun 2017 12:01:25 -0700
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character_?=
	=?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
In-Reply-To: <24C37219-4592-49FB-9A27-5A7440774401@gmail.com>
References: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
 <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>
 <CANROs4dp_GKt0GMSX50R0h9TY7X=d87v_5pX6Tb0vg8_KmnmFQ@mail.gmail.com>
 <CAF8bMca+f_rV4qGBGNb68Atbm+Mr3t9Bv9EAPTLksBrRUyWcqg@mail.gmail.com>
 <24C37219-4592-49FB-9A27-5A7440774401@gmail.com>
Message-ID: <CAF8bMcbTWdxUXEDtDA-CSmDmQg2TNPa5H-aLMBUzMEOcDPnUTQ@mail.gmail.com>

"Writing R Extensions" says "int":

R storage mode  C type  FORTRAN type
logical  int*  INTEGER
integer  int*  INTEGER
double  double*  DOUBLE PRECISION
complex  Rcomplex*  DOUBLE COMPLEX
character  char**  CHARACTER*255
raw  unsigned char*  none

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Fri, Jun 16, 2017 at 11:53 AM, peter dalgaard <pdalgd at gmail.com> wrote:
>
> Wikipedia claims that C ints are still only guaranteed to be at least 16
bits, and longs are at least 32 bits. So no, R's integers are long.
>
> -pd
>
> > On 16 Jun 2017, at 20:20 , William Dunlap via R-devel <
r-devel at r-project.org> wrote:
> >
> > But R "integers" are C "ints", as opposed to S "integers", which are C
> > "long ints".  (I suppose R never had to run on ancient hardware with 16
bit
> > ints.)
> >
> > Bill Dunlap
> > TIBCO Software
> > wdunlap tibco.com
> >
> > On Fri, Jun 16, 2017 at 10:47 AM, Yihui Xie <xie at yihui.name> wrote:
> >
> >> Yeah, that was what I heard from our instructor when I was a graduate
> >> student: L stands for Long (integer).
> >>
> >> Regards,
> >> Yihui
> >> --
> >> https://yihui.name
> >>
> >>
> >> On Fri, Jun 16, 2017 at 11:00 AM, Serguei Sokol <sokol at insa-toulouse.fr
>
> >> wrote:
> >>> Le 16/06/2017 ? 17:54, Henrik Bengtsson a ?crit :
> >>>>
> >>>> I'm just curious (no complaints), what was the reason for choosing
the
> >>>> letter 'L' as a suffix for integer constants?  Does it stand for
> >>>> something (literal?), is it because it visually stands out, ..., or
no
> >>>> specific reason at all?
> >>>
> >>> My guess is that it is inherited form C "long integer" type (contrary
to
> >>> "short integer" or simply "integer")
> >>> https://en.wikipedia.org/wiki/C_data_types
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>
>

	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Fri Jun 16 21:10:20 2017
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 16 Jun 2017 14:10:20 -0500
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <CABtg=K=QBhSwhL4eJZH9Zq_JPCidTvK7ZSoUEXUQTutT8D4fkQ@mail.gmail.com>
References: <mailman.5.1497607202.2257.r-devel@r-project.org>
 <20170616180425.GA24745@mail.cs.toronto.edu>
 <CABtg=K=QBhSwhL4eJZH9Zq_JPCidTvK7ZSoUEXUQTutT8D4fkQ@mail.gmail.com>
Message-ID: <CABdHhvGXmZGh+K21HO_4x4sV3MHEZySvBUBhgNkN_5KDGYzL8Q@mail.gmail.com>

On Fri, Jun 16, 2017 at 1:14 PM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> On Fri, Jun 16, 2017 at 7:04 PM, Radford Neal <radford at cs.toronto.edu> wrote:
>>> On Wed, 14 Jun 2017, G?bor Cs?rdi wrote:
>>>
>>> > I like the idea of string literals, but the C/C++ way clearly does not
>>> > work. The Python/Julia way might, i.e.:
>>> >
>>> > """this is a
>>> > multi-line
>>> > lineral"""
>>>
>>> luke-tierney at uiowa.edu:
>>
>>> This does look like a promising option; some more careful checking
>>> would be needed to make sure there aren't cases where currently
>>> working code would be broken.
>>
>> I don't see how this proposal solves any problem of interest.
>>
>> String literals can already be as long as you like.  The problem is
>> that they will get wrapped around in an editor (or not all be
>> visible), destroying the nice formatting of your program.
>
> From the Python docs:
>
> String literals can span multiple lines. One way is using
> triple-quotes: """...""" or '''...'''. End of lines are automatically
> included in the string, but it?s possible to prevent this by adding a
> \ at the end of the line.

And additionally, in Julia triple quoted strings:

Trailing whitespace is left unaltered. They can contain " symbols
without escaping. Triple-quoted strings are also dedented to the level
of the least-indented line. This is useful for defining strings within
code that is indented. For example:

Hadley

-- 
http://hadley.nz


From ccberry at ucsd.edu  Fri Jun 16 21:12:43 2017
From: ccberry at ucsd.edu (Charles C. Berry)
Date: Fri, 16 Jun 2017 12:12:43 -0700
Subject: [Rd] Simplify and By Convert Factors To Numeric Values
In-Reply-To: <DM5PR01MB32592033EEE2E8C8CC012DABCDC10@DM5PR01MB3259.prod.exchangelabs.com>
References: <DM5PR01MB32592033EEE2E8C8CC012DABCDC10@DM5PR01MB3259.prod.exchangelabs.com>
Message-ID: <alpine.OSX.2.20.1706161151530.996@charles-berrys-macbook.local>

On Fri, 16 Jun 2017, Dario Strbenac wrote:

> Good day,
>

> It's not described anywhere in the help page, but tapply and by 
> functions will, by default, convert factors into numeric values. Perhaps 
> this needs to be documented or the behaviour changed.


It *is* described in the help page.

This returns a list of objects and each object class has "factor"

tapply(rep(1:2,2), rep(1:2,2),
   function(x) factor(LETTERS[x], levels = LETTERS))

and this

>
>> tapply(1:3, 1:3, function(x) factor(LETTERS[x], levels = LETTERS))
> 1 2 3
> 1 2 3

returns a vector object with no class.

>

> The documentation states "... tapply returns a multi-way array 
> containing the values ..." but doesn't mention anything about converting 
> factors into integers. I'd expect the values to be of the same type.

and also states

"If FUN returns a single atomic value for each such cell ... and when 
simplify is TRUE ...  if the return value has a class (e.g., an object of 
class "Date") the class is discarded."

which is what just happened in your example.

Maybe you want:

unlist(tapply(1:3, 1:3, function(x) factor(LETTERS[x],
   levels = LETTERS),simplify=FALSE))

Trying to preserve class worked here in a way you might have 
hoped/expected, but might lead to difficulties in other uses.

HTH,

Chuck


From murdoch.duncan at gmail.com  Fri Jun 16 21:17:10 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 16 Jun 2017 15:17:10 -0400
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <20170616180425.GA24745@mail.cs.toronto.edu>
References: <mailman.5.1497607202.2257.r-devel@r-project.org>
 <20170616180425.GA24745@mail.cs.toronto.edu>
Message-ID: <f9fe4bb1-d2b4-895e-ceb1-5497c197c3f2@gmail.com>

On 16/06/2017 2:04 PM, Radford Neal wrote:
>> On Wed, 14 Jun 2017, G?bor Cs?rdi wrote:
>>
>>> I like the idea of string literals, but the C/C++ way clearly does not
>>> work. The Python/Julia way might, i.e.:
>>>
>>> """this is a
>>> multi-line
>>> lineral"""
>>
>> luke-tierney at uiowa.edu:
>
>> This does look like a promising option; some more careful checking
>> would be needed to make sure there aren't cases where currently
>> working code would be broken.
>
> I don't see how this proposal solves any problem of interest.
>
> String literals can already be as long as you like.  The problem is
> that they will get wrapped around in an editor (or not all be
> visible), destroying the nice formatting of your program.
>
> With the proposed extension, you can write long string literals with
> short lines only if they were long only because they consisted of
> multiple lines.  Getting a string literal that's 79 characters long
> with no newlines (a perfectly good error message, for example) to fit
> in your 80-character-wide editing window would still be impossible.
>
> Furthermore, these Python-style literals have to have their second
> and later lines start at the left edge, destroying the indentation
> of your program (supposing you actually wanted to use one).
>
> In contrast, C-style concatenation (by the parser) of consecutive
> string literals works just fine for what you'd want to do in a
> program.  The only thing they wouldn't do that the Python-style
> literals would do is allow you to put big blocks of literal text in
> your program, without having to put quotes around each line.  But
> shouldn't such text really be stored in a separate file that gets
> read, rather than in the program source?

I agree with most of this, but I still don't see the need for a syntax 
change.  That's a lot of work just to avoid typing "paste0" and some 
commas in

  paste0("this is the first part",
         "this is the second part")

If the rather insignificant amount of time it takes to execute this 
function call really matters (and I'm not convinced of that), then 
shouldn't it be solved by the compiler applying constant folding to 
paste0()?

(Some syntax like r"xyz" to make it easier to type strings containing 
backslashes and quotes would actually be useful, but that's a different 
issue.)

Duncan Murdoch


From james.f.hester at gmail.com  Fri Jun 16 21:37:41 2017
From: james.f.hester at gmail.com (Jim Hester)
Date: Fri, 16 Jun 2017 15:37:41 -0400
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character_?=
	=?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
In-Reply-To: <CAF8bMcbTWdxUXEDtDA-CSmDmQg2TNPa5H-aLMBUzMEOcDPnUTQ@mail.gmail.com>
References: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
 <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>
 <CANROs4dp_GKt0GMSX50R0h9TY7X=d87v_5pX6Tb0vg8_KmnmFQ@mail.gmail.com>
 <CAF8bMca+f_rV4qGBGNb68Atbm+Mr3t9Bv9EAPTLksBrRUyWcqg@mail.gmail.com>
 <24C37219-4592-49FB-9A27-5A7440774401@gmail.com>
 <CAF8bMcbTWdxUXEDtDA-CSmDmQg2TNPa5H-aLMBUzMEOcDPnUTQ@mail.gmail.com>
Message-ID: <CAD6tx940Gxs2wjRJCXyE7J=caNFg3JsPk_wsCTJc2UxkbJ==+Q@mail.gmail.com>

The relevant sections of the C standard are
http://c0x.coding-guidelines.com/5.2.4.2.1.html, which specifies that C
ints are only guaranteed to be 16 bits, C long ints at least 32 bits in
size, as Peter mentioned. Also http://c0x.coding-guidelines.com/6.4.4.1.html
specifies l or L as the suffix for a long int constants.

However R does define integers as `int` in it's source code, so use of L is
not strictly correct if a compiler uses 16 bit int types. I guess this
ambiguity is why the `int32_t` typedef exists.

On Fri, Jun 16, 2017 at 3:01 PM, William Dunlap via R-devel <
r-devel at r-project.org> wrote:

> "Writing R Extensions" says "int":
>
> R storage mode  C type  FORTRAN type
> logical  int*  INTEGER
> integer  int*  INTEGER
> double  double*  DOUBLE PRECISION
> complex  Rcomplex*  DOUBLE COMPLEX
> character  char**  CHARACTER*255
> raw  unsigned char*  none
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Fri, Jun 16, 2017 at 11:53 AM, peter dalgaard <pdalgd at gmail.com> wrote:
> >
> > Wikipedia claims that C ints are still only guaranteed to be at least 16
> bits, and longs are at least 32 bits. So no, R's integers are long.
> >
> > -pd
> >
> > > On 16 Jun 2017, at 20:20 , William Dunlap via R-devel <
> r-devel at r-project.org> wrote:
> > >
> > > But R "integers" are C "ints", as opposed to S "integers", which are C
> > > "long ints".  (I suppose R never had to run on ancient hardware with 16
> bit
> > > ints.)
> > >
> > > Bill Dunlap
> > > TIBCO Software
> > > wdunlap tibco.com
> > >
> > > On Fri, Jun 16, 2017 at 10:47 AM, Yihui Xie <xie at yihui.name> wrote:
> > >
> > >> Yeah, that was what I heard from our instructor when I was a graduate
> > >> student: L stands for Long (integer).
> > >>
> > >> Regards,
> > >> Yihui
> > >> --
> > >> https://yihui.name
> > >>
> > >>
> > >> On Fri, Jun 16, 2017 at 11:00 AM, Serguei Sokol <
> sokol at insa-toulouse.fr
> >
> > >> wrote:
> > >>> Le 16/06/2017 ? 17:54, Henrik Bengtsson a ?crit :
> > >>>>
> > >>>> I'm just curious (no complaints), what was the reason for choosing
> the
> > >>>> letter 'L' as a suffix for integer constants?  Does it stand for
> > >>>> something (literal?), is it because it visually stands out, ..., or
> no
> > >>>> specific reason at all?
> > >>>
> > >>> My guess is that it is inherited form C "long integer" type (contrary
> to
> > >>> "short integer" or simply "integer")
> > >>> https://en.wikipedia.org/wiki/C_data_types
> > >>
> > >> ______________________________________________
> > >> R-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> > --
> > Peter Dalgaard, Professor,
> > Center for Statistics, Copenhagen Business School
> > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> > Phone: (+45)38153501
> > Office: A 4.23
> > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> >
> >
> >
> >
> >
> >
> >
> >
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Fri Jun 16 22:17:55 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 16 Jun 2017 22:17:55 +0200
Subject: [Rd] [WISH / PATCH] possibility to split string literals across
 multiple lines
In-Reply-To: <f9fe4bb1-d2b4-895e-ceb1-5497c197c3f2@gmail.com>
References: <mailman.5.1497607202.2257.r-devel@r-project.org>
 <20170616180425.GA24745@mail.cs.toronto.edu>
 <f9fe4bb1-d2b4-895e-ceb1-5497c197c3f2@gmail.com>
Message-ID: <E96C549C-4C26-4CBE-BE70-DCBB67B050C3@gmail.com>


> On 16 Jun 2017, at 21:17 , Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> paste0("this is the first part",
>        "this is the second part")
> 
> If the rather insignificant amount of time it takes to execute this function call really matters (and I'm not convinced of that), then shouldn't it be solved by the compiler applying constant folding to paste0()?

And, of course, if it is equivalent to a literal, it can be precomputed. There is no point in having it in the middle of a tight loop. 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From ripley at stats.ox.ac.uk  Sat Jun 17 07:40:53 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 17 Jun 2017 06:40:53 +0100
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character_?=
 =?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
In-Reply-To: <CAD6tx940Gxs2wjRJCXyE7J=caNFg3JsPk_wsCTJc2UxkbJ==+Q@mail.gmail.com>
References: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
 <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>
 <CANROs4dp_GKt0GMSX50R0h9TY7X=d87v_5pX6Tb0vg8_KmnmFQ@mail.gmail.com>
 <CAF8bMca+f_rV4qGBGNb68Atbm+Mr3t9Bv9EAPTLksBrRUyWcqg@mail.gmail.com>
 <24C37219-4592-49FB-9A27-5A7440774401@gmail.com>
 <CAF8bMcbTWdxUXEDtDA-CSmDmQg2TNPa5H-aLMBUzMEOcDPnUTQ@mail.gmail.com>
 <CAD6tx940Gxs2wjRJCXyE7J=caNFg3JsPk_wsCTJc2UxkbJ==+Q@mail.gmail.com>
Message-ID: <c4bdec95-f82b-0964-d2b7-e54ee8899fb5@stats.ox.ac.uk>

On 16/06/2017 20:37, Jim Hester wrote:
> The relevant sections of the C standard are
> http://c0x.coding-guidelines.com/5.2.4.2.1.html, which specifies that C

There is more than one C standard, but that is none of them.

> ints are only guaranteed to be 16 bits, C long ints at least 32 bits in
> size, as Peter mentioned. Also http://c0x.coding-guidelines.com/6.4.4.1.html
> specifies l or L as the suffix for a long int constants.
> 
> However R does define integers as `int` in it's source code, so use of L is
> not strictly correct if a compiler uses 16 bit int types. I guess this
> ambiguity is why the `int32_t` typedef exists.

However, R checks that the compiler uses 32-bit ints in its build 
(configure and src/main/arithmetic.c) and documents that in R-admin . 
In any case, the C standard does not apply to the R language.

Also, int32_t

- postdates R (it was introduced in C99, a few OSes having it earlier)
- is optional in the C99 and C11 standards (?7.20.1.1 in C11).


> 
> On Fri, Jun 16, 2017 at 3:01 PM, William Dunlap via R-devel <
> r-devel at r-project.org> wrote:
> 
>> "Writing R Extensions" says "int":
>>
>> R storage mode  C type  FORTRAN type
>> logical  int*  INTEGER
>> integer  int*  INTEGER
>> double  double*  DOUBLE PRECISION
>> complex  Rcomplex*  DOUBLE COMPLEX
>> character  char**  CHARACTER*255
>> raw  unsigned char*  none
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> On Fri, Jun 16, 2017 at 11:53 AM, peter dalgaard <pdalgd at gmail.com> wrote:
>>>
>>> Wikipedia claims that C ints are still only guaranteed to be at least 16
>> bits, and longs are at least 32 bits. So no, R's integers are long.
>>>
>>> -pd
>>>
>>>> On 16 Jun 2017, at 20:20 , William Dunlap via R-devel <
>> r-devel at r-project.org> wrote:
>>>>
>>>> But R "integers" are C "ints", as opposed to S "integers", which are C
>>>> "long ints".  (I suppose R never had to run on ancient hardware with 16
>> bit
>>>> ints.)
>>>>
>>>> Bill Dunlap
>>>> TIBCO Software
>>>> wdunlap tibco.com
>>>>
>>>> On Fri, Jun 16, 2017 at 10:47 AM, Yihui Xie <xie at yihui.name> wrote:
>>>>
>>>>> Yeah, that was what I heard from our instructor when I was a graduate
>>>>> student: L stands for Long (integer).
>>>>>
>>>>> Regards,
>>>>> Yihui
>>>>> --
>>>>> https://yihui.name
>>>>>
>>>>>
>>>>> On Fri, Jun 16, 2017 at 11:00 AM, Serguei Sokol <
>> sokol at insa-toulouse.fr
>>>
>>>>> wrote:
>>>>>> Le 16/06/2017 ? 17:54, Henrik Bengtsson a ?crit :
>>>>>>>
>>>>>>> I'm just curious (no complaints), what was the reason for choosing
>> the
>>>>>>> letter 'L' as a suffix for integer constants?  Does it stand for
>>>>>>> something (literal?), is it because it visually stands out, ..., or
>> no
>>>>>>> specific reason at all?
>>>>>>
>>>>>> My guess is that it is inherited form C "long integer" type (contrary
>> to
>>>>>> "short integer" or simply "integer")
>>>>>> https://en.wikipedia.org/wiki/C_data_types
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>>        [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> --
>>> Peter Dalgaard, Professor,
>>> Center for Statistics, Copenhagen Business School
>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>> Phone: (+45)38153501
>>> Office: A 4.23
>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From m_olshansky at yahoo.com  Sat Jun 17 08:47:56 2017
From: m_olshansky at yahoo.com (Moshe Olshansky)
Date: Sat, 17 Jun 2017 06:47:56 +0000 (UTC)
Subject: [Rd] dist function in R is very slow
References: <1603979889.162955.1497682076574.ref@mail.yahoo.com>
Message-ID: <1603979889.162955.1497682076574@mail.yahoo.com>

Dear R developers,
I am visualising high dimensional genomic data and for this purpose I need to compute pairwise distances between many points in a high-dimensional space (say I have a matrix of 5,000 rows and 20,000 columns, so the result is a 5,000x5,000 matrix or it's upper diagonal).Computing such thing in R takes many hours (I am doing this on a Linux server with more than 100 GB of RAM, so this is not the problem). When I write the matrix to disk, read it ans compute the distances in C, write them to the disk and read them into R it takes 10 - 15 minutes (and I did not spend much time on optimising my C code).The question is why the R function is so slow? I understand that it calls C (or C++) to compute the distance. My suspicion is that the transposed matrix is passed to C and so each time a distance between two columns of a matrix is computed, and since C stores matrices by rows it is very inefficient and causes many cache misses (my first C implementation was like this and I had to stop the run after an hour when it failed to complete).If my suspicion is correct, is it possible to re-write the dist function so that it works faster on large matrices?
Best regards,Moshe OlshanskyMonash University

	[[alternative HTML version deleted]]


From bmarwick at uw.edu  Sat Jun 17 13:10:18 2017
From: bmarwick at uw.edu (Ben Marwick)
Date: Sat, 17 Jun 2017 21:10:18 +1000
Subject: [Rd] suggestion to fix packageDescription() for Windows users
Message-ID: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>

Recently I was trying to cite a package where the authors have ?
and ? in their names. I found that on Windows the citation() function 
did not return the authors' names at all, but on Linux there was no 
problem (sessionInfos at the bottom):

On Windows, no author names are returned:

#---------------

 > citation("readr")

To cite package ?readr? in publications use:

   (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
   https://CRAN.R-project.org/package=readr

A BibTeX entry for LaTeX users is

   @Manual{,
     title = {readr: Read Rectangular Text Data},
     year = {2017},
     note = {R package version 1.1.1},
     url = {https://CRAN.R-project.org/package=readr},
   }

ATTENTION: This citation information has been auto-generated from the
package DESCRIPTION file and may need manual editing, see
?help("citation")?.
#---------------

On Linux we do see the author names:

#---------------
 > citation("readr")

To cite package ?readr? in publications use:

   Hadley Wickham, Jim Hester and Romain Francois (2017). readr:
   Read Rectangular Text Data. R package version 1.1.1.
   https://CRAN.R-project.org/package=readr

A BibTeX entry for LaTeX users is

   @Manual{,
     title = {readr: Read Rectangular Text Data},
     author = {Hadley Wickham and Jim Hester and Romain Francois},
     year = {2017},
     note = {R package version 1.1.1},
     url = {https://CRAN.R-project.org/package=readr},
   }
#---------------

This appears to be an OS-dependent encoding issue. The citation function 
does not take an encoding argument, so it's not possible to set the 
encoding at the point where that function is used. The citation function 
working with the packageDescription function, which does have an 
encoding argument, but the default is not useful for Windows when there 
is an encoding set in the DESCRIPTION of the package (in this case UTF-8).

We can set the encoding argument in packageDescription so it works in 
Windows to give the authors as expected, but it is very inconvenient to 
generate citations directly from the output of this function. So I'd 
like to propose a solution this problem by changing one line in the 
packageDescription function, like so, from:

#---------------
if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
#---------------

to:

#---------------
if ((missing(encoding) && Sys.getlocale("LC_CTYPE") == "C") | 
unname(Sys.info()['sysname']) == "Windows")
#---------------

If I understand correctly, that will force ASCII//TRANSLIT encoding when 
DESCRIPTION files are read by packageDescription() on Windows machines. 
The upside is that Windows users will get the authors in the package 
citation, unlike the current situation. The downside is that the exotic 
symbols in the authors' names are replaced with common ones that are 
similar.

I think getting the citations to easily include the authors' names is 
pretty important, even if their names have exotic characters, so this is 
worth fixing. Is this edit to packageDescription the best way to solve 
this problem of exotic characters preventing the authors' names from 
showing on Windows?

thanks,

Ben




Windows sessionInfo

#---------------
 > sessionInfo()
R version 3.4.0 Patched (2017-05-10 r72670)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

Matrix products: default

locale:
[1] LC_COLLATE=English_Australia.1252
[2] LC_CTYPE=Chinese (Simplified)_People's Republic of China.936
[3] LC_MONETARY=English_Australia.1252
[4] LC_NUMERIC=C
[5] LC_TIME=English_Australia.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
  [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3 
tools_3.4.0
  [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11   knitr_1.16 
rlang_0.1.1
[11] fortunes_1.5-4
#---------------

Linux sessionInfo:

#---------------
 > sessionInfo()
R version 3.3.1 (2016-06-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.10

locale:
  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
  [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] tools_3.3.1 yaml_2.1.14 knitr_1.16
#---------------


From murdoch.duncan at gmail.com  Sat Jun 17 14:36:54 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 17 Jun 2017 08:36:54 -0400
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
Message-ID: <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>

On 17/06/2017 7:10 AM, Ben Marwick wrote:
> Recently I was trying to cite a package where the authors have ?
> and ? in their names. I found that on Windows the citation() function
> did not return the authors' names at all, but on Linux there was no
> problem (sessionInfos at the bottom):
>
> On Windows, no author names are returned:

I'm not seeing this.  You have fairly strange localization settings; see 
comments below.

>
> #---------------
>
>  > citation("readr")
>
> To cite package ?readr? in publications use:
>
>    (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
>    https://CRAN.R-project.org/package=readr
>
> A BibTeX entry for LaTeX users is
>
>    @Manual{,
>      title = {readr: Read Rectangular Text Data},
>      year = {2017},
>      note = {R package version 1.1.1},
>      url = {https://CRAN.R-project.org/package=readr},
>    }
>
> ATTENTION: This citation information has been auto-generated from the
> package DESCRIPTION file and may need manual editing, see
> ?help("citation")?.
> #---------------
>
> On Linux we do see the author names:
>
> #---------------
>  > citation("readr")
>
> To cite package ?readr? in publications use:
>
>    Hadley Wickham, Jim Hester and Romain Francois (2017). readr:
>    Read Rectangular Text Data. R package version 1.1.1.
>    https://CRAN.R-project.org/package=readr
>
> A BibTeX entry for LaTeX users is
>
>    @Manual{,
>      title = {readr: Read Rectangular Text Data},
>      author = {Hadley Wickham and Jim Hester and Romain Francois},
>      year = {2017},
>      note = {R package version 1.1.1},
>      url = {https://CRAN.R-project.org/package=readr},
>    }
> #---------------
>
> This appears to be an OS-dependent encoding issue. The citation function
> does not take an encoding argument, so it's not possible to set the
> encoding at the point where that function is used. The citation function
> working with the packageDescription function, which does have an
> encoding argument, but the default is not useful for Windows when there
> is an encoding set in the DESCRIPTION of the package (in this case UTF-8).
>
> We can set the encoding argument in packageDescription so it works in
> Windows to give the authors as expected, but it is very inconvenient to
> generate citations directly from the output of this function. So I'd
> like to propose a solution this problem by changing one line in the
> packageDescription function, like so, from:
>
> #---------------
> if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
> #---------------
>
> to:
>
> #---------------
> if ((missing(encoding) && Sys.getlocale("LC_CTYPE") == "C") |
> unname(Sys.info()['sysname']) == "Windows")
> #---------------
>
> If I understand correctly, that will force ASCII//TRANSLIT encoding when
> DESCRIPTION files are read by packageDescription() on Windows machines.
> The upside is that Windows users will get the authors in the package
> citation, unlike the current situation. The downside is that the exotic
> symbols in the authors' names are replaced with common ones that are
> similar.
>
> I think getting the citations to easily include the authors' names is
> pretty important, even if their names have exotic characters, so this is
> worth fixing. Is this edit to packageDescription the best way to solve
> this problem of exotic characters preventing the authors' names from
> showing on Windows?
>
> thanks,
>
> Ben
>
>
>
>
> Windows sessionInfo
>
> #---------------
>  > sessionInfo()
> R version 3.4.0 Patched (2017-05-10 r72670)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 7 x64 (build 7601) Service Pack 1
>
> Matrix products: default
>
> locale:
> [1] LC_COLLATE=English_Australia.1252
> [2] LC_CTYPE=Chinese (Simplified)_People's Republic of China.936
> [3] LC_MONETARY=English_Australia.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_Australia.1252

I don't know what English_Australia.1252 does that's different from what 
I use (English_Canada.1252), but the Chinese locale setting could cause 
trouble.  Could you try setting this (presumably in the Windows control 
panel) to be consistent?  You're using a much simpler setting on Linux.

Duncan Murdoch

>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
>   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
> tools_3.4.0
>   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11   knitr_1.16
> rlang_0.1.1
> [11] fortunes_1.5-4
> #---------------
>
> Linux sessionInfo:
>
> #---------------
>  > sessionInfo()
> R version 3.3.1 (2016-06-21)
> Platform: x86_64-pc-linux-gnu (64-bit)
> Running under: Ubuntu 16.10
>
> locale:
>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> loaded via a namespace (and not attached):
> [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
> #---------------
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From bmarwick at uw.edu  Sat Jun 17 15:13:34 2017
From: bmarwick at uw.edu (Ben Marwick)
Date: Sat, 17 Jun 2017 23:13:34 +1000
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
Message-ID: <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>

Hi Duncan,

Thanks for your reply. Yes, it does seem to be specific to the CTYPE 
setting to Chinese on Windows. If I set it to English using 
Sys.setlocale() there is no problem, then back to Chinese and the 
authors disappear:

Sys.setlocale("LC_ALL","English")
citation("readr")

#' To cite package ?readr? in publications use:
#'
#'   Hadley Wickham, Jim Hester and Romain Francois (2017). readr: Read
#' Rectangular Text Data. R package version 1.1.1.
#' https://CRAN.R-project.org/package=readr
#'
#' A BibTeX entry for LaTeX users is
#'
#' @Manual{,
#'   title = {readr: Read Rectangular Text Data},
#'   author = {Hadley Wickham and Jim Hester and Romain Francois},
#'   year = {2017},
#'   note = {R package version 1.1.1},
#'   url = {https://CRAN.R-project.org/package=readr},
#' }


Sys.setlocale("LC_CTYPE", "Chinese")
citation("readr")

#'
#' To cite package ?readr? in publications use:
#'
#'   (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
#' https://CRAN.R-project.org/package=readr
#'
#' A BibTeX entry for LaTeX users is
#'
#' @Manual{,
#'   title = {readr: Read Rectangular Text Data},
#'   year = {2017},
#'   note = {R package version 1.1.1},
#'   url = {https://CRAN.R-project.org/package=readr},
#' }
#'
#' ATTENTION: This citation information has been auto-generated from the
#' package DESCRIPTION file and may need manual editing, see
#' ?help("citation")?.

Where do we go from here? I do want to use the Chinese locale with R on 
Windows (and perhaps others do too), so switching the locale isn't a fix.

Thanks,

Ben

On 17/06/2017 10:36 PM, Duncan Murdoch wrote:
> On 17/06/2017 7:10 AM, Ben Marwick wrote:
>> Recently I was trying to cite a package where the authors have ?
>> and ? in their names. I found that on Windows the citation() function
>> did not return the authors' names at all, but on Linux there was no
>> problem (sessionInfos at the bottom):
>>
>> On Windows, no author names are returned:
>
> I'm not seeing this.  You have fairly strange localization settings; see
> comments below.
>
>>
>> #---------------
>>
>>  > citation("readr")
>>
>> To cite package ?readr? in publications use:
>>
>>    (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
>>    https://CRAN.R-project.org/package=readr
>>
>> A BibTeX entry for LaTeX users is
>>
>>    @Manual{,
>>      title = {readr: Read Rectangular Text Data},
>>      year = {2017},
>>      note = {R package version 1.1.1},
>>      url = {https://CRAN.R-project.org/package=readr},
>>    }
>>
>> ATTENTION: This citation information has been auto-generated from the
>> package DESCRIPTION file and may need manual editing, see
>> ?help("citation")?.
>> #---------------
>>
>> On Linux we do see the author names:
>>
>> #---------------
>>  > citation("readr")
>>
>> To cite package ?readr? in publications use:
>>
>>    Hadley Wickham, Jim Hester and Romain Francois (2017). readr:
>>    Read Rectangular Text Data. R package version 1.1.1.
>>    https://CRAN.R-project.org/package=readr
>>
>> A BibTeX entry for LaTeX users is
>>
>>    @Manual{,
>>      title = {readr: Read Rectangular Text Data},
>>      author = {Hadley Wickham and Jim Hester and Romain Francois},
>>      year = {2017},
>>      note = {R package version 1.1.1},
>>      url = {https://CRAN.R-project.org/package=readr},
>>    }
>> #---------------
>>
>> This appears to be an OS-dependent encoding issue. The citation function
>> does not take an encoding argument, so it's not possible to set the
>> encoding at the point where that function is used. The citation function
>> working with the packageDescription function, which does have an
>> encoding argument, but the default is not useful for Windows when there
>> is an encoding set in the DESCRIPTION of the package (in this case
>> UTF-8).
>>
>> We can set the encoding argument in packageDescription so it works in
>> Windows to give the authors as expected, but it is very inconvenient to
>> generate citations directly from the output of this function. So I'd
>> like to propose a solution this problem by changing one line in the
>> packageDescription function, like so, from:
>>
>> #---------------
>> if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
>> #---------------
>>
>> to:
>>
>> #---------------
>> if ((missing(encoding) && Sys.getlocale("LC_CTYPE") == "C") |
>> unname(Sys.info()['sysname']) == "Windows")
>> #---------------
>>
>> If I understand correctly, that will force ASCII//TRANSLIT encoding when
>> DESCRIPTION files are read by packageDescription() on Windows machines.
>> The upside is that Windows users will get the authors in the package
>> citation, unlike the current situation. The downside is that the exotic
>> symbols in the authors' names are replaced with common ones that are
>> similar.
>>
>> I think getting the citations to easily include the authors' names is
>> pretty important, even if their names have exotic characters, so this is
>> worth fixing. Is this edit to packageDescription the best way to solve
>> this problem of exotic characters preventing the authors' names from
>> showing on Windows?
>>
>> thanks,
>>
>> Ben
>>
>>
>>
>>
>> Windows sessionInfo
>>
>> #---------------
>>  > sessionInfo()
>> R version 3.4.0 Patched (2017-05-10 r72670)
>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>>
>> Matrix products: default
>>
>> locale:
>> [1] LC_COLLATE=English_Australia.1252
>> [2] LC_CTYPE=Chinese (Simplified)_People's Republic of China.936
>> [3] LC_MONETARY=English_Australia.1252
>> [4] LC_NUMERIC=C
>> [5] LC_TIME=English_Australia.1252
>
> I don't know what English_Australia.1252 does that's different from what
> I use (English_Canada.1252), but the Chinese locale setting could cause
> trouble.  Could you try setting this (presumably in the Windows control
> panel) to be consistent?  You're using a much simpler setting on Linux.
>
> Duncan Murdoch
>
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>>   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
>> tools_3.4.0
>>   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11   knitr_1.16
>> rlang_0.1.1
>> [11] fortunes_1.5-4
>> #---------------
>>
>> Linux sessionInfo:
>>
>> #---------------
>>  > sessionInfo()
>> R version 3.3.1 (2016-06-21)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>> Running under: Ubuntu 16.10
>>
>> locale:
>>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> loaded via a namespace (and not attached):
>> [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
>> #---------------
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From edd at debian.org  Sat Jun 17 17:56:05 2017
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 17 Jun 2017 10:56:05 -0500
Subject: [Rd] =?utf-8?q?R_history=3A_Why_=27L=3B_in_suffix_character?=
	=?utf-8?b?4oCYTOKAmSBmb3IgaW50ZWdlciBjb25zdGFudHM/?=
In-Reply-To: <c4bdec95-f82b-0964-d2b7-e54ee8899fb5@stats.ox.ac.uk>
References: <CAFDcVCRohsOKwzd2-8eFhD0zmR8vm-+t_5X=6FWjmL7uH5vzXA@mail.gmail.com>
 <5126a9af-49ac-8bd8-1ccc-03f5e13e2263@insa-toulouse.fr>
 <CANROs4dp_GKt0GMSX50R0h9TY7X=d87v_5pX6Tb0vg8_KmnmFQ@mail.gmail.com>
 <CAF8bMca+f_rV4qGBGNb68Atbm+Mr3t9Bv9EAPTLksBrRUyWcqg@mail.gmail.com>
 <24C37219-4592-49FB-9A27-5A7440774401@gmail.com>
 <CAF8bMcbTWdxUXEDtDA-CSmDmQg2TNPa5H-aLMBUzMEOcDPnUTQ@mail.gmail.com>
 <CAD6tx940Gxs2wjRJCXyE7J=caNFg3JsPk_wsCTJc2UxkbJ==+Q@mail.gmail.com>
 <c4bdec95-f82b-0964-d2b7-e54ee8899fb5@stats.ox.ac.uk>
Message-ID: <22853.20757.363655.620482@max.eddelbuettel.com>


On 17 June 2017 at 06:40, Prof Brian Ripley wrote:
| Also, int32_t
| 
| - postdates R (it was introduced in C99, a few OSes having it earlier)
| - is optional in the C99 and C11 standards (?7.20.1.1 in C11).

Thanks for the C99 reference. Do you happen to know when it was added to C++?

For the record, it became fairly common with C++ world in the early 'naughts'
to abstract hardware and OS sizes away when more code was going from being
used only on 32-bit OSs to also being used on 64-bit OSs.  And being able to
specify the width of integers was a big help for portable code.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Sat Jun 17 18:26:27 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sat, 17 Jun 2017 12:26:27 -0400
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
Message-ID: <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>

On 17/06/2017 9:13 AM, Ben Marwick wrote:
> Hi Duncan,
>
> Thanks for your reply. Yes, it does seem to be specific to the CTYPE
> setting to Chinese on Windows. If I set it to English using
> Sys.setlocale() there is no problem, then back to Chinese and the
> authors disappear:
>
> Sys.setlocale("LC_ALL","English")
> citation("readr")

Thanks, that makes the problem reproducible.  I'll submit it as a bug 
report.  Maybe someone from Microsoft will fix it.

Duncan Murdoch

>
> #' To cite package ?readr? in publications use:
> #'
> #'   Hadley Wickham, Jim Hester and Romain Francois (2017). readr: Read
> #' Rectangular Text Data. R package version 1.1.1.
> #' https://CRAN.R-project.org/package=readr
> #'
> #' A BibTeX entry for LaTeX users is
> #'
> #' @Manual{,
> #'   title = {readr: Read Rectangular Text Data},
> #'   author = {Hadley Wickham and Jim Hester and Romain Francois},
> #'   year = {2017},
> #'   note = {R package version 1.1.1},
> #'   url = {https://CRAN.R-project.org/package=readr},
> #' }
>
>
> Sys.setlocale("LC_CTYPE", "Chinese")
> citation("readr")
>
> #'
> #' To cite package ?readr? in publications use:
> #'
> #'   (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
> #' https://CRAN.R-project.org/package=readr
> #'
> #' A BibTeX entry for LaTeX users is
> #'
> #' @Manual{,
> #'   title = {readr: Read Rectangular Text Data},
> #'   year = {2017},
> #'   note = {R package version 1.1.1},
> #'   url = {https://CRAN.R-project.org/package=readr},
> #' }
> #'
> #' ATTENTION: This citation information has been auto-generated from the
> #' package DESCRIPTION file and may need manual editing, see
> #' ?help("citation")?.
>
> Where do we go from here? I do want to use the Chinese locale with R on
> Windows (and perhaps others do too), so switching the locale isn't a fix.
>
> Thanks,
>
> Ben
>
> On 17/06/2017 10:36 PM, Duncan Murdoch wrote:
>> On 17/06/2017 7:10 AM, Ben Marwick wrote:
>>> Recently I was trying to cite a package where the authors have ?
>>> and ? in their names. I found that on Windows the citation() function
>>> did not return the authors' names at all, but on Linux there was no
>>> problem (sessionInfos at the bottom):
>>>
>>> On Windows, no author names are returned:
>>
>> I'm not seeing this.  You have fairly strange localization settings; see
>> comments below.
>>
>>>
>>> #---------------
>>>
>>>  > citation("readr")
>>>
>>> To cite package ?readr? in publications use:
>>>
>>>    (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
>>>    https://CRAN.R-project.org/package=readr
>>>
>>> A BibTeX entry for LaTeX users is
>>>
>>>    @Manual{,
>>>      title = {readr: Read Rectangular Text Data},
>>>      year = {2017},
>>>      note = {R package version 1.1.1},
>>>      url = {https://CRAN.R-project.org/package=readr},
>>>    }
>>>
>>> ATTENTION: This citation information has been auto-generated from the
>>> package DESCRIPTION file and may need manual editing, see
>>> ?help("citation")?.
>>> #---------------
>>>
>>> On Linux we do see the author names:
>>>
>>> #---------------
>>>  > citation("readr")
>>>
>>> To cite package ?readr? in publications use:
>>>
>>>    Hadley Wickham, Jim Hester and Romain Francois (2017). readr:
>>>    Read Rectangular Text Data. R package version 1.1.1.
>>>    https://CRAN.R-project.org/package=readr
>>>
>>> A BibTeX entry for LaTeX users is
>>>
>>>    @Manual{,
>>>      title = {readr: Read Rectangular Text Data},
>>>      author = {Hadley Wickham and Jim Hester and Romain Francois},
>>>      year = {2017},
>>>      note = {R package version 1.1.1},
>>>      url = {https://CRAN.R-project.org/package=readr},
>>>    }
>>> #---------------
>>>
>>> This appears to be an OS-dependent encoding issue. The citation function
>>> does not take an encoding argument, so it's not possible to set the
>>> encoding at the point where that function is used. The citation function
>>> working with the packageDescription function, which does have an
>>> encoding argument, but the default is not useful for Windows when there
>>> is an encoding set in the DESCRIPTION of the package (in this case
>>> UTF-8).
>>>
>>> We can set the encoding argument in packageDescription so it works in
>>> Windows to give the authors as expected, but it is very inconvenient to
>>> generate citations directly from the output of this function. So I'd
>>> like to propose a solution this problem by changing one line in the
>>> packageDescription function, like so, from:
>>>
>>> #---------------
>>> if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
>>> #---------------
>>>
>>> to:
>>>
>>> #---------------
>>> if ((missing(encoding) && Sys.getlocale("LC_CTYPE") == "C") |
>>> unname(Sys.info()['sysname']) == "Windows")
>>> #---------------
>>>
>>> If I understand correctly, that will force ASCII//TRANSLIT encoding when
>>> DESCRIPTION files are read by packageDescription() on Windows machines.
>>> The upside is that Windows users will get the authors in the package
>>> citation, unlike the current situation. The downside is that the exotic
>>> symbols in the authors' names are replaced with common ones that are
>>> similar.
>>>
>>> I think getting the citations to easily include the authors' names is
>>> pretty important, even if their names have exotic characters, so this is
>>> worth fixing. Is this edit to packageDescription the best way to solve
>>> this problem of exotic characters preventing the authors' names from
>>> showing on Windows?
>>>
>>> thanks,
>>>
>>> Ben
>>>
>>>
>>>
>>>
>>> Windows sessionInfo
>>>
>>> #---------------
>>>  > sessionInfo()
>>> R version 3.4.0 Patched (2017-05-10 r72670)
>>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>>>
>>> Matrix products: default
>>>
>>> locale:
>>> [1] LC_COLLATE=English_Australia.1252
>>> [2] LC_CTYPE=Chinese (Simplified)_People's Republic of China.936
>>> [3] LC_MONETARY=English_Australia.1252
>>> [4] LC_NUMERIC=C
>>> [5] LC_TIME=English_Australia.1252
>>
>> I don't know what English_Australia.1252 does that's different from what
>> I use (English_Canada.1252), but the Chinese locale setting could cause
>> trouble.  Could you try setting this (presumably in the Windows control
>> panel) to be consistent?  You're using a much simpler setting on Linux.
>>
>> Duncan Murdoch
>>
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> loaded via a namespace (and not attached):
>>>   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
>>> tools_3.4.0
>>>   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11   knitr_1.16
>>> rlang_0.1.1
>>> [11] fortunes_1.5-4
>>> #---------------
>>>
>>> Linux sessionInfo:
>>>
>>> #---------------
>>>  > sessionInfo()
>>> R version 3.3.1 (2016-06-21)
>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>> Running under: Ubuntu 16.10
>>>
>>> locale:
>>>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> loaded via a namespace (and not attached):
>>> [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
>>> #---------------
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From stefanML at collocations.de  Sat Jun 17 18:33:47 2017
From: stefanML at collocations.de (Stefan Evert)
Date: Sat, 17 Jun 2017 18:33:47 +0200
Subject: [Rd] dist function in R is very slow
In-Reply-To: <1603979889.162955.1497682076574@mail.yahoo.com>
References: <1603979889.162955.1497682076574.ref@mail.yahoo.com>
 <1603979889.162955.1497682076574@mail.yahoo.com>
Message-ID: <B6123356-F4A4-40E6-B3D1-BB0B3069B622@collocations.de>


> On 17 Jun 2017, at 08:47, Moshe Olshansky via R-devel <r-devel at r-project.org> wrote:
> 
> I am visualising high dimensional genomic data and for this purpose I need to compute pairwise distances between many points in a high-dimensional space (say I have a matrix of 5,000 rows and 20,000 columns, so the result is a 5,000x5,000 matrix or it's upper diagonal).Computing such thing in R takes many hours (I am doing this on a Linux server with more than 100 GB of RAM, so this is not the problem). When I write the matrix to disk, read it ans compute the distances in C, write them to the disk and read them into R it takes 10 - 15 minutes (and I did not spend much time on optimising my C code).The question is why the R function is so slow? I understand that it calls C (or C++) to compute the distance. My suspicion is that the transposed matrix is passed to C and so each time a distance between two columns of a matrix is computed, and since C stores matrices by rows it is very inefficient and causes many cache misses (my first C implementation was like this and I had to stop the run after an hour when it failed to complete).

There are two many reasons for the relatively low speed of the built-in dist() function: (i) it operates on row vectors, which leads to many cache misses because matrices are stored by column in R (as you guessed); (ii) the function takes care to handle missing values correctly, which adds a relatively expensive test and conditional branch to each iteration of the inner loop.

A faster implementation, which omits the NA test and can compute distances between column vectors, is available as dist.matrix() in the "wordspace" package.  However, it cannot be used with matrices that might contain NAs (and doesn't warn about such arguments).

If you want the best possible speed, use cosine similarity (or equivalently, angular distance).  The underlying cross product is very efficient with a suitable BLAS implementation.

Best,
Stefan

From bmarwick at uw.edu  Sun Jun 18 00:34:56 2017
From: bmarwick at uw.edu (Ben Marwick)
Date: Sun, 18 Jun 2017 08:34:56 +1000
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
Message-ID: <bac3686a-699d-2a91-08db-1858442987c5@uw.edu>

Thanks very much, I see your bug report here:
https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17291

On 18/06/2017 2:26 AM, Duncan Murdoch wrote:
> On 17/06/2017 9:13 AM, Ben Marwick wrote:
>> Hi Duncan,
>>
>> Thanks for your reply. Yes, it does seem to be specific to the CTYPE
>> setting to Chinese on Windows. If I set it to English using
>> Sys.setlocale() there is no problem, then back to Chinese and the
>> authors disappear:
>>
>> Sys.setlocale("LC_ALL","English")
>> citation("readr")
>
> Thanks, that makes the problem reproducible.  I'll submit it as a bug
> report.  Maybe someone from Microsoft will fix it.
>
> Duncan Murdoch
>
>>
>> #' To cite package ?readr? in publications use:
>> #'
>> #'   Hadley Wickham, Jim Hester and Romain Francois (2017). readr: Read
>> #' Rectangular Text Data. R package version 1.1.1.
>> #' https://CRAN.R-project.org/package=readr
>> #'
>> #' A BibTeX entry for LaTeX users is
>> #'
>> #' @Manual{,
>> #'   title = {readr: Read Rectangular Text Data},
>> #'   author = {Hadley Wickham and Jim Hester and Romain Francois},
>> #'   year = {2017},
>> #'   note = {R package version 1.1.1},
>> #'   url = {https://CRAN.R-project.org/package=readr},
>> #' }
>>
>>
>> Sys.setlocale("LC_CTYPE", "Chinese")
>> citation("readr")
>>
>> #'
>> #' To cite package ?readr? in publications use:
>> #'
>> #'   (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
>> #' https://CRAN.R-project.org/package=readr
>> #'
>> #' A BibTeX entry for LaTeX users is
>> #'
>> #' @Manual{,
>> #'   title = {readr: Read Rectangular Text Data},
>> #'   year = {2017},
>> #'   note = {R package version 1.1.1},
>> #'   url = {https://CRAN.R-project.org/package=readr},
>> #' }
>> #'
>> #' ATTENTION: This citation information has been auto-generated from the
>> #' package DESCRIPTION file and may need manual editing, see
>> #' ?help("citation")?.
>>
>> Where do we go from here? I do want to use the Chinese locale with R on
>> Windows (and perhaps others do too), so switching the locale isn't a fix.
>>
>> Thanks,
>>
>> Ben
>>
>> On 17/06/2017 10:36 PM, Duncan Murdoch wrote:
>>> On 17/06/2017 7:10 AM, Ben Marwick wrote:
>>>> Recently I was trying to cite a package where the authors have ?
>>>> and ? in their names. I found that on Windows the citation() function
>>>> did not return the authors' names at all, but on Linux there was no
>>>> problem (sessionInfos at the bottom):
>>>>
>>>> On Windows, no author names are returned:
>>>
>>> I'm not seeing this.  You have fairly strange localization settings; see
>>> comments below.
>>>
>>>>
>>>> #---------------
>>>>
>>>>  > citation("readr")
>>>>
>>>> To cite package ?readr? in publications use:
>>>>
>>>>    (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
>>>>    https://CRAN.R-project.org/package=readr
>>>>
>>>> A BibTeX entry for LaTeX users is
>>>>
>>>>    @Manual{,
>>>>      title = {readr: Read Rectangular Text Data},
>>>>      year = {2017},
>>>>      note = {R package version 1.1.1},
>>>>      url = {https://CRAN.R-project.org/package=readr},
>>>>    }
>>>>
>>>> ATTENTION: This citation information has been auto-generated from the
>>>> package DESCRIPTION file and may need manual editing, see
>>>> ?help("citation")?.
>>>> #---------------
>>>>
>>>> On Linux we do see the author names:
>>>>
>>>> #---------------
>>>>  > citation("readr")
>>>>
>>>> To cite package ?readr? in publications use:
>>>>
>>>>    Hadley Wickham, Jim Hester and Romain Francois (2017). readr:
>>>>    Read Rectangular Text Data. R package version 1.1.1.
>>>>    https://CRAN.R-project.org/package=readr
>>>>
>>>> A BibTeX entry for LaTeX users is
>>>>
>>>>    @Manual{,
>>>>      title = {readr: Read Rectangular Text Data},
>>>>      author = {Hadley Wickham and Jim Hester and Romain Francois},
>>>>      year = {2017},
>>>>      note = {R package version 1.1.1},
>>>>      url = {https://CRAN.R-project.org/package=readr},
>>>>    }
>>>> #---------------
>>>>
>>>> This appears to be an OS-dependent encoding issue. The citation
>>>> function
>>>> does not take an encoding argument, so it's not possible to set the
>>>> encoding at the point where that function is used. The citation
>>>> function
>>>> working with the packageDescription function, which does have an
>>>> encoding argument, but the default is not useful for Windows when there
>>>> is an encoding set in the DESCRIPTION of the package (in this case
>>>> UTF-8).
>>>>
>>>> We can set the encoding argument in packageDescription so it works in
>>>> Windows to give the authors as expected, but it is very inconvenient to
>>>> generate citations directly from the output of this function. So I'd
>>>> like to propose a solution this problem by changing one line in the
>>>> packageDescription function, like so, from:
>>>>
>>>> #---------------
>>>> if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
>>>> #---------------
>>>>
>>>> to:
>>>>
>>>> #---------------
>>>> if ((missing(encoding) && Sys.getlocale("LC_CTYPE") == "C") |
>>>> unname(Sys.info()['sysname']) == "Windows")
>>>> #---------------
>>>>
>>>> If I understand correctly, that will force ASCII//TRANSLIT encoding
>>>> when
>>>> DESCRIPTION files are read by packageDescription() on Windows machines.
>>>> The upside is that Windows users will get the authors in the package
>>>> citation, unlike the current situation. The downside is that the exotic
>>>> symbols in the authors' names are replaced with common ones that are
>>>> similar.
>>>>
>>>> I think getting the citations to easily include the authors' names is
>>>> pretty important, even if their names have exotic characters, so
>>>> this is
>>>> worth fixing. Is this edit to packageDescription the best way to solve
>>>> this problem of exotic characters preventing the authors' names from
>>>> showing on Windows?
>>>>
>>>> thanks,
>>>>
>>>> Ben
>>>>
>>>>
>>>>
>>>>
>>>> Windows sessionInfo
>>>>
>>>> #---------------
>>>>  > sessionInfo()
>>>> R version 3.4.0 Patched (2017-05-10 r72670)
>>>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>>>>
>>>> Matrix products: default
>>>>
>>>> locale:
>>>> [1] LC_COLLATE=English_Australia.1252
>>>> [2] LC_CTYPE=Chinese (Simplified)_People's Republic of China.936
>>>> [3] LC_MONETARY=English_Australia.1252
>>>> [4] LC_NUMERIC=C
>>>> [5] LC_TIME=English_Australia.1252
>>>
>>> I don't know what English_Australia.1252 does that's different from what
>>> I use (English_Canada.1252), but the Chinese locale setting could cause
>>> trouble.  Could you try setting this (presumably in the Windows control
>>> panel) to be consistent?  You're using a much simpler setting on Linux.
>>>
>>> Duncan Murdoch
>>>
>>>>
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>
>>>> loaded via a namespace (and not attached):
>>>>   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
>>>> tools_3.4.0
>>>>   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11   knitr_1.16
>>>> rlang_0.1.1
>>>> [11] fortunes_1.5-4
>>>> #---------------
>>>>
>>>> Linux sessionInfo:
>>>>
>>>> #---------------
>>>>  > sessionInfo()
>>>> R version 3.3.1 (2016-06-21)
>>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>> Running under: Ubuntu 16.10
>>>>
>>>> locale:
>>>>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>>>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>>>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>>>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>>>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>>>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>>>
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>
>>>> loaded via a namespace (and not attached):
>>>> [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
>>>> #---------------
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From selivanov.dmitriy at gmail.com  Sat Jun 17 21:58:54 2017
From: selivanov.dmitriy at gmail.com (Dmitriy Selivanov)
Date: Sat, 17 Jun 2017 23:58:54 +0400
Subject: [Rd] Issue with memory deallocation/fragmentation on systems which
	use glibc
Message-ID: <CAJdZCv1R9KZ7d2xq4chcOm7Xkdrzx7TXtZ52ZoC0b=WPEF+6HA@mail.gmail.com>

Hello mailing list. I'm writing to discuss issue which was already
discussed here - https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=14611
- OS doesn't shrink memory of the process. Thanks to Simon Urbanek for
digging and explanation.

However it was quite hard to find this topic after I've discovered same
problem on my Ubuntu machine (and I scratched my head because there were no
such problem on my laptop running on OS X!).

So I'm not sure that such problem can be ignored.
Consider following examples - we will create large list with many small
objects (code which contains fully reproducible example here -
https://gist.github.com/dselivanov/d2ff0435a352424d2c7329d918293946):

large_list = lapply(1:1e6, function(i) {
  runif(100)
})
rm(large_list)
gc()

After that on OS X *resident memory* memory successfully shrinks to ~
100mb, but on Ubuntu is remains at ~ 1gb. I understand that this 1gb of ram
can be (and will be) reused for allocations of new small objects. So if I
will run same lapply again, process memory will stay ~ 1gb. However if
after that I will try to create large numeric vector, R will allocate
another continuous chunk of memory. And I had situations when my
long-running R process created and deleted many small objects so R heap
memory continued to grow. And eventually linux OOM killler killed R
process. On other side same code worked fine on OS X or if I manually time
to time called `mallinfo::malloc.trim()`.

My question is whether it is possible to call `malloc_trim()` with each
call of garbage collection on systems which use glibc? Calling it manually
doesn't look like good approach for me. What are potential drawbacks of
triggering `malloc_trim()` for each gc() call? I've made some tests and
such calls are not longer than single digit millisecond for very memory
fragmented .

Thanks in advance.


-- 
Regards
Dmitriy Selivanov

	[[alternative HTML version deleted]]


From m_olshansky at yahoo.com  Sun Jun 18 05:55:23 2017
From: m_olshansky at yahoo.com (Moshe Olshansky)
Date: Sun, 18 Jun 2017 03:55:23 +0000 (UTC)
Subject: [Rd] dist function in R is very slow
References: <613430575.595899.1497758123072.ref@mail.yahoo.com>
Message-ID: <613430575.595899.1497758123072@mail.yahoo.com>

Hi Stefan,
Thank you very much for pointing me to the wordspace package. It does the job a bit faster than my C code but is 100 times more convenient.
By the way, since the tcrossprod function in the Matrix package is so fast, the Euclidean distance can be computed very fast:
euc_dist <- function(m) {mtm <- Matrix::tcrossprod(m); sq <- rowSums(m*m);? sqrt(outer(sq,sq,"+") - 2*mtm)}
It takes less than 50 seconds for my (dense) matrix of 5,054 rows and 12,803 columns, while dist.matrix with method="euclidean" takes almost 10 minutes (which is still orders of magnitude faster than dist).


      From: Stefan Evert <stefanML at collocations.de>
 To: Moshe Olshansky <m_olshansky at yahoo.com> 
Cc: R-devel Mailing List <r-devel at r-project.org>
 Sent: Sunday, 18 June 2017, 2:33
 Subject: Re: [Rd] dist function in R is very slow
  

> On 17 Jun 2017, at 08:47, Moshe Olshansky via R-devel <r-devel at r-project.org> wrote:
> 
> I am visualising high dimensional genomic data and for this purpose I need to compute pairwise distances between many points in a high-dimensional space (say I have a matrix of 5,000 rows and 20,000 columns, so the result is a 5,000x5,000 matrix or it's upper diagonal).Computing such thing in R takes many hours (I am doing this on a Linux server with more than 100 GB of RAM, so this is not the problem). When I write the matrix to disk, read it ans compute the distances in C, write them to the disk and read them into R it takes 10 - 15 minutes (and I did not spend much time on optimising my C code).The question is why the R function is so slow? I understand that it calls C (or C++) to compute the distance. My suspicion is that the transposed matrix is passed to C and so each time a distance between two columns of a matrix is computed, and since C stores matrices by rows it is very inefficient and causes many cache misses (my first C implementation was like this and I had to stop the run after an hour when it failed to complete).

There are two many reasons for the relatively low speed of the built-in dist() function: (i) it operates on row vectors, which leads to many cache misses because matrices are stored by column in R (as you guessed); (ii) the function takes care to handle missing values correctly, which adds a relatively expensive test and conditional branch to each iteration of the inner loop.

A faster implementation, which omits the NA test and can compute distances between column vectors, is available as dist.matrix() in the "wordspace" package.? However, it cannot be used with matrices that might contain NAs (and doesn't warn about such arguments).

If you want the best possible speed, use cosine similarity (or equivalently, angular distance).? The underlying cross product is very efficient with a suitable BLAS implementation.

Best,
Stefan

   
	[[alternative HTML version deleted]]


From apdevries at gmail.com  Sun Jun 18 11:57:08 2017
From: apdevries at gmail.com (Andrie de Vries)
Date: Sun, 18 Jun 2017 15:27:08 +0530
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
Message-ID: <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>

Hi, Duncan

i have forwarded this thread to Nathan, who promised to look into it.

Andrie

On 17 Jun 2017 17:26, "Duncan Murdoch" <murdoch.duncan at gmail.com> wrote:

> On 17/06/2017 9:13 AM, Ben Marwick wrote:
>
>> Hi Duncan,
>>
>> Thanks for your reply. Yes, it does seem to be specific to the CTYPE
>> setting to Chinese on Windows. If I set it to English using
>> Sys.setlocale() there is no problem, then back to Chinese and the
>> authors disappear:
>>
>> Sys.setlocale("LC_ALL","English")
>> citation("readr")
>>
>
> Thanks, that makes the problem reproducible.  I'll submit it as a bug
> report.  Maybe someone from Microsoft will fix it.
>
> Duncan Murdoch
>
>
>> #' To cite package ?readr? in publications use:
>> #'
>> #'   Hadley Wickham, Jim Hester and Romain Francois (2017). readr: Read
>> #' Rectangular Text Data. R package version 1.1.1.
>> #' https://CRAN.R-project.org/package=readr
>> #'
>> #' A BibTeX entry for LaTeX users is
>> #'
>> #' @Manual{,
>> #'   title = {readr: Read Rectangular Text Data},
>> #'   author = {Hadley Wickham and Jim Hester and Romain Francois},
>> #'   year = {2017},
>> #'   note = {R package version 1.1.1},
>> #'   url = {https://CRAN.R-project.org/package=readr},
>> #' }
>>
>>
>> Sys.setlocale("LC_CTYPE", "Chinese")
>> citation("readr")
>>
>> #'
>> #' To cite package ?readr? in publications use:
>> #'
>> #'   (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
>> #' https://CRAN.R-project.org/package=readr
>> #'
>> #' A BibTeX entry for LaTeX users is
>> #'
>> #' @Manual{,
>> #'   title = {readr: Read Rectangular Text Data},
>> #'   year = {2017},
>> #'   note = {R package version 1.1.1},
>> #'   url = {https://CRAN.R-project.org/package=readr},
>> #' }
>> #'
>> #' ATTENTION: This citation information has been auto-generated from the
>> #' package DESCRIPTION file and may need manual editing, see
>> #' ?help("citation")?.
>>
>> Where do we go from here? I do want to use the Chinese locale with R on
>> Windows (and perhaps others do too), so switching the locale isn't a fix.
>>
>> Thanks,
>>
>> Ben
>>
>> On 17/06/2017 10:36 PM, Duncan Murdoch wrote:
>>
>>> On 17/06/2017 7:10 AM, Ben Marwick wrote:
>>>
>>>> Recently I was trying to cite a package where the authors have ?
>>>> and ? in their names. I found that on Windows the citation() function
>>>> did not return the authors' names at all, but on Linux there was no
>>>> problem (sessionInfos at the bottom):
>>>>
>>>> On Windows, no author names are returned:
>>>>
>>>
>>> I'm not seeing this.  You have fairly strange localization settings; see
>>> comments below.
>>>
>>>
>>>> #---------------
>>>>
>>>>  > citation("readr")
>>>>
>>>> To cite package ?readr? in publications use:
>>>>
>>>>    (2017). readr: Read Rectangular Text Data. R package version 1.1.1.
>>>>    https://CRAN.R-project.org/package=readr
>>>>
>>>> A BibTeX entry for LaTeX users is
>>>>
>>>>    @Manual{,
>>>>      title = {readr: Read Rectangular Text Data},
>>>>      year = {2017},
>>>>      note = {R package version 1.1.1},
>>>>      url = {https://CRAN.R-project.org/package=readr},
>>>>    }
>>>>
>>>> ATTENTION: This citation information has been auto-generated from the
>>>> package DESCRIPTION file and may need manual editing, see
>>>> ?help("citation")?.
>>>> #---------------
>>>>
>>>> On Linux we do see the author names:
>>>>
>>>> #---------------
>>>>  > citation("readr")
>>>>
>>>> To cite package ?readr? in publications use:
>>>>
>>>>    Hadley Wickham, Jim Hester and Romain Francois (2017). readr:
>>>>    Read Rectangular Text Data. R package version 1.1.1.
>>>>    https://CRAN.R-project.org/package=readr
>>>>
>>>> A BibTeX entry for LaTeX users is
>>>>
>>>>    @Manual{,
>>>>      title = {readr: Read Rectangular Text Data},
>>>>      author = {Hadley Wickham and Jim Hester and Romain Francois},
>>>>      year = {2017},
>>>>      note = {R package version 1.1.1},
>>>>      url = {https://CRAN.R-project.org/package=readr},
>>>>    }
>>>> #---------------
>>>>
>>>> This appears to be an OS-dependent encoding issue. The citation function
>>>> does not take an encoding argument, so it's not possible to set the
>>>> encoding at the point where that function is used. The citation function
>>>> working with the packageDescription function, which does have an
>>>> encoding argument, but the default is not useful for Windows when there
>>>> is an encoding set in the DESCRIPTION of the package (in this case
>>>> UTF-8).
>>>>
>>>> We can set the encoding argument in packageDescription so it works in
>>>> Windows to give the authors as expected, but it is very inconvenient to
>>>> generate citations directly from the output of this function. So I'd
>>>> like to propose a solution this problem by changing one line in the
>>>> packageDescription function, like so, from:
>>>>
>>>> #---------------
>>>> if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
>>>> #---------------
>>>>
>>>> to:
>>>>
>>>> #---------------
>>>> if ((missing(encoding) && Sys.getlocale("LC_CTYPE") == "C") |
>>>> unname(Sys.info()['sysname']) == "Windows")
>>>> #---------------
>>>>
>>>> If I understand correctly, that will force ASCII//TRANSLIT encoding when
>>>> DESCRIPTION files are read by packageDescription() on Windows machines.
>>>> The upside is that Windows users will get the authors in the package
>>>> citation, unlike the current situation. The downside is that the exotic
>>>> symbols in the authors' names are replaced with common ones that are
>>>> similar.
>>>>
>>>> I think getting the citations to easily include the authors' names is
>>>> pretty important, even if their names have exotic characters, so this is
>>>> worth fixing. Is this edit to packageDescription the best way to solve
>>>> this problem of exotic characters preventing the authors' names from
>>>> showing on Windows?
>>>>
>>>> thanks,
>>>>
>>>> Ben
>>>>
>>>>
>>>>
>>>>
>>>> Windows sessionInfo
>>>>
>>>> #---------------
>>>>  > sessionInfo()
>>>> R version 3.4.0 Patched (2017-05-10 r72670)
>>>> Platform: x86_64-w64-mingw32/x64 (64-bit)
>>>> Running under: Windows 7 x64 (build 7601) Service Pack 1
>>>>
>>>> Matrix products: default
>>>>
>>>> locale:
>>>> [1] LC_COLLATE=English_Australia.1252
>>>> [2] LC_CTYPE=Chinese (Simplified)_People's Republic of China.936
>>>> [3] LC_MONETARY=English_Australia.1252
>>>> [4] LC_NUMERIC=C
>>>> [5] LC_TIME=English_Australia.1252
>>>>
>>>
>>> I don't know what English_Australia.1252 does that's different from what
>>> I use (English_Canada.1252), but the Chinese locale setting could cause
>>> trouble.  Could you try setting this (presumably in the Windows control
>>> panel) to be consistent?  You're using a much simpler setting on Linux.
>>>
>>> Duncan Murdoch
>>>
>>>
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>
>>>> loaded via a namespace (and not attached):
>>>>   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
>>>> tools_3.4.0
>>>>   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11   knitr_1.16
>>>> rlang_0.1.1
>>>> [11] fortunes_1.5-4
>>>> #---------------
>>>>
>>>> Linux sessionInfo:
>>>>
>>>> #---------------
>>>>  > sessionInfo()
>>>> R version 3.3.1 (2016-06-21)
>>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>> Running under: Ubuntu 16.10
>>>>
>>>> locale:
>>>>   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>>>>   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>>>>   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>>>>   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>>>>   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>>>> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>>>>
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>
>>>> loaded via a namespace (and not attached):
>>>> [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
>>>> #---------------
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>
>>>>
>>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>

	[[alternative HTML version deleted]]


From jens.oehlschlaegel at truecluster.com  Sun Jun 18 12:34:11 2017
From: jens.oehlschlaegel at truecluster.com (=?UTF-8?Q?=22Jens_Oehlschl=C3=A4gel=22?=)
Date: Sun, 18 Jun 2017 12:34:11 +0200
Subject: [Rd] 'ordered' destroyed to 'factor'
In-Reply-To: <77AA9D07-5621-44CC-8A72-D41F98186AB6@gmail.com>
References: <trinity-35849798-65be-4033-aa6e-d006a5defe16-1497618225192@3capp-webde-bs21>
 <30D28A63376088428E8318DD67FD407F78BCE6@ny-mailstore1.walleyetrading.net>
 <77AA9D07-5621-44CC-8A72-D41F98186AB6@gmail.com>
Message-ID: <trinity-d2d5de82-e325-4875-a3c0-4f971f3cda64-1497782051901@3capp-webde-bap27>

Defending the status quo misses the point that R *could* handle ordinal data with a fixed set of levels but actually *does not*. Although it would be useful. Even if this does not imply to handle any possible straw-man situations. Having data-types for nominal, ordinal, and interval-scale data is - in theory - one of the major advantages of S over SAS. But *having* without *handling* means: only in theory, not in practice. Has r-devel really lost the momentum for continuous improvement, to converge R to an optimum? I struggle to recognize the project I loved in 2000.
?

Gesendet:?Freitag, 16. Juni 2017 um 18:31 Uhr
Von:?"peter dalgaard" <pdalgd at gmail.com>
An:?"Robert McGehee" <rmcgehee at walleyetrading.net>
Cc:?"Jens Oehlschl?gel" <jens.oehlschlaegel at truecluster.com>, "r-devel at r-project.org" <r-devel at r-project.org>
Betreff:?Re: [Rd] 'ordered' destroyed to 'factor'
> On 16 Jun 2017, at 15:59 , Robert McGehee <rmcgehee at walleyetrading.net> wrote:
>
> For instance, what would you expect to get from unlist() if each element of the list had different levels, or were both ordered, but in a different way, or if some elements of the list were factors and others were ordered factors?
>> unlist(list(ordered(c("a","b")), ordered(c("b","a"))))
> [1] ?

Those actually have the same levels in the same order: a < b

Possibly, this brings the point home more clearly

unlist(list(ordered(c("a","c")), ordered(c("b","d"))))

(Notice that alphabetical order is largely irrelevant, so all of these level orderings are equally possible:

a < c < b < d
a < b < c < d
a < b < d < c
b < a < c < d
b < a < d < c
b < d < a < c

).

-pd
--
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk Priv: PDalgd at gmail.com








?


From jorismeys at gmail.com  Sun Jun 18 12:49:41 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Sun, 18 Jun 2017 12:49:41 +0200
Subject: [Rd] 'ordered' destroyed to 'factor'
In-Reply-To: <trinity-d2d5de82-e325-4875-a3c0-4f971f3cda64-1497782051901@3capp-webde-bap27>
References: <trinity-35849798-65be-4033-aa6e-d006a5defe16-1497618225192@3capp-webde-bs21>
 <30D28A63376088428E8318DD67FD407F78BCE6@ny-mailstore1.walleyetrading.net>
 <77AA9D07-5621-44CC-8A72-D41F98186AB6@gmail.com>
 <trinity-d2d5de82-e325-4875-a3c0-4f971f3cda64-1497782051901@3capp-webde-bap27>
Message-ID: <CAO1zAVYmpj5M=-JRP=-kc=jOy826JqsUnLpYrkJ0BHFnHfsH=w@mail.gmail.com>

Dear Jens,

multiple people have given you multiple reasons as to why your request
cannot be implemented for basic logical reasons. You also got a workaround
for the special case where all factors have all the same levels in exactly
the same order.

If you believe it's possible to implement this in a way that doesn't break
anything else, please give at least an algorithm that explains HOW R should
do this, and possibly provide a patch. If you fail to do either of them,
it's rather ungrateful to piss on the very people that devote tons of FREE
time to the development of something you're using 17 years now.

And for the record: R handles ordinal data pretty well thank you very much.
Maybe after 17 years, you could do the effort of taking a look at
options("contrasts"). Let it be an eye-opener.

On Sun, Jun 18, 2017 at 12:34 PM, "Jens Oehlschl?gel" <
jens.oehlschlaegel at truecluster.com> wrote:

> Defending the status quo misses the point that R *could* handle ordinal
> data with a fixed set of levels but actually *does not*. Although it would
> be useful. Even if this does not imply to handle any possible straw-man
> situations. Having data-types for nominal, ordinal, and interval-scale data
> is - in theory - one of the major advantages of S over SAS. But *having*
> without *handling* means: only in theory, not in practice. Has r-devel
> really lost the momentum for continuous improvement, to converge R to an
> optimum? I struggle to recognize the project I loved in 2000.
>
>
> Gesendet: Freitag, 16. Juni 2017 um 18:31 Uhr
> Von: "peter dalgaard" <pdalgd at gmail.com>
> An: "Robert McGehee" <rmcgehee at walleyetrading.net>
> Cc: "Jens Oehlschl?gel" <jens.oehlschlaegel at truecluster.com>, "
> r-devel at r-project.org" <r-devel at r-project.org>
> Betreff: Re: [Rd] 'ordered' destroyed to 'factor'
> > On 16 Jun 2017, at 15:59 , Robert McGehee <rmcgehee at walleyetrading.net>
> wrote:
> >
> > For instance, what would you expect to get from unlist() if each element
> of the list had different levels, or were both ordered, but in a different
> way, or if some elements of the list were factors and others were ordered
> factors?
> >> unlist(list(ordered(c("a","b")), ordered(c("b","a"))))
> > [1] ?
>
> Those actually have the same levels in the same order: a < b
>
> Possibly, this brings the point home more clearly
>
> unlist(list(ordered(c("a","c")), ordered(c("b","d"))))
>
> (Notice that alphabetical order is largely irrelevant, so all of these
> level orderings are equally possible:
>
> a < c < b < d
> a < b < c < d
> a < b < d < c
> b < a < c < d
> b < a < d < c
> b < d < a < c
>
> ).
>
> -pd
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk Priv: PDalgd at gmail.com
>
>
>
>
>
>
>
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>



-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From stefanML at collocations.de  Sun Jun 18 18:23:20 2017
From: stefanML at collocations.de (Stefan Evert)
Date: Sun, 18 Jun 2017 18:23:20 +0200
Subject: [Rd] dist function in R is very slow
In-Reply-To: <613430575.595899.1497758123072@mail.yahoo.com>
References: <613430575.595899.1497758123072.ref@mail.yahoo.com>
 <613430575.595899.1497758123072@mail.yahoo.com>
Message-ID: <AF85C2A2-A7C4-4CFB-9E19-F9DE79718D53@collocations.de>


> By the way, since the tcrossprod function in the Matrix package is so fast, the Euclidean distance can be computed very fast:

Indeed.

> euc_dist <- function(m) {mtm <- Matrix::tcrossprod(m); sq <- rowSums(m*m);  sqrt(outer(sq,sq,"+") - 2*mtm)}

There are two reasons why I didn't use this optimization in "wordspace":

1) It can be inaccurate for small distances between vectors of large Euclidean length because of loss of significance in the subtraction step.  This is not just a theoretical concern ? I've seen data sets were this became a real problem.

2) It incurs substantial memory overhead for a large distance matrix. Your code allocates at least five matrices of this size: outer(?), mtm, 2 * mtm, outer(?) - 2*mtm, and the final result obtained by taking the square root.  [Actually, there is additional overhead for m*m (an even larger matrix) when computing the Euclidean norms, but this could be avoided with sq <- rowNorms(m, method="euclidean").]

I am usually more concerned about RAM than raw processing speed, so the package was designed to keep memory overhead as low as possible and allow users to work with realistic data sets on ordinary laptop computers.


> It takes less than 50 seconds for my (dense) matrix of 5,054 rows and 12,803 columns, while dist.matrix with method="euclidean" takes almost 10 minutes (which is still orders of magnitude faster than dist).

It's a little disappointing that dist.matrix() is still relatively slow despite all simplifications and better cache consistency (the function automatically transposes the input matrix and computes distances by columns rather than rows).  I'm a little surprised about your timing, though.  Testing with a random 5000 x 20000 matrix, my MacBook computers the full Euclidean distance matrix in about 5 minutes.  

If your machine (and version of R) supports OpenMP, you can improve performance by allowing multithreading with wordspace.openmp(threads=<n>).  In my test case, I get a 2.2x speed-up with 4 threads (2m 15s instead of 5m).


Best wishes,
Stefan

From m_olshansky at yahoo.com  Mon Jun 19 08:11:19 2017
From: m_olshansky at yahoo.com (Moshe Olshansky)
Date: Mon, 19 Jun 2017 06:11:19 +0000 (UTC)
Subject: [Rd] dist function in R is very slow
In-Reply-To: <AF85C2A2-A7C4-4CFB-9E19-F9DE79718D53@collocations.de>
References: <613430575.595899.1497758123072.ref@mail.yahoo.com>
 <613430575.595899.1497758123072@mail.yahoo.com>
 <AF85C2A2-A7C4-4CFB-9E19-F9DE79718D53@collocations.de>
Message-ID: <234541863.1150800.1497852679885@mail.yahoo.com>

Hi Stefan,
You are right about the possible loss of accuracy computing the Euclidean distance the way I did. In some cases you probably even can get a negative value to compute a square root (so I am making all negative numbers 0). To do what I did one must know that it is all right in their case.I tried wordspace.openmp wuth 8 threads and it reduces the time to just over 2.5 minutes. This is more than enough for me.I am not sure whether you have any chance to beat the speed of (t)crossprod since they may be using a (complexity-wise) faster algorithm for matrix multiplication (may be with FFT - I am not sure).
Once again, thank you very much for your comments and help.



      From: Stefan Evert <stefanML at collocations.de>
 To: Moshe Olshansky <m_olshansky at yahoo.com> 
Cc: R-devel Mailing List <r-devel at r-project.org>
 Sent: Monday, 19 June 2017, 2:23
 Subject: Re: [Rd] dist function in R is very slow
   

> By the way, since the tcrossprod function in the Matrix package is so fast, the Euclidean distance can be computed very fast:

Indeed.

> euc_dist <- function(m) {mtm <- Matrix::tcrossprod(m); sq <- rowSums(m*m);? sqrt(outer(sq,sq,"+") - 2*mtm)}

There are two reasons why I didn't use this optimization in "wordspace":

1) It can be inaccurate for small distances between vectors of large Euclidean length because of loss of significance in the subtraction step.? This is not just a theoretical concern ? I've seen data sets were this became a real problem.

2) It incurs substantial memory overhead for a large distance matrix. Your code allocates at least five matrices of this size: outer(?), mtm, 2 * mtm, outer(?) - 2*mtm, and the final result obtained by taking the square root.? [Actually, there is additional overhead for m*m (an even larger matrix) when computing the Euclidean norms, but this could be avoided with sq <- rowNorms(m, method="euclidean").]

I am usually more concerned about RAM than raw processing speed, so the package was designed to keep memory overhead as low as possible and allow users to work with realistic data sets on ordinary laptop computers.


> It takes less than 50 seconds for my (dense) matrix of 5,054 rows and 12,803 columns, while dist.matrix with method="euclidean" takes almost 10 minutes (which is still orders of magnitude faster than dist).

It's a little disappointing that dist.matrix() is still relatively slow despite all simplifications and better cache consistency (the function automatically transposes the input matrix and computes distances by columns rather than rows).? I'm a little surprised about your timing, though.? Testing with a random 5000 x 20000 matrix, my MacBook computers the full Euclidean distance matrix in about 5 minutes.? 

If your machine (and version of R) supports OpenMP, you can improve performance by allowing multithreading with wordspace.openmp(threads=<n>).? In my test case, I get a 2.2x speed-up with 4 threads (2m 15s instead of 5m).


Best wishes,
Stefan

   
	[[alternative HTML version deleted]]


From hugh.parsonage at gmail.com  Mon Jun 19 13:50:52 2017
From: hugh.parsonage at gmail.com (Hugh Parsonage)
Date: Mon, 19 Jun 2017 11:50:52 +0000
Subject: [Rd] \U or \L perl regex in gsub removes text outside capturing
 group in UTF-8 contexts
Message-ID: <CAJmOi+O7kSNDBB_tvz8z-jddyxbsXMP1u2eXk+Z-hXM2r58RCg@mail.gmail.com>

I write to clarify the status of \U and \L when used in the replacement
argument to gsub in R 3.5.0. The behaviour of gsub appears to have changed
from R 3.4.0, but the documentation for the replacement argument has not.


## Reprex (A call to readLines is essential. A url is provided for
convenience but the behaviour should reproduce for local files)


bib <- readLines("
https://raw.githubusercontent.com/HughParsonage/TeXCheckR/master/tests/testthat/lint_bib_in.bib",
encoding = "UTF-8", n = 10)
bib8910 <- bib[8:10]
gsub("(\\w+)", "\\U\\1", bib8910, perl = TRUE)


#> [1] "@TECHREPORT" " AUTHOR" " TITLE"


Expected result (in R 3.4.0):


#> [1] "@TECHREPORT{WOODHUNTEROTOOLEETAL2012,"
#> [2] " AUTHOR = {TONY WOOD AND AM?LIE HUNTER AND MICHAEL O'TOOLE AND
PRASANA VENKATARAMAN AND LUCY CARTER},"
#> [3] " TITLE = {PUTTING THE CUSTOMER BACK IN FRONT: HOW TO MAKE
ELECTRICITY CHEAPER},"


## Likely point of breaking change
I was alerted on June 13 by Kurt Hornik that my package (TeXCheckR), which
had previously been accepted on CRAN, was ERRORing, as a unit test relies
on \L.




## sessionInfo()

R Under development (unstable) (2017-06-19 r72808)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 14393)


Matrix products: default


locale:
[1] LC_COLLATE=English_Australia.1252 LC_CTYPE=English_Australia.1252
[3] LC_MONETARY=English_Australia.1252 LC_NUMERIC=C
[5] LC_TIME=English_Australia.1252


attached base packages:
[1] stats graphics grDevices utils datasets methods base


loaded via a namespace (and not attached):
[1] compiler_3.5.0






Many thanks,




Hugh Parsonage
Associate, Grattan Institute, Melbourne, AU

	[[alternative HTML version deleted]]


From agower at bu.edu  Mon Jun 19 17:55:57 2017
From: agower at bu.edu (Gower, Adam)
Date: Mon, 19 Jun 2017 15:55:57 +0000
Subject: [Rd] Bug report for sealClass() in Core-maintained package "methods"
Message-ID: <CY1PR0301MB1548F3023902C5C55A43B57ABEC40@CY1PR0301MB1548.namprd03.prod.outlook.com>

Hello,

I have found that I cannot use sealClass() without specifying the 'where' argument.
I have found this issue in R 3.2.3 and R 3.4.0.
For example:
> setClass("foo", slots=c(name="character", age="integer"))
> isSealedClass("foo")
[1] FALSE
> sealClass("foo")
Error in list2env(list(<environment>), NULL, <environment>) :
  names(x) must be a character vector of the same length as x
> isSealedClass("foo")
[1] FALSE
> sealClass("foo", where=.GlobalEnv)
> isSealedClass("foo")
[1] TRUE

I found that this is because sealClass() includes the following line:
if (missing(where)) where <- findClass(Class, unique = "sealing the class", where = where)

Because findClass() always returns a list (even if argument 'unique' contains a character string), this assigns a list of length 1 to variable 'where'.
This then throws an error in the subsequent line
assignClassDef(Class, classDef, where)

For this reason, the abovementioned line should instead read:
if (missing(where)) where <- findClass(Class, unique = "sealing the class", where = where)[[1]]

Thanks very much,
Adam Gower
agower at bu.edu<mailto:agower at bu.edu>


	[[alternative HTML version deleted]]


From pauljohn32 at gmail.com  Mon Jun 19 21:34:43 2017
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Mon, 19 Jun 2017 14:34:43 -0500
Subject: [Rd] Rmpi, openMPI editions.
Message-ID: <CAErODj-Btn4868SPftMKSUyFO3SZ6tRwvdqb5r+hkTCL+kJGNQ@mail.gmail.com>

Greetings.

I see a warning message while compiling OpenMPI and would appreciate
it if you tell me what it means.

This warning happens with any OpenMPI > 1.6.5.  Even before starting a
cluster, just "sessionInfo" triggers this warning.

I'm pasting in the message from R-3.3.2 (this is MRO).

Do the R parallel package cluster functions violate the warnings described here?

> library("Rmpi")
> sessionInfo()
--------------------------------------------------------------------------
An MPI process has executed an operation involving a call to the
"fork()" system call to create a child process.  Open MPI is currently
operating in a condition that could result in memory corruption or
other system errors; your MPI job may hang, crash, or produce silent
data corruption.  The use of fork() (or system() or other calls that
create child processes) is strongly discouraged.

The process that invoked fork was:

  Local host:          n401 (PID 114242)
  MPI_COMM_WORLD rank: 0

If you are *absolutely sure* that your application will successfully
and correctly survive a call to fork(), you may disable this warning
by setting the mpi_warn_on_fork MCA parameter to 0.
--------------------------------------------------------------------------
R version 3.3.2 (2016-10-31)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux Server release 6.4 (Santiago)

locale:
[1] C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] Rmpi_0.6-6           RevoUtilsMath_10.0.0

loaded via a namespace (and not attached):
[1] RevoUtils_10.0.2 parallel_3.3.2   tools_3.3.2
>

What I think this means is that we need to never run any multicore
functions and we need to be very careful that MKL or such does not
launch threads.  Is that right? Is it worse than that?

Why am I chasing this one today?

I've been on an adventure compiling R in a RedHat 6 cluster again. The
cluster admins here like the Microsoft R, and they had both 3.3 and
3.4 installed. However, we found some packaging flaws in 3.4 and so
that MRO was removed. I'm interested in building R-3.4, but it is a
pretty big job on the old RedHat.  I want to get this correct.

I've run into the problem I'd forgotten about OpenMPI. If OpenMPI >=
2, then Rmpi will compile, but jobs hang with "stopCluster".  With
OpenMPI-1.6.5, we get a clean build and no warnings, and clusters do
start and stop cleanly.  With newer version 1 editions of OpenMPI,
such as 1.10 or 1.12 (I suspect any versions (> 1.6.5), the Rmpi
generates an intimidating warning, but the cluster will stop when
asked.


-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From pauljohn32 at gmail.com  Mon Jun 19 23:58:40 2017
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Mon, 19 Jun 2017 16:58:40 -0500
Subject: [Rd] arrows: no vectors for "code" and "angle" parameters
Message-ID: <CAErODj99M1+-o_v39PKKWsPh=_TRp8DkDtYXds=8sHZSTTketQ@mail.gmail.com>

I was teaching new R users to make some fun graphs. I had some arrows examples
worked up we came across a problem.  The arrows function ignores 2nd
and following elements of vectors given as code an angle.

Would you please consider 1) allowing vectors for code and angle, or
2) returning an error or warning when user mistakenly supplies a
vector for those parameters?  When code like this is wrapped into an
Sweaved document--we I don't see the graph on the screen--this error
is difficult to catch while proofreading.

Example:

x0 <- c(-1, -4, 4.5)
y0 <- c(-1, -4, -8)
x1 <- c(2, -2, -3)
y1 <- c(4, 4, 18)
mylengths <- c(0.2, 0.3, 0.15)
mycodes <- c(3, 2, 1)
myangle <- c(10, 60, 80)

plot(x = c(-5, 5), y = c(-10, 20),
     type = "n", xlab = "", ylab = "")

arrows(x0 = x0, y0 = y0, x1 = x1, y1 = y1,
       length = mylengths, code = mycodes, angle = myangle)

I found a workaround, but this is more difficult to explain to beginners...

plot(x = c(-5, 5), y = c(-10, 20),
     type = "n", xlab = "", ylab = "")

mapply(arrows, x0 = x0, y0 = y0, x1 = x1, y1 = y1,
       length = mylengths, angle = myangle, code = mycodes)

pj

-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From paul at stat.auckland.ac.nz  Tue Jun 20 02:23:26 2017
From: paul at stat.auckland.ac.nz (Paul Murrell)
Date: Tue, 20 Jun 2017 12:23:26 +1200
Subject: [Rd] [FORGED] arrows: no vectors for "code" and "angle"
 parameters
In-Reply-To: <CAErODj99M1+-o_v39PKKWsPh=_TRp8DkDtYXds=8sHZSTTketQ@mail.gmail.com>
References: <CAErODj99M1+-o_v39PKKWsPh=_TRp8DkDtYXds=8sHZSTTketQ@mail.gmail.com>
Message-ID: <f82598bd-3559-3171-0e31-73f3c199957e@stat.auckland.ac.nz>

Hi

I have added a warning (r-devel r72811).

I did this rather than allow vectors for length/angle/code because ...
- consistency with (implicit) description of arguments in help page
- backward compatibility (or at least no risk of not-backwards-incompatible)
- it was easier

Note that it is only the length/angle/code that are scalar, e.g., the 
graphical parameters ARE recycled ...

arrows(x0 = x0, y0 = y0, x1 = x1, y1 = y1,
        length = mylengths, code = mycodes, angle = myangle,
        col = 1:3, lwd=1:3, lty=1:3)

Thanks for the report and suggestion.

Paul

On 20/06/17 09:58, Paul Johnson wrote:
> I was teaching new R users to make some fun graphs. I had some arrows examples
> worked up we came across a problem.  The arrows function ignores 2nd
> and following elements of vectors given as code an angle.
> 
> Would you please consider 1) allowing vectors for code and angle, or
> 2) returning an error or warning when user mistakenly supplies a
> vector for those parameters?  When code like this is wrapped into an
> Sweaved document--we I don't see the graph on the screen--this error
> is difficult to catch while proofreading.
> 
> Example:
> 
> x0 <- c(-1, -4, 4.5)
> y0 <- c(-1, -4, -8)
> x1 <- c(2, -2, -3)
> y1 <- c(4, 4, 18)
> mylengths <- c(0.2, 0.3, 0.15)
> mycodes <- c(3, 2, 1)
> myangle <- c(10, 60, 80)
> 
> plot(x = c(-5, 5), y = c(-10, 20),
>       type = "n", xlab = "", ylab = "")
> 
> arrows(x0 = x0, y0 = y0, x1 = x1, y1 = y1,
>         length = mylengths, code = mycodes, angle = myangle)
> 
> I found a workaround, but this is more difficult to explain to beginners...
> 
> plot(x = c(-5, 5), y = c(-10, 20),
>       type = "n", xlab = "", ylab = "")
> 
> mapply(arrows, x0 = x0, y0 = y0, x1 = x1, y1 = y1,
>         length = mylengths, angle = myangle, code = mycodes)
> 
> pj
> 

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From jeroen at berkeley.edu  Tue Jun 20 12:52:59 2017
From: jeroen at berkeley.edu (Jeroen Ooms)
Date: Tue, 20 Jun 2017 12:52:59 +0200
Subject: [Rd] Fortran programs not writing stdout on windows
Message-ID: <CABFfbXs5L6pLGcGaRs6S=UYRZkheep3aQvYUvpy-M=xgODRCxg@mail.gmail.com>

A user has reported an issue that appears when a fortran executable is
called via R on Windows. I am unsure if this expected behavior or a
bug in Fortran or in how R calls Windows executables.

The problem is that when the fortran program is called from R, stdout
gets written to a file "fort.6" instead of stdout. When the same
executable is called from the terminal it works fine and prints to
stdout. This unexpected behavior is unfortunate for R wrappers that
rely on captured output.

A minimal example is available from github [1] and can be installed with

   devtools::install_github("jeroen/ftest")
   ftest::hello()

When running ftest::hello() on linux, R will properly capture output.
However on Windows it will return an empty string, and a file 'fort.6'
gets created in the working directory instead.

The executables can be found in: system.file("bin", package = "ftest")

Interestingly if we open a command line terminal and run the same
executable it prints output to stdout. So perhaps it has to do with
the way R invokes CreateProcess() on Windows?

[1] https://github.com/jeroen/ftest


From selivanov.dmitriy at gmail.com  Thu Jun 22 09:12:15 2017
From: selivanov.dmitriy at gmail.com (Dmitriy Selivanov)
Date: Thu, 22 Jun 2017 11:12:15 +0400
Subject: [Rd] Issue with memory deallocation/fragmentation on systems
	which use glibc
Message-ID: <CAJdZCv1acw4A1VOHgT7DWO3hp5XqLmwt5kmFHq6Kq-bQ8DGhXg@mail.gmail.com>

A few additional details. According to Linux Programmer's Manual

   1. http://man7.org/linux/man-pages/man3/mallopt.3.html
   2. http://man7.org/linux/man-pages/man3/malloc_trim.3.html

And if I understood everything correctly `free` could trigger `malloc_trim`
based on value of several environment variables - MALLOC_TOP_PAD_ and
MALLOC_TRIM_THRESHOLD_. However setting them as low as 1 or 0 doesn't have
any effect (but as I wrote in previous email manual call of `malloc_trim`
helps to release memory).

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Thu Jun 22 11:43:59 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 22 Jun 2017 11:43:59 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
 <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
Message-ID: <22859.37215.221346.141558@stat.math.ethz.ch>

>>>>> Paul Johnson <pauljohn32 at gmail.com>
>>>>>     on Fri, 16 Jun 2017 11:02:34 -0500 writes:

    > On Fri, Jun 16, 2017 at 2:35 AM, Joris Meys <jorismeys at gmail.com> wrote:
    >> To extwnd on Martin 's explanation :
    >> 
    >> In factor(), levels are the unique input values and labels the unique output
    >> values. So the function levels() actually displays the labels.
    >> 

    > Dear Joris

    > I think we agree. Currently, factor insists both levels and labels be unique.

    > I wish that it would not accept nonunique labels. I also understand it
    > is impractical to change this now in base R.

    > I don't think I succeeded in explaining why this would be nicer.
    > Here's another example. Fairly often, we see input data like

    > x <- c("Male", "Man", "male", "Man", "Female")

    > The first four represent the same value.  I'd like to go in one step
    > to a new factor variable with enumerated types "Male" and "Female".
    > This fails

    > xf <- factor(x, levels = c("Male", "Man", "male", "Female"),
    > labels = c("Male", "Male", "Male", "Female"))

    > Instead, we need 2 steps.

    > xf <- factor(x, levels = c("Male", "Man", "male", "Female"))
    > levels(xf) <- c("Male", "Male", "Male", "Female")

    > I think it is quirky that `levels<-.factor` allows the duplicated
    > labels, whereas factor does not.

    > I wrote a function rockchalk::combineLevels to simplify combining
    > levels, but most of the students here like plyr::mapvalues to do it.
    > The use of levels() can be tricky because one must enumerate all
    > values, not just the ones being changed.

    > But I do understand Martin's point. Its been this way 25 years, it
    > won't change. :).

Well.. the above is a bit out of context.

Your first example really did not make a point to me (and Joris)
and I showed that you could use even two different simple factor() calls to
produce what you wanted 
	yc <- factor(c("1",NA,NA,"4","4","4"))
	yn <- factor(c( 1, NA,NA, 4,  4,  4))

Your new example is indeed  much more convincing !

(Note though that the two steps that are needed can be written 
 more shortly

The  "been this way 25 years"  is one a reason to be very
cautious(*) with changes, but not a reason for no changes!

(*) Indeed as some of you have noted we really should not "break behavior".
    This means to me we cannot accept a change there which gives
    an error or a different result in cases the old behavior gave a valid factor.

I'm looking at a possible change currently
[not promising that a change will happen ...]


Martin


From wolfgang.viechtbauer at maastrichtuniversity.nl  Thu Jun 22 12:48:41 2017
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (SP))
Date: Thu, 22 Jun 2017 10:48:41 +0000
Subject: [Rd] Compiling R-devel - missing some expected features (zlib, bzlib,
 lzma, PCRE)
Message-ID: <2eae3a46715647a99d8e7615a932a641@UM-MAIL3216.unimaas.nl>

Hi All,

I am compiling R-devel on Linux (Ubuntu 16.04.2) and that works just fine, but I am missing some of the expected features, as shown here:

https://cran.r-project.org/doc/manuals/r-devel/R-admin.html#Linux

In particular, after configure (using all defaults), I see:

R is now configured for x86_64-pc-linux-gnu

  [...]

  Interfaces supported:      X11
  External libraries:        readline, curl
  Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
  Options enabled:           shared BLAS, R profiling

Under 'External libraries', I am missing "zlib, bzlib, lzma, PCRE". As far as I can tell, I have all necessary libs installed:

wviechtb at psysim:~$ dpkg -l | grep zlib
ii  zlib1g:amd64                                1:1.2.8.dfsg-2ubuntu4.1
ii  zlib1g-dev:amd64                            1:1.2.8.dfsg-2ubuntu4.1
wviechtb at psysim:~$ dpkg -l | grep libbz
ii  libbz2-1.0:amd64                            1.0.6-8
ii  libbz2-dev:amd64                            1.0.6-8
wviechtb at psysim:~$ dpkg -l | grep liblzma
ii  liblzma-dev:amd64                           5.1.1alpha+20120614-2ubuntu2
ii  liblzma5:amd64                              5.1.1alpha+20120614-2ubuntu2
wviechtb at psysim:~$ dpkg -l | grep pcre
ii  libpcre16-3:amd64                           2:8.38-3.1
ii  libpcre3:amd64                              2:8.38-3.1
ii  libpcre3-dev:amd64                          2:8.38-3.1
ii  libpcre32-3:amd64                           2:8.38-3.1
ii  libpcrecpp0v5:amd64                         2:8.38-3.1

Any suggestions on what else I may need?

Best,
Wolfgang

-- 
Wolfgang Viechtbauer, Ph.D., Statistician | Department of Psychiatry and    
Neuropsychology | Maastricht University | P.O. Box 616 (VIJV1) | 6200 MD    
Maastricht, The Netherlands | +31 (43) 388-4170 | http://www.wvbauer.com    


From hamidib at musc.edu  Thu Jun 22 16:19:32 2017
From: hamidib at musc.edu (Hamidi, Bashir)
Date: Thu, 22 Jun 2017 14:19:32 +0000
Subject: [Rd] hpc r configure not recognizing zlib
Message-ID: <B78AE0C6-B509-488D-B93E-9F61BB212E4B@musc.edu>

System: Red Hat Enterprise Linux Server release 6.5 (Santiago)

I?ve installed zlib 1.2.11 on the home folder of a Red Hat HPC as part of the process for installing R base 3.4.0.

I get this error even after successful install of zlib
checking for inflateInit2_ in -lz... no
checking whether zlib support suffices... configure: error: zlib library and headers are required

 I?ve checked R documentation and configure file for the issue of R requiring version newer than 1.2.6 but not lexicographically recognizing 1.2.11 as >1.2.6, and that particular bug was patched in 3.4.

Any suggestion and/or input would be much appreciated.

Regards,


Bashir





	[[alternative HTML version deleted]]


From bernd.funovits at helsinki.fi  Thu Jun 22 17:11:49 2017
From: bernd.funovits at helsinki.fi (Bernd Funovits)
Date: Thu, 22 Jun 2017 18:11:49 +0300
Subject: [Rd] Unexpected behaviour of base::qr()$rank
Message-ID: <e5526d3d-b517-95a5-67c5-ea588cfe6a06@helsinki.fi>

Hello,

I experienced some unexpected behaviour while determining the rank of 
matrices (sometimes 1x1 matrices):
base::qr(matrix(1e-20))$rank returns 1 (incorrect)
base::qr(diag(c(1, 1e-20)))$rank returns 2 (incorrect)

Best regards,
Bernd

 > R.version
                _
platform       x86_64-w64-mingw32
arch           x86_64
os             mingw32
system         x86_64, mingw32
status
major          3
minor          4.0
year           2017
month          04
day            21
svn rev        72570
language       R
version.string R version 3.4.0 (2017-04-21)
nickname       You Stupid Darkness


From plummerm at iarc.fr  Thu Jun 22 17:49:24 2017
From: plummerm at iarc.fr (Martyn Plummer)
Date: Thu, 22 Jun 2017 15:49:24 +0000
Subject: [Rd] hpc r configure not recognizing zlib
In-Reply-To: <B78AE0C6-B509-488D-B93E-9F61BB212E4B@musc.edu>
References: <B78AE0C6-B509-488D-B93E-9F61BB212E4B@musc.edu>
Message-ID: <1498146564.32432.34.camel@iarc.fr>

You do not need to compile R from source on RHEL 6. If you enable the
EPEL repository then you can install the binary RPM via yum. See

https://fedoraproject.org/wiki/EPEL

Tom Callaway, who maintains the Red Hat binaries of R, statically links
up-to-date versions of bzip2, xz, pcre, and curl into R.

Martyn

PS The R-SIG-Fedora list is a more appropriate mailing list for this
topic: https://stat.ethz.ch/mailman/listinfo/r-sig-fedora


On Thu, 2017-06-22 at 14:19 +0000, Hamidi, Bashir wrote:
> System: Red Hat Enterprise Linux Server release 6.5 (Santiago)
> 
> I?ve installed zlib 1.2.11 on the home folder of a Red Hat HPC as
> part of the process for installing R base 3.4.0.
> 
> I get this error even after successful install of zlib
> checking for inflateInit2_ in -lz... no
> checking whether zlib support suffices... configure: error: zlib
> library and headers are required
> 
> ?I?ve checked R documentation and configure file for the issue of R
> requiring version newer than 1.2.6 but not lexicographically
> recognizing 1.2.11 as >1.2.6, and that particular bug was patched in
> 3.4.
> 
> Any suggestion and/or input would be much appreciated.
> 
> Regards,
> 
> 
> Bashir
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

From wolfgang.viechtbauer at maastrichtuniversity.nl  Thu Jun 22 17:58:03 2017
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (SP))
Date: Thu, 22 Jun 2017 15:58:03 +0000
Subject: [Rd] Compiling R-devel - missing some expected features (zlib,
 bzlib, lzma, PCRE)
In-Reply-To: <2eae3a46715647a99d8e7615a932a641@UM-MAIL3216.unimaas.nl>
References: <2eae3a46715647a99d8e7615a932a641@UM-MAIL3216.unimaas.nl>
Message-ID: <5b15ad01446148f9a6394b438c8e3ade@UM-MAIL3216.unimaas.nl>

Just a quick follow-up on this ...

I was informed (off the mailing list) that this is all as it should be. A check with extSoftVersion() shows that everything is in order.

Best,
Wolfgang

>-----Original Message-----
>From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of
>Viechtbauer Wolfgang (SP)
>Sent: Thursday, June 22, 2017 12:49
>To: r-devel at r-project.org
>Subject: [Rd] Compiling R-devel - missing some expected features (zlib,
>bzlib, lzma, PCRE)
>
>Hi All,
>
>I am compiling R-devel on Linux (Ubuntu 16.04.2) and that works just fine,
>but I am missing some of the expected features, as shown here:
>
>https://cran.r-project.org/doc/manuals/r-devel/R-admin.html#Linux
>
>In particular, after configure (using all defaults), I see:
>
>R is now configured for x86_64-pc-linux-gnu
>
>  [...]
>
>  Interfaces supported:      X11
>  External libraries:        readline, curl
>  Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU
>  Options enabled:           shared BLAS, R profiling
>
>Under 'External libraries', I am missing "zlib, bzlib, lzma, PCRE". As far
>as I can tell, I have all necessary libs installed:
>
>wviechtb at psysim:~$ dpkg -l | grep zlib
>ii  zlib1g:amd64                                1:1.2.8.dfsg-2ubuntu4.1
>ii  zlib1g-dev:amd64                            1:1.2.8.dfsg-2ubuntu4.1
>wviechtb at psysim:~$ dpkg -l | grep libbz
>ii  libbz2-1.0:amd64                            1.0.6-8
>ii  libbz2-dev:amd64                            1.0.6-8
>wviechtb at psysim:~$ dpkg -l | grep liblzma
>ii  liblzma-dev:amd64                           5.1.1alpha+20120614-
>2ubuntu2
>ii  liblzma5:amd64                              5.1.1alpha+20120614-
>2ubuntu2
>wviechtb at psysim:~$ dpkg -l | grep pcre
>ii  libpcre16-3:amd64                           2:8.38-3.1
>ii  libpcre3:amd64                              2:8.38-3.1
>ii  libpcre3-dev:amd64                          2:8.38-3.1
>ii  libpcre32-3:amd64                           2:8.38-3.1
>ii  libpcrecpp0v5:amd64                         2:8.38-3.1
>
>Any suggestions on what else I may need?
>
>Best,
>Wolfgang
>
>--
>Wolfgang Viechtbauer, Ph.D., Statistician | Department of Psychiatry and
>Neuropsychology | Maastricht University | P.O. Box 616 (VIJV1) | 6200 MD
>Maastricht, The Netherlands | +31 (43) 388-4170 | http://www.wvbauer.com


From ligges at statistik.tu-dortmund.de  Thu Jun 22 19:49:00 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Thu, 22 Jun 2017 19:49:00 +0200
Subject: [Rd] Unexpected behaviour of base::qr()$rank
In-Reply-To: <e5526d3d-b517-95a5-67c5-ea588cfe6a06@helsinki.fi>
References: <e5526d3d-b517-95a5-67c5-ea588cfe6a06@helsinki.fi>
Message-ID: <a9305216-65c9-b19b-d8ce-ddebffa018fe@statistik.tu-dortmund.de>



On 22.06.2017 17:11, Bernd Funovits wrote:
> Hello,
> 
> I experienced some unexpected behaviour while determining the rank of 
> matrices (sometimes 1x1 matrices):
> base::qr(matrix(1e-20))$rank returns 1 (incorrect)
> base::qr(diag(c(1, 1e-20)))$rank returns 2 (incorrect)

Why do you believe this is incorrect?

0 != 1e-20

and 1e-20 is well representable without significant rounding errors given

 > .Machine$double.xmin
[1] 2.225074e-308


Best,
Uwe Ligges




> 
> Best regards,
> Bernd
> 
>  > R.version
>                 _
> platform       x86_64-w64-mingw32
> arch           x86_64
> os             mingw32
> system         x86_64, mingw32
> status
> major          3
> minor          4.0
> year           2017
> month          04
> day            21
> svn rev        72570
> language       R
> version.string R version 3.4.0 (2017-04-21)
> nickname       You Stupid Darkness
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From i.ucar86 at gmail.com  Thu Jun 22 20:09:18 2017
From: i.ucar86 at gmail.com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 22 Jun 2017 20:09:18 +0200
Subject: [Rd] Unexpected behaviour of base::qr()$rank
In-Reply-To: <a9305216-65c9-b19b-d8ce-ddebffa018fe@statistik.tu-dortmund.de>
References: <e5526d3d-b517-95a5-67c5-ea588cfe6a06@helsinki.fi>
 <a9305216-65c9-b19b-d8ce-ddebffa018fe@statistik.tu-dortmund.de>
Message-ID: <CALEXWq0LrFN01GiQe=zh2Th0mhVBBdoNecbOWWRj=E7xjsntiQ@mail.gmail.com>

2017-06-22 19:49 GMT+02:00 Uwe Ligges <ligges at statistik.tu-dortmund.de>:
> On 22.06.2017 17:11, Bernd Funovits wrote:
>>
>> Hello,
>>
>> I experienced some unexpected behaviour while determining the rank of matrices (sometimes 1x1 matrices):
>> base::qr(matrix(1e-20))$rank returns 1 (incorrect)
>> base::qr(diag(c(1, 1e-20)))$rank returns 2 (incorrect)
>
>
> Why do you believe this is incorrect?
>
> 0 != 1e-20
>
> and 1e-20 is well representable without significant rounding errors given
>
> > .Machine$double.xmin
> [1] 2.225074e-308
>
>
> Best,
> Uwe Ligges

qr() has a tolerance argument which by default is tol=1e-07.

Regards,
I?aki


From ligges at statistik.tu-dortmund.de  Thu Jun 22 20:31:20 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Thu, 22 Jun 2017 20:31:20 +0200
Subject: [Rd] Unexpected behaviour of base::qr()$rank
In-Reply-To: <CALEXWq0LrFN01GiQe=zh2Th0mhVBBdoNecbOWWRj=E7xjsntiQ@mail.gmail.com>
References: <e5526d3d-b517-95a5-67c5-ea588cfe6a06@helsinki.fi>
 <a9305216-65c9-b19b-d8ce-ddebffa018fe@statistik.tu-dortmund.de>
 <CALEXWq0LrFN01GiQe=zh2Th0mhVBBdoNecbOWWRj=E7xjsntiQ@mail.gmail.com>
Message-ID: <69e19ee7-5520-f94c-8963-a0332ffc47c2@statistik.tu-dortmund.de>



On 22.06.2017 20:09, I?aki ?car wrote:
> 2017-06-22 19:49 GMT+02:00 Uwe Ligges <ligges at statistik.tu-dortmund.de>:
>> On 22.06.2017 17:11, Bernd Funovits wrote:
>>>
>>> Hello,
>>>
>>> I experienced some unexpected behaviour while determining the rank of matrices (sometimes 1x1 matrices):
>>> base::qr(matrix(1e-20))$rank returns 1 (incorrect)
>>> base::qr(diag(c(1, 1e-20)))$rank returns 2 (incorrect)
>>
>>
>> Why do you believe this is incorrect?
>>
>> 0 != 1e-20
>>
>> and 1e-20 is well representable without significant rounding errors given
>>
>>> .Machine$double.xmin
>> [1] 2.225074e-308
>>
>>
>> Best,
>> Uwe Ligges
> 
> qr() has a tolerance argument which by default is tol=1e-07.

But the tolerance is not about the size of the values! It is about the 
reduction of the norm during the householder transformation. From the 
sources <https://svn.r-project.org/R/trunk/src/appl/dqrdc2.f>


c     cycle the columns from l to p left-to-right until one
c     with non-negligible norm is located.  a column is considered
c     to have become negligible if its norm has fallen below
c     tol times its original norm....

Best,
Uwe Ligges




> 
> Regards,
> I?aki
>


From i.ucar86 at gmail.com  Thu Jun 22 20:41:56 2017
From: i.ucar86 at gmail.com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 22 Jun 2017 20:41:56 +0200
Subject: [Rd] Unexpected behaviour of base::qr()$rank
In-Reply-To: <69e19ee7-5520-f94c-8963-a0332ffc47c2@statistik.tu-dortmund.de>
References: <e5526d3d-b517-95a5-67c5-ea588cfe6a06@helsinki.fi>
 <a9305216-65c9-b19b-d8ce-ddebffa018fe@statistik.tu-dortmund.de>
 <CALEXWq0LrFN01GiQe=zh2Th0mhVBBdoNecbOWWRj=E7xjsntiQ@mail.gmail.com>
 <69e19ee7-5520-f94c-8963-a0332ffc47c2@statistik.tu-dortmund.de>
Message-ID: <CALEXWq1LwhXW0idagN5cbjd=QSky5WUuyx5VYzE6tnSga-JkHQ@mail.gmail.com>

2017-06-22 20:31 GMT+02:00 Uwe Ligges <ligges at statistik.tu-dortmund.de>:
>
>
> On 22.06.2017 20:09, I?aki ?car wrote:
>>
>> 2017-06-22 19:49 GMT+02:00 Uwe Ligges <ligges at statistik.tu-dortmund.de>:
>>>
>>> On 22.06.2017 17:11, Bernd Funovits wrote:
>>>>
>>>>
>>>> Hello,
>>>>
>>>> I experienced some unexpected behaviour while determining the rank of
>>>> matrices (sometimes 1x1 matrices):
>>>> base::qr(matrix(1e-20))$rank returns 1 (incorrect)
>>>> base::qr(diag(c(1, 1e-20)))$rank returns 2 (incorrect)
>>>
>>>
>>>
>>> Why do you believe this is incorrect?
>>>
>>> 0 != 1e-20
>>>
>>> and 1e-20 is well representable without significant rounding errors given
>>>
>>>> .Machine$double.xmin
>>>
>>> [1] 2.225074e-308
>>>
>>>
>>> Best,
>>> Uwe Ligges
>>
>>
>> qr() has a tolerance argument which by default is tol=1e-07.
>
>
> But the tolerance is not about the size of the values! It is about the
> reduction of the norm during the householder transformation. From the
> sources <https://svn.r-project.org/R/trunk/src/appl/dqrdc2.f>
>
>
> c     cycle the columns from l to p left-to-right until one
> c     with non-negligible norm is located.  a column is considered
> c     to have become negligible if its norm has fallen below
> c     tol times its original norm....
>
> Best,
> Uwe Ligges

Oh, I apologise, I read the arguments section in the help page, but
not the asterisk down below. Then the result is ok. Sorry for the
noise.

Regards,
I?aki


From bernd.funovits at helsinki.fi  Thu Jun 22 21:08:30 2017
From: bernd.funovits at helsinki.fi (Bernd Funovits)
Date: Thu, 22 Jun 2017 22:08:30 +0300
Subject: [Rd] Unexpected behaviour of base::qr()$rank
In-Reply-To: <CALEXWq1LwhXW0idagN5cbjd=QSky5WUuyx5VYzE6tnSga-JkHQ@mail.gmail.com>
References: <e5526d3d-b517-95a5-67c5-ea588cfe6a06@helsinki.fi>
 <a9305216-65c9-b19b-d8ce-ddebffa018fe@statistik.tu-dortmund.de>
 <CALEXWq0LrFN01GiQe=zh2Th0mhVBBdoNecbOWWRj=E7xjsntiQ@mail.gmail.com>
 <69e19ee7-5520-f94c-8963-a0332ffc47c2@statistik.tu-dortmund.de>
 <CALEXWq1LwhXW0idagN5cbjd=QSky5WUuyx5VYzE6tnSga-JkHQ@mail.gmail.com>
Message-ID: <a2762fb9-0bcc-f3a5-0b51-4230122de0a3@helsinki.fi>

Thanks for the fast replies. There was a bug in 
Matrix::rankMatrix(matrix(0)) which returned 1 (fixed by Martin Maechler 
in the development version of Matrix) and I thought here is an issue 
here too. Sorry for asking too quickly...

Best,
Bernd

Am 22.06.2017 um 21:41 schrieb I?aki ?car:
> 2017-06-22 20:31 GMT+02:00 Uwe Ligges <ligges at statistik.tu-dortmund.de>:
>>
>> On 22.06.2017 20:09, I?aki ?car wrote:
>>> 2017-06-22 19:49 GMT+02:00 Uwe Ligges <ligges at statistik.tu-dortmund.de>:
>>>> On 22.06.2017 17:11, Bernd Funovits wrote:
>>>>>
>>>>> Hello,
>>>>>
>>>>> I experienced some unexpected behaviour while determining the rank of
>>>>> matrices (sometimes 1x1 matrices):
>>>>> base::qr(matrix(1e-20))$rank returns 1 (incorrect)
>>>>> base::qr(diag(c(1, 1e-20)))$rank returns 2 (incorrect)
>>>>
>>>>
>>>> Why do you believe this is incorrect?
>>>>
>>>> 0 != 1e-20
>>>>
>>>> and 1e-20 is well representable without significant rounding errors given
>>>>
>>>>> .Machine$double.xmin
>>>> [1] 2.225074e-308
>>>>
>>>>
>>>> Best,
>>>> Uwe Ligges
>>>
>>> qr() has a tolerance argument which by default is tol=1e-07.
>>
>> But the tolerance is not about the size of the values! It is about the
>> reduction of the norm during the householder transformation. From the
>> sources <https://svn.r-project.org/R/trunk/src/appl/dqrdc2.f>
>>
>>
>> c     cycle the columns from l to p left-to-right until one
>> c     with non-negligible norm is located.  a column is considered
>> c     to have become negligible if its norm has fallen below
>> c     tol times its original norm....
>>
>> Best,
>> Uwe Ligges
> Oh, I apologise, I read the arguments section in the help page, but
> not the asterisk down below. Then the result is ok. Sorry for the
> noise.
>
> Regards,
> I?aki


From maechler at stat.math.ethz.ch  Fri Jun 23 10:42:30 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 23 Jun 2017 10:42:30 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <22859.37215.221346.141558@stat.math.ethz.ch>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
 <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
 <22859.37215.221346.141558@stat.math.ethz.ch>
Message-ID: <22860.54390.340602.803506@stat.math.ethz.ch>

>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>     on Thu, 22 Jun 2017 11:43:59 +0200 writes:

>>>>> Paul Johnson <pauljohn32 at gmail.com>
>>>>>     on Fri, 16 Jun 2017 11:02:34 -0500 writes:

    >> On Fri, Jun 16, 2017 at 2:35 AM, Joris Meys <jorismeys at gmail.com> wrote:
    >>> To extwnd on Martin 's explanation :
    >>> 
    >>> In factor(), levels are the unique input values and labels the unique output
    >>> values. So the function levels() actually displays the labels.
    >>> 

    >> Dear Joris

    >> I think we agree. Currently, factor insists both levels and labels be unique.

    >> I wish that it would not accept nonunique labels. I also understand it
    >> is impractical to change this now in base R.

    >> I don't think I succeeded in explaining why this would be nicer.
    >> Here's another example. Fairly often, we see input data like

    >> x <- c("Male", "Man", "male", "Man", "Female")

    >> The first four represent the same value.  I'd like to go in one step
    >> to a new factor variable with enumerated types "Male" and "Female".
    >> This fails

    >> xf <- factor(x, levels = c("Male", "Man", "male", "Female"),
    >> labels = c("Male", "Male", "Male", "Female"))

    >> Instead, we need 2 steps.

    >> xf <- factor(x, levels = c("Male", "Man", "male", "Female"))
    >> levels(xf) <- c("Male", "Male", "Male", "Female")

    >> I think it is quirky that `levels<-.factor` allows the duplicated
    >> labels, whereas factor does not.

    >> I wrote a function rockchalk::combineLevels to simplify combining
    >> levels, but most of the students here like plyr::mapvalues to do it.
    >> The use of levels() can be tricky because one must enumerate all
    >> values, not just the ones being changed.

    >> But I do understand Martin's point. Its been this way 25 years, it
    >> won't change. :).

    > Well.. the above is a bit out of context.

    > Your first example really did not make a point to me (and Joris)
    > and I showed that you could use even two different simple factor() calls to
    > produce what you wanted 
    > yc <- factor(c("1",NA,NA,"4","4","4"))
    > yn <- factor(c( 1, NA,NA, 4,  4,  4))

    > Your new example is indeed  much more convincing !

    > (Note though that the two steps that are needed can be written 
    > more shortly

    > The  "been this way 25 years"  is one a reason to be very
    > cautious(*) with changes, but not a reason for no changes!

    > (*) Indeed as some of you have noted we really should not "break behavior".
    > This means to me we cannot accept a change there which gives
    > an error or a different result in cases the old behavior gave a valid factor.

    > I'm looking at a possible change currently
    > [not promising that a change will happen ...]

In the end, I've liked the change (after 2-3 iterations), and
now been brave to commit to R-devel (svn 72845).

With the change, I had to disable one of our own regression
checks (tests/reg-tests-1b.R, line 726):

The following is now (in R-devel -> R 3.5.0) valid:

   > factor(1:2, labels = c("A","A"))
   [1] A A
   Levels: A
   > 

I wonder how many CRAN package checks will "break" from
this (my guess is in the order of a dozen), but I hope
that these breakages will be benign, e.g., similar to the above
case where before an error was expected via tools :: assertError(.)

Martin


From pdalgd at gmail.com  Fri Jun 23 11:51:05 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Fri, 23 Jun 2017 11:51:05 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <22860.54390.340602.803506@stat.math.ethz.ch>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
 <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
 <22859.37215.221346.141558@stat.math.ethz.ch>
 <22860.54390.340602.803506@stat.math.ethz.ch>
Message-ID: <1B66E873-E092-47B2-845F-DC13FDBDD4B6@gmail.com>

Hmm, the danger in this is that duplicated factor levels _used_ to be allowed (i.e. multiple codes with the same level). Disallowing it is what broke read.spss() on some files, because SPSS's concept of value labels is not 1-to-1 with factors. 

Reallowing it with different semantics could be premature. I mean, if we hadn't had the "forbidden" step, read.spss() could have changed behaviour unnoticed. So what if there is code relying on duplicate factor levels, which hasn't been run for some time?

-pd

> On 23 Jun 2017, at 10:42 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>    on Thu, 22 Jun 2017 11:43:59 +0200 writes:
> 
>>>>>> Paul Johnson <pauljohn32 at gmail.com>
>>>>>>    on Fri, 16 Jun 2017 11:02:34 -0500 writes:
> 
>>> On Fri, Jun 16, 2017 at 2:35 AM, Joris Meys <jorismeys at gmail.com> wrote:
>>>> To extwnd on Martin 's explanation :
>>>> 
>>>> In factor(), levels are the unique input values and labels the unique output
>>>> values. So the function levels() actually displays the labels.
>>>> 
> 
>>> Dear Joris
> 
>>> I think we agree. Currently, factor insists both levels and labels be unique.
> 
>>> I wish that it would not accept nonunique labels. I also understand it
>>> is impractical to change this now in base R.
> 
>>> I don't think I succeeded in explaining why this would be nicer.
>>> Here's another example. Fairly often, we see input data like
> 
>>> x <- c("Male", "Man", "male", "Man", "Female")
> 
>>> The first four represent the same value.  I'd like to go in one step
>>> to a new factor variable with enumerated types "Male" and "Female".
>>> This fails
> 
>>> xf <- factor(x, levels = c("Male", "Man", "male", "Female"),
>>> labels = c("Male", "Male", "Male", "Female"))
> 
>>> Instead, we need 2 steps.
> 
>>> xf <- factor(x, levels = c("Male", "Man", "male", "Female"))
>>> levels(xf) <- c("Male", "Male", "Male", "Female")
> 
>>> I think it is quirky that `levels<-.factor` allows the duplicated
>>> labels, whereas factor does not.
> 
>>> I wrote a function rockchalk::combineLevels to simplify combining
>>> levels, but most of the students here like plyr::mapvalues to do it.
>>> The use of levels() can be tricky because one must enumerate all
>>> values, not just the ones being changed.
> 
>>> But I do understand Martin's point. Its been this way 25 years, it
>>> won't change. :).
> 
>> Well.. the above is a bit out of context.
> 
>> Your first example really did not make a point to me (and Joris)
>> and I showed that you could use even two different simple factor() calls to
>> produce what you wanted 
>> yc <- factor(c("1",NA,NA,"4","4","4"))
>> yn <- factor(c( 1, NA,NA, 4,  4,  4))
> 
>> Your new example is indeed  much more convincing !
> 
>> (Note though that the two steps that are needed can be written 
>> more shortly
> 
>> The  "been this way 25 years"  is one a reason to be very
>> cautious(*) with changes, but not a reason for no changes!
> 
>> (*) Indeed as some of you have noted we really should not "break behavior".
>> This means to me we cannot accept a change there which gives
>> an error or a different result in cases the old behavior gave a valid factor.
> 
>> I'm looking at a possible change currently
>> [not promising that a change will happen ...]
> 
> In the end, I've liked the change (after 2-3 iterations), and
> now been brave to commit to R-devel (svn 72845).
> 
> With the change, I had to disable one of our own regression
> checks (tests/reg-tests-1b.R, line 726):
> 
> The following is now (in R-devel -> R 3.5.0) valid:
> 
>> factor(1:2, labels = c("A","A"))
>   [1] A A
>   Levels: A
>> 
> 
> I wonder how many CRAN package checks will "break" from
> this (my guess is in the order of a dozen), but I hope
> that these breakages will be benign, e.g., similar to the above
> case where before an error was expected via tools :: assertError(.)
> 
> Martin
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From murdoch.duncan at gmail.com  Fri Jun 23 14:16:01 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 23 Jun 2017 08:16:01 -0400
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
Message-ID: <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>

On 18/06/2017 5:57 AM, Andrie de Vries wrote:
> Hi, Duncan
>
> i have forwarded this thread to Nathan, who promised to look into it.

Any progress on this?

Duncan Murdoch

>
> Andrie
>
> On 17 Jun 2017 17:26, "Duncan Murdoch" <murdoch.duncan at gmail.com
> <mailto:murdoch.duncan at gmail.com>> wrote:
>
>     On 17/06/2017 9:13 AM, Ben Marwick wrote:
>
>         Hi Duncan,
>
>         Thanks for your reply. Yes, it does seem to be specific to the CTYPE
>         setting to Chinese on Windows. If I set it to English using
>         Sys.setlocale() there is no problem, then back to Chinese and the
>         authors disappear:
>
>         Sys.setlocale("LC_ALL","English")
>         citation("readr")
>
>
>     Thanks, that makes the problem reproducible.  I'll submit it as a
>     bug report.  Maybe someone from Microsoft will fix it.
>
>     Duncan Murdoch
>
>
>         #' To cite package ?readr? in publications use:
>         #'
>         #'   Hadley Wickham, Jim Hester and Romain Francois (2017).
>         readr: Read
>         #' Rectangular Text Data. R package version 1.1.1.
>         #' https://CRAN.R-project.org/package=readr
>         <https://CRAN.R-project.org/package=readr>
>         #'
>         #' A BibTeX entry for LaTeX users is
>         #'
>         #' @Manual{,
>         #'   title = {readr: Read Rectangular Text Data},
>         #'   author = {Hadley Wickham and Jim Hester and Romain Francois},
>         #'   year = {2017},
>         #'   note = {R package version 1.1.1},
>         #'   url = {https://CRAN.R-project.org/package=readr
>         <https://CRAN.R-project.org/package=readr>},
>         #' }
>
>
>         Sys.setlocale("LC_CTYPE", "Chinese")
>         citation("readr")
>
>         #'
>         #' To cite package ?readr? in publications use:
>         #'
>         #'   (2017). readr: Read Rectangular Text Data. R package
>         version 1.1.1.
>         #' https://CRAN.R-project.org/package=readr
>         <https://CRAN.R-project.org/package=readr>
>         #'
>         #' A BibTeX entry for LaTeX users is
>         #'
>         #' @Manual{,
>         #'   title = {readr: Read Rectangular Text Data},
>         #'   year = {2017},
>         #'   note = {R package version 1.1.1},
>         #'   url = {https://CRAN.R-project.org/package=readr
>         <https://CRAN.R-project.org/package=readr>},
>         #' }
>         #'
>         #' ATTENTION: This citation information has been auto-generated
>         from the
>         #' package DESCRIPTION file and may need manual editing, see
>         #' ?help("citation")?.
>
>         Where do we go from here? I do want to use the Chinese locale
>         with R on
>         Windows (and perhaps others do too), so switching the locale
>         isn't a fix.
>
>         Thanks,
>
>         Ben
>
>         On 17/06/2017 10:36 PM, Duncan Murdoch wrote:
>
>             On 17/06/2017 7:10 AM, Ben Marwick wrote:
>
>                 Recently I was trying to cite a package where the
>                 authors have ?
>                 and ? in their names. I found that on Windows the
>                 citation() function
>                 did not return the authors' names at all, but on Linux
>                 there was no
>                 problem (sessionInfos at the bottom):
>
>                 On Windows, no author names are returned:
>
>
>             I'm not seeing this.  You have fairly strange localization
>             settings; see
>             comments below.
>
>
>                 #---------------
>
>                  > citation("readr")
>
>                 To cite package ?readr? in publications use:
>
>                    (2017). readr: Read Rectangular Text Data. R package
>                 version 1.1.1.
>                    https://CRAN.R-project.org/package=readr
>                 <https://CRAN.R-project.org/package=readr>
>
>                 A BibTeX entry for LaTeX users is
>
>                    @Manual{,
>                      title = {readr: Read Rectangular Text Data},
>                      year = {2017},
>                      note = {R package version 1.1.1},
>                      url = {https://CRAN.R-project.org/package=readr
>                 <https://CRAN.R-project.org/package=readr>},
>                    }
>
>                 ATTENTION: This citation information has been
>                 auto-generated from the
>                 package DESCRIPTION file and may need manual editing, see
>                 ?help("citation")?.
>                 #---------------
>
>                 On Linux we do see the author names:
>
>                 #---------------
>                  > citation("readr")
>
>                 To cite package ?readr? in publications use:
>
>                    Hadley Wickham, Jim Hester and Romain Francois
>                 (2017). readr:
>                    Read Rectangular Text Data. R package version 1.1.1.
>                    https://CRAN.R-project.org/package=readr
>                 <https://CRAN.R-project.org/package=readr>
>
>                 A BibTeX entry for LaTeX users is
>
>                    @Manual{,
>                      title = {readr: Read Rectangular Text Data},
>                      author = {Hadley Wickham and Jim Hester and Romain
>                 Francois},
>                      year = {2017},
>                      note = {R package version 1.1.1},
>                      url = {https://CRAN.R-project.org/package=readr
>                 <https://CRAN.R-project.org/package=readr>},
>                    }
>                 #---------------
>
>                 This appears to be an OS-dependent encoding issue. The
>                 citation function
>                 does not take an encoding argument, so it's not possible
>                 to set the
>                 encoding at the point where that function is used. The
>                 citation function
>                 working with the packageDescription function, which does
>                 have an
>                 encoding argument, but the default is not useful for
>                 Windows when there
>                 is an encoding set in the DESCRIPTION of the package (in
>                 this case
>                 UTF-8).
>
>                 We can set the encoding argument in packageDescription
>                 so it works in
>                 Windows to give the authors as expected, but it is very
>                 inconvenient to
>                 generate citations directly from the output of this
>                 function. So I'd
>                 like to propose a solution this problem by changing one
>                 line in the
>                 packageDescription function, like so, from:
>
>                 #---------------
>                 if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
>                 #---------------
>
>                 to:
>
>                 #---------------
>                 if ((missing(encoding) && Sys.getlocale("LC_CTYPE") ==
>                 "C") |
>                 unname(Sys.info()['sysname']) == "Windows")
>                 #---------------
>
>                 If I understand correctly, that will force
>                 ASCII//TRANSLIT encoding when
>                 DESCRIPTION files are read by packageDescription() on
>                 Windows machines.
>                 The upside is that Windows users will get the authors in
>                 the package
>                 citation, unlike the current situation. The downside is
>                 that the exotic
>                 symbols in the authors' names are replaced with common
>                 ones that are
>                 similar.
>
>                 I think getting the citations to easily include the
>                 authors' names is
>                 pretty important, even if their names have exotic
>                 characters, so this is
>                 worth fixing. Is this edit to packageDescription the
>                 best way to solve
>                 this problem of exotic characters preventing the
>                 authors' names from
>                 showing on Windows?
>
>                 thanks,
>
>                 Ben
>
>
>
>
>                 Windows sessionInfo
>
>                 #---------------
>                  > sessionInfo()
>                 R version 3.4.0 Patched (2017-05-10 r72670)
>                 Platform: x86_64-w64-mingw32/x64 (64-bit)
>                 Running under: Windows 7 x64 (build 7601) Service Pack 1
>
>                 Matrix products: default
>
>                 locale:
>                 [1] LC_COLLATE=English_Australia.1252
>                 [2] LC_CTYPE=Chinese (Simplified)_People's Republic of
>                 China.936
>                 [3] LC_MONETARY=English_Australia.1252
>                 [4] LC_NUMERIC=C
>                 [5] LC_TIME=English_Australia.1252
>
>
>             I don't know what English_Australia.1252 does that's
>             different from what
>             I use (English_Canada.1252), but the Chinese locale setting
>             could cause
>             trouble.  Could you try setting this (presumably in the
>             Windows control
>             panel) to be consistent?  You're using a much simpler
>             setting on Linux.
>
>             Duncan Murdoch
>
>
>                 attached base packages:
>                 [1] stats     graphics  grDevices utils     datasets
>                 methods   base
>
>                 loaded via a namespace (and not attached):
>                   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
>                 tools_3.4.0
>                   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11
>                  knitr_1.16
>                 rlang_0.1.1
>                 [11] fortunes_1.5-4
>                 #---------------
>
>                 Linux sessionInfo:
>
>                 #---------------
>                  > sessionInfo()
>                 R version 3.3.1 (2016-06-21)
>                 Platform: x86_64-pc-linux-gnu (64-bit)
>                 Running under: Ubuntu 16.10
>
>                 locale:
>                   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>                   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>                   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>                   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>                   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>                 [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
>                 attached base packages:
>                 [1] stats     graphics  grDevices utils     datasets
>                 methods   base
>
>                 loaded via a namespace (and not attached):
>                 [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
>                 #---------------
>
>                 ______________________________________________
>                 R-devel at r-project.org <mailto:R-devel at r-project.org>
>                 mailing list
>                 https://stat.ethz.ch/mailman/listinfo/r-devel
>                 <https://stat.ethz.ch/mailman/listinfo/r-devel>
>
>
>
>         ______________________________________________
>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-devel
>         <https://stat.ethz.ch/mailman/listinfo/r-devel>
>
>


From ligges at statistik.tu-dortmund.de  Fri Jun 23 14:20:19 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 23 Jun 2017 14:20:19 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <1B66E873-E092-47B2-845F-DC13FDBDD4B6@gmail.com>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
 <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
 <22859.37215.221346.141558@stat.math.ethz.ch>
 <22860.54390.340602.803506@stat.math.ethz.ch>
 <1B66E873-E092-47B2-845F-DC13FDBDD4B6@gmail.com>
Message-ID: <68209993-af21-f019-9354-57b8a81c9d82@statistik.tu-dortmund.de>



On 23.06.2017 11:51, peter dalgaard wrote:
> Hmm, the danger in this is that duplicated factor levels _used_ to be allowed (i.e. multiple codes with the same level). Disallowing it is what broke read.spss() on some files, because SPSS's concept of value labels is not 1-to-1 with factors.
> 
> Reallowing it with different semantics could be premature. I mean, if we hadn't had the "forbidden" step, read.spss() could have changed behaviour unnoticed. So what if there is code relying on duplicate factor levels, which hasn't been run for some time?

Indeed.

The read.spss code now allows for two things, one is to do what Martin 
implemented, the other one is to keep the labels seperated and rename 
them to be unique (the latter is the default now, explanation follows 
below).

Quite often we found something like the following example in SPSS files, 
translated into R speak:

factor(c(1,3,2,4,5,3,1), levels=1:5, labels=c("Strongly disagree", 
"Disagree", "Neither agree nor disagree", "Agree", "Agree"))

where the last is a simple copy and paste error and should be "Strongly 
agree".

I had the chance to look at > 1300 SPSS files our consulting center 
collected during the last 20 year, and in several hundred cases we found 
such a problem that was copy & paste error and simply wrong.
Only in < 5 cases condensing several levels into one was appropriate, 
hence we decided to keep duplicated levels by changing the names as the 
default.

Based on this experience I'd propose no to touch factor but rather add a 
function that easily allows for this reduction, if we do not have that 
already.

Best,
Uwe





> 
> -pd
> 
>> On 23 Jun 2017, at 10:42 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>
>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>>     on Thu, 22 Jun 2017 11:43:59 +0200 writes:
>>
>>>>>>> Paul Johnson <pauljohn32 at gmail.com>
>>>>>>>     on Fri, 16 Jun 2017 11:02:34 -0500 writes:
>>
>>>> On Fri, Jun 16, 2017 at 2:35 AM, Joris Meys <jorismeys at gmail.com> wrote:
>>>>> To extwnd on Martin 's explanation :
>>>>>
>>>>> In factor(), levels are the unique input values and labels the unique output
>>>>> values. So the function levels() actually displays the labels.
>>>>>
>>
>>>> Dear Joris
>>
>>>> I think we agree. Currently, factor insists both levels and labels be unique.
>>
>>>> I wish that it would not accept nonunique labels. I also understand it
>>>> is impractical to change this now in base R.
>>
>>>> I don't think I succeeded in explaining why this would be nicer.
>>>> Here's another example. Fairly often, we see input data like
>>
>>>> x <- c("Male", "Man", "male", "Man", "Female")
>>
>>>> The first four represent the same value.  I'd like to go in one step
>>>> to a new factor variable with enumerated types "Male" and "Female".
>>>> This fails
>>
>>>> xf <- factor(x, levels = c("Male", "Man", "male", "Female"),
>>>> labels = c("Male", "Male", "Male", "Female"))
>>
>>>> Instead, we need 2 steps.
>>
>>>> xf <- factor(x, levels = c("Male", "Man", "male", "Female"))
>>>> levels(xf) <- c("Male", "Male", "Male", "Female")
>>
>>>> I think it is quirky that `levels<-.factor` allows the duplicated
>>>> labels, whereas factor does not.
>>
>>>> I wrote a function rockchalk::combineLevels to simplify combining
>>>> levels, but most of the students here like plyr::mapvalues to do it.
>>>> The use of levels() can be tricky because one must enumerate all
>>>> values, not just the ones being changed.
>>
>>>> But I do understand Martin's point. Its been this way 25 years, it
>>>> won't change. :).
>>
>>> Well.. the above is a bit out of context.
>>
>>> Your first example really did not make a point to me (and Joris)
>>> and I showed that you could use even two different simple factor() calls to
>>> produce what you wanted
>>> yc <- factor(c("1",NA,NA,"4","4","4"))
>>> yn <- factor(c( 1, NA,NA, 4,  4,  4))
>>
>>> Your new example is indeed  much more convincing !
>>
>>> (Note though that the two steps that are needed can be written
>>> more shortly
>>
>>> The  "been this way 25 years"  is one a reason to be very
>>> cautious(*) with changes, but not a reason for no changes!
>>
>>> (*) Indeed as some of you have noted we really should not "break behavior".
>>> This means to me we cannot accept a change there which gives
>>> an error or a different result in cases the old behavior gave a valid factor.
>>
>>> I'm looking at a possible change currently
>>> [not promising that a change will happen ...]
>>
>> In the end, I've liked the change (after 2-3 iterations), and
>> now been brave to commit to R-devel (svn 72845).
>>
>> With the change, I had to disable one of our own regression
>> checks (tests/reg-tests-1b.R, line 726):
>>
>> The following is now (in R-devel -> R 3.5.0) valid:
>>
>>> factor(1:2, labels = c("A","A"))
>>    [1] A A
>>    Levels: A
>>>
>>
>> I wonder how many CRAN package checks will "break" from
>> this (my guess is in the order of a dozen), but I hope
>> that these breakages will be benign, e.g., similar to the above
>> case where before an error was expected via tools :: assertError(.)
>>
>> Martin
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From maechler at stat.math.ethz.ch  Fri Jun 23 14:24:32 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 23 Jun 2017 14:24:32 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <1B66E873-E092-47B2-845F-DC13FDBDD4B6@gmail.com>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
 <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
 <22859.37215.221346.141558@stat.math.ethz.ch>
 <22860.54390.340602.803506@stat.math.ethz.ch>
 <1B66E873-E092-47B2-845F-DC13FDBDD4B6@gmail.com>
Message-ID: <22861.2176.695557.362813@stat.math.ethz.ch>

>>>>> peter dalgaard <pdalgd at gmail.com>
>>>>>     on Fri, 23 Jun 2017 11:51:05 +0200 writes:

    > Hmm, the danger in this is that duplicated factor levels _used_ to be allowed (i.e. multiple codes with the same level). Disallowing it is what broke read.spss() on some files, because SPSS's concept of value labels is not 1-to-1 with factors. 
    > Reallowing it with different semantics could be premature. I mean, if we hadn't had the "forbidden" step, read.spss() could have changed behaviour unnoticed. So what if there is code relying on duplicate factor levels, which hasn't been run for some time?

Good point... but I think we should be relatively safe .. unless
"some time" is ca. 8 years :

We have had a warning for these for ca. 7.5 years, namely from
R version 2.10.0 (2009-10-26)    up to 
R version 3.3.3 (2017-03-06) -- "Another Canoe" 

   > factor(1:2, labels = c("A","A"))
   [1] A A
   Levels: A A
   Warning message:
   In `levels<-`(`*tmp*`, value = if (nl == nL) as.character(labels) else paste0(labels,  :
   duplicated levels in factors are deprecated

   > x <- c("Male", "Man", "male", "Man", "Female")
   > ## the new "direct" way:
   xf <- factor(x, levels = c("Male", "Man",  "male", "Female"),
		   labels = c("Male", "Male", "Male", "Female"))
   Warning message:
   In `levels<-`(`*tmp*`, value = c("Male", "Male", "Male", "Female" :
     duplicated levels will not be allowed in factors anymore
   > xf
   [1] Male   Male   Male   Male   Female
   Levels: Male Male Male Female
   > 

which gave a result somewhat similar to the new R-devel
result.  I would argue the new result should be fine....

Yes, if unwise people used  suppressWarnings(.) around their
code, they may be surprised now.... but that's what you get if
you suppress warnings without enough thought, no ?



    > -pd

    >> On 23 Jun 2017, at 10:42 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
    >> 
    >>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
    >>>>>>> on Thu, 22 Jun 2017 11:43:59 +0200 writes:
    >> 
    >>>>>>> Paul Johnson <pauljohn32 at gmail.com>
    >>>>>>> on Fri, 16 Jun 2017 11:02:34 -0500 writes:
    >> 
    >>>> On Fri, Jun 16, 2017 at 2:35 AM, Joris Meys <jorismeys at gmail.com> wrote:
    >>>>> To extwnd on Martin 's explanation :
    >>>>> 
    >>>>> In factor(), levels are the unique input values and labels the unique output
    >>>>> values. So the function levels() actually displays the labels.
    >>>>> 
    >> 
    >>>> Dear Joris
    >> 
    >>>> I think we agree. Currently, factor insists both levels and labels be unique.
    >> 
    >>>> I wish that it would not accept nonunique labels. I also understand it
    >>>> is impractical to change this now in base R.
    >> 
    >>>> I don't think I succeeded in explaining why this would be nicer.
    >>>> Here's another example. Fairly often, we see input data like
    >> 
    >>>> x <- c("Male", "Man", "male", "Man", "Female")
    >> 
    >>>> The first four represent the same value.  I'd like to go in one step
    >>>> to a new factor variable with enumerated types "Male" and "Female".
    >>>> This fails
    >> 
    >>>> xf <- factor(x, levels = c("Male", "Man", "male", "Female"),
    >>>> labels = c("Male", "Male", "Male", "Female"))
    >> 
    >>>> Instead, we need 2 steps.
    >> 
    >>>> xf <- factor(x, levels = c("Male", "Man", "male", "Female"))
    >>>> levels(xf) <- c("Male", "Male", "Male", "Female")
    >> 
    >>>> I think it is quirky that `levels<-.factor` allows the duplicated
    >>>> labels, whereas factor does not.
    >> 
    >>>> I wrote a function rockchalk::combineLevels to simplify combining
    >>>> levels, but most of the students here like plyr::mapvalues to do it.
    >>>> The use of levels() can be tricky because one must enumerate all
    >>>> values, not just the ones being changed.
    >> 
    >>>> But I do understand Martin's point. Its been this way 25 years, it
    >>>> won't change. :).
    >> 
    >>> Well.. the above is a bit out of context.
    >> 
    >>> Your first example really did not make a point to me (and Joris)
    >>> and I showed that you could use even two different simple factor() calls to
    >>> produce what you wanted 
    >>> yc <- factor(c("1",NA,NA,"4","4","4"))
    >>> yn <- factor(c( 1, NA,NA, 4,  4,  4))
    >> 
    >>> Your new example is indeed  much more convincing !
    >> 
    >>> (Note though that the two steps that are needed can be written 
    >>> more shortly
    >> 
    >>> The  "been this way 25 years"  is one a reason to be very
    >>> cautious(*) with changes, but not a reason for no changes!
    >> 
    >>> (*) Indeed as some of you have noted we really should not "break behavior".
    >>> This means to me we cannot accept a change there which gives
    >>> an error or a different result in cases the old behavior gave a valid factor.
    >> 
    >>> I'm looking at a possible change currently
    >>> [not promising that a change will happen ...]
    >> 
    >> In the end, I've liked the change (after 2-3 iterations), and
    >> now been brave to commit to R-devel (svn 72845).
    >> 
    >> With the change, I had to disable one of our own regression
    >> checks (tests/reg-tests-1b.R, line 726):
    >> 
    >> The following is now (in R-devel -> R 3.5.0) valid:
    >> 
    >>> factor(1:2, labels = c("A","A"))
    >> [1] A A
    >> Levels: A
    >>> 
    >> 
    >> I wonder how many CRAN package checks will "break" from
    >> this (my guess is in the order of a dozen), but I hope
    >> that these breakages will be benign, e.g., similar to the above
    >> case where before an error was expected via tools :: assertError(.)
    >> 
    >> Martin
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > -- 
    > Peter Dalgaard, Professor,
    > Center for Statistics, Copenhagen Business School
    > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    > Phone: (+45)38153501
    > Office: A 4.23
    > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From jorismeys at gmail.com  Fri Jun 23 14:57:42 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Fri, 23 Jun 2017 14:57:42 +0200
Subject: [Rd] duplicated factor labels.
In-Reply-To: <68209993-af21-f019-9354-57b8a81c9d82@statistik.tu-dortmund.de>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
 <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
 <22859.37215.221346.141558@stat.math.ethz.ch>
 <22860.54390.340602.803506@stat.math.ethz.ch>
 <1B66E873-E092-47B2-845F-DC13FDBDD4B6@gmail.com>
 <68209993-af21-f019-9354-57b8a81c9d82@statistik.tu-dortmund.de>
Message-ID: <CAO1zAVZdHScSc3YFexL7ark5TLmFz3VYgzH1_T53mzxudqV0cQ@mail.gmail.com>

On Fri, Jun 23, 2017 at 2:20 PM, Uwe Ligges <ligges at statistik.tu-dortmund.de
> wrote:

>
>
>
> I had the chance to look at > 1300 SPSS files our consulting center
> collected during the last 20 year, and in several hundred cases we found
> such a problem that was copy & paste error and simply wrong.
> Only in < 5 cases condensing several levels into one was appropriate,
> hence we decided to keep duplicated levels by changing the names as the
> default.
>

I understand where you're coming from. I know from personal experience
exactly how much this is a pain in the ass, but I also have to group
different labels in fewer categories in about every data set I get from
clients or students. Especially when things come from surveys with 30
different education categories etc.

So I would argue that checking for duplicate labels is a task for
read.spss() and can be added as an extra check if necessary. But I
personally don't see the fact that clients regularly mess up SPSS files as
enough of an argument to not change the behaviour of factor().


> Based on this experience I'd propose no to touch factor but rather add a
> function that easily allows for this reduction, if we do not have that
> already.
>

There are functions already that allow to do this, like the tidyverse
dplyr::recode_factor() function. It's rather trivial doing this with
logical operators and indices, and I have my own "recode" function so I
don't have to rely on any package or retype the same construct over and
over again but with different values.

But a clean and logical way to recode/group different levels when
constructing the factor, would be at least for me be very convenient. But
I'm just a guy and I'm not writing the code, so in the end it's up to you
guys.

Cheers
Joris
-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From clausjonathan.fritzemeier at uni-duesseldorf.de  Fri Jun 23 16:15:30 2017
From: clausjonathan.fritzemeier at uni-duesseldorf.de (Jonathan Fritzemeier)
Date: Fri, 23 Jun 2017 16:15:30 +0200
Subject: [Rd] setReplaceMethod creates 'object' in the userworkspace
Message-ID: <7674cb22-2b04-f3c1-63fe-f046e7761074@uni-duesseldorf.de>

Hi,

I recognized that the function 'setReplaceMethod' is creating a
character vector in the user workspace having the name (e.g. "newClass")
of the class used as value. If you can sort out a mistake by myself, I
would like you to file a bug report.

BBFN,
Jonathan

setClass("newClass", representation(value="numeric"))

setMethod(f = "initialize", signature = "newClass",
    definition = function(.Object){
        .Object at value <- 1
    return(.Object)
})

setGeneric(name = "myValue",
        def  = function(object) { standardGeneric("myValue") }
)
setGeneric(name = "myValue<-",
        def  = function(object, value) { standardGeneric("myValue<-") }
)

setMethod("myValue", signature(object = "newClass"),
    function(object) {
        return(object at value)
    }
)

setReplaceMethod("myValue", signature = (object = "newClass"),
    function(object, value) {
        object at value <- value
        return(object)
    }
)

myNewObject <- new("newClass")
print(object)


> print(object)
[1] "newClass"

> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.2 LTS

Matrix products: default
BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0
LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C             
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8   
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8  
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                
 [9] LC_ADDRESS=C               LC_TELEPHONE=C           
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C      

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base    

loaded via a namespace (and not attached):
[1] compiler_3.4.0 tools_3.4.0


From chris.c.1221 at gmail.com  Fri Jun 23 15:40:26 2017
From: chris.c.1221 at gmail.com (Chris Cole)
Date: Fri, 23 Jun 2017 13:40:26 +0000
Subject: [Rd] v3.4.0-2 incompatible with gcc 7.1
Message-ID: <CAFut0+8VVZ+oCja9QypnuQ17GdUcXijBkjuVgYrgGweEAOJPYg@mail.gmail.com>

I'm on Arch Linux kernel version 4.11.6-1 using gcc version 7.1.1:

gcc --version
gcc (GCC) 7.1.1 20170516

I have installed R through the arch package manager pacman and when I
attempt to initiate it, R crashes stating a missing dependency:

/usr/lib64/R/bin/exec/R: error while loading shared libraries:
libgfortran.so.3: cannot open shared object file: No such file or directory

I thought that maybe a symlink was improperly placed in the package so I
looked in /usr/lib to try to find the offending library.

ls -halt /usr/lib/libgfortran.so.*
lrwxrwxrwx 1 root root 20 May 16 03:01 /usr/lib/libgfortran.so.4 ->
libgfortran.so.4.0.0
-rwxr-xr-x 1 root root 7.1M May 16 03:01 /usr/lib/libgfortran.so.4.0.0

Simply symlinking libgfortran.so.4.0.0 to libgfortran.so.3 did not work,
and after some questioning on SO (
https://stackoverflow.com/questions/44658867/r-v3-4-0-2-unable-to-find-libgfortran-so-3-on-arch)
it seems that gfortran 7 has bumped the .so object to version 4.

It seems that a relatively straightforward workaround for the present would
be to install a legacy version of gcc alongside the current version.

I'm wondering if Rcore or Rdevel are moving towards being able to handle
the new compiler version any time soon, and if there are any other
workarounds than having two versions of the compiler.

Thanks.

Chris

	[[alternative HTML version deleted]]


From nsosnov at microsoft.com  Fri Jun 23 16:35:42 2017
From: nsosnov at microsoft.com (Nathan Sosnovske)
Date: Fri, 23 Jun 2017 14:35:42 +0000
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
Message-ID: <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>

Hi Duncan,

I'm guessing I'll be able to look at this over the weekend/next week (probably closer to next week). It is on my list of things to do and I've just had a few other prior commitments that I have to finish first.

Sorry for the delay. I'll chime in with a status update next week.

Nathan

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Duncan Murdoch
Sent: Friday, June 23, 2017 5:16 AM
To: Andrie de Vries <apdevries at gmail.com>
Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

On 18/06/2017 5:57 AM, Andrie de Vries wrote:
> Hi, Duncan
>
> i have forwarded this thread to Nathan, who promised to look into it.

Any progress on this?

Duncan Murdoch

>
> Andrie
>
> On 17 Jun 2017 17:26, "Duncan Murdoch" <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
>
>     On 17/06/2017 9:13 AM, Ben Marwick wrote:
>
>         Hi Duncan,
>
>         Thanks for your reply. Yes, it does seem to be specific to the CTYPE
>         setting to Chinese on Windows. If I set it to English using
>         Sys.setlocale() there is no problem, then back to Chinese and the
>         authors disappear:
>
>         Sys.setlocale("LC_ALL","English")
>         citation("readr")
>
>
>     Thanks, that makes the problem reproducible.  I'll submit it as a
>     bug report.  Maybe someone from Microsoft will fix it.
>
>     Duncan Murdoch
>
>
>         #' To cite package ?readr? in publications use:
>         #'
>         #'   Hadley Wickham, Jim Hester and Romain Francois (2017).
>         readr: Read
>         #' Rectangular Text Data. R package version 1.1.1.
>         #' https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>
>         #'
>         #' A BibTeX entry for LaTeX users is
>         #'
>         #' @Manual{,
>         #'   title = {readr: Read Rectangular Text Data},
>         #'   author = {Hadley Wickham and Jim Hester and Romain Francois},
>         #'   year = {2017},
>         #'   note = {R package version 1.1.1},
>         #'   url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>         #' }
>
>
>         Sys.setlocale("LC_CTYPE", "Chinese")
>         citation("readr")
>
>         #'
>         #' To cite package ?readr? in publications use:
>         #'
>         #'   (2017). readr: Read Rectangular Text Data. R package
>         version 1.1.1.
>         #' https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>
>         #'
>         #' A BibTeX entry for LaTeX users is
>         #'
>         #' @Manual{,
>         #'   title = {readr: Read Rectangular Text Data},
>         #'   year = {2017},
>         #'   note = {R package version 1.1.1},
>         #'   url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>         #' }
>         #'
>         #' ATTENTION: This citation information has been auto-generated
>         from the
>         #' package DESCRIPTION file and may need manual editing, see
>         #' ?help("citation")?.
>
>         Where do we go from here? I do want to use the Chinese locale
>         with R on
>         Windows (and perhaps others do too), so switching the locale
>         isn't a fix.
>
>         Thanks,
>
>         Ben
>
>         On 17/06/2017 10:36 PM, Duncan Murdoch wrote:
>
>             On 17/06/2017 7:10 AM, Ben Marwick wrote:
>
>                 Recently I was trying to cite a package where the
>                 authors have ?
>                 and ? in their names. I found that on Windows the
>                 citation() function
>                 did not return the authors' names at all, but on Linux
>                 there was no
>                 problem (sessionInfos at the bottom):
>
>                 On Windows, no author names are returned:
>
>
>             I'm not seeing this.  You have fairly strange localization
>             settings; see
>             comments below.
>
>
>                 #---------------
>
>                  > citation("readr")
>
>                 To cite package ?readr? in publications use:
>
>                    (2017). readr: Read Rectangular Text Data. R package
>                 version 1.1.1.
>                    https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN
> .R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.co
> m%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db4
> 7%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQX
> UDbzD3E5EWRM%3D&reserved=0>
>
>                 A BibTeX entry for LaTeX users is
>
>                    @Manual{,
>                      title = {readr: Read Rectangular Text Data},
>                      year = {2017},
>                      note = {R package version 1.1.1},
>                      url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>                 <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>                    }
>
>                 ATTENTION: This citation information has been
>                 auto-generated from the
>                 package DESCRIPTION file and may need manual editing, see
>                 ?help("citation")?.
>                 #---------------
>
>                 On Linux we do see the author names:
>
>                 #---------------
>                  > citation("readr")
>
>                 To cite package ?readr? in publications use:
>
>                    Hadley Wickham, Jim Hester and Romain Francois
>                 (2017). readr:
>                    Read Rectangular Text Data. R package version 1.1.1.
>                    https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN
> .R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.co
> m%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db4
> 7%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQX
> UDbzD3E5EWRM%3D&reserved=0>
>
>                 A BibTeX entry for LaTeX users is
>
>                    @Manual{,
>                      title = {readr: Read Rectangular Text Data},
>                      author = {Hadley Wickham and Jim Hester and Romain
>                 Francois},
>                      year = {2017},
>                      note = {R package version 1.1.1},
>                      url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>                 <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>                    }
>                 #---------------
>
>                 This appears to be an OS-dependent encoding issue. The
>                 citation function
>                 does not take an encoding argument, so it's not possible
>                 to set the
>                 encoding at the point where that function is used. The
>                 citation function
>                 working with the packageDescription function, which does
>                 have an
>                 encoding argument, but the default is not useful for
>                 Windows when there
>                 is an encoding set in the DESCRIPTION of the package (in
>                 this case
>                 UTF-8).
>
>                 We can set the encoding argument in packageDescription
>                 so it works in
>                 Windows to give the authors as expected, but it is very
>                 inconvenient to
>                 generate citations directly from the output of this
>                 function. So I'd
>                 like to propose a solution this problem by changing one
>                 line in the
>                 packageDescription function, like so, from:
>
>                 #---------------
>                 if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
>                 #---------------
>
>                 to:
>
>                 #---------------
>                 if ((missing(encoding) && Sys.getlocale("LC_CTYPE") ==
>                 "C") |
>                 unname(Sys.info()['sysname']) == "Windows")
>                 #---------------
>
>                 If I understand correctly, that will force
>                 ASCII//TRANSLIT encoding when
>                 DESCRIPTION files are read by packageDescription() on
>                 Windows machines.
>                 The upside is that Windows users will get the authors in
>                 the package
>                 citation, unlike the current situation. The downside is
>                 that the exotic
>                 symbols in the authors' names are replaced with common
>                 ones that are
>                 similar.
>
>                 I think getting the citations to easily include the
>                 authors' names is
>                 pretty important, even if their names have exotic
>                 characters, so this is
>                 worth fixing. Is this edit to packageDescription the
>                 best way to solve
>                 this problem of exotic characters preventing the
>                 authors' names from
>                 showing on Windows?
>
>                 thanks,
>
>                 Ben
>
>
>
>
>                 Windows sessionInfo
>
>                 #---------------
>                  > sessionInfo()
>                 R version 3.4.0 Patched (2017-05-10 r72670)
>                 Platform: x86_64-w64-mingw32/x64 (64-bit)
>                 Running under: Windows 7 x64 (build 7601) Service Pack 
> 1
>
>                 Matrix products: default
>
>                 locale:
>                 [1] LC_COLLATE=English_Australia.1252
>                 [2] LC_CTYPE=Chinese (Simplified)_People's Republic of
>                 China.936
>                 [3] LC_MONETARY=English_Australia.1252
>                 [4] LC_NUMERIC=C
>                 [5] LC_TIME=English_Australia.1252
>
>
>             I don't know what English_Australia.1252 does that's
>             different from what
>             I use (English_Canada.1252), but the Chinese locale setting
>             could cause
>             trouble.  Could you try setting this (presumably in the
>             Windows control
>             panel) to be consistent?  You're using a much simpler
>             setting on Linux.
>
>             Duncan Murdoch
>
>
>                 attached base packages:
>                 [1] stats     graphics  grDevices utils     datasets
>                 methods   base
>
>                 loaded via a namespace (and not attached):
>                   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
>                 tools_3.4.0
>                   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11
>                  knitr_1.16
>                 rlang_0.1.1
>                 [11] fortunes_1.5-4
>                 #---------------
>
>                 Linux sessionInfo:
>
>                 #---------------
>                  > sessionInfo()
>                 R version 3.3.1 (2016-06-21)
>                 Platform: x86_64-pc-linux-gnu (64-bit)
>                 Running under: Ubuntu 16.10
>
>                 locale:
>                   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>                   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>                   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>                   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>                   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>                 [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
>                 attached base packages:
>                 [1] stats     graphics  grDevices utils     datasets
>                 methods   base
>
>                 loaded via a namespace (and not attached):
>                 [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
>                 #---------------
>
>                 ______________________________________________
>                 R-devel at r-project.org <mailto:R-devel at r-project.org>
>                 mailing list
>                 https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEUZ8f7wasDh9RQ7p2DK8%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat
> .ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micro
> soft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7c
> d011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztE
> UZ8f7wasDh9RQ7p2DK8%3D&reserved=0>
>
>
>
>         ______________________________________________
>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>         https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEUZ8f7wasDh9RQ7p2DK8%3D&reserved=0
>         
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat
> .ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micro
> soft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7c
> d011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztE
> UZ8f7wasDh9RQ7p2DK8%3D&reserved=0>
>
>

______________________________________________
R-devel at r-project.org mailing list
https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEUZ8f7wasDh9RQ7p2DK8%3D&reserved=0

From jorismeys at gmail.com  Fri Jun 23 16:35:49 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Fri, 23 Jun 2017 16:35:49 +0200
Subject: [Rd] LC_TIME not set correctly by Sys.setlocale() ?
Message-ID: <CAO1zAVYxXPnNyBTyC2PXPxe-o1h=kJzKUyR=ARNCAi_gO3siug@mail.gmail.com>

Related to the following question on Stackoverflow:
https://stackoverflow.com/questions/44723690/unexpected-behavior-of-sys-setlocale#44723690

It appears as if Sys.setlocale() does not update LC_TIME correctly for use
in date formatting. Although R reports that LC_TIME is changed to the new
setting after use of Sys.setlocale(), as.Date() still uses the old
settings. The only way to update this is by specifically using LC_TIME.

Is this a bug or am I overlooking something?

Example:

> Sys.setlocale(locale = "French_Belgium")
[1]
"LC_COLLATE=French_Belgium.1252;LC_CTYPE=French_Belgium.1252;LC_MONETARY=French_Belgium.1252;LC_NUMERIC=C;LC_TIME=French_Belgium.1252"

> date <- "Dec-11"

> as.Date(date, format = "%b-%d")
[1] NA # expected

> Sys.setlocale(locale = "English_United Kingdom")
[1] "LC_COLLATE=English_United Kingdom.1252;LC_CTYPE=English_United
Kingdom.1252;LC_MONETARY=English_United
Kingdom.1252;LC_NUMERIC=C;LC_TIME=English_United Kingdom.1252"

> as.Date(date, format = "%b-%d")
[1] NA # not expected, should be a correct date

> Sys.setlocale("LC_TIME", "English_United Kingdom")
[1] "English_United Kingdom.1252"

> as.Date(date, format = "%b-%d")
[1] "2017-12-11" # expected

> Sys.setlocale(locale = "French_Belgium")
[1]
"LC_COLLATE=French_Belgium.1252;LC_CTYPE=French_Belgium.1252;LC_MONETARY=French_Belgium.1252;LC_NUMERIC=C;LC_TIME=French_Belgium.1252"

> as.Date(date, format = "%b-%d")
[1] "2017-12-11" # not expected, should be NA

> Sys.setlocale("LC_TIME", "French_Belgium")
[1] "French_Belgium.1252"

> as.Date(date, format = "%b-%d")
[1] NA # expected

> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

Matrix products: default

locale:
[1] LC_COLLATE=French_Belgium.1252  LC_CTYPE=French_Belgium.1252
[3] LC_MONETARY=French_Belgium.1252 LC_NUMERIC=C
[5] LC_TIME=French_Belgium.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

other attached packages:
[1] shiny_1.0.3

loaded via a namespace (and not attached):
[1] compiler_3.4.0  R6_2.2.1        htmltools_0.3.6 tools_3.4.0
Rcpp_0.12.10
[6] digest_0.6.12   xtable_1.8-2    httpuv_1.3.3    mime_0.5



-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From ripley at stats.ox.ac.uk  Fri Jun 23 17:01:53 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 23 Jun 2017 16:01:53 +0100
Subject: [Rd] v3.4.0-2 incompatible with gcc 7.1
In-Reply-To: <CAFut0+8VVZ+oCja9QypnuQ17GdUcXijBkjuVgYrgGweEAOJPYg@mail.gmail.com>
References: <CAFut0+8VVZ+oCja9QypnuQ17GdUcXijBkjuVgYrgGweEAOJPYg@mail.gmail.com>
Message-ID: <f0a264bc-dca3-2c65-1cab-29991e832b29@stats.ox.ac.uk>

R is compatible with GCC 7.1 !  New compiler versions are tested, as 
well as those under development for the major compilers.  (A few 
packages still fail with GCC 7.1, but that was reported to their 
maintainers months ago.)

Just follow the instructions in the R-admin manual to install from sources.

OTOH, ' v3.4.0-2 ' is not an R version number, so I think you are 
referring to binary distributions on your Linux distro, which are not 
the responsibility of 'Rcore or Rdevel' (whatever they are).

On 23/06/2017 14:40, Chris Cole wrote:
> I'm on Arch Linux kernel version 4.11.6-1 using gcc version 7.1.1:
> 
> gcc --version
> gcc (GCC) 7.1.1 20170516
> 
> I have installed R through the arch package manager pacman and when I
> attempt to initiate it, R crashes stating a missing dependency:
> 
> /usr/lib64/R/bin/exec/R: error while loading shared libraries:
> libgfortran.so.3: cannot open shared object file: No such file or directory
> 
> I thought that maybe a symlink was improperly placed in the package so I
> looked in /usr/lib to try to find the offending library.
> 
> ls -halt /usr/lib/libgfortran.so.*
> lrwxrwxrwx 1 root root 20 May 16 03:01 /usr/lib/libgfortran.so.4 ->
> libgfortran.so.4.0.0
> -rwxr-xr-x 1 root root 7.1M May 16 03:01 /usr/lib/libgfortran.so.4.0.0
> 
> Simply symlinking libgfortran.so.4.0.0 to libgfortran.so.3 did not work,
> and after some questioning on SO (
> https://stackoverflow.com/questions/44658867/r-v3-4-0-2-unable-to-find-libgfortran-so-3-on-arch)
> it seems that gfortran 7 has bumped the .so object to version 4.
> 
> It seems that a relatively straightforward workaround for the present would
> be to install a legacy version of gcc alongside the current version.
> 
> I'm wondering if Rcore or Rdevel are moving towards being able to handle
> the new compiler version any time soon, and if there are any other
> workarounds than having two versions of the compiler.
> 
> Thanks.
> 
> Chris
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From ripley at stats.ox.ac.uk  Fri Jun 23 17:25:52 2017
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 23 Jun 2017 16:25:52 +0100
Subject: [Rd] LC_TIME not set correctly by Sys.setlocale() ?
In-Reply-To: <CAO1zAVYxXPnNyBTyC2PXPxe-o1h=kJzKUyR=ARNCAi_gO3siug@mail.gmail.com>
References: <CAO1zAVYxXPnNyBTyC2PXPxe-o1h=kJzKUyR=ARNCAi_gO3siug@mail.gmail.com>
Message-ID: <871e9e25-1b39-dbf4-212f-c7a83785e50a@stats.ox.ac.uk>

On 23/06/2017 15:35, Joris Meys wrote:
> Related to the following question on Stackoverflow:
> https://stackoverflow.com/questions/44723690/unexpected-behavior-of-sys-setlocale#44723690
> 
> It appears as if Sys.setlocale() does not update LC_TIME correctly for use
> in date formatting. Although R reports that LC_TIME is changed to the new
> setting after use of Sys.setlocale(), as.Date() still uses the old
> settings. The only way to update this is by specifically using LC_TIME.
> 
> Is this a bug or am I overlooking something?

Try setting the LC_TIME category explicitly.  The mapping of day/month 
names used by strptime (not really as.Date, and not taken from LC_TIME) 
is then reset.

Since Windows does not have a usable strptime C function, a substitute 
is used and its handing of non-English names is not done through the 
OS's locale mechanism.

> Example:
> 
>> Sys.setlocale(locale = "French_Belgium")
> [1]
> "LC_COLLATE=French_Belgium.1252;LC_CTYPE=French_Belgium.1252;LC_MONETARY=French_Belgium.1252;LC_NUMERIC=C;LC_TIME=French_Belgium.1252"
> 
>> date <- "Dec-11"
> 
>> as.Date(date, format = "%b-%d")
> [1] NA # expected
> 
>> Sys.setlocale(locale = "English_United Kingdom")
> [1] "LC_COLLATE=English_United Kingdom.1252;LC_CTYPE=English_United
> Kingdom.1252;LC_MONETARY=English_United
> Kingdom.1252;LC_NUMERIC=C;LC_TIME=English_United Kingdom.1252"
> 
>> as.Date(date, format = "%b-%d")
> [1] NA # not expected, should be a correct date
> 
>> Sys.setlocale("LC_TIME", "English_United Kingdom")
> [1] "English_United Kingdom.1252"
> 
>> as.Date(date, format = "%b-%d")
> [1] "2017-12-11" # expected
> 
>> Sys.setlocale(locale = "French_Belgium")
> [1]
> "LC_COLLATE=French_Belgium.1252;LC_CTYPE=French_Belgium.1252;LC_MONETARY=French_Belgium.1252;LC_NUMERIC=C;LC_TIME=French_Belgium.1252"
> 
>> as.Date(date, format = "%b-%d")
> [1] "2017-12-11" # not expected, should be NA
> 
>> Sys.setlocale("LC_TIME", "French_Belgium")
> [1] "French_Belgium.1252"
> 
>> as.Date(date, format = "%b-%d")
> [1] NA # expected
> 
>> sessionInfo()
> R version 3.4.0 (2017-04-21)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 7 x64 (build 7601) Service Pack 1
> 
> Matrix products: default
> 
> locale:
> [1] LC_COLLATE=French_Belgium.1252  LC_CTYPE=French_Belgium.1252
> [3] LC_MONETARY=French_Belgium.1252 LC_NUMERIC=C
> [5] LC_TIME=French_Belgium.1252
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> other attached packages:
> [1] shiny_1.0.3
> 
> loaded via a namespace (and not attached):
> [1] compiler_3.4.0  R6_2.2.1        htmltools_0.3.6 tools_3.4.0
> Rcpp_0.12.10
> [6] digest_0.6.12   xtable_1.8-2    httpuv_1.3.3    mime_0.5
> 
> 
> 


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


From jorismeys at gmail.com  Fri Jun 23 17:40:44 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Fri, 23 Jun 2017 17:40:44 +0200
Subject: [Rd] LC_TIME not set correctly by Sys.setlocale() ?
In-Reply-To: <871e9e25-1b39-dbf4-212f-c7a83785e50a@stats.ox.ac.uk>
References: <CAO1zAVYxXPnNyBTyC2PXPxe-o1h=kJzKUyR=ARNCAi_gO3siug@mail.gmail.com>
 <871e9e25-1b39-dbf4-212f-c7a83785e50a@stats.ox.ac.uk>
Message-ID: <CAO1zAVbr1tES93ae1W03C6q5OvTnSfD5V-JY18bUAK0amN-U-w@mail.gmail.com>

Dear prof. Ripley,

thank you for your answer. A few additional questions below.

On Fri, Jun 23, 2017 at 5:25 PM, Prof Brian Ripley <ripley at stats.ox.ac.uk>
wrote:

> On 23/06/2017 15:35, Joris Meys wrote:
>
>> Related to the following question on Stackoverflow:
>> https://stackoverflow.com/questions/44723690/unexpected-beha
>> vior-of-sys-setlocale#44723690
>>
>> It appears as if Sys.setlocale() does not update LC_TIME correctly for use
>> in date formatting. Although R reports that LC_TIME is changed to the new
>> setting after use of Sys.setlocale(), as.Date() still uses the old
>> settings. The only way to update this is by specifically using LC_TIME.
>>
>> Is this a bug or am I overlooking something?
>>
>
> Try setting the LC_TIME category explicitly.  The mapping of day/month
> names used by strptime (not really as.Date, and not taken from LC_TIME) is
> then reset.
>

I have done so in the example, and I am aware that the underlying function
is strptime. I just wondered why setting LC_ALL did not refresh the
mapping, as LC_ALL -afaik- also updates LC_TIME to a new locale

>
> Since Windows does not have a usable strptime C function, a substitute is
> used and its handing of non-English names is not done through the OS's
> locale mechanism.


This explains the behaviour. Is there a reason why this substitute is only
updating the mapping of day/month names when LC_TIME is set explicitly and
not when LC_ALL (and hence also LC_TIME) is set?

Regards
Joris

-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From pauljohn32 at gmail.com  Fri Jun 23 18:17:23 2017
From: pauljohn32 at gmail.com (Paul Johnson)
Date: Fri, 23 Jun 2017 11:17:23 -0500
Subject: [Rd] duplicated factor labels.
In-Reply-To: <68209993-af21-f019-9354-57b8a81c9d82@statistik.tu-dortmund.de>
References: <CAErODj_GVi8=+OS19P3-0tbucji4thQ7e117s5gpEbGh7+hz0A@mail.gmail.com>
 <22850.42117.436677.257822@stat.math.ethz.ch>
 <CAO1zAVZptExbn+o-Okk+h4ehQGup0Vu_iXT45ysOpW8-DsNV0w@mail.gmail.com>
 <CAErODj-eELF1zpEN=XGveZT6QfQ3CRb+HcLxVXjFGDdBmKRWFg@mail.gmail.com>
 <22859.37215.221346.141558@stat.math.ethz.ch>
 <22860.54390.340602.803506@stat.math.ethz.ch>
 <1B66E873-E092-47B2-845F-DC13FDBDD4B6@gmail.com>
 <68209993-af21-f019-9354-57b8a81c9d82@statistik.tu-dortmund.de>
Message-ID: <CAErODj_SjDLEasT2QxUgjrYtoBKcfKz7Re6y5OWg1=yfyRYvMg@mail.gmail.com>

On Fri, Jun 23, 2017 at 7:20 AM, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
>
> On 23.06.2017 11:51, peter dalgaard wrote:
>>
>> Hmm, the danger in this is that duplicated factor levels _used_ to be
>> allowed (i.e. multiple codes with the same level). Disallowing it is what
>> broke read.spss() on some files, because SPSS's concept of value labels is
>> not 1-to-1 with factors.
>>
>> Reallowing it with different semantics could be premature. I mean, if we
>> hadn't had the "forbidden" step, read.spss() could have changed behaviour
>> unnoticed. So what if there is code relying on duplicate factor levels,
>> which hasn't been run for some time?
>
>
> Indeed.
>
> The read.spss code now allows for two things, one is to do what Martin
> implemented, the other one is to keep the labels seperated and rename them
> to be unique (the latter is the default now, explanation follows below).
>
> Quite often we found something like the following example in SPSS files,
> translated into R speak:
>
> factor(c(1,3,2,4,5,3,1), levels=1:5, labels=c("Strongly disagree",
> "Disagree", "Neither agree nor disagree", "Agree", "Agree"))
>
> where the last is a simple copy and paste error and should be "Strongly
> agree".
>
> I had the chance to look at > 1300 SPSS files our consulting center
> collected during the last 20 year, and in several hundred cases we found
> such a problem that was copy & paste error and simply wrong.
> Only in < 5 cases condensing several levels into one was appropriate, hence
> we decided to keep duplicated levels by changing the names as the default.
>
> Based on this experience I'd propose no to touch factor but rather add a
> function that easily allows for this reduction, if we do not have that
> already.
>
> Best,
> Uwe
>
>
If the factor function stays the way it was, I have a suggestion Uwe's
suggest R should add a function to facilitate reduction of labels.

There is a function named "mapvalues" in H Wickham's plyr package and
it works well to combine levels.  It is a generally useful recoding
function, works with integers and characters as well. It also seems to
work with numeric variables.  This is pure R, it does not carry along
with it any external dependencies. No need for Rcpp, %>% or any thing
else.

Of the things we have tried with the average users who come and go,
mapvalues is the most understandable/successful. It is more convenient
than levels()<- because Users need not name all existing levels.

I suggest you consider putting that function in R base.

I'm pasting in the code to save you the trouble of looking it up. I
thought recursion  to re-code factors was clever.  I don't entirely
understand how it can work on double precision floats, it is relying
on match for that.


#' Replace specified values with new values, in a vector or factor.
#'
#' Item in \code{x} that match items \code{from} will be replaced by
#' items in \code{to}, matched by position. For example, items in \code{x} that
#' match the first element in \code{from} will be replaced by the first
#' element of \code{to}.
#'
#' If \code{x} is a factor, the matching levels of the factor will be
#' replaced with the new values.
#'
#' The related \code{revalue} function works only on character vectors
#' and factors, but this function works on vectors of any type and factors.
#'
#' @param x the factor or vector to modify
#' @param from a vector of the items to replace
#' @param to a vector of replacement values
#' @param warn_missing print a message if any of the old values are
#'   not actually present in \code{x}
#'
#' @seealso \code{\link{revalue}} to do the same thing but with a single
#'   named vector instead of two separate vectors.
#' @export
#' @examples
#' x <- c("a", "b", "c")
#' mapvalues(x, c("a", "c"), c("A", "C"))
#'
#' # Works on factors
#' y <- factor(c("a", "b", "c", "a"))
#' mapvalues(y, c("a", "c"), c("A", "C"))
#'
#' # Works on numeric vectors
#' z <- c(1, 4, 5, 9)
#' mapvalues(z, from = c(1, 5, 9), to = c(10, 50, 90))
mapvalues <- function(x, from, to, warn_missing = TRUE) {
  if (length(from) != length(to)) {
    stop("`from` and `to` vectors are not the same length.")
  }
  if (!is.atomic(x)) {
    stop("`x` must be an atomic vector.")
  }

  if (is.factor(x)) {
    # If x is a factor, call self but operate on the levels
    levels(x) <- mapvalues(levels(x), from, to, warn_missing)
    return(x)
  }

  mapidx <- match(x, from)
  mapidxNA  <- is.na(mapidx)

  # index of items in `from` that were found in `x`
  from_found <- sort(unique(mapidx))
  if (warn_missing && length(from_found) != length(from)) {
    message("The following `from` values were not present in `x`: ",
      paste(from[!(1:length(from) %in% from_found) ], collapse = ", "))
  }

  x[!mapidxNA] <- to[mapidx[!mapidxNA]]
  x
}

In the rockchalk package, I wrote a function called combineLevels that
is careful with ordinal variables and only allows adjacent values to
be combined. I'm not suggesting you go that far with this simple
piece.

>
>
>
>
>>
>> -pd
>>
>>> On 23 Jun 2017, at 10:42 , Martin Maechler <maechler at stat.math.ethz.ch>
>>> wrote:
>>>
>>>>>>>> Martin Maechler <maechler at stat.math.ethz.ch>
>>>>>>>>     on Thu, 22 Jun 2017 11:43:59 +0200 writes:
>>>
>>>
>>>>>>>> Paul Johnson <pauljohn32 at gmail.com>
>>>>>>>>     on Fri, 16 Jun 2017 11:02:34 -0500 writes:
>>>
>>>
>>>>> On Fri, Jun 16, 2017 at 2:35 AM, Joris Meys <jorismeys at gmail.com>
>>>>> wrote:
>>>>>>
>>>>>> To extwnd on Martin 's explanation :
>>>>>>
>>>>>> In factor(), levels are the unique input values and labels the unique
>>>>>> output
>>>>>> values. So the function levels() actually displays the labels.
>>>>>>
>>>
>>>>> Dear Joris
>>>
>>>
>>>>> I think we agree. Currently, factor insists both levels and labels be
>>>>> unique.
>>>
>>>
>>>>> I wish that it would not accept nonunique labels. I also understand it
>>>>> is impractical to change this now in base R.
>>>
>>>
>>>>> I don't think I succeeded in explaining why this would be nicer.
>>>>> Here's another example. Fairly often, we see input data like
>>>
>>>
>>>>> x <- c("Male", "Man", "male", "Man", "Female")
>>>
>>>
>>>>> The first four represent the same value.  I'd like to go in one step
>>>>> to a new factor variable with enumerated types "Male" and "Female".
>>>>> This fails
>>>
>>>
>>>>> xf <- factor(x, levels = c("Male", "Man", "male", "Female"),
>>>>> labels = c("Male", "Male", "Male", "Female"))
>>>
>>>
>>>>> Instead, we need 2 steps.
>>>
>>>
>>>>> xf <- factor(x, levels = c("Male", "Man", "male", "Female"))
>>>>> levels(xf) <- c("Male", "Male", "Male", "Female")
>>>
>>>
>>>>> I think it is quirky that `levels<-.factor` allows the duplicated
>>>>> labels, whereas factor does not.
>>>
>>>
>>>>> I wrote a function rockchalk::combineLevels to simplify combining
>>>>> levels, but most of the students here like plyr::mapvalues to do it.
>>>>> The use of levels() can be tricky because one must enumerate all
>>>>> values, not just the ones being changed.
>>>
>>>
>>>>> But I do understand Martin's point. Its been this way 25 years, it
>>>>> won't change. :).
>>>
>>>
>>>> Well.. the above is a bit out of context.
>>>
>>>
>>>> Your first example really did not make a point to me (and Joris)
>>>> and I showed that you could use even two different simple factor() calls
>>>> to
>>>> produce what you wanted
>>>> yc <- factor(c("1",NA,NA,"4","4","4"))
>>>> yn <- factor(c( 1, NA,NA, 4,  4,  4))
>>>
>>>
>>>> Your new example is indeed  much more convincing !
>>>
>>>
>>>> (Note though that the two steps that are needed can be written
>>>> more shortly
>>>
>>>
>>>> The  "been this way 25 years"  is one a reason to be very
>>>> cautious(*) with changes, but not a reason for no changes!
>>>
>>>
>>>> (*) Indeed as some of you have noted we really should not "break
>>>> behavior".
>>>> This means to me we cannot accept a change there which gives
>>>> an error or a different result in cases the old behavior gave a valid
>>>> factor.
>>>
>>>
>>>> I'm looking at a possible change currently
>>>> [not promising that a change will happen ...]
>>>
>>>
>>> In the end, I've liked the change (after 2-3 iterations), and
>>> now been brave to commit to R-devel (svn 72845).
>>>
>>> With the change, I had to disable one of our own regression
>>> checks (tests/reg-tests-1b.R, line 726):
>>>
>>> The following is now (in R-devel -> R 3.5.0) valid:
>>>
>>>> factor(1:2, labels = c("A","A"))
>>>
>>>    [1] A A
>>>    Levels: A
>>>>
>>>>
>>>
>>> I wonder how many CRAN package checks will "break" from
>>> this (my guess is in the order of a dozen), but I hope
>>> that these breakages will be benign, e.g., similar to the above
>>> case where before an error was expected via tools :: assertError(.)
>>>
>>> Martin
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From chris.c.1221 at gmail.com  Fri Jun 23 19:32:01 2017
From: chris.c.1221 at gmail.com (Chris Cole)
Date: Fri, 23 Jun 2017 17:32:01 +0000
Subject: [Rd] v3.4.0-2 incompatible with gcc 7.1
In-Reply-To: <f0a264bc-dca3-2c65-1cab-29991e832b29@stats.ox.ac.uk>
References: <CAFut0+8VVZ+oCja9QypnuQ17GdUcXijBkjuVgYrgGweEAOJPYg@mail.gmail.com>
 <f0a264bc-dca3-2c65-1cab-29991e832b29@stats.ox.ac.uk>
Message-ID: <CAFut0+8OzW9nJFLYUqKymjkd+Vu8jTtBs_bP9m6_OS87ECx1Yw@mail.gmail.com>

Thank you for correcting my misunderstandings, Professor. Compiling from
source did the trick, and I'll be following up with the arch maintainers
about addressing the issue on their end.

Best,

Chris

On Fri, 23 Jun 2017 at 11:02 Prof Brian Ripley <ripley at stats.ox.ac.uk>
wrote:

> R is compatible with GCC 7.1 !  New compiler versions are tested, as
> well as those under development for the major compilers.  (A few
> packages still fail with GCC 7.1, but that was reported to their
> maintainers months ago.)
>
> Just follow the instructions in the R-admin manual to install from sources.
>
> OTOH, ' v3.4.0-2 ' is not an R version number, so I think you are
> referring to binary distributions on your Linux distro, which are not
> the responsibility of 'Rcore or Rdevel' (whatever they are).
>
> On 23/06/2017 14:40, Chris Cole wrote:
> > I'm on Arch Linux kernel version 4.11.6-1 using gcc version 7.1.1:
> >
> > gcc --version
> > gcc (GCC) 7.1.1 20170516
> >
> > I have installed R through the arch package manager pacman and when I
> > attempt to initiate it, R crashes stating a missing dependency:
> >
> > /usr/lib64/R/bin/exec/R: error while loading shared libraries:
> > libgfortran.so.3: cannot open shared object file: No such file or
> directory
> >
> > I thought that maybe a symlink was improperly placed in the package so I
> > looked in /usr/lib to try to find the offending library.
> >
> > ls -halt /usr/lib/libgfortran.so.*
> > lrwxrwxrwx 1 root root 20 May 16 03:01 /usr/lib/libgfortran.so.4 ->
> > libgfortran.so.4.0.0
> > -rwxr-xr-x 1 root root 7.1M May 16 03:01 /usr/lib/libgfortran.so.4.0.0
> >
> > Simply symlinking libgfortran.so.4.0.0 to libgfortran.so.3 did not work,
> > and after some questioning on SO (
> >
> https://stackoverflow.com/questions/44658867/r-v3-4-0-2-unable-to-find-libgfortran-so-3-on-arch
> )
> > it seems that gfortran 7 has bumped the .so object to version 4.
> >
> > It seems that a relatively straightforward workaround for the present
> would
> > be to install a legacy version of gcc alongside the current version.
> >
> > I'm wondering if Rcore or Rdevel are moving towards being able to handle
> > the new compiler version any time soon, and if there are any other
> > workarounds than having two versions of the compiler.
> >
> > Thanks.
> >
> > Chris
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Emeritus Professor of Applied Statistics, University of Oxford
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From istazahn at gmail.com  Sat Jun 24 02:35:25 2017
From: istazahn at gmail.com (Ista Zahn)
Date: Fri, 23 Jun 2017 20:35:25 -0400
Subject: [Rd] v3.4.0-2 incompatible with gcc 7.1
In-Reply-To: <CAFut0+8OzW9nJFLYUqKymjkd+Vu8jTtBs_bP9m6_OS87ECx1Yw@mail.gmail.com>
References: <CAFut0+8VVZ+oCja9QypnuQ17GdUcXijBkjuVgYrgGweEAOJPYg@mail.gmail.com>
 <f0a264bc-dca3-2c65-1cab-29991e832b29@stats.ox.ac.uk>
 <CAFut0+8OzW9nJFLYUqKymjkd+Vu8jTtBs_bP9m6_OS87ECx1Yw@mail.gmail.com>
Message-ID: <CA+vqiLG0oPWYAbeGDtpAD6uJ8CoWFoy=sp_hvBVw04O3hv951g@mail.gmail.com>

FWIW, I don't have any problems with R on Arch Linux.

On Jun 23, 2017 1:32 PM, "Chris Cole" <chris.c.1221 at gmail.com> wrote:

> Thank you for correcting my misunderstandings, Professor. Compiling from
> source did the trick, and I'll be following up with the arch maintainers
> about addressing the issue on their end.
>
> Best,
>
> Chris
>
> On Fri, 23 Jun 2017 at 11:02 Prof Brian Ripley <ripley at stats.ox.ac.uk>
> wrote:
>
> > R is compatible with GCC 7.1 !  New compiler versions are tested, as
> > well as those under development for the major compilers.  (A few
> > packages still fail with GCC 7.1, but that was reported to their
> > maintainers months ago.)
> >
> > Just follow the instructions in the R-admin manual to install from
> sources.
> >
> > OTOH, ' v3.4.0-2 ' is not an R version number, so I think you are
> > referring to binary distributions on your Linux distro, which are not
> > the responsibility of 'Rcore or Rdevel' (whatever they are).
> >
> > On 23/06/2017 14:40, Chris Cole wrote:
> > > I'm on Arch Linux kernel version 4.11.6-1 using gcc version 7.1.1:
> > >
> > > gcc --version
> > > gcc (GCC) 7.1.1 20170516
> > >
> > > I have installed R through the arch package manager pacman and when I
> > > attempt to initiate it, R crashes stating a missing dependency:
> > >
> > > /usr/lib64/R/bin/exec/R: error while loading shared libraries:
> > > libgfortran.so.3: cannot open shared object file: No such file or
> > directory
> > >
> > > I thought that maybe a symlink was improperly placed in the package so
> I
> > > looked in /usr/lib to try to find the offending library.
> > >
> > > ls -halt /usr/lib/libgfortran.so.*
> > > lrwxrwxrwx 1 root root 20 May 16 03:01 /usr/lib/libgfortran.so.4 ->
> > > libgfortran.so.4.0.0
> > > -rwxr-xr-x 1 root root 7.1M May 16 03:01 /usr/lib/libgfortran.so.4.0.0
> > >
> > > Simply symlinking libgfortran.so.4.0.0 to libgfortran.so.3 did not
> work,
> > > and after some questioning on SO (
> > >
> > https://stackoverflow.com/questions/44658867/r-v3-4-0-2-
> unable-to-find-libgfortran-so-3-on-arch
> > )
> > > it seems that gfortran 7 has bumped the .so object to version 4.
> > >
> > > It seems that a relatively straightforward workaround for the present
> > would
> > > be to install a legacy version of gcc alongside the current version.
> > >
> > > I'm wondering if Rcore or Rdevel are moving towards being able to
> handle
> > > the new compiler version any time soon, and if there are any other
> > > workarounds than having two versions of the compiler.
> > >
> > > Thanks.
> > >
> > > Chris
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
> >
> >
> > --
> > Brian D. Ripley,                  ripley at stats.ox.ac.uk
> > Emeritus Professor of Applied Statistics, University of Oxford
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From richcala at microsoft.com  Sat Jun 24 03:34:12 2017
From: richcala at microsoft.com (Rich Calaway)
Date: Sat, 24 Jun 2017 01:34:12 +0000
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
Message-ID: <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>

The following patch is not the most elegant, but it restores the Authors when "LC_CTYPE" is set to either "Chinese" or "Arabic":

> Sys.setlocale("LC_CTYPE", "Chinese")
[1] "Chinese (Simplified)_China.936"
> citation("readr")

To cite package ?readr? in publications use:

  (2016). readr: Read Tabular Data. R package version 1.0.0.
  https://CRAN.R-project.org/package=readr

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {readr: Read Tabular Data},
    year = {2016},
    note = {R package version 1.0.0},
    url = {https://CRAN.R-project.org/package=readr},
  }

ATTENTION: This citation information has been auto-generated from the
package DESCRIPTION file and may need manual editing, see
?help("citation")?.

> Sys.setlocale("LC_CTYPE", "Arabic")
[1] "Arabic_Saudi Arabia.1256"
> citation("readr")

To cite package ?readr? in publications use:

  (2016). readr: Read Tabular Data. R package version 1.0.0.
  https://CRAN.R-project.org/package=readr

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {readr: Read Tabular Data},
    year = {2016},
    note = {R package version 1.0.0},
    url = {https://CRAN.R-project.org/package=readr},
  }

ATTENTION: This citation information has been auto-generated from the
package DESCRIPTION file and may need manual editing, see
?help("citation")?.

> citation <- newCitation
> citation("readr")

To cite package ?readr? in publications use:

  Hadley Wickham, Jim Hester and Romain Francois (2016). readr: Read
  Tabular Data. R package version 1.0.0.
  https://CRAN.R-project.org/package=readr

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {readr: Read Tabular Data},
    author = {Hadley Wickham and Jim Hester and Romain Francois},
    year = {2016},
    note = {R package version 1.0.0},
    url = {https://CRAN.R-project.org/package=readr},
  }



The patch is:

Index: citation.R
===================================================================
--- citation.R	(revision 72852)
+++ citation.R	(working copy)
@@ -1162,8 +1162,11 @@
         if(dir == "")
             stop(gettextf("package %s not found", sQuote(package)),
                  domain = NA)
-        meta <- packageDescription(pkg = package,
-                                   lib.loc = dirname(dir))
+	    args <- list(pkg = package, lib.loc = dirname(dir))
+	    if (!is.na(enc <- packageDescription(pkg = package, lib.loc=dirname(dir), field="Encoding")))
+		    args$enc <- enc
+        meta <- do.call("packageDescription", args=args)
+
         ## if(is.null(auto)): Use default auto-citation if no CITATION
         ## available.
         citfile <- file.path(dir, "CITATION")


Nathan says he can look into this further next week...

Cheers,

Rich Calaway
Microsoft R Product Team
24/1341
+1 (425) 4219919 X19919

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Nathan Sosnovske via R-devel
Sent: Friday, June 23, 2017 7:36 AM
To: Duncan Murdoch <murdoch.duncan at gmail.com>; Andrie de Vries <apdevries at gmail.com>
Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

Hi Duncan,

I'm guessing I'll be able to look at this over the weekend/next week (probably closer to next week). It is on my list of things to do and I've just had a few other prior commitments that I have to finish first.

Sorry for the delay. I'll chime in with a status update next week.

Nathan

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Duncan Murdoch
Sent: Friday, June 23, 2017 5:16 AM
To: Andrie de Vries <apdevries at gmail.com>
Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

On 18/06/2017 5:57 AM, Andrie de Vries wrote:
> Hi, Duncan
>
> i have forwarded this thread to Nathan, who promised to look into it.

Any progress on this?

Duncan Murdoch

>
> Andrie
>
> On 17 Jun 2017 17:26, "Duncan Murdoch" <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
>
>     On 17/06/2017 9:13 AM, Ben Marwick wrote:
>
>         Hi Duncan,
>
>         Thanks for your reply. Yes, it does seem to be specific to the CTYPE
>         setting to Chinese on Windows. If I set it to English using
>         Sys.setlocale() there is no problem, then back to Chinese and the
>         authors disappear:
>
>         Sys.setlocale("LC_ALL","English")
>         citation("readr")
>
>
>     Thanks, that makes the problem reproducible.  I'll submit it as a
>     bug report.  Maybe someone from Microsoft will fix it.
>
>     Duncan Murdoch
>
>
>         #' To cite package ?readr? in publications use:
>         #'
>         #'   Hadley Wickham, Jim Hester and Romain Francois (2017).
>         readr: Read
>         #' Rectangular Text Data. R package version 1.1.1.
>         #' https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>
>         #'
>         #' A BibTeX entry for LaTeX users is
>         #'
>         #' @Manual{,
>         #'   title = {readr: Read Rectangular Text Data},
>         #'   author = {Hadley Wickham and Jim Hester and Romain Francois},
>         #'   year = {2017},
>         #'   note = {R package version 1.1.1},
>         #'   url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>         #' }
>
>
>         Sys.setlocale("LC_CTYPE", "Chinese")
>         citation("readr")
>
>         #'
>         #' To cite package ?readr? in publications use:
>         #'
>         #'   (2017). readr: Read Rectangular Text Data. R package
>         version 1.1.1.
>         #' https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>
>         #'
>         #' A BibTeX entry for LaTeX users is
>         #'
>         #' @Manual{,
>         #'   title = {readr: Read Rectangular Text Data},
>         #'   year = {2017},
>         #'   note = {R package version 1.1.1},
>         #'   url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>         #' }
>         #'
>         #' ATTENTION: This citation information has been auto-generated
>         from the
>         #' package DESCRIPTION file and may need manual editing, see
>         #' ?help("citation")?.
>
>         Where do we go from here? I do want to use the Chinese locale
>         with R on
>         Windows (and perhaps others do too), so switching the locale
>         isn't a fix.
>
>         Thanks,
>
>         Ben
>
>         On 17/06/2017 10:36 PM, Duncan Murdoch wrote:
>
>             On 17/06/2017 7:10 AM, Ben Marwick wrote:
>
>                 Recently I was trying to cite a package where the
>                 authors have ?
>                 and ? in their names. I found that on Windows the
>                 citation() function
>                 did not return the authors' names at all, but on Linux
>                 there was no
>                 problem (sessionInfos at the bottom):
>
>                 On Windows, no author names are returned:
>
>
>             I'm not seeing this.  You have fairly strange localization
>             settings; see
>             comments below.
>
>
>                 #---------------
>
>                  > citation("readr")
>
>                 To cite package ?readr? in publications use:
>
>                    (2017). readr: Read Rectangular Text Data. R package
>                 version 1.1.1.
>                    
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.
> R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com
> %7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47
> %7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXU
> DbzD3E5EWRM%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN
> .R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.co
> m%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db4
> 7%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQX
> UDbzD3E5EWRM%3D&reserved=0>
>
>                 A BibTeX entry for LaTeX users is
>
>                    @Manual{,
>                      title = {readr: Read Rectangular Text Data},
>                      year = {2017},
>                      note = {R package version 1.1.1},
>                      url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>                 <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>                    }
>
>                 ATTENTION: This citation information has been
>                 auto-generated from the
>                 package DESCRIPTION file and may need manual editing, see
>                 ?help("citation")?.
>                 #---------------
>
>                 On Linux we do see the author names:
>
>                 #---------------
>                  > citation("readr")
>
>                 To cite package ?readr? in publications use:
>
>                    Hadley Wickham, Jim Hester and Romain Francois
>                 (2017). readr:
>                    Read Rectangular Text Data. R package version 1.1.1.
>                    
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.
> R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com
> %7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47
> %7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXU
> DbzD3E5EWRM%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN
> .R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.co
> m%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db4
> 7%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQX
> UDbzD3E5EWRM%3D&reserved=0>
>
>                 A BibTeX entry for LaTeX users is
>
>                    @Manual{,
>                      title = {readr: Read Rectangular Text Data},
>                      author = {Hadley Wickham and Jim Hester and Romain
>                 Francois},
>                      year = {2017},
>                      note = {R package version 1.1.1},
>                      url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>                 <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>                    }
>                 #---------------
>
>                 This appears to be an OS-dependent encoding issue. The
>                 citation function
>                 does not take an encoding argument, so it's not possible
>                 to set the
>                 encoding at the point where that function is used. The
>                 citation function
>                 working with the packageDescription function, which does
>                 have an
>                 encoding argument, but the default is not useful for
>                 Windows when there
>                 is an encoding set in the DESCRIPTION of the package (in
>                 this case
>                 UTF-8).
>
>                 We can set the encoding argument in packageDescription
>                 so it works in
>                 Windows to give the authors as expected, but it is very
>                 inconvenient to
>                 generate citations directly from the output of this
>                 function. So I'd
>                 like to propose a solution this problem by changing one
>                 line in the
>                 packageDescription function, like so, from:
>
>                 #---------------
>                 if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
>                 #---------------
>
>                 to:
>
>                 #---------------
>                 if ((missing(encoding) && Sys.getlocale("LC_CTYPE") ==
>                 "C") |
>                 unname(Sys.info()['sysname']) == "Windows")
>                 #---------------
>
>                 If I understand correctly, that will force
>                 ASCII//TRANSLIT encoding when
>                 DESCRIPTION files are read by packageDescription() on
>                 Windows machines.
>                 The upside is that Windows users will get the authors in
>                 the package
>                 citation, unlike the current situation. The downside is
>                 that the exotic
>                 symbols in the authors' names are replaced with common
>                 ones that are
>                 similar.
>
>                 I think getting the citations to easily include the
>                 authors' names is
>                 pretty important, even if their names have exotic
>                 characters, so this is
>                 worth fixing. Is this edit to packageDescription the
>                 best way to solve
>                 this problem of exotic characters preventing the
>                 authors' names from
>                 showing on Windows?
>
>                 thanks,
>
>                 Ben
>
>
>
>
>                 Windows sessionInfo
>
>                 #---------------
>                  > sessionInfo()
>                 R version 3.4.0 Patched (2017-05-10 r72670)
>                 Platform: x86_64-w64-mingw32/x64 (64-bit)
>                 Running under: Windows 7 x64 (build 7601) Service Pack
> 1
>
>                 Matrix products: default
>
>                 locale:
>                 [1] LC_COLLATE=English_Australia.1252
>                 [2] LC_CTYPE=Chinese (Simplified)_People's Republic of
>                 China.936
>                 [3] LC_MONETARY=English_Australia.1252
>                 [4] LC_NUMERIC=C
>                 [5] LC_TIME=English_Australia.1252
>
>
>             I don't know what English_Australia.1252 does that's
>             different from what
>             I use (English_Canada.1252), but the Chinese locale setting
>             could cause
>             trouble.  Could you try setting this (presumably in the
>             Windows control
>             panel) to be consistent?  You're using a much simpler
>             setting on Linux.
>
>             Duncan Murdoch
>
>
>                 attached base packages:
>                 [1] stats     graphics  grDevices utils     datasets
>                 methods   base
>
>                 loaded via a namespace (and not attached):
>                   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
>                 tools_3.4.0
>                   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11
>                  knitr_1.16
>                 rlang_0.1.1
>                 [11] fortunes_1.5-4
>                 #---------------
>
>                 Linux sessionInfo:
>
>                 #---------------
>                  > sessionInfo()
>                 R version 3.3.1 (2016-06-21)
>                 Platform: x86_64-pc-linux-gnu (64-bit)
>                 Running under: Ubuntu 16.10
>
>                 locale:
>                   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>                   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>                   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>                   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>                   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>                 [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
>                 attached base packages:
>                 [1] stats     graphics  grDevices utils     datasets
>                 methods   base
>
>                 loaded via a namespace (and not attached):
>                 [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
>                 #---------------
>
>                 ______________________________________________
>                 R-devel at r-project.org <mailto:R-devel at r-project.org>
>                 mailing list
>                 
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.
> ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micros
> oft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd
> 011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEU
> Z8f7wasDh9RQ7p2DK8%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat
> .ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micro
> soft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7c
> d011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztE
> UZ8f7wasDh9RQ7p2DK8%3D&reserved=0>
>
>
>
>         ______________________________________________
>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>         
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.
> ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micros
> oft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd
> 011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEU
> Z8f7wasDh9RQ7p2DK8%3D&reserved=0
>         
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat
> .ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micro
> soft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7c
> d011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztE
> UZ8f7wasDh9RQ7p2DK8%3D&reserved=0>
>
>

______________________________________________
R-devel at r-project.org mailing list
https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEUZ8f7wasDh9RQ7p2DK8%3D&reserved=0
______________________________________________
R-devel at r-project.org mailing list
https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Crichcala%40microsoft.com%7Cb22a180ce5364536e2fb08d4ba452c57%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338253654457398&sdata=8lLgE%2FbFCc3YImfDsYBuNSLhHB15giroe7rJwe%2F66UE%3D&reserved=0

From chris.c.1221 at gmail.com  Sat Jun 24 03:51:53 2017
From: chris.c.1221 at gmail.com (Chris Cole)
Date: Sat, 24 Jun 2017 01:51:53 +0000
Subject: [Rd] v3.4.0-2 incompatible with gcc 7.1
In-Reply-To: <CA+vqiLG0oPWYAbeGDtpAD6uJ8CoWFoy=sp_hvBVw04O3hv951g@mail.gmail.com>
References: <CAFut0+8VVZ+oCja9QypnuQ17GdUcXijBkjuVgYrgGweEAOJPYg@mail.gmail.com>
 <f0a264bc-dca3-2c65-1cab-29991e832b29@stats.ox.ac.uk>
 <CAFut0+8OzW9nJFLYUqKymjkd+Vu8jTtBs_bP9m6_OS87ECx1Yw@mail.gmail.com>
 <CA+vqiLG0oPWYAbeGDtpAD6uJ8CoWFoy=sp_hvBVw04O3hv951g@mail.gmail.com>
Message-ID: <CAFut0+9K3weB63wmeftqA7q7UseHmWqwCWeGQAr6S=-6h0GJHw@mail.gmail.com>

Thanks Ista, that's good to know. Did you install from pacman?

Chris

On Fri, 23 Jun 2017 at 20:35 Ista Zahn <istazahn at gmail.com> wrote:

> FWIW, I don't have any problems with R on Arch Linux.
>
> On Jun 23, 2017 1:32 PM, "Chris Cole" <chris.c.1221 at gmail.com> wrote:
>
>> Thank you for correcting my misunderstandings, Professor. Compiling from
>> source did the trick, and I'll be following up with the arch maintainers
>> about addressing the issue on their end.
>>
>> Best,
>>
>> Chris
>>
>> On Fri, 23 Jun 2017 at 11:02 Prof Brian Ripley <ripley at stats.ox.ac.uk>
>> wrote:
>>
>> > R is compatible with GCC 7.1 !  New compiler versions are tested, as
>> > well as those under development for the major compilers.  (A few
>> > packages still fail with GCC 7.1, but that was reported to their
>> > maintainers months ago.)
>> >
>> > Just follow the instructions in the R-admin manual to install from
>> sources.
>> >
>> > OTOH, ' v3.4.0-2 ' is not an R version number, so I think you are
>> > referring to binary distributions on your Linux distro, which are not
>> > the responsibility of 'Rcore or Rdevel' (whatever they are).
>> >
>> > On 23/06/2017 14:40, Chris Cole wrote:
>> > > I'm on Arch Linux kernel version 4.11.6-1 using gcc version 7.1.1:
>> > >
>> > > gcc --version
>> > > gcc (GCC) 7.1.1 20170516
>> > >
>> > > I have installed R through the arch package manager pacman and when I
>> > > attempt to initiate it, R crashes stating a missing dependency:
>> > >
>> > > /usr/lib64/R/bin/exec/R: error while loading shared libraries:
>> > > libgfortran.so.3: cannot open shared object file: No such file or
>> > directory
>> > >
>> > > I thought that maybe a symlink was improperly placed in the package
>> so I
>> > > looked in /usr/lib to try to find the offending library.
>> > >
>> > > ls -halt /usr/lib/libgfortran.so.*
>> > > lrwxrwxrwx 1 root root 20 May 16 03:01 /usr/lib/libgfortran.so.4 ->
>> > > libgfortran.so.4.0.0
>> > > -rwxr-xr-x 1 root root 7.1M May 16 03:01 /usr/lib/libgfortran.so.4.0.0
>> > >
>> > > Simply symlinking libgfortran.so.4.0.0 to libgfortran.so.3 did not
>> work,
>> > > and after some questioning on SO (
>> > >
>> >
>> https://stackoverflow.com/questions/44658867/r-v3-4-0-2-unable-to-find-libgfortran-so-3-on-arch
>> > )
>> > > it seems that gfortran 7 has bumped the .so object to version 4.
>> > >
>> > > It seems that a relatively straightforward workaround for the present
>> > would
>> > > be to install a legacy version of gcc alongside the current version.
>> > >
>> > > I'm wondering if Rcore or Rdevel are moving towards being able to
>> handle
>> > > the new compiler version any time soon, and if there are any other
>> > > workarounds than having two versions of the compiler.
>> > >
>> > > Thanks.
>> > >
>> > > Chris
>> > >
>> > >       [[alternative HTML version deleted]]
>> > >
>> > > ______________________________________________
>> > > R-devel at r-project.org mailing list
>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>> > >
>> >
>> >
>> > --
>> > Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> > Emeritus Professor of Applied Statistics, University of Oxford
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>

	[[alternative HTML version deleted]]


From istazahn at gmail.com  Sat Jun 24 04:50:31 2017
From: istazahn at gmail.com (Ista Zahn)
Date: Fri, 23 Jun 2017 22:50:31 -0400
Subject: [Rd] v3.4.0-2 incompatible with gcc 7.1
In-Reply-To: <CAFut0+9K3weB63wmeftqA7q7UseHmWqwCWeGQAr6S=-6h0GJHw@mail.gmail.com>
References: <CAFut0+8VVZ+oCja9QypnuQ17GdUcXijBkjuVgYrgGweEAOJPYg@mail.gmail.com>
 <f0a264bc-dca3-2c65-1cab-29991e832b29@stats.ox.ac.uk>
 <CAFut0+8OzW9nJFLYUqKymjkd+Vu8jTtBs_bP9m6_OS87ECx1Yw@mail.gmail.com>
 <CA+vqiLG0oPWYAbeGDtpAD6uJ8CoWFoy=sp_hvBVw04O3hv951g@mail.gmail.com>
 <CAFut0+9K3weB63wmeftqA7q7UseHmWqwCWeGQAr6S=-6h0GJHw@mail.gmail.com>
Message-ID: <CA+vqiLHRhu_7_s0+ZdxXZ0DpHhAnEaytLrawd9x27nWqLhgV4g@mail.gmail.com>

Yes, regular install from the official repositories, all packages up
to date, works like a charm. I'm happy to follow up with you off-list
if you like, since this probably isn't interesting to a general R-user
audience.

Best,
Ista

On Fri, Jun 23, 2017 at 9:51 PM, Chris Cole <chris.c.1221 at gmail.com> wrote:
> Thanks Ista, that's good to know. Did you install from pacman?
>
> Chris
>
> On Fri, 23 Jun 2017 at 20:35 Ista Zahn <istazahn at gmail.com> wrote:
>>
>> FWIW, I don't have any problems with R on Arch Linux.
>>
>> On Jun 23, 2017 1:32 PM, "Chris Cole" <chris.c.1221 at gmail.com> wrote:
>>>
>>> Thank you for correcting my misunderstandings, Professor. Compiling from
>>> source did the trick, and I'll be following up with the arch maintainers
>>> about addressing the issue on their end.
>>>
>>> Best,
>>>
>>> Chris
>>>
>>> On Fri, 23 Jun 2017 at 11:02 Prof Brian Ripley <ripley at stats.ox.ac.uk>
>>> wrote:
>>>
>>> > R is compatible with GCC 7.1 !  New compiler versions are tested, as
>>> > well as those under development for the major compilers.  (A few
>>> > packages still fail with GCC 7.1, but that was reported to their
>>> > maintainers months ago.)
>>> >
>>> > Just follow the instructions in the R-admin manual to install from
>>> > sources.
>>> >
>>> > OTOH, ' v3.4.0-2 ' is not an R version number, so I think you are
>>> > referring to binary distributions on your Linux distro, which are not
>>> > the responsibility of 'Rcore or Rdevel' (whatever they are).
>>> >
>>> > On 23/06/2017 14:40, Chris Cole wrote:
>>> > > I'm on Arch Linux kernel version 4.11.6-1 using gcc version 7.1.1:
>>> > >
>>> > > gcc --version
>>> > > gcc (GCC) 7.1.1 20170516
>>> > >
>>> > > I have installed R through the arch package manager pacman and when I
>>> > > attempt to initiate it, R crashes stating a missing dependency:
>>> > >
>>> > > /usr/lib64/R/bin/exec/R: error while loading shared libraries:
>>> > > libgfortran.so.3: cannot open shared object file: No such file or
>>> > directory
>>> > >
>>> > > I thought that maybe a symlink was improperly placed in the package
>>> > > so I
>>> > > looked in /usr/lib to try to find the offending library.
>>> > >
>>> > > ls -halt /usr/lib/libgfortran.so.*
>>> > > lrwxrwxrwx 1 root root 20 May 16 03:01 /usr/lib/libgfortran.so.4 ->
>>> > > libgfortran.so.4.0.0
>>> > > -rwxr-xr-x 1 root root 7.1M May 16 03:01
>>> > > /usr/lib/libgfortran.so.4.0.0
>>> > >
>>> > > Simply symlinking libgfortran.so.4.0.0 to libgfortran.so.3 did not
>>> > > work,
>>> > > and after some questioning on SO (
>>> > >
>>> >
>>> > https://stackoverflow.com/questions/44658867/r-v3-4-0-2-unable-to-find-libgfortran-so-3-on-arch
>>> > )
>>> > > it seems that gfortran 7 has bumped the .so object to version 4.
>>> > >
>>> > > It seems that a relatively straightforward workaround for the present
>>> > would
>>> > > be to install a legacy version of gcc alongside the current version.
>>> > >
>>> > > I'm wondering if Rcore or Rdevel are moving towards being able to
>>> > > handle
>>> > > the new compiler version any time soon, and if there are any other
>>> > > workarounds than having two versions of the compiler.
>>> > >
>>> > > Thanks.
>>> > >
>>> > > Chris
>>> > >
>>> > >       [[alternative HTML version deleted]]
>>> > >
>>> > > ______________________________________________
>>> > > R-devel at r-project.org mailing list
>>> > > https://stat.ethz.ch/mailman/listinfo/r-devel
>>> > >
>>> >
>>> >
>>> > --
>>> > Brian D. Ripley,                  ripley at stats.ox.ac.uk
>>> > Emeritus Professor of Applied Statistics, University of Oxford
>>> >
>>> > ______________________________________________
>>> > R-devel at r-project.org mailing list
>>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>>> >
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel


From hongooi at microsoft.com  Mon Jun 26 04:40:09 2017
From: hongooi at microsoft.com (Hong Ooi)
Date: Mon, 26 Jun 2017 02:40:09 +0000
Subject: [Rd] Odd behaviour in within.list() when deleting 2+ variables
Message-ID: <HK2P15301MB008352A35CE4FFA43874AD50A6DF0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>

The behaviour of within() with list input changes if you delete 2 or more variables, compared to deleting one:

l <- list(x=1, y=2, z=3)

within(l,
{
    rm(z)
})
#$x
#[1] 1
#
#$y
#[1] 2


within(l, {
    rm(y)
    rm(z)
})
#$x
#[1] 1
#
#$y
#NULL
#
#$z
#NULL


When 2 or more variables are deleted, the list entries are instead set to NULL. Is this intended?


From pdalgd at gmail.com  Mon Jun 26 13:43:28 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 26 Jun 2017 13:43:28 +0200
Subject: [Rd] Odd behaviour in within.list() when deleting 2+ variables
In-Reply-To: <HK2P15301MB008352A35CE4FFA43874AD50A6DF0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>
References: <HK2P15301MB008352A35CE4FFA43874AD50A6DF0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>
Message-ID: <FDD724E2-B293-4B4B-A787-E1BA9FC8C3B8@gmail.com>

This seems to be due to changes made by Martin Maechler in 2008. Presumably this fixed something, but it escapes my memory.

However, it seems to have broken the equivalence between within.list and within.data.frame, so now

within.list <- within.data.frame

does not suffice.

The crux of the matter seems to be that both the following constructions work for data frames

> aq <- head(airquality)
> names(aq)
[1] "Ozone"   "Solar.R" "Wind"    "Temp"    "Month"   "Day"    
> aq[c("Wind","Temp")] <- NULL
> aq
  Ozone Solar.R Month Day
1    41     190     5   1
2    36     118     5   2
3    12     149     5   3
4    18     313     5   4
5    NA      NA     5   5
6    28      NA     5   6
> aq <- head(airquality)
> aq[c("Wind","Temp")] <- vector("list",2)
> aq
  Ozone Solar.R Month Day
1    41     190     5   1
2    36     118     5   2
3    12     149     5   3
4    18     313     5   4
5    NA      NA     5   5
6    28      NA     5   6

However, for lists they differ:

> aq <- as.list(head(airquality))
> aq[c("Wind","Temp")] <- vector("list",2)
> aq
$Ozone
[1] 41 36 12 18 NA 28

$Solar.R
[1] 190 118 149 313  NA  NA

$Wind
NULL

$Temp
NULL

$Month
[1] 5 5 5 5 5 5

$Day
[1] 1 2 3 4 5 6

> aq <- as.list(head(airquality))
> aq[c("Wind","Temp")] <- NULL
> aq
$Ozone
[1] 41 36 12 18 NA 28

$Solar.R
[1] 190 118 149 313  NA  NA

$Month
[1] 5 5 5 5 5 5

$Day
[1] 1 2 3 4 5 6


-pd

> On 26 Jun 2017, at 04:40 , Hong Ooi via R-devel <r-devel at r-project.org> wrote:
> 
> The behaviour of within() with list input changes if you delete 2 or more variables, compared to deleting one:
> 
> l <- list(x=1, y=2, z=3)
> 
> within(l,
> {
>    rm(z)
> })
> #$x
> #[1] 1
> #
> #$y
> #[1] 2
> 
> 
> within(l, {
>    rm(y)
>    rm(z)
> })
> #$x
> #[1] 1
> #
> #$y
> #NULL
> #
> #$z
> #NULL
> 
> 
> When 2 or more variables are deleted, the list entries are instead set to NULL. Is this intended?
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From marc_grt at yahoo.fr  Mon Jun 26 15:52:18 2017
From: marc_grt at yahoo.fr (Marc Girondot)
Date: Mon, 26 Jun 2017 15:52:18 +0200
Subject: [Rd] Suggestion for optim() in stats package
Message-ID: <ae0f3671-c240-d67c-7c73-3d70966e277a@yahoo.fr>

When optim() is used with method="BFGS", the name of parameters within
the vector are transmitted (see below, first example).

When method="Brent", the name of parameter (only one parameter can be
fitted with Brent method) is not transmitted. As there is only one, of
course, we know which parameter it is, but it makes things
non-consistent between methods.

It would be better that same convention is used for different method as
it will permit to make more general use of optim().

Marc

Tested in R-3.4.1

For example, here:

@@@@@@@@@@@
Method BFGS
@@@@@@@@@@@

# The names of values in par are transmitted
fitnorm_meansd<-function(par, val) {
    print(par)
    -sum(dnorm(x=val, mean=par["mean"], sd=par["sd"], log = TRUE))
}

val <- rnorm(100, mean=20, sd=2)
p<-c(mean=20, sd=2)
result<-optim(par=p, fn=fitnorm_meansd, val=val, method="BFGS")

The print(par) shows the named vector:
  > result<-optim(par=p, fn=fitnorm_meansd, val=val, method="BFGS")
mean   sd
    20    2
    mean     sd
20.001  2.000
    mean     sd
19.999  2.000
    mean     sd
20.000  2.001
etc...

@@@@@@@@@@@
Method Brent
@@@@@@@@@@@

# The name of value in par is not transmitted

fitnorm_mean<-function(par, val) {
    print(par)
    -sum(dnorm(x=val, mean=par, sd=2, log = TRUE))
}

val <- rnorm(100, mean=20, sd=2)
p<-c(mean=20)
result<-optim(par=p, fn=fitnorm_mean, val=val, method="Brent", lower=10,
upper=30)


The print(par) does not show named vector:
  > result<-optim(par=p, fn=fitnorm_mean, val=val, method="Brent",
lower=10, upper=30)
[1] 17.63932
[1] 22.36068


From maechler at stat.math.ethz.ch  Mon Jun 26 19:04:47 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 26 Jun 2017 19:04:47 +0200
Subject: [Rd] Odd behaviour in within.list() when deleting 2+ variables
In-Reply-To: <FDD724E2-B293-4B4B-A787-E1BA9FC8C3B8@gmail.com>
References: <HK2P15301MB008352A35CE4FFA43874AD50A6DF0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>
 <FDD724E2-B293-4B4B-A787-E1BA9FC8C3B8@gmail.com>
Message-ID: <22865.16047.276474.128174@stat.math.ethz.ch>

>>>>> peter dalgaard <pdalgd at gmail.com>
>>>>>     on Mon, 26 Jun 2017 13:43:28 +0200 writes:

    > This seems to be due to changes made by Martin Maechler in
    > 2008. Presumably this fixed something, but it escapes my
    > memory.

Yes: The change set (svn -c46441) also contains the following NEWS entry

 BUG FIXES
 
     o	within(<dataframe>, { ... }) now also works when '...' removes
     	more than one column.


    > However, it seems to have broken the equivalence
    > between within.list and within.data.frame, so now

    >   within.list <- within.data.frame

    > does not suffice.

There have been many improvements since then, so maybe we can
change the code so that the above will work again.

Another problem seems that we had no tests of  within.list()
anywhere... so we will have them now.

I've hade an idea that seems to work and even simplify the
code....  will get back to the issue later in the evening.

Martin


    > The crux of the matter seems to be that both the following
    > constructions work for data frames

    >> aq <- head(airquality)
    >> names(aq)
    > [1] "Ozone"   "Solar.R" "Wind"    "Temp"    "Month"   "Day"    
    >> aq[c("Wind","Temp")] <- NULL
    >> aq
    > Ozone Solar.R Month Day
    > 1    41     190     5   1
    > 2    36     118     5   2
    > 3    12     149     5   3
    > 4    18     313     5   4
    > 5    NA      NA     5   5
    > 6    28      NA     5   6
    >> aq <- head(airquality)
    >> aq[c("Wind","Temp")] <- vector("list",2)
    >> aq
    > Ozone Solar.R Month Day
    > 1    41     190     5   1
    > 2    36     118     5   2
    > 3    12     149     5   3
    > 4    18     313     5   4
    > 5    NA      NA     5   5
    > 6    28      NA     5   6

    > However, for lists they differ:

    >> aq <- as.list(head(airquality))
    >> aq[c("Wind","Temp")] <- vector("list",2)
    >> aq
    > $Ozone
    > [1] 41 36 12 18 NA 28

    > $Solar.R
    > [1] 190 118 149 313  NA  NA

    > $Wind
    > NULL

    > $Temp
    > NULL

    > $Month
    > [1] 5 5 5 5 5 5

    > $Day
    > [1] 1 2 3 4 5 6

    >> aq <- as.list(head(airquality))
    >> aq[c("Wind","Temp")] <- NULL
    >> aq
    > $Ozone
    > [1] 41 36 12 18 NA 28

    > $Solar.R
    > [1] 190 118 149 313  NA  NA

    > $Month
    > [1] 5 5 5 5 5 5

    > $Day
    > [1] 1 2 3 4 5 6


    > -pd

    >> On 26 Jun 2017, at 04:40 , Hong Ooi via R-devel <r-devel at r-project.org> wrote:
    >> 
    >> The behaviour of within() with list input changes if you delete 2 or more variables, compared to deleting one:
    >> 
    >> l <- list(x=1, y=2, z=3)
    >> 
    >> within(l,
    >> {
    >> rm(z)
    >> })
    >> #$x
    >> #[1] 1
    >> #
    >> #$y
    >> #[1] 2
    >> 
    >> 
    >> within(l, {
    >> rm(y)
    >> rm(z)
    >> })
    >> #$x
    >> #[1] 1
    >> #
    >> #$y
    >> #NULL
    >> #
    >> #$z
    >> #NULL
    >> 
    >> 
    >> When 2 or more variables are deleted, the list entries are instead set to NULL. Is this intended?
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel

    > -- 
    > Peter Dalgaard, Professor,
    > Center for Statistics, Copenhagen Business School
    > Solbjerg Plads 3, 2000 Frederiksberg, Denmark
    > Phone: (+45)38153501
    > Office: A 4.23
    > Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Mon Jun 26 20:12:38 2017
From: pdalgd at gmail.com (Peter Dalgaard)
Date: Mon, 26 Jun 2017 20:12:38 +0200
Subject: [Rd] Odd behaviour in within.list() when deleting 2+ variables
In-Reply-To: <22865.16047.276474.128174@stat.math.ethz.ch>
References: <HK2P15301MB008352A35CE4FFA43874AD50A6DF0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>
 <FDD724E2-B293-4B4B-A787-E1BA9FC8C3B8@gmail.com>
 <22865.16047.276474.128174@stat.math.ethz.ch>
Message-ID: <828FF38B-2CDC-4240-8813-4D08FDDF6D12@gmail.com>


> On 26 Jun 2017, at 19:04 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>>>>>> peter dalgaard <pdalgd at gmail.com>
>>>>>>    on Mon, 26 Jun 2017 13:43:28 +0200 writes:
> 
>> This seems to be due to changes made by Martin Maechler in
>> 2008. Presumably this fixed something, but it escapes my
>> memory.
> 
> Yes: The change set (svn -c46441) also contains the following NEWS entry
> 
> BUG FIXES
> 
>     o	within(<dataframe>, { ... }) now also works when '...' removes
>     	more than one column.
> 

The odd thing is that the assign-NULL technique used for removing a single column, NOW also seems to work for several columns in a data frame, so I wonder what the bug was back then...

-pd


> 
>> However, it seems to have broken the equivalence
>> between within.list and within.data.frame, so now
> 
>>  within.list <- within.data.frame
> 
>> does not suffice.
> 
> There have been many improvements since then, so maybe we can
> change the code so that the above will work again.
> 
> Another problem seems that we had no tests of  within.list()
> anywhere... so we will have them now.
> 
> I've hade an idea that seems to work and even simplify the
> code....  will get back to the issue later in the evening.
> 
> Martin
> 
> 
>> The crux of the matter seems to be that both the following
>> constructions work for data frames
> 
>>> aq <- head(airquality)
>>> names(aq)
>> [1] "Ozone"   "Solar.R" "Wind"    "Temp"    "Month"   "Day"    
>>> aq[c("Wind","Temp")] <- NULL
>>> aq
>> Ozone Solar.R Month Day
>> 1    41     190     5   1
>> 2    36     118     5   2
>> 3    12     149     5   3
>> 4    18     313     5   4
>> 5    NA      NA     5   5
>> 6    28      NA     5   6
>>> aq <- head(airquality)
>>> aq[c("Wind","Temp")] <- vector("list",2)
>>> aq
>> Ozone Solar.R Month Day
>> 1    41     190     5   1
>> 2    36     118     5   2
>> 3    12     149     5   3
>> 4    18     313     5   4
>> 5    NA      NA     5   5
>> 6    28      NA     5   6
> 
>> However, for lists they differ:
> 
>>> aq <- as.list(head(airquality))
>>> aq[c("Wind","Temp")] <- vector("list",2)
>>> aq
>> $Ozone
>> [1] 41 36 12 18 NA 28
> 
>> $Solar.R
>> [1] 190 118 149 313  NA  NA
> 
>> $Wind
>> NULL
> 
>> $Temp
>> NULL
> 
>> $Month
>> [1] 5 5 5 5 5 5
> 
>> $Day
>> [1] 1 2 3 4 5 6
> 
>>> aq <- as.list(head(airquality))
>>> aq[c("Wind","Temp")] <- NULL
>>> aq
>> $Ozone
>> [1] 41 36 12 18 NA 28
> 
>> $Solar.R
>> [1] 190 118 149 313  NA  NA
> 
>> $Month
>> [1] 5 5 5 5 5 5
> 
>> $Day
>> [1] 1 2 3 4 5 6
> 
> 
>> -pd
> 
>>> On 26 Jun 2017, at 04:40 , Hong Ooi via R-devel <r-devel at r-project.org> wrote:
>>> 
>>> The behaviour of within() with list input changes if you delete 2 or more variables, compared to deleting one:
>>> 
>>> l <- list(x=1, y=2, z=3)
>>> 
>>> within(l,
>>> {
>>> rm(z)
>>> })
>>> #$x
>>> #[1] 1
>>> #
>>> #$y
>>> #[1] 2
>>> 
>>> 
>>> within(l, {
>>> rm(y)
>>> rm(z)
>>> })
>>> #$x
>>> #[1] 1
>>> #
>>> #$y
>>> #NULL
>>> #
>>> #$z
>>> #NULL
>>> 
>>> 
>>> When 2 or more variables are deleted, the list entries are instead set to NULL. Is this intended?
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
>> -- 
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>> Phone: (+45)38153501
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
> 
> 
> 
> 
> 
> 
> 
> 

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From nsosnov at microsoft.com  Mon Jun 26 20:22:25 2017
From: nsosnov at microsoft.com (Nathan Sosnovske)
Date: Mon, 26 Jun 2017 18:22:25 +0000
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
 <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
Message-ID: <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>

I'd be curious to know what others think of Rich's patch. If it is acceptable, I can spend time that I was going to look at it this week on another bug.

-----Original Message-----
From: Rich Calaway 
Sent: Friday, June 23, 2017 6:34 PM
To: Nathan Sosnovske <nsosnov at microsoft.com>; Duncan Murdoch <murdoch.duncan at gmail.com>; Andrie de Vries <apdevries at gmail.com>
Cc: Ben Marwick <bmarwick at uw.edu>; R-devel Mailing List (r-devel at r-project.org) <r-devel at r-project.org>
Subject: RE: [Rd] suggestion to fix packageDescription() for Windows users

The following patch is not the most elegant, but it restores the Authors when "LC_CTYPE" is set to either "Chinese" or "Arabic":

> Sys.setlocale("LC_CTYPE", "Chinese")
[1] "Chinese (Simplified)_China.936"
> citation("readr")

To cite package ?readr? in publications use:

  (2016). readr: Read Tabular Data. R package version 1.0.0.
  https://CRAN.R-project.org/package=readr

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {readr: Read Tabular Data},
    year = {2016},
    note = {R package version 1.0.0},
    url = {https://CRAN.R-project.org/package=readr},
  }

ATTENTION: This citation information has been auto-generated from the package DESCRIPTION file and may need manual editing, see ?help("citation")?.

> Sys.setlocale("LC_CTYPE", "Arabic")
[1] "Arabic_Saudi Arabia.1256"
> citation("readr")

To cite package ?readr? in publications use:

  (2016). readr: Read Tabular Data. R package version 1.0.0.
  https://CRAN.R-project.org/package=readr

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {readr: Read Tabular Data},
    year = {2016},
    note = {R package version 1.0.0},
    url = {https://CRAN.R-project.org/package=readr},
  }

ATTENTION: This citation information has been auto-generated from the package DESCRIPTION file and may need manual editing, see ?help("citation")?.

> citation <- newCitation
> citation("readr")

To cite package ?readr? in publications use:

  Hadley Wickham, Jim Hester and Romain Francois (2016). readr: Read
  Tabular Data. R package version 1.0.0.
  https://CRAN.R-project.org/package=readr

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {readr: Read Tabular Data},
    author = {Hadley Wickham and Jim Hester and Romain Francois},
    year = {2016},
    note = {R package version 1.0.0},
    url = {https://CRAN.R-project.org/package=readr},
  }



The patch is:

Index: citation.R
===================================================================
--- citation.R	(revision 72852)
+++ citation.R	(working copy)
@@ -1162,8 +1162,11 @@
         if(dir == "")
             stop(gettextf("package %s not found", sQuote(package)),
                  domain = NA)
-        meta <- packageDescription(pkg = package,
-                                   lib.loc = dirname(dir))
+	    args <- list(pkg = package, lib.loc = dirname(dir))
+	    if (!is.na(enc <- packageDescription(pkg = package, lib.loc=dirname(dir), field="Encoding")))
+		    args$enc <- enc
+        meta <- do.call("packageDescription", args=args)
+
         ## if(is.null(auto)): Use default auto-citation if no CITATION
         ## available.
         citfile <- file.path(dir, "CITATION")


Nathan says he can look into this further next week...

Cheers,

Rich Calaway
Microsoft R Product Team
24/1341
+1 (425) 4219919 X19919

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Nathan Sosnovske via R-devel
Sent: Friday, June 23, 2017 7:36 AM
To: Duncan Murdoch <murdoch.duncan at gmail.com>; Andrie de Vries <apdevries at gmail.com>
Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

Hi Duncan,

I'm guessing I'll be able to look at this over the weekend/next week (probably closer to next week). It is on my list of things to do and I've just had a few other prior commitments that I have to finish first.

Sorry for the delay. I'll chime in with a status update next week.

Nathan

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Duncan Murdoch
Sent: Friday, June 23, 2017 5:16 AM
To: Andrie de Vries <apdevries at gmail.com>
Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

On 18/06/2017 5:57 AM, Andrie de Vries wrote:
> Hi, Duncan
>
> i have forwarded this thread to Nathan, who promised to look into it.

Any progress on this?

Duncan Murdoch

>
> Andrie
>
> On 17 Jun 2017 17:26, "Duncan Murdoch" <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
>
>     On 17/06/2017 9:13 AM, Ben Marwick wrote:
>
>         Hi Duncan,
>
>         Thanks for your reply. Yes, it does seem to be specific to the CTYPE
>         setting to Chinese on Windows. If I set it to English using
>         Sys.setlocale() there is no problem, then back to Chinese and the
>         authors disappear:
>
>         Sys.setlocale("LC_ALL","English")
>         citation("readr")
>
>
>     Thanks, that makes the problem reproducible.  I'll submit it as a
>     bug report.  Maybe someone from Microsoft will fix it.
>
>     Duncan Murdoch
>
>
>         #' To cite package ?readr? in publications use:
>         #'
>         #'   Hadley Wickham, Jim Hester and Romain Francois (2017).
>         readr: Read
>         #' Rectangular Text Data. R package version 1.1.1.
>         #' https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>
>         #'
>         #' A BibTeX entry for LaTeX users is
>         #'
>         #' @Manual{,
>         #'   title = {readr: Read Rectangular Text Data},
>         #'   author = {Hadley Wickham and Jim Hester and Romain Francois},
>         #'   year = {2017},
>         #'   note = {R package version 1.1.1},
>         #'   url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>         #' }
>
>
>         Sys.setlocale("LC_CTYPE", "Chinese")
>         citation("readr")
>
>         #'
>         #' To cite package ?readr? in publications use:
>         #'
>         #'   (2017). readr: Read Rectangular Text Data. R package
>         version 1.1.1.
>         #' https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>
>         #'
>         #' A BibTeX entry for LaTeX users is
>         #'
>         #' @Manual{,
>         #'   title = {readr: Read Rectangular Text Data},
>         #'   year = {2017},
>         #'   note = {R package version 1.1.1},
>         #'   url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>         <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>         #' }
>         #'
>         #' ATTENTION: This citation information has been auto-generated
>         from the
>         #' package DESCRIPTION file and may need manual editing, see
>         #' ?help("citation")?.
>
>         Where do we go from here? I do want to use the Chinese locale
>         with R on
>         Windows (and perhaps others do too), so switching the locale
>         isn't a fix.
>
>         Thanks,
>
>         Ben
>
>         On 17/06/2017 10:36 PM, Duncan Murdoch wrote:
>
>             On 17/06/2017 7:10 AM, Ben Marwick wrote:
>
>                 Recently I was trying to cite a package where the
>                 authors have ?
>                 and ? in their names. I found that on Windows the
>                 citation() function
>                 did not return the authors' names at all, but on Linux
>                 there was no
>                 problem (sessionInfos at the bottom):
>
>                 On Windows, no author names are returned:
>
>
>             I'm not seeing this.  You have fairly strange localization
>             settings; see
>             comments below.
>
>
>                 #---------------
>
>                  > citation("readr")
>
>                 To cite package ?readr? in publications use:
>
>                    (2017). readr: Read Rectangular Text Data. R package
>                 version 1.1.1.
>                    
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.
> R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com
> %7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47
> %7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXU
> DbzD3E5EWRM%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN
> .R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.co
> m%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db4
> 7%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQX
> UDbzD3E5EWRM%3D&reserved=0>
>
>                 A BibTeX entry for LaTeX users is
>
>                    @Manual{,
>                      title = {readr: Read Rectangular Text Data},
>                      year = {2017},
>                      note = {R package version 1.1.1},
>                      url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>                 <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>                    }
>
>                 ATTENTION: This citation information has been
>                 auto-generated from the
>                 package DESCRIPTION file and may need manual editing, see
>                 ?help("citation")?.
>                 #---------------
>
>                 On Linux we do see the author names:
>
>                 #---------------
>                  > citation("readr")
>
>                 To cite package ?readr? in publications use:
>
>                    Hadley Wickham, Jim Hester and Romain Francois
>                 (2017). readr:
>                    Read Rectangular Text Data. R package version 1.1.1.
>                    
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.
> R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com
> %7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47
> %7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXU
> DbzD3E5EWRM%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN
> .R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.co
> m%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db4
> 7%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQX
> UDbzD3E5EWRM%3D&reserved=0>
>
>                 A BibTeX entry for LaTeX users is
>
>                    @Manual{,
>                      title = {readr: Read Rectangular Text Data},
>                      author = {Hadley Wickham and Jim Hester and Romain
>                 Francois},
>                      year = {2017},
>                      note = {R package version 1.1.1},
>                      url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0
>                 <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=SnbAtaLB%2BUtjGEZkTXwTqnaJtiF3jQXUDbzD3E5EWRM%3D&reserved=0>},
>                    }
>                 #---------------
>
>                 This appears to be an OS-dependent encoding issue. The
>                 citation function
>                 does not take an encoding argument, so it's not possible
>                 to set the
>                 encoding at the point where that function is used. The
>                 citation function
>                 working with the packageDescription function, which does
>                 have an
>                 encoding argument, but the default is not useful for
>                 Windows when there
>                 is an encoding set in the DESCRIPTION of the package (in
>                 this case
>                 UTF-8).
>
>                 We can set the encoding argument in packageDescription
>                 so it works in
>                 Windows to give the authors as expected, but it is very
>                 inconvenient to
>                 generate citations directly from the output of this
>                 function. So I'd
>                 like to propose a solution this problem by changing one
>                 line in the
>                 packageDescription function, like so, from:
>
>                 #---------------
>                 if (missing(encoding) && Sys.getlocale("LC_CTYPE") == "C")
>                 #---------------
>
>                 to:
>
>                 #---------------
>                 if ((missing(encoding) && Sys.getlocale("LC_CTYPE") ==
>                 "C") |
>                 unname(Sys.info()['sysname']) == "Windows")
>                 #---------------
>
>                 If I understand correctly, that will force
>                 ASCII//TRANSLIT encoding when
>                 DESCRIPTION files are read by packageDescription() on
>                 Windows machines.
>                 The upside is that Windows users will get the authors in
>                 the package
>                 citation, unlike the current situation. The downside is
>                 that the exotic
>                 symbols in the authors' names are replaced with common
>                 ones that are
>                 similar.
>
>                 I think getting the citations to easily include the
>                 authors' names is
>                 pretty important, even if their names have exotic
>                 characters, so this is
>                 worth fixing. Is this edit to packageDescription the
>                 best way to solve
>                 this problem of exotic characters preventing the
>                 authors' names from
>                 showing on Windows?
>
>                 thanks,
>
>                 Ben
>
>
>
>
>                 Windows sessionInfo
>
>                 #---------------
>                  > sessionInfo()
>                 R version 3.4.0 Patched (2017-05-10 r72670)
>                 Platform: x86_64-w64-mingw32/x64 (64-bit)
>                 Running under: Windows 7 x64 (build 7601) Service Pack
> 1
>
>                 Matrix products: default
>
>                 locale:
>                 [1] LC_COLLATE=English_Australia.1252
>                 [2] LC_CTYPE=Chinese (Simplified)_People's Republic of
>                 China.936
>                 [3] LC_MONETARY=English_Australia.1252
>                 [4] LC_NUMERIC=C
>                 [5] LC_TIME=English_Australia.1252
>
>
>             I don't know what English_Australia.1252 does that's
>             different from what
>             I use (English_Canada.1252), but the Chinese locale setting
>             could cause
>             trouble.  Could you try setting this (presumably in the
>             Windows control
>             panel) to be consistent?  You're using a much simpler
>             setting on Linux.
>
>             Duncan Murdoch
>
>
>                 attached base packages:
>                 [1] stats     graphics  grDevices utils     datasets
>                 methods   base
>
>                 loaded via a namespace (and not attached):
>                   [1] readr_1.1.1    compiler_3.4.0 R6_2.2.1       hms_0.3
>                 tools_3.4.0
>                   [6] tibble_1.3.3   yaml_2.1.14    Rcpp_0.12.11
>                  knitr_1.16
>                 rlang_0.1.1
>                 [11] fortunes_1.5-4
>                 #---------------
>
>                 Linux sessionInfo:
>
>                 #---------------
>                  > sessionInfo()
>                 R version 3.3.1 (2016-06-21)
>                 Platform: x86_64-pc-linux-gnu (64-bit)
>                 Running under: Ubuntu 16.10
>
>                 locale:
>                   [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
>                   [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
>                   [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
>                   [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
>                   [9] LC_ADDRESS=C               LC_TELEPHONE=C
>                 [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
>
>                 attached base packages:
>                 [1] stats     graphics  grDevices utils     datasets
>                 methods   base
>
>                 loaded via a namespace (and not attached):
>                 [1] tools_3.3.1 yaml_2.1.14 knitr_1.16
>                 #---------------
>
>                 ______________________________________________
>                 R-devel at r-project.org <mailto:R-devel at r-project.org>
>                 mailing list
>                 
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.
> ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micros
> oft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd
> 011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEU
> Z8f7wasDh9RQ7p2DK8%3D&reserved=0
>                 
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat
> .ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micro
> soft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7c
> d011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztE
> UZ8f7wasDh9RQ7p2DK8%3D&reserved=0>
>
>
>
>         ______________________________________________
>         R-devel at r-project.org <mailto:R-devel at r-project.org> mailing 
> list
>         
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.
> ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micros
> oft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd
> 011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEU
> Z8f7wasDh9RQ7p2DK8%3D&reserved=0
>         
> <https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat
> .ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40micro
> soft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7c
> d011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztE
> UZ8f7wasDh9RQ7p2DK8%3D&reserved=0>
>
>

______________________________________________
R-devel at r-project.org mailing list
https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Cnsosnov%40microsoft.com%7Ccf07101e770643227da008d4ba31aa85%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338169899157582&sdata=8o%2FDxEx7SSzw9rTkmz0h5ztEUZ8f7wasDh9RQ7p2DK8%3D&reserved=0
______________________________________________
R-devel at r-project.org mailing list
https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Crichcala%40microsoft.com%7Cb22a180ce5364536e2fb08d4ba452c57%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636338253654457398&sdata=8lLgE%2FbFCc3YImfDsYBuNSLhHB15giroe7rJwe%2F66UE%3D&reserved=0

From maechler at stat.math.ethz.ch  Mon Jun 26 21:56:57 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 26 Jun 2017 21:56:57 +0200
Subject: [Rd] Odd behaviour in within.list() when deleting 2+ variables
In-Reply-To: <828FF38B-2CDC-4240-8813-4D08FDDF6D12@gmail.com>
References: <HK2P15301MB008352A35CE4FFA43874AD50A6DF0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>
 <FDD724E2-B293-4B4B-A787-E1BA9FC8C3B8@gmail.com>
 <22865.16047.276474.128174@stat.math.ethz.ch>
 <828FF38B-2CDC-4240-8813-4D08FDDF6D12@gmail.com>
Message-ID: <22865.26377.220615.48336@stat.math.ethz.ch>

>>>>> "PD" == Peter Dalgaard <pdalgd at gmail.com>
>>>>>     on Mon, 26 Jun 2017 20:12:38 +0200 writes:

    >> On 26 Jun 2017, at 19:04 , Martin Maechler
    >> <maechler at stat.math.ethz.ch> wrote:
    >> 
    >>>>>>> peter dalgaard <pdalgd at gmail.com> on Mon, 26 Jun
    >>>>>>> 2017 13:43:28 +0200 writes:
    >> 
    >>> This seems to be due to changes made by Martin Maechler
    >>> in 2008. Presumably this fixed something, but it escapes
    >>> my memory.
    >> 
    >> Yes: The change set (svn -c46441) also contains the
    >> following NEWS entry
    >> 
    >> BUG FIXES
    >> 
    >> o within(<dataframe>, { ... }) now also works when '...'
    >> removes more than one column.
    >> 

    > The odd thing is that the assign-NULL technique used for
    > removing a single column, NOW also seems to work for
    > several columns in a data frame, so I wonder what the
    > bug was back then...

It did not work back then:  We have had lots of improvements in
 [.data.frame in these almost 9 years.

Indeed, the fix I've committed reverts almost to the previous
first version of  within.data.frame  (which is from Peter
Dalgaard, for those who don't know).

Martin


    >>> However, it seems to have broken the equivalence between
    >>> within.list and within.data.frame, so now
    >> 
    >>> within.list <- within.data.frame
    >> 
    >>> does not suffice.
    >> 
    >> There have been many improvements since then, so maybe we
    >> can change the code so that the above will work again.
    >> 
    >> Another problem seems that we had no tests of
    >> within.list() anywhere... so we will have them now.
    >> 
    >> I've hade an idea that seems to work and even simplify
    >> the code....  will get back to the issue later in the
    >> evening.
    >> 
    >> Martin
    >> 
    >> 
    >>> The crux of the matter seems to be that both the
    >>> following constructions work for data frames
    >> 
    >>>> aq <- head(airquality) names(aq)
    >>> [1] "Ozone" "Solar.R" "Wind" "Temp" "Month" "Day"
    >>>> aq[c("Wind","Temp")] <- NULL aq
    >>> Ozone Solar.R Month Day 1 41 190 5 1 2 36 118 5 2 3 12
    >>> 149 5 3 4 18 313 5 4 5 NA NA 5 5 6 28 NA 5 6
    >>>> aq <- head(airquality) aq[c("Wind","Temp")] <-
    >>>> vector("list",2) aq
    >>> Ozone Solar.R Month Day 1 41 190 5 1 2 36 118 5 2 3 12
    >>> 149 5 3 4 18 313 5 4 5 NA NA 5 5 6 28 NA 5 6
    >> 
    >>> However, for lists they differ:
    >> 
    >>>> aq <- as.list(head(airquality)) aq[c("Wind","Temp")] <-
    >>>> vector("list",2) aq
    >>> $Ozone [1] 41 36 12 18 NA 28
    >> 
    >>> $Solar.R [1] 190 118 149 313 NA NA
    >> 
    >>> $Wind NULL
    >> 
    >>> $Temp NULL
    >> 
    >>> $Month [1] 5 5 5 5 5 5
    >> 
    >>> $Day [1] 1 2 3 4 5 6
    >> 
    >>>> aq <- as.list(head(airquality)) aq[c("Wind","Temp")] <-
    >>>> NULL aq
    >>> $Ozone [1] 41 36 12 18 NA 28
    >> 
    >>> $Solar.R [1] 190 118 149 313 NA NA
    >> 
    >>> $Month [1] 5 5 5 5 5 5
    >> 
    >>> $Day [1] 1 2 3 4 5 6
    >> 
    >> 
    >>> -pd
    >> 
    >>>> On 26 Jun 2017, at 04:40 , Hong Ooi via R-devel
    >>>> <r-devel at r-project.org> wrote:
    >>>> 
    >>>> The behaviour of within() with list input changes if
    >>>> you delete 2 or more variables, compared to deleting
    >>>> one:
    >>>> 
    >>>> l <- list(x=1, y=2, z=3)
    >>>> 
    >>>> within(l, { rm(z) }) #$x #[1] 1
    >>>> #
    >>>> #$y #[1] 2
    >>>> 
    >>>> 
    >>>> within(l, { rm(y) rm(z) }) #$x #[1] 1
    >>>> #
    >>>> #$y #NULL
    >>>> #
    >>>> #$z #NULL
    >>>> 
    >>>> 
    >>>> When 2 or more variables are deleted, the list entries
    >>>> are instead set to NULL. Is this intended?
    >>>> 
    >>>> ______________________________________________
    >>>> R-devel at r-project.org mailing list
    >>>> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 
    >>> -- 
    >>> Peter Dalgaard, Professor, Center for Statistics,
    >>> Copenhagen Business School Solbjerg Plads 3, 2000
    >>> Frederiksberg, Denmark Phone: (+45)38153501 Office: A
    >>> 4.23 Email: pd.mes at cbs.dk Priv: PDalgd at gmail.com
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 

    PD> -- Peter Dalgaard, Professor, Center for Statistics,
    PD> Copenhagen Business School Solbjerg Plads 3, 2000
    PD> Frederiksberg, Denmark Phone: (+45)38153501 Office: A
    PD> 4.23 Email: pd.mes at cbs.dk Priv: PDalgd at gmail.com


From pdalgd at gmail.com  Mon Jun 26 22:42:32 2017
From: pdalgd at gmail.com (peter dalgaard)
Date: Mon, 26 Jun 2017 22:42:32 +0200
Subject: [Rd] Odd behaviour in within.list() when deleting 2+ variables
In-Reply-To: <22865.26377.220615.48336@stat.math.ethz.ch>
References: <HK2P15301MB008352A35CE4FFA43874AD50A6DF0@HK2P15301MB0083.APCP153.PROD.OUTLOOK.COM>
 <FDD724E2-B293-4B4B-A787-E1BA9FC8C3B8@gmail.com>
 <22865.16047.276474.128174@stat.math.ethz.ch>
 <828FF38B-2CDC-4240-8813-4D08FDDF6D12@gmail.com>
 <22865.26377.220615.48336@stat.math.ethz.ch>
Message-ID: <2C8AA8C9-680B-4F58-BC74-FDCEEE65ACE5@gmail.com>


> On 26 Jun 2017, at 21:56 , Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
> 
> Indeed, the fix I've committed reverts almost to the previous
> first version of  within.data.frame  (which is from Peter
> Dalgaard, for those who don't know).
> 

Great foresight on my part there, eh? ;-)

-p

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From maechler at stat.math.ethz.ch  Tue Jun 27 12:34:28 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 27 Jun 2017 12:34:28 +0200
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
 <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
 <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>
Message-ID: <22866.13492.183329.958202@stat.math.ethz.ch>

>>>>> Nathan Sosnovske via R-devel <r-devel at r-project.org>
>>>>>     on Mon, 26 Jun 2017 18:22:25 +0000 writes:

    > I'd be curious to know what others think of Rich's
    > patch. If it is acceptable, I can spend time that I was
    > going to look at it this week on another bug. 

It is a bit kludgy (*) of course, but I confirm it solves the
problem in a "robust" way.

*) Of course I'd hoped you'd find why the underlying
packageDescription() function is not "getting the right thing" in this
case directly -- in Windows only in some locales -- and provide a
Windows-only patch for the underlying problem there, rather than
the workaround patch in citation().
The patch does solve the problem at hand, alright, so thank you,
Rich and Nathan!

Note that Duncan Murdoch did mention in this thread to file 
an official bug report and Ben Marwick gave the URL

> From: Ben Marwick ...
> Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users
> Date: Sun, 18 Jun 2017 08:34:56 +1000

> Thanks very much, I see your bug report here:
> https://bugs.r-project.org/bugzilla3/show_bug.cgi?id=17291

so ideally almost all of this follow up should have happened there.
I have followed up there and also there attached a Windows-only
+ commented version of Rich's patch. As mentioned, I've tested
it and confirmed to work for the use case in the mean time, so
plan to commit soon.

This will be too late for the release of R 3.4.1 tomorrow,
of course [code freeze was on June 23].

Martin Maechler
ETH Zurich

    > -----Original Message-----
    > From: Rich Calaway 
    > Sent: Friday, June 23, 2017 6:34 PM
    > To: Nathan Sosnovske <nsosnov at microsoft.com>; Duncan Murdoch <murdoch.duncan at gmail.com>; Andrie de Vries <apdevries at gmail.com>
    > Cc: Ben Marwick <bmarwick at uw.edu>; R-devel Mailing List (r-devel at r-project.org) <r-devel at r-project.org>
    > Subject: RE: [Rd] suggestion to fix packageDescription() for Windows users

    > The following patch is not the most elegant, but it restores the Authors when "LC_CTYPE" is set to either "Chinese" or "Arabic":

    >> Sys.setlocale("LC_CTYPE", "Chinese")
    > [1] "Chinese (Simplified)_China.936"
    >> citation("readr")

    > To cite package ?readr? in publications use:

    > (2016). readr: Read Tabular Data. R package version 1.0.0.
    > https://CRAN.R-project.org/package=readr

    > A BibTeX entry for LaTeX users is

    > @Manual{,
    > title = {readr: Read Tabular Data},
    > year = {2016},
    > note = {R package version 1.0.0},
    > url = {https://CRAN.R-project.org/package=readr},
    > }

    > ATTENTION: This citation information has been auto-generated from the package DESCRIPTION file and may need manual editing, see ?help("citation")?.

    >> Sys.setlocale("LC_CTYPE", "Arabic")
    > [1] "Arabic_Saudi Arabia.1256"
    >> citation("readr")

    > To cite package ?readr? in publications use:

    > (2016). readr: Read Tabular Data. R package version 1.0.0.
    > https://CRAN.R-project.org/package=readr

    > A BibTeX entry for LaTeX users is

    > @Manual{,
    > title = {readr: Read Tabular Data},
    > year = {2016},
    > note = {R package version 1.0.0},
    > url = {https://CRAN.R-project.org/package=readr},
    > }

    > ATTENTION: This citation information has been auto-generated from the package DESCRIPTION file and may need manual editing, see ?help("citation")?.

    >> citation <- newCitation
    >> citation("readr")

    > To cite package ?readr? in publications use:

    > Hadley Wickham, Jim Hester and Romain Francois (2016). readr: Read
    > Tabular Data. R package version 1.0.0.
    > https://CRAN.R-project.org/package=readr

    > A BibTeX entry for LaTeX users is

    > @Manual{,
    > title = {readr: Read Tabular Data},
    > author = {Hadley Wickham and Jim Hester and Romain Francois},
    > year = {2016},
    > note = {R package version 1.0.0},
    > url = {https://CRAN.R-project.org/package=readr},
    > }



    > The patch is:

    > Index: citation.R
    > ===================================================================
    > --- citation.R	(revision 72852)
    > +++ citation.R	(working copy)
    > @@ -1162,8 +1162,11 @@
    > if(dir == "")
    > stop(gettextf("package %s not found", sQuote(package)),
    > domain = NA)
    > -        meta <- packageDescription(pkg = package,
    > -                                   lib.loc = dirname(dir))
    > +	    args <- list(pkg = package, lib.loc = dirname(dir))
    > +	    if (!is.na(enc <- packageDescription(pkg = package, lib.loc=dirname(dir), field="Encoding")))
    > +		    args$enc <- enc
    > +        meta <- do.call("packageDescription", args=args)
    > +
    > ## if(is.null(auto)): Use default auto-citation if no CITATION
    > ## available.
    > citfile <- file.path(dir, "CITATION")


    > Nathan says he can look into this further next week...

    > Cheers,

    > Rich Calaway
    > Microsoft R Product Team
    > 24/1341
    > +1 (425) 4219919 X19919

    > -----Original Message-----
    > From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Nathan Sosnovske via R-devel
    > Sent: Friday, June 23, 2017 7:36 AM
    > To: Duncan Murdoch <murdoch.duncan at gmail.com>; Andrie de Vries <apdevries at gmail.com>
    > Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
    > Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

    > Hi Duncan,

    > I'm guessing I'll be able to look at this over the weekend/next week (probably closer to next week). It is on my list of things to do and I've just had a few other prior commitments that I have to finish first.

    > Sorry for the delay. I'll chime in with a status update next week.

    > Nathan

    > -----Original Message-----
    > From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Duncan Murdoch
    > Sent: Friday, June 23, 2017 5:16 AM
    > To: Andrie de Vries <apdevries at gmail.com>
    > Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
    > Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

    > On 18/06/2017 5:57 AM, Andrie de Vries wrote:
    >> Hi, Duncan
    >> 
    >> i have forwarded this thread to Nathan, who promised to look into it.

    > Any progress on this?

    > Duncan Murdoch

    >> 
    >> Andrie
    >> 
    >> On 17 Jun 2017 17:26, "Duncan Murdoch" <murdoch.duncan at gmail.com 
    >> <mailto:murdoch.duncan at gmail.com>> wrote:
    >> 
    >> On 17/06/2017 9:13 AM, Ben Marwick wrote:
    >> 
    >> Hi Duncan,
    >> 
    >> Thanks for your reply. Yes, it does seem to be specific to the CTYPE
    >> setting to Chinese on Windows. If I set it to English using
    >> Sys.setlocale() there is no problem, then back to Chinese and the
    >> authors disappear:
    >> 
    >> Sys.setlocale("LC_ALL","English")
    >> citation("readr")
    >> 
    >> 
    >> Thanks, that makes the problem reproducible.  I'll submit it as a
    >> bug report.  Maybe someone from Microsoft will fix it.
    >> 
    >> Duncan Murdoch

    [.........]


From dusa.adrian at unibuc.ro  Tue Jun 27 14:29:49 2017
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Tue, 27 Jun 2017 15:29:49 +0300
Subject: [Rd] paste strings in C
Message-ID: <CAJ=0CtDyApiXruO12J-Mecxqkg6jBuJr0b2O-mLX_QAmxvpybw@mail.gmail.com>

Dear R-devs,

Below is a small example of what I am trying to achieve, that is trivial in
R and I would like to learn how to do in C, for very large matrices:

> (mymat <- matrix(c(1,0,0,2,2,1), nrow = 2))
     [,1] [,2] [,3]
[1,]    1    0    2
[2,]    0    2    1

And I would like to produce:
[1] "a*C" "B*c"


Which can be trivially done in R via something like:

foo <- function(mymat, colnms, tilde = FALSE) {
    apply(mymat, 1, function(x) {
        if (tilde) {
            colnms[x == 1] <- paste0("~", colnms[x == 1])
        } else {
            colnms[x == 1] <- tolower(colnms[x == 1])
        }
        paste(colnms[x > 0], collapse = "*")
    })
}

> foo(mymat, LETTERS[1:3])
[1] "a*C" "B*c"

> foo(mymat, LETTERS[1:3], tilde = TRUE)
[1] "~A*C" "B*~C"


I know that strings in C are far from trivial (encodings being one
important issue), and this is the sort of thing much easier to do in R. On
the other hand I found that, for a large matrix of say 1 million rows and
25 columns, setting the rownames of colnames in R copies the matrix and
costs a lot of memory and time in the process.

Having all necessary headers in C, the solution I came up with involves
calling the function foo() from within C:

SEXP test(SEXP mymat, SEXP colnms, SEXP tilde) {

    SEXP call = PROTECT(LCONS(install("foo"),
                        LCONS(mymat,
                        LCONS(colnms,
                        LCONS(tilde, R_NilValue)))));

    SEXP out = PROTECT(eval(call, R_GlobalEnv));

    UNPROTECT(2);
    return(out);
}


After compilation, say in a file called test.c, back in R I get:

> dyn.load("test.so")

> .Call("test", mymat, LETTERS[1:3], FALSE)
[1] "a*C" "B*c"

> .Call("test", mymat, LETTERS[1:3], TRUE)
[1] "~A*C" "B*~C"


In my real situation, the matrix I am working on is produced in the C code
(and it's much larger).
I don't know for sure, when calling the R function foo(), if the matrix is
copied: if not, this might be the best solution for me.

Otherwise I know there is a function do_paste() in C, and wondered whether
I could use that directly instead of calling R from C.

I hope this explains what I would like to do, many thanks in advance for
any hint,
Adrian

-- 
Adrian Dusa
University of Bucharest
Romanian Social Data Archive
Soseaua Panduri nr. 90-92
050663 Bucharest sector 5
Romania

	[[alternative HTML version deleted]]


From lawrence.michael at gene.com  Tue Jun 27 16:31:41 2017
From: lawrence.michael at gene.com (Michael Lawrence)
Date: Tue, 27 Jun 2017 07:31:41 -0700
Subject: [Rd] paste strings in C
In-Reply-To: <CAJ=0CtDyApiXruO12J-Mecxqkg6jBuJr0b2O-mLX_QAmxvpybw@mail.gmail.com>
References: <CAJ=0CtDyApiXruO12J-Mecxqkg6jBuJr0b2O-mLX_QAmxvpybw@mail.gmail.com>
Message-ID: <CAOQ5Nyfe4jd+-4Go1g909+TbpMn5owWYuutA--Rpuh_p0EWtMg@mail.gmail.com>

To do this in C, it would probably be easier and faster to just do the
string manipulation directly. Luckily, there are already packages that
have done this for you. See an example below using the S4Vectors
package.

foo2 <- function(mymat, colnms, tilde=FALSE) {
    chars <- colnms[col(mymat)]
    lowerChars <- if (tilde) paste0("~", chars) else tolower(chars)
    chars <- ifelse(mymat==1L, lowerChars, chars)
    keep <- mymat > 0L
    charList <- split(chars[keep], row(chars)[keep])
    S4Vectors::unstrsplit(charList, "*")
}

Or perhaps more efficient using the compressed lists of IRanges:

foo3 <- function(mymat, colnms, tilde=FALSE) {
    mymat <- t(mymat)
    chars <- colnms[row(mymat)]
    lowerChars <- if (tilde) paste0("~", chars) else tolower(chars)
    chars <- ifelse(mymat==1L, lowerChars, chars)
    keep <- mymat > 0L
    charList <- IRanges::splitAsList(chars[keep], col(chars)[keep])
    S4Vectors::unstrsplit(charList, "*")
}

Michael

On Tue, Jun 27, 2017 at 5:29 AM, Adrian Du?a <dusa.adrian at unibuc.ro> wrote:
> Dear R-devs,
>
> Below is a small example of what I am trying to achieve, that is trivial in
> R and I would like to learn how to do in C, for very large matrices:
>
>> (mymat <- matrix(c(1,0,0,2,2,1), nrow = 2))
>      [,1] [,2] [,3]
> [1,]    1    0    2
> [2,]    0    2    1
>
> And I would like to produce:
> [1] "a*C" "B*c"
>
>
> Which can be trivially done in R via something like:
>
> foo <- function(mymat, colnms, tilde = FALSE) {
>     apply(mymat, 1, function(x) {
>         if (tilde) {
>             colnms[x == 1] <- paste0("~", colnms[x == 1])
>         } else {
>             colnms[x == 1] <- tolower(colnms[x == 1])
>         }
>         paste(colnms[x > 0], collapse = "*")
>     })
> }
>
>> foo(mymat, LETTERS[1:3])
> [1] "a*C" "B*c"
>
>> foo(mymat, LETTERS[1:3], tilde = TRUE)
> [1] "~A*C" "B*~C"
>
>
> I know that strings in C are far from trivial (encodings being one
> important issue), and this is the sort of thing much easier to do in R. On
> the other hand I found that, for a large matrix of say 1 million rows and
> 25 columns, setting the rownames of colnames in R copies the matrix and
> costs a lot of memory and time in the process.
>
> Having all necessary headers in C, the solution I came up with involves
> calling the function foo() from within C:
>
> SEXP test(SEXP mymat, SEXP colnms, SEXP tilde) {
>
>     SEXP call = PROTECT(LCONS(install("foo"),
>                         LCONS(mymat,
>                         LCONS(colnms,
>                         LCONS(tilde, R_NilValue)))));
>
>     SEXP out = PROTECT(eval(call, R_GlobalEnv));
>
>     UNPROTECT(2);
>     return(out);
> }
>
>
> After compilation, say in a file called test.c, back in R I get:
>
>> dyn.load("test.so")
>
>> .Call("test", mymat, LETTERS[1:3], FALSE)
> [1] "a*C" "B*c"
>
>> .Call("test", mymat, LETTERS[1:3], TRUE)
> [1] "~A*C" "B*~C"
>
>
> In my real situation, the matrix I am working on is produced in the C code
> (and it's much larger).
> I don't know for sure, when calling the R function foo(), if the matrix is
> copied: if not, this might be the best solution for me.
>
> Otherwise I know there is a function do_paste() in C, and wondered whether
> I could use that directly instead of calling R from C.
>
> I hope this explains what I would like to do, many thanks in advance for
> any hint,
> Adrian
>
> --
> Adrian Dusa
> University of Bucharest
> Romanian Social Data Archive
> Soseaua Panduri nr. 90-92
> 050663 Bucharest sector 5
> Romania
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From maechler at stat.math.ethz.ch  Tue Jun 27 17:36:54 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 27 Jun 2017 17:36:54 +0200
Subject: [Rd] Windows iconv() "failure" in certain locales
In-Reply-To: <22866.13492.183329.958202@stat.math.ethz.ch>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
 <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
 <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>
 <22866.13492.183329.958202@stat.math.ethz.ch>
Message-ID: <22866.31638.949797.725782@stat.math.ethz.ch>

This is a continuation of the R-devel thread with subject
 "suggestion to fix packageDescription() for Windows users" :

As I said there, a patch should rather address the underlying
problem in packageDescription rather than a kludgy workaround
patch for  citation().
(For that same reason, Ben Marwick proposed to fix
 packageDescription() rather than the symptom seen in citation().)

It's not hard to see that the problem is that  iconv() in
Windows does not always succeed to translate from "UTF-8" to the
"current locale", in the case mentioned there.

I'm giving some easier reproducible examples:  no need to install
half of tidyverse just to get citation("readr") :

> x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> Encoding(x1) <- "latin1"
> xU <- iconv(x1, "latin1", "UTF-8")

> Sys.setlocale("LC_CTYPE", "Chinese")
[1] "Chinese (Simplified)_People's Republic of China.936"
> 
> iconv(x1, "latin1", "") # NA NA NA
[1] NA NA NA
> iconv(xU, "UTF-8", "") # NA NA NA
[1] NA NA NA
> iconv(xU, "UTF-8", "//TRANSLIT")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "", sub = "byte")
[1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z??rcher"


> Sys.setlocale("LC_CTYPE", "Arabic")
[1] "Arabic_Saudi Arabia.1256"
> iconv(x1, "latin1", "")  # NA NA NA
[1] NA NA NA
> iconv(xU, "UTF-8", "")  # NA NA NA
[1] NA NA NA
> iconv(xU, "UTF-8", "//TRANSLIT")
[1] "Ekstr\370m"         "J\366reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "", sub="byte")
[1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z?rcher"
> iconv(xU, "UTF-8", "", sub="?")
[1] "Ekstr??m"         "J??reskog"        "bi??chen Z?rcher"

Etc... .  As the above is typically garbled between e-mail
transfer agents, I append both the iconv-Windows.R R script and
the corresponding iconv-Windows.Rout  R transcript to this
e-mail (using MIME type text/plain (easy using emacs for mail..)),
and they contain a bit more than the above.

Note that the above shows that using 'sub = *' and using
"//TRANSLIT" in case of a previous NA  result helps quite a bit,
in the sense that it gives much more information to see
  "J?reskog"  instead   NA.

I'm considering updating  packageDescription() to try these in
case it first returns NA.   This would make the citation() hack
unnecessary.

Martin

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: iconv-Windows.R
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20170627/1e5f6924/attachment.ksh>
-------------- next part --------------

R Under development (unstable) (2017-06-25 r72854) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #### iconv() behavior depending on Locales  LC_CTYPE  in Windows
> #### =======                       ==============================
> ###
> ### In a *shell* in Windows (emacs), after doing R.home() in R, use that to do something like
> ###   c:/PROGRA~1/R/R-devel/bin/R CMD BATCH iconv-Windows.R
> ###   ^^^^^^^^^^^^^^^^^^^^^^^^^^= === ===== ===============  ==> producing  iconv-Windows.Rout
> ###
> sessionInfo() ## does not matter so much
R Under development (unstable) (2017-06-25 r72854)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows Server 2008 R2 x64 (build 7601) Service Pack 1

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252 
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] compiler_3.5.0
> ## -- should be Windows to exhibit the problems
> 
> ## From  help(iconv) 's  example : Using "latin1" European language letters:
> x1 <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> Encoding(x1) <- "latin1"
> xU <- iconv(x1, "latin1", "UTF-8")
> 
> 
> ## 2 locales that do not work well : ---------------------------------
> Sys.setlocale("LC_CTYPE", "Chinese")
[1] "Chinese (Simplified)_People's Republic of China.936"
> 
> iconv(x1, "latin1", "") # NA NA NA
[1] NA NA NA
> iconv(x1, "latin1", "//TRANSLIT") # perfect for Chinese
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(x1, "latin1", "", sub = "byte")
[1] "Ekstr<f8>m"         "J<f6>reskog"        "bi<df>chen Z??rcher"
> iconv(xU, "UTF-8", "") # NA NA NA
[1] NA NA NA
> iconv(xU, "UTF-8", "//TRANSLIT")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "", sub = "byte")
[1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z??rcher"
> ##--
> Sys.setlocale("LC_CTYPE", "Arabic")
[1] "Arabic_Saudi Arabia.1256"
> iconv(x1, "latin1", "")  # NA NA NA
[1] NA NA NA
> iconv(x1, "latin1", "//TRANSLIT") # not bad, but not perfect
[1] "Ekstr\370m"         "J\366reskog"        "bi?chen Z?rcher"
> iconv(x1, "latin1", "", sub="byte")
[1] "Ekstr<f8>m"         "J<f6>reskog"        "bi<df>chen Z?rcher"
> iconv(x1, "latin1", "", sub="?")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "")  # NA NA NA
[1] NA NA NA
> iconv(xU, "UTF-8", "//TRANSLIT")
[1] "Ekstr\370m"         "J\366reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "", sub="byte")
[1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z?rcher"
> iconv(xU, "UTF-8", "", sub="?")
[1] "Ekstr??m"         "J??reskog"        "bi??chen Z?rcher"
> 
> ## 2 locales that work well for these examples (no wonder) -----------
> 
> Sys.setlocale("LC_CTYPE", "German_Switzerland")
[1] "German_Switzerland.1252"
> iconv(x1, "latin1", "")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(x1, "latin1", "//TRANSLIT")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(x1, "latin1", "", sub="?")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "//TRANSLIT")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "", sub="?")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> ##--
> Sys.setlocale("LC_CTYPE", "English")
[1] "English_United States.1252"
> iconv(x1, "latin1", "")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(x1, "latin1", "//TRANSLIT")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(x1, "latin1", "", sub="?")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "//TRANSLIT")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> iconv(xU, "UTF-8", "", sub="?")
[1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> 
> proc.time()
   user  system elapsed 
   0.18    0.14    0.98 

From dusa.adrian at unibuc.ro  Tue Jun 27 17:39:19 2017
From: dusa.adrian at unibuc.ro (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Tue, 27 Jun 2017 18:39:19 +0300
Subject: [Rd] paste strings in C
In-Reply-To: <CAOQ5Nyfe4jd+-4Go1g909+TbpMn5owWYuutA--Rpuh_p0EWtMg@mail.gmail.com>
References: <CAJ=0CtDyApiXruO12J-Mecxqkg6jBuJr0b2O-mLX_QAmxvpybw@mail.gmail.com>
 <CAOQ5Nyfe4jd+-4Go1g909+TbpMn5owWYuutA--Rpuh_p0EWtMg@mail.gmail.com>
Message-ID: <CAJ=0CtD152fQmqGntNVJ3BnTZkmR3CWiONysj5zaQfx4vZks5w@mail.gmail.com>

Hi Michael,

On Tue, Jun 27, 2017 at 5:31 PM, Michael Lawrence <lawrence.michael at gene.com>
wrote:
>
> To do this in C, it would probably be easier and faster to just do the
> string manipulation directly. Luckily, there are already packages that
> have done this for you. See an example below using the S4Vectors
> package.

Thank you for your reply.
The goal is to obtain those strings in C, not in R...

The result is returned to R just for printing purposes, but I need the
strings in C.
And if at all possible, using C functions directly rather than calling R
functions from C.

My first instinct is to try using the do_paste() C function in the
src/main/ directory from the R sources, but I haven't been successful so
far.
Adrian

--
Adrian Dusa
University of Bucharest
Romanian Social Data Archive
Soseaua Panduri nr. 90-92
050663 Bucharest sector 5
Romania

	[[alternative HTML version deleted]]


From nsosnov at microsoft.com  Tue Jun 27 17:51:15 2017
From: nsosnov at microsoft.com (Nathan Sosnovske)
Date: Tue, 27 Jun 2017 15:51:15 +0000
Subject: [Rd] suggestion to fix packageDescription() for Windows users
In-Reply-To: <22866.13492.183329.958202@stat.math.ethz.ch>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
 <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
 <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>
 <22866.13492.183329.958202@stat.math.ethz.ch>
Message-ID: <BY2PR21MB0052E33F1F450FFB9005CF10B7DC0@BY2PR21MB0052.namprd21.prod.outlook.com>

> *) Of course I'd hoped you'd find why the underlying
> packageDescription() function is not "getting the right thing" in this case directly -- in Windows only in some locales -- and provide a Windows-only patch for the underlying problem there, rather than the workaround patch in citation().
> The patch does solve the problem at hand, alright, so thank you, Rich and Nathan!

This makes sense. I was asking if we wanted to proceed with the workaround-esque patch Rich suggested because I was trying to understand what was more useful to the community: diving deeper into the issue to see what was going on, or spending that time on another issue that was symptomatic. Either way, I think it makes sense to fix the underlying issue at some point and I do have time set aside this week to do so.

> so ideally almost all of this follow up should have happened there.

Apologies about this. I'm still learning and appreciate the gentle correction. ?

-----Original Message-----
From: Martin Maechler [mailto:maechler at stat.math.ethz.ch] 
Sent: Tuesday, June 27, 2017 3:34 AM
To: Nathan Sosnovske <nsosnov at microsoft.com>
Cc: Rich Calaway <richcala at microsoft.com>; Duncan Murdoch <murdoch.duncan at gmail.com>; Andrie de Vries <apdevries at gmail.com>; R-devel Mailing List (r-devel at r-project.org) <r-devel at r-project.org>; Ben Marwick <bmarwick at uw.edu>; Martin Maechler <maechler at stat.math.ethz.ch>
Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

>>>>> Nathan Sosnovske via R-devel <r-devel at r-project.org>
>>>>>     on Mon, 26 Jun 2017 18:22:25 +0000 writes:

    > I'd be curious to know what others think of Rich's
    > patch. If it is acceptable, I can spend time that I was
    > going to look at it this week on another bug. 

It is a bit kludgy (*) of course, but I confirm it solves the problem in a "robust" way.

*) Of course I'd hoped you'd find why the underlying
packageDescription() function is not "getting the right thing" in this case directly -- in Windows only in some locales -- and provide a Windows-only patch for the underlying problem there, rather than the workaround patch in citation().
The patch does solve the problem at hand, alright, so thank you, Rich and Nathan!

Note that Duncan Murdoch did mention in this thread to file an official bug report and Ben Marwick gave the URL

> From: Ben Marwick ...
> Subject: Re: [Rd] suggestion to fix packageDescription() for Windows 
> users
> Date: Sun, 18 Jun 2017 08:34:56 +1000

> Thanks very much, I see your bug report here:
> https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fbugs.
> r-project.org%2Fbugzilla3%2Fshow_bug.cgi%3Fid%3D17291&data=02%7C01%7Cn
> sosnov%40microsoft.com%7Ce3ed6ea675b44c908c9208d4bd4817dc%7C72f988bf86
> f141af91ab2d7cd011db47%7C1%7C0%7C636341564724082662&sdata=AFG8tyP5Maqc
> iZwYFqBZ4wylbVJAoyWu4kASsxFZr%2F4%3D&reserved=0

so ideally almost all of this follow up should have happened there.
I have followed up there and also there attached a Windows-only
+ commented version of Rich's patch. As mentioned, I've tested
it and confirmed to work for the use case in the mean time, so plan to commit soon.

This will be too late for the release of R 3.4.1 tomorrow, of course [code freeze was on June 23].

Martin Maechler
ETH Zurich

    > -----Original Message-----
    > From: Rich Calaway 
    > Sent: Friday, June 23, 2017 6:34 PM
    > To: Nathan Sosnovske <nsosnov at microsoft.com>; Duncan Murdoch <murdoch.duncan at gmail.com>; Andrie de Vries <apdevries at gmail.com>
    > Cc: Ben Marwick <bmarwick at uw.edu>; R-devel Mailing List (r-devel at r-project.org) <r-devel at r-project.org>
    > Subject: RE: [Rd] suggestion to fix packageDescription() for Windows users

    > The following patch is not the most elegant, but it restores the Authors when "LC_CTYPE" is set to either "Chinese" or "Arabic":

    >> Sys.setlocale("LC_CTYPE", "Chinese")
    > [1] "Chinese (Simplified)_China.936"
    >> citation("readr")

    > To cite package ?readr? in publications use:

    > (2016). readr: Read Tabular Data. R package version 1.0.0.
    > https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ce3ed6ea675b44c908c9208d4bd4817dc%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341564724082662&sdata=C91aZ4qu2CT56qCrqFFBshREabZzfkaLXAABgWQSvXg%3D&reserved=0

    > A BibTeX entry for LaTeX users is

    > @Manual{,
    > title = {readr: Read Tabular Data},
    > year = {2016},
    > note = {R package version 1.0.0},
    > url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ce3ed6ea675b44c908c9208d4bd4817dc%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341564724082662&sdata=C91aZ4qu2CT56qCrqFFBshREabZzfkaLXAABgWQSvXg%3D&reserved=0},
    > }

    > ATTENTION: This citation information has been auto-generated from the package DESCRIPTION file and may need manual editing, see ?help("citation")?.

    >> Sys.setlocale("LC_CTYPE", "Arabic")
    > [1] "Arabic_Saudi Arabia.1256"
    >> citation("readr")

    > To cite package ?readr? in publications use:

    > (2016). readr: Read Tabular Data. R package version 1.0.0.
    > https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ce3ed6ea675b44c908c9208d4bd4817dc%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341564724082662&sdata=C91aZ4qu2CT56qCrqFFBshREabZzfkaLXAABgWQSvXg%3D&reserved=0

    > A BibTeX entry for LaTeX users is

    > @Manual{,
    > title = {readr: Read Tabular Data},
    > year = {2016},
    > note = {R package version 1.0.0},
    > url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ce3ed6ea675b44c908c9208d4bd4817dc%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341564724082662&sdata=C91aZ4qu2CT56qCrqFFBshREabZzfkaLXAABgWQSvXg%3D&reserved=0},
    > }

    > ATTENTION: This citation information has been auto-generated from the package DESCRIPTION file and may need manual editing, see ?help("citation")?.

    >> citation <- newCitation
    >> citation("readr")

    > To cite package ?readr? in publications use:

    > Hadley Wickham, Jim Hester and Romain Francois (2016). readr: Read
    > Tabular Data. R package version 1.0.0.
    > https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ce3ed6ea675b44c908c9208d4bd4817dc%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341564724082662&sdata=C91aZ4qu2CT56qCrqFFBshREabZzfkaLXAABgWQSvXg%3D&reserved=0

    > A BibTeX entry for LaTeX users is

    > @Manual{,
    > title = {readr: Read Tabular Data},
    > author = {Hadley Wickham and Jim Hester and Romain Francois},
    > year = {2016},
    > note = {R package version 1.0.0},
    > url = {https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2FCRAN.R-project.org%2Fpackage%3Dreadr&data=02%7C01%7Cnsosnov%40microsoft.com%7Ce3ed6ea675b44c908c9208d4bd4817dc%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341564724082662&sdata=C91aZ4qu2CT56qCrqFFBshREabZzfkaLXAABgWQSvXg%3D&reserved=0},
    > }



    > The patch is:

    > Index: citation.R
    > ===================================================================
    > --- citation.R	(revision 72852)
    > +++ citation.R	(working copy)
    > @@ -1162,8 +1162,11 @@
    > if(dir == "")
    > stop(gettextf("package %s not found", sQuote(package)),
    > domain = NA)
    > -        meta <- packageDescription(pkg = package,
    > -                                   lib.loc = dirname(dir))
    > +	    args <- list(pkg = package, lib.loc = dirname(dir))
    > +	    if (!is.na(enc <- packageDescription(pkg = package, lib.loc=dirname(dir), field="Encoding")))
    > +		    args$enc <- enc
    > +        meta <- do.call("packageDescription", args=args)
    > +
    > ## if(is.null(auto)): Use default auto-citation if no CITATION
    > ## available.
    > citfile <- file.path(dir, "CITATION")


    > Nathan says he can look into this further next week...

    > Cheers,

    > Rich Calaway
    > Microsoft R Product Team
    > 24/1341
    > +1 (425) 4219919 X19919

    > -----Original Message-----
    > From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Nathan Sosnovske via R-devel
    > Sent: Friday, June 23, 2017 7:36 AM
    > To: Duncan Murdoch <murdoch.duncan at gmail.com>; Andrie de Vries <apdevries at gmail.com>
    > Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
    > Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

    > Hi Duncan,

    > I'm guessing I'll be able to look at this over the weekend/next week (probably closer to next week). It is on my list of things to do and I've just had a few other prior commitments that I have to finish first.

    > Sorry for the delay. I'll chime in with a status update next week.

    > Nathan

    > -----Original Message-----
    > From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Duncan Murdoch
    > Sent: Friday, June 23, 2017 5:16 AM
    > To: Andrie de Vries <apdevries at gmail.com>
    > Cc: r-devel at r-project.org; Ben Marwick <bmarwick at uw.edu>
    > Subject: Re: [Rd] suggestion to fix packageDescription() for Windows users

    > On 18/06/2017 5:57 AM, Andrie de Vries wrote:
    >> Hi, Duncan
    >> 
    >> i have forwarded this thread to Nathan, who promised to look into it.

    > Any progress on this?

    > Duncan Murdoch

    >> 
    >> Andrie
    >> 
    >> On 17 Jun 2017 17:26, "Duncan Murdoch" <murdoch.duncan at gmail.com 
    >> <mailto:murdoch.duncan at gmail.com>> wrote:
    >> 
    >> On 17/06/2017 9:13 AM, Ben Marwick wrote:
    >> 
    >> Hi Duncan,
    >> 
    >> Thanks for your reply. Yes, it does seem to be specific to the CTYPE
    >> setting to Chinese on Windows. If I set it to English using
    >> Sys.setlocale() there is no problem, then back to Chinese and the
    >> authors disappear:
    >> 
    >> Sys.setlocale("LC_ALL","English")
    >> citation("readr")
    >> 
    >> 
    >> Thanks, that makes the problem reproducible.  I'll submit it as a
    >> bug report.  Maybe someone from Microsoft will fix it.
    >> 
    >> Duncan Murdoch

    [.........]

From jorismeys at gmail.com  Tue Jun 27 19:42:57 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Tue, 27 Jun 2017 19:42:57 +0200
Subject: [Rd] texi2pdf doesn't find the correct MikTex installation due to
 erroneous Sys.which()
Message-ID: <CAO1zAVYx4u5TZSYz-9kCohv6cTeTaXRBPFWRT_xccE0VjtqSuQ@mail.gmail.com>

I checked after this question popped up on Stackoverflow:

https://stackoverflow.com/questions/44785961/compile-pdf-in-rstudio-works-but-knit2pdf-does-not-work-in-r-or-rstudio

On Windows, texi2pdf looks for the texify.exe of Miktex, but looks in a
very wrong place:

> Sys.which("texify")
                                                  texify
"C:\\PROGRA~1\\MIKTEX~1.9\\miktex\\bin\\x64\\texify.exe"

That folder is not on my computer (I have 2.9 installed), not in my path,
not in my system path and I couldn't find it in my register. So it appears
as if Sys.which() is looking in the wrong place.

What could cause this?

Kind regards
Joris

-- 
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From richcala at microsoft.com  Tue Jun 27 19:49:20 2017
From: richcala at microsoft.com (Rich Calaway)
Date: Tue, 27 Jun 2017 17:49:20 +0000
Subject: [Rd] texi2pdf doesn't find the correct MikTex installation due
 to erroneous Sys.which()
In-Reply-To: <CAO1zAVYx4u5TZSYz-9kCohv6cTeTaXRBPFWRT_xccE0VjtqSuQ@mail.gmail.com>
References: <CAO1zAVYx4u5TZSYz-9kCohv6cTeTaXRBPFWRT_xccE0VjtqSuQ@mail.gmail.com>
Message-ID: <CY4PR21MB0471401D58C3AAF55FBB80D9DEDC0@CY4PR21MB0471.namprd21.prod.outlook.com>

Ah, but I bet you do have that path...try 

> Sys.which("texify")
                                             texify 
"C:\\PROGRA~2\\MIKTEX~1.9\\miktex\\bin\\texify.exe" 
> normalizePath(Sys.which("texify"))
[1] "C:\\Program Files (x86)\\MiKTeX 2.9\\miktex\\bin\\texify.exe"

Cheers,

Rich Calaway
Microsoft R Product Team
24/1341
+1 (425) 4219919 X19919

-----Original Message-----
From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Joris Meys
Sent: Tuesday, June 27, 2017 10:43 AM
To: r-devel at r-project.org
Subject: [Rd] texi2pdf doesn't find the correct MikTex installation due to erroneous Sys.which()

I checked after this question popped up on Stackoverflow:

https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstackoverflow.com%2Fquestions%2F44785961%2Fcompile-pdf-in-rstudio-works-but-knit2pdf-does-not-work-in-r-or-rstudio&data=02%7C01%7Crichcala%40microsoft.com%7C109c2b63c17443c51ecc08d4bd83fb68%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341821947377257&sdata=NwIyGCJSQQjf1HY6r1X9a6V9Z1XI%2F74UTEe9ritYYys%3D&reserved=0

On Windows, texi2pdf looks for the texify.exe of Miktex, but looks in a very wrong place:

> Sys.which("texify")
                                                  texify "C:\\PROGRA~1\\MIKTEX~1.9\\miktex\\bin\\x64\\texify.exe"

That folder is not on my computer (I have 2.9 installed), not in my path, not in my system path and I couldn't find it in my register. So it appears as if Sys.which() is looking in the wrong place.

What could cause this?

Kind regards
Joris

--
Joris Meys
Statistical consultant

Ghent University
Faculty of Bioscience Engineering
Department of Mathematical Modelling, Statistics and Bio-Informatics

tel :  +32 (0)9 264 61 79
Joris.Meys at Ugent.be
-------------------------------
Disclaimer : https://na01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fhelpdesk.ugent.be%2Fe-maildisclaimer.php&data=02%7C01%7Crichcala%40microsoft.com%7C109c2b63c17443c51ecc08d4bd83fb68%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341821947377257&sdata=bCbpfOJqYi2M8U7YVbh4DG1oIdQHzxVboCRTkTwXzjI%3D&reserved=0

	[[alternative HTML version deleted]]

______________________________________________
R-devel at r-project.org mailing list
https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-devel&data=02%7C01%7Crichcala%40microsoft.com%7C109c2b63c17443c51ecc08d4bd83fb68%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636341821947377257&sdata=5Gy480YnsDT2qgmIfIPPARL8sEmYmg%2BcetIApASA%2FR0%3D&reserved=0


From jorismeys at gmail.com  Tue Jun 27 21:20:27 2017
From: jorismeys at gmail.com (Joris Meys)
Date: Tue, 27 Jun 2017 21:20:27 +0200
Subject: [Rd] texi2pdf doesn't find the correct MikTex installation due
 to erroneous Sys.which()
In-Reply-To: <CY4PR21MB0471401D58C3AAF55FBB80D9DEDC0@CY4PR21MB0471.namprd21.prod.outlook.com>
References: <CAO1zAVYx4u5TZSYz-9kCohv6cTeTaXRBPFWRT_xccE0VjtqSuQ@mail.gmail.com>
 <CY4PR21MB0471401D58C3AAF55FBB80D9DEDC0@CY4PR21MB0471.namprd21.prod.outlook.com>
Message-ID: <CAO1zAVbOZfaN5B4zQwATuOViEKcNY1V3fFTEwSxW0WCs+=YgeQ@mail.gmail.com>

Aargh... I've been windofied again. When will I learn...

On 27 Jun 2017 19:49, "Rich Calaway" <richcala at microsoft.com> wrote:

> Ah, but I bet you do have that path...try
>
> > Sys.which("texify")
>                                              texify
> "C:\\PROGRA~2\\MIKTEX~1.9\\miktex\\bin\\texify.exe"
> > normalizePath(Sys.which("texify"))
> [1] "C:\\Program Files (x86)\\MiKTeX 2.9\\miktex\\bin\\texify.exe"
>
> Cheers,
>
> Rich Calaway
> Microsoft R Product Team
> 24/1341
> +1 (425) 4219919 X19919
>
> -----Original Message-----
> From: R-devel [mailto:r-devel-bounces at r-project.org] On Behalf Of Joris
> Meys
> Sent: Tuesday, June 27, 2017 10:43 AM
> To: r-devel at r-project.org
> Subject: [Rd] texi2pdf doesn't find the correct MikTex installation due to
> erroneous Sys.which()
>
> I checked after this question popped up on Stackoverflow:
>
> https://na01.safelinks.protection.outlook.com/?url=
> https%3A%2F%2Fstackoverflow.com%2Fquestions%2F44785961%
> 2Fcompile-pdf-in-rstudio-works-but-knit2pdf-does-not-
> work-in-r-or-rstudio&data=02%7C01%7Crichcala%40microsoft.com%
> 7C109c2b63c17443c51ecc08d4bd83fb68%7C72f988bf86f141af91ab2d7cd011
> db47%7C1%7C0%7C636341821947377257&sdata=NwIyGCJSQQjf1HY6r1X9a6V9Z1XI%
> 2F74UTEe9ritYYys%3D&reserved=0
>
> On Windows, texi2pdf looks for the texify.exe of Miktex, but looks in a
> very wrong place:
>
> > Sys.which("texify")
>                                                   texify
> "C:\\PROGRA~1\\MIKTEX~1.9\\miktex\\bin\\x64\\texify.exe"
>
> That folder is not on my computer (I have 2.9 installed), not in my path,
> not in my system path and I couldn't find it in my register. So it appears
> as if Sys.which() is looking in the wrong place.
>
> What could cause this?
>
> Kind regards
> Joris
>
> --
> Joris Meys
> Statistical consultant
>
> Ghent University
> Faculty of Bioscience Engineering
> Department of Mathematical Modelling, Statistics and Bio-Informatics
>
> tel :  +32 (0)9 264 61 79
> Joris.Meys at Ugent.be
> -------------------------------
> Disclaimer : https://na01.safelinks.protection.outlook.com/?url=
> http%3A%2F%2Fhelpdesk.ugent.be%2Fe-maildisclaimer.php&
> data=02%7C01%7Crichcala%40microsoft.com%7C109c2b63c17443c51ecc08d4bd83
> fb68%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%
> 7C636341821947377257&sdata=bCbpfOJqYi2M8U7YVbh4DG1oIdQHzx
> VboCRTkTwXzjI%3D&reserved=0
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://na01.safelinks.protection.outlook.com/?url=
> https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-
> devel&data=02%7C01%7Crichcala%40microsoft.com%
> 7C109c2b63c17443c51ecc08d4bd83fb68%7C72f988bf86f141af91ab2d7cd011
> db47%7C1%7C0%7C636341821947377257&sdata=5Gy480YnsDT2qgmIfIPPARL8sEmYmg
> %2BcetIApASA%2FR0%3D&reserved=0
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Wed Jun 28 12:32:08 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 28 Jun 2017 06:32:08 -0400
Subject: [Rd] Windows iconv() "failure" in certain locales
In-Reply-To: <22866.31638.949797.725782@stat.math.ethz.ch>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
 <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
 <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>
 <22866.13492.183329.958202@stat.math.ethz.ch>
 <22866.31638.949797.725782@stat.math.ethz.ch>
Message-ID: <7859662c-4ed0-1dd1-a11f-5c3e59055d50@gmail.com>

On 27/06/2017 11:36 AM, Martin Maechler wrote:
> This is a continuation of the R-devel thread with subject
>  "suggestion to fix packageDescription() for Windows users" :
>
> As I said there, a patch should rather address the underlying
> problem in packageDescription rather than a kludgy workaround
> patch for  citation().
> (For that same reason, Ben Marwick proposed to fix
>  packageDescription() rather than the symptom seen in citation().)
>
> It's not hard to see that the problem is that  iconv() in
> Windows does not always succeed to translate from "UTF-8" to the
> "current locale", in the case mentioned there.
>
> I'm giving some easier reproducible examples:  no need to install
> half of tidyverse just to get citation("readr") :
>
>> x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
>> Encoding(x1) <- "latin1"
>> xU <- iconv(x1, "latin1", "UTF-8")
>
>> Sys.setlocale("LC_CTYPE", "Chinese")
> [1] "Chinese (Simplified)_People's Republic of China.936"
>>
>> iconv(x1, "latin1", "") # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "") # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "//TRANSLIT")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub = "byte")
> [1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z??rcher"
>
>
>> Sys.setlocale("LC_CTYPE", "Arabic")
> [1] "Arabic_Saudi Arabia.1256"
>> iconv(x1, "latin1", "")  # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "")  # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "//TRANSLIT")
> [1] "Ekstr\370m"         "J\366reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub="byte")
> [1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub="?")
> [1] "Ekstr??m"         "J??reskog"        "bi??chen Z?rcher"
>
> Etc... .  As the above is typically garbled between e-mail
> transfer agents, I append both the iconv-Windows.R R script and
> the corresponding iconv-Windows.Rout  R transcript to this
> e-mail (using MIME type text/plain (easy using emacs for mail..)),
> and they contain a bit more than the above.
>
> Note that the above shows that using 'sub = *' and using
> "//TRANSLIT" in case of a previous NA  result helps quite a bit,
> in the sense that it gives much more information to see
>   "J?reskog"  instead   NA.
>
> I'm considering updating  packageDescription() to try these in
> case it first returns NA.   This would make the citation() hack
> unnecessary.

I agree with the general sentiment (fix the underlying problem).  I 
haven't traced through this one, but the usual cause of problems like 
this is that we too frequently convert to the local encoding even when 
that loses information.

Kirill M?ller and I are gradually working through internal code and 
fixing these issues.  I don't know if this one will be fixed sooner or 
later, but I would hope it would be fixed by 3.5.0.

So in order that we don't hide it, I'd ask you not to apply the patch in 
R-devel.

Duncan Murdoch


From ligges at statistik.tu-dortmund.de  Wed Jun 28 18:45:59 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Wed, 28 Jun 2017 18:45:59 +0200
Subject: [Rd] Windows iconv() "failure" in certain locales
In-Reply-To: <22866.31638.949797.725782@stat.math.ethz.ch>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
 <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
 <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>
 <22866.13492.183329.958202@stat.math.ethz.ch>
 <22866.31638.949797.725782@stat.math.ethz.ch>
Message-ID: <79597dc9-db1b-cd7b-2fb2-0c236db03f48@statistik.tu-dortmund.de>



On 27.06.2017 17:36, Martin Maechler wrote:
> This is a continuation of the R-devel thread with subject
>   "suggestion to fix packageDescription() for Windows users" :
> 
> As I said there, a patch should rather address the underlying
> problem in packageDescription rather than a kludgy workaround
> patch for  citation().
> (For that same reason, Ben Marwick proposed to fix
>   packageDescription() rather than the symptom seen in citation().)
> 
> It's not hard to see that the problem is that  iconv() in
> Windows does not always succeed to translate from "UTF-8" to the
> "current locale", in the case mentioned there.
> 
> I'm giving some easier reproducible examples:  no need to install
> half of tidyverse just to get citation("readr") :
> 
>> x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
>> Encoding(x1) <- "latin1"
>> xU <- iconv(x1, "latin1", "UTF-8")
> 
>> Sys.setlocale("LC_CTYPE", "Chinese")
> [1] "Chinese (Simplified)_People's Republic of China.936"
>>
>> iconv(x1, "latin1", "") # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "") # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "//TRANSLIT")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"

Interesting, I get chinese characters here.

Beside the comments from Duncan Murdoch:
iconv(x1, "latin1", "", sub="?")
etc. would be an alternative in case some characters really cannot be 
converted into the target encoding and should perhaps be considered for 
the time after Duncan commits the fix for the underlying porblem.

Best,
Uwe








>> iconv(xU, "UTF-8", "", sub = "byte")
> [1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z??rcher"
> 
> 
>> Sys.setlocale("LC_CTYPE", "Arabic")
> [1] "Arabic_Saudi Arabia.1256"
>> iconv(x1, "latin1", "")  # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "")  # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "//TRANSLIT")
> [1] "Ekstr\370m"         "J\366reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub="byte")
> [1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub="?")
> [1] "Ekstr??m"         "J??reskog"        "bi??chen Z?rcher"
> 
> Etc... .  As the above is typically garbled between e-mail
> transfer agents, I append both the iconv-Windows.R R script and
> the corresponding iconv-Windows.Rout  R transcript to this
> e-mail (using MIME type text/plain (easy using emacs for mail..)),
> and they contain a bit more than the above.
> 
> Note that the above shows that using 'sub = *' and using
> "//TRANSLIT" in case of a previous NA  result helps quite a bit,
> in the sense that it gives much more information to see
>    "J?reskog"  instead   NA.
> 
> I'm considering updating  packageDescription() to try these in
> case it first returns NA.   This would make the citation() hack
> unnecessary.
> 
> Martin
> 
> 
> iconv-Windows.R
> 
> 
> #### iconv() behavior depending on Locales  LC_CTYPE  in Windows
> #### =======                       ==============================
> ###
> ### In a *shell* in Windows (emacs), after doing R.home() in R, use that to do something like
> ###   c:/PROGRA~1/R/R-devel/bin/R CMD BATCH iconv-Windows.R
> ###   ^^^^^^^^^^^^^^^^^^^^^^^^^^= === ===== ===============  ==> producing  iconv-Windows.Rout
> ###
> sessionInfo() ## does not matter so much
> ## -- should be Windows to exhibit the problems
> 
> ## From  help(iconv) 's  example : Using "latin1" European language letters:
> x1 <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
> Encoding(x1) <- "latin1"
> xU <- iconv(x1, "latin1", "UTF-8")
> 
> 
> ## 2 locales that do not work well : ---------------------------------
> Sys.setlocale("LC_CTYPE", "Chinese")
> 
> iconv(x1, "latin1", "") # NA NA NA
> iconv(x1, "latin1", "//TRANSLIT") # perfect for Chinese
> iconv(x1, "latin1", "", sub = "byte")
> iconv(xU, "UTF-8", "") # NA NA NA
> iconv(xU, "UTF-8", "//TRANSLIT")
> iconv(xU, "UTF-8", "", sub = "byte")
> ##--
> Sys.setlocale("LC_CTYPE", "Arabic")
> iconv(x1, "latin1", "")  # NA NA NA
> iconv(x1, "latin1", "//TRANSLIT") # not bad, but not perfect
> iconv(x1, "latin1", "", sub="byte")
> iconv(x1, "latin1", "", sub="?")
> iconv(xU, "UTF-8", "")  # NA NA NA
> iconv(xU, "UTF-8", "//TRANSLIT")
> iconv(xU, "UTF-8", "", sub="byte")
> iconv(xU, "UTF-8", "", sub="?")
> 
> ## 2 locales that work well for these examples (no wonder) -----------
> 
> Sys.setlocale("LC_CTYPE", "German_Switzerland")
> iconv(x1, "latin1", "")
> iconv(x1, "latin1", "//TRANSLIT")
> iconv(x1, "latin1", "", sub="?")
> iconv(xU, "UTF-8", "")
> iconv(xU, "UTF-8", "//TRANSLIT")
> iconv(xU, "UTF-8", "", sub="?")
> ##--
> Sys.setlocale("LC_CTYPE", "English")
> iconv(x1, "latin1", "")
> iconv(x1, "latin1", "//TRANSLIT")
> iconv(x1, "latin1", "", sub="?")
> iconv(xU, "UTF-8", "")
> iconv(xU, "UTF-8", "//TRANSLIT")
> iconv(xU, "UTF-8", "", sub="?")
> 
> 
> iconv-Windows.Rout
> 
> 
> 
> R Under development (unstable) (2017-06-25 r72854) -- "Unsuffered Consequences"
> Copyright (C) 2017 The R Foundation for Statistical Computing
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
>> #### iconv() behavior depending on Locales  LC_CTYPE  in Windows
>> #### =======                       ==============================
>> ###
>> ### In a *shell* in Windows (emacs), after doing R.home() in R, use that to do something like
>> ###   c:/PROGRA~1/R/R-devel/bin/R CMD BATCH iconv-Windows.R
>> ###   ^^^^^^^^^^^^^^^^^^^^^^^^^^= === ===== ===============  ==> producing  iconv-Windows.Rout
>> ###
>> sessionInfo() ## does not matter so much
> R Under development (unstable) (2017-06-25 r72854)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows Server 2008 R2 x64 (build 7601) Service Pack 1
> 
> Matrix products: default
> 
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] compiler_3.5.0
>> ## -- should be Windows to exhibit the problems
>>
>> ## From  help(iconv) 's  example : Using "latin1" European language letters:
>> x1 <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
>> Encoding(x1) <- "latin1"
>> xU <- iconv(x1, "latin1", "UTF-8")
>>
>>
>> ## 2 locales that do not work well : ---------------------------------
>> Sys.setlocale("LC_CTYPE", "Chinese")
> [1] "Chinese (Simplified)_People's Republic of China.936"
>>
>> iconv(x1, "latin1", "") # NA NA NA
> [1] NA NA NA
>> iconv(x1, "latin1", "//TRANSLIT") # perfect for Chinese
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(x1, "latin1", "", sub = "byte")
> [1] "Ekstr<f8>m"         "J<f6>reskog"        "bi<df>chen Z??rcher"
>> iconv(xU, "UTF-8", "") # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "//TRANSLIT")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub = "byte")
> [1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z??rcher"
>> ##--
>> Sys.setlocale("LC_CTYPE", "Arabic")
> [1] "Arabic_Saudi Arabia.1256"
>> iconv(x1, "latin1", "")  # NA NA NA
> [1] NA NA NA
>> iconv(x1, "latin1", "//TRANSLIT") # not bad, but not perfect
> [1] "Ekstr\370m"         "J\366reskog"        "bi?chen Z?rcher"
>> iconv(x1, "latin1", "", sub="byte")
> [1] "Ekstr<f8>m"         "J<f6>reskog"        "bi<df>chen Z?rcher"
>> iconv(x1, "latin1", "", sub="?")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "")  # NA NA NA
> [1] NA NA NA
>> iconv(xU, "UTF-8", "//TRANSLIT")
> [1] "Ekstr\370m"         "J\366reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub="byte")
> [1] "Ekstr<c3><b8>m"         "J<c3><b6>reskog"        "bi<c3><9f>chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub="?")
> [1] "Ekstr??m"         "J??reskog"        "bi??chen Z?rcher"
>>
>> ## 2 locales that work well for these examples (no wonder) -----------
>>
>> Sys.setlocale("LC_CTYPE", "German_Switzerland")
> [1] "German_Switzerland.1252"
>> iconv(x1, "latin1", "")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(x1, "latin1", "//TRANSLIT")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(x1, "latin1", "", sub="?")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "//TRANSLIT")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub="?")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> ##--
>> Sys.setlocale("LC_CTYPE", "English")
> [1] "English_United States.1252"
>> iconv(x1, "latin1", "")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(x1, "latin1", "//TRANSLIT")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(x1, "latin1", "", sub="?")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "//TRANSLIT")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>> iconv(xU, "UTF-8", "", sub="?")
> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
>>
>> proc.time()
>     user  system elapsed
>     0.18    0.14    0.98
> 
> 
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From Nathan.Weeks at ARS.USDA.GOV  Wed Jun 28 19:11:01 2017
From: Nathan.Weeks at ARS.USDA.GOV (Weeks, Nathan)
Date: Wed, 28 Jun 2017 17:11:01 +0000
Subject: [Rd] regexec() bug in R 3.4.0
Message-ID: <25769b0b70394202831721536dac853f@DM2PR0204MB0122.001f.mgd2.msft.net>

Hi,

In R 3.4.0, the "Pattern Matching and Replacement" documentation that describes regexec(), gregexpr(), etc. states that the "text" argument to regexec is a character vector, "or an object which can be coerced by as.character to a character vector":

     regexec(pattern, text, ignore.case = FALSE, perl = FALSE,
             fixed = FALSE, useBytes = FALSE)

     x, text: a character vector where matches are sought, or an object
         which can be coerced by as.character to a character vector.
         Long vectors are supported.

However, in R 3.4.0, this coercion doesn't seem to automatically occur for the text argument of regexec(), whereas it does for gregexpr(), regexpr(), etc:

============================================================
$ R --vanilla

R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

...
> text <- as.factor("foobar")
> regexec("foo", text)
Error in regexec("foo", text) : invalid 'text' argument
> regexec("foo", as.character(text))                                                                                                             [[1]]                                                                                                                                            [1] 1
attr(,"match.length")
[1] 3
attr(,"useBytes")
[1] TRUE

> gregexpr("foo", text)                                                                                                                          [[1]]
[1] 1
attr(,"match.length")
[1] 3
attr(,"useBytes")
[1] TRUE
============================================================

Is this a documentation issue, a bug in regexec(), or am I misunderstanding how it's supposed to behave?

Thanks,

--
Nathan Weeks
IT Specialist
USDA-ARS Corn Insects and Crop Genetics Research Unit
Crop Genome Informatics Laboratory
Iowa State University







This electronic message contains information generated by the USDA solely for the intended recipients. Any unauthorized interception of this message or the use or disclosure of the information it contains may violate the law and subject the violator to civil or criminal penalties. If you believe you have received this message in error, please notify the sender and delete the email immediately.


From maechler at stat.math.ethz.ch  Thu Jun 29 12:27:51 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 29 Jun 2017 12:27:51 +0200
Subject: [Rd] Windows iconv() "failure" in certain locales
In-Reply-To: <79597dc9-db1b-cd7b-2fb2-0c236db03f48@statistik.tu-dortmund.de>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
 <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
 <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>
 <22866.13492.183329.958202@stat.math.ethz.ch>
 <22866.31638.949797.725782@stat.math.ethz.ch>
 <79597dc9-db1b-cd7b-2fb2-0c236db03f48@statistik.tu-dortmund.de>
Message-ID: <22868.54823.81543.37466@stat.math.ethz.ch>

>>>>> Uwe Ligges <ligges at statistik.tu-dortmund.de>
>>>>>     on Wed, 28 Jun 2017 18:45:59 +0200 writes:

    > On 27.06.2017 17:36, Martin Maechler wrote:
    >> This is a continuation of the R-devel thread with subject
    >> "suggestion to fix packageDescription() for Windows users" :
    >> 
    >> As I said there, a patch should rather address the underlying
    >> problem in packageDescription rather than a kludgy workaround
    >> patch for  citation().
    >> (For that same reason, Ben Marwick proposed to fix
    >> packageDescription() rather than the symptom seen in citation().)
    >> 
    >> It's not hard to see that the problem is that  iconv() in
    >> Windows does not always succeed to translate from "UTF-8" to the
    >> "current locale", in the case mentioned there.
    >> 
    >> I'm giving some easier reproducible examples:  no need to install
    >> half of tidyverse just to get citation("readr") :
    >> 
    >>> x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
    >>> Encoding(x1) <- "latin1"
    >>> xU <- iconv(x1, "latin1", "UTF-8")
    >> 
    >>> Sys.setlocale("LC_CTYPE", "Chinese")
    >> [1] "Chinese (Simplified)_People's Republic of China.936"
    >>> 
    >>> iconv(x1, "latin1", "") # NA NA NA
    >> [1] NA NA NA
    >>> iconv(xU, "UTF-8", "") # NA NA NA
    >> [1] NA NA NA
    >>> iconv(xU, "UTF-8", "//TRANSLIT")
    >> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"

    > Interesting, I get chinese characters here.

For which one of the above cases; can you show them
 (it may survive E-mail servers; we had other
  Chinese R strings on R-help / R-devel recently, right?)

In any case, I think  that is even worse, isn't it?  
As also in a Chinese locale you'd want explicit-latin1 text to
see in something that looks like latin-1 (I know from a master's
 student that Windows+Chinese can well show latin-1-like
 letters also interspersed in the Chinese text),
no ? 


    > Beside the comments from Duncan Murdoch:

    > iconv(x1, "latin1", "", sub="?")
    > etc. would be an alternative in case some characters really cannot be 
    > converted into the target encoding and should perhaps be considered for 
    > the time after Duncan commits the fix for the underlying porblem.

Yes. I'd had the same idea that's why I used it in the code I
sent along.

So,

1)  we definitely won't commit the workaround patch for citation().

2) I have a "workaround patch" for packageDescription() which is
   more useful in the sense that only if iconv() produces NA's, it
   tries alternatives, notably   "//TRANSLIT",  "ASCII//TRANSLIT"
   (the latter Ben also mentioned, but my patch would only use it
    in the NA case) and also the same  'sub="?"' that you mention
    above, Uwe.

   That patch is not Windows-specific and will automatically
   also help in other cases / platforms where the iconv()
   re-encoding leads to partial NAs.
   
  @Duncan M: would you _not_ want me to commit that either?

Martin


From maechler at stat.math.ethz.ch  Thu Jun 29 12:32:54 2017
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 29 Jun 2017 12:32:54 +0200
Subject: [Rd] regexec() bug in R 3.4.0
In-Reply-To: <25769b0b70394202831721536dac853f@DM2PR0204MB0122.001f.mgd2.msft.net>
References: <25769b0b70394202831721536dac853f@DM2PR0204MB0122.001f.mgd2.msft.net>
Message-ID: <22868.55126.181329.692321@stat.math.ethz.ch>

>>>>> Weeks, Nathan <Nathan.Weeks at ARS.USDA.GOV>
>>>>>     on Wed, 28 Jun 2017 17:11:01 +0000 writes:

> Hi,
> 
> In R 3.4.0, the "Pattern Matching and Replacement" documentation that describes regexec(), gregexpr(), etc. states that the "text" argument to regexec is a character vector, "or an object which can be coerced by as.character to a character vector":
> 
>      regexec(pattern, text, ignore.case = FALSE, perl = FALSE,
>              fixed = FALSE, useBytes = FALSE)
> 
>      x, text: a character vector where matches are sought, or an object
>          which can be coerced by as.character to a character vector.
>          Long vectors are supported.
> 
> However, in R 3.4.0, this coercion doesn't seem to automatically occur for the text argument of regexec(), whereas it does for gregexpr(), regexpr(), etc:
> 
> ============================================================
> $ R --vanilla
> 
> R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
> Copyright (C) 2017 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
> 
> ...
> > text <- as.factor("foobar")
> > regexec("foo", text)
> Error in regexec("foo", text) : invalid 'text' argument

[...........]

I agree this is an inconsistency of documentation and behaviour,
and hence an (easy to work around) bug.

I propose to fix the code (for consistency) rather than the
documentation and will do so if there's no dissent.

We have become wary and cautious with last minute changes so
this won't be in  R 3.4.1 (due tomorrow Friday) but probably
in 'R 3.4.1 patched" later, and then future versions.

Martin Maechler,
ETH Zurich


From ligges at statistik.tu-dortmund.de  Thu Jun 29 13:47:34 2017
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Thu, 29 Jun 2017 13:47:34 +0200
Subject: [Rd] Windows iconv() "failure" in certain locales
In-Reply-To: <22868.54823.81543.37466@stat.math.ethz.ch>
References: <1d01ccce-cb18-30d9-9d93-644ed4dbd995@uw.edu>
 <70548b39-a0ee-80d5-302f-2433a700192d@gmail.com>
 <6b7f9592-1a53-37dd-f8ae-fe805dcbc337@uw.edu>
 <7e843534-d9f2-9cac-1c53-7c2e8b687c39@gmail.com>
 <CA+E84Q4SKEHOA7Gy_wCZs_9twTmzE-M=EeUDABshmREyAutyNg@mail.gmail.com>
 <08f33a36-329c-b40a-202a-80f2e61f53a3@gmail.com>
 <SN1PR21MB0061EB36C510723541CC25B7B7D80@SN1PR21MB0061.namprd21.prod.outlook.com>
 <CY4PR21MB04713D49F2DB7C9BFC2E2A56DED90@CY4PR21MB0471.namprd21.prod.outlook.com>
 <SN1PR21MB0061957F2745E5277E239C69B7DF0@SN1PR21MB0061.namprd21.prod.outlook.com>
 <22866.13492.183329.958202@stat.math.ethz.ch>
 <22866.31638.949797.725782@stat.math.ethz.ch>
 <79597dc9-db1b-cd7b-2fb2-0c236db03f48@statistik.tu-dortmund.de>
 <22868.54823.81543.37466@stat.math.ethz.ch>
Message-ID: <47ae4510-22d0-cc7a-310d-395dca2b6088@statistik.tu-dortmund.de>



On 29.06.2017 12:27, Martin Maechler wrote:
>>>>>> Uwe Ligges <ligges at statistik.tu-dortmund.de>
>>>>>>      on Wed, 28 Jun 2017 18:45:59 +0200 writes:
> 
>      > On 27.06.2017 17:36, Martin Maechler wrote:
>      >> This is a continuation of the R-devel thread with subject
>      >> "suggestion to fix packageDescription() for Windows users" :
>      >>
>      >> As I said there, a patch should rather address the underlying
>      >> problem in packageDescription rather than a kludgy workaround
>      >> patch for  citation().
>      >> (For that same reason, Ben Marwick proposed to fix
>      >> packageDescription() rather than the symptom seen in citation().)
>      >>
>      >> It's not hard to see that the problem is that  iconv() in
>      >> Windows does not always succeed to translate from "UTF-8" to the
>      >> "current locale", in the case mentioned there.
>      >>
>      >> I'm giving some easier reproducible examples:  no need to install
>      >> half of tidyverse just to get citation("readr") :
>      >>
>      >>> x <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
>      >>> Encoding(x1) <- "latin1"
>      >>> xU <- iconv(x1, "latin1", "UTF-8")
>      >>
>      >>> Sys.setlocale("LC_CTYPE", "Chinese")
>      >> [1] "Chinese (Simplified)_People's Republic of China.936"
>      >>>
>      >>> iconv(x1, "latin1", "") # NA NA NA
>      >> [1] NA NA NA
>      >>> iconv(xU, "UTF-8", "") # NA NA NA
>      >> [1] NA NA NA
>      >>> iconv(xU, "UTF-8", "//TRANSLIT")
>      >> [1] "Ekstr?m"         "J?reskog"        "bi?chen Z?rcher"
> 
>      > Interesting, I get chinese characters here.
> 
> For which one of the above cases; can you show them
>   (it may survive E-mail servers; we had other
>    Chinese R strings on R-help / R-devel recently, right?)



x1 <- c("Ekstr\xf8m", "J\xf6reskog", "bi\xdfchen Z\xfcrcher")
Encoding(x1) <- "latin1"
Sys.setlocale("LC_CTYPE", "Chinese")
# [1] "Chinese (Simplified)_People's Republic of China.936"
xU <- iconv(x1, "latin1", "UTF-8")
iconv(xU, "UTF-8", "//TRANSLIT")
# [1] "Ekstr?"         "J?eskog"        "bi?hen Z?cher


 > sessionInfo()
R Under development (unstable) (2017-06-28 r72861)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

Matrix products: default

locale:
[1] LC_COLLATE=German_Germany.1252 
LC_CTYPE=Chinese (Simplified)_People's Republic of China.936
[3] LC_MONETARY=German_Germany.1252 
LC_NUMERIC=C
[5] LC_TIME=German_Germany.1252

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.5.0



Best,
Uwe






> In any case, I think  that is even worse, isn't it > As also in a Chinese locale you'd want explicit-latin1 text to
> see in something that looks like latin-1 (I know from a master's
>   student that Windows+Chinese can well show latin-1-like
>   letters also interspersed in the Chinese text),
> no ?
> 
> 
>      > Beside the comments from Duncan Murdoch:
> 
>      > iconv(x1, "latin1", "", sub="?")
>      > etc. would be an alternative in case some characters really cannot be
>      > converted into the target encoding and should perhaps be considered for
>      > the time after Duncan commits the fix for the underlying porblem.
> 
> Yes. I'd had the same idea that's why I used it in the code I
> sent along.
> 
> So,
> 
> 1)  we definitely won't commit the workaround patch for citation().
> 
> 2) I have a "workaround patch" for packageDescription() which is
>     more useful in the sense that only if iconv() produces NA's, it
>     tries alternatives, notably   "//TRANSLIT",  "ASCII//TRANSLIT"
>     (the latter Ben also mentioned, but my patch would only use it
>      in the NA case) and also the same  'sub="?"' that you mention
>      above, Uwe.
> 
>     That patch is not Windows-specific and will automatically
>     also help in other cases / platforms where the iconv()
>     re-encoding leads to partial NAs.
>     
>    @Duncan M: would you _not_ want me to commit that either?
> 
> Martin
>


From bmarwick at uw.edu  Fri Jun 30 04:33:10 2017
From: bmarwick at uw.edu (Ben Marwick)
Date: Fri, 30 Jun 2017 12:33:10 +1000
Subject: [Rd] suggestion: mention how to format DOIs in "Writing R
	Extensions"
Message-ID: <272a4aaf-7862-90d9-2b14-21de5326711f@uw.edu>

Hi Everyone,

I recently has some problems formatting DOIs correctly in a pkg 
submitted to CRAN. Kurt kindly informed me that in the man pages they 
must be \{doi:XXX} (noted in 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#User_002ddefined-macros) 
and in the DESCRIPTION they must be <DOI:XXX> (not specifically noted 
anywhere).

I wondered if others had similar problems getting DOIs correct in pkg 
documentation, and I thought it could save the CRAN maintainers some 
time if the "Writing R Extensions" document was updated to include a 
mention of DOIs in the in DESCRIPTION.

For example, section "1.1.1 The DESCRIPTION file" currently has this text:

"URLs should be enclosed in angle brackets, e.g. 
'<https://www.r-project.org>'"

and I'd like to propose we replace that with this new text that 
specifically mentions DOIs:

""URLs, DOIs and other Uniform Resource Identifiers should be enclosed 
in angle brackets, e.g. '<https://www.r-project.org>'"

That will help others like me who might be unsure of the proper way to 
format DOIs in the DESCRIPTION file, and save the CRAN maintainers some 
bother.

Making a direct mention of DOIs will also encourage well-formatted and 
visible citations of relevant scholarly work in package DESCRIPTIONs, 
which is a desirable behavior for package authors, and helps to 
strengthen ties between programming and research activities.

What do you think?

best,

Ben


From pperry at stern.nyu.edu  Fri Jun 30 22:24:05 2017
From: pperry at stern.nyu.edu (Patrick Perry)
Date: Fri, 30 Jun 2017 21:24:05 +0100
Subject: [Rd] Rprintf expected encoding
Message-ID: <5956B365.9000907@stern.nyu.edu>

I'm trying to find information about how to use Rprintf with a UTF-8 
encoded string, and I'm not sure what the right cross-platform usage is. 
I found an earlier thread about this 
(http://r.789695.n4.nabble.com/How-to-print-UTF-8-encoded-strings-from-a-C-routine-to-R-s-output-td4724337.html) 
but it wasn't very helpful.

If I want to print a UTF-8 string, I can do one of the following:

1) Send native data via Rprintf("%s", translateChar(str));

2) Send UTF-8 data via Rprintf("%s", translateCharUTF8(str));

If Rprintf is sending its output to stdout, then (1) seems like the 
correct option. If Rprintf is sending to a file connection with encoding 
set to UTF-8 (for example, after a call to sink(file(..., 
encoding="UTF-8"))), then (2) is correct. Is there any way to know the 
encoding that Rprintf is expecting?

Thanks,


Patrick
--

Patrick Perry
Assistant Professor
New York University


From murdoch.duncan at gmail.com  Fri Jun 30 23:54:31 2017
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 30 Jun 2017 17:54:31 -0400
Subject: [Rd] Rprintf expected encoding
In-Reply-To: <5956B365.9000907@stern.nyu.edu>
References: <5956B365.9000907@stern.nyu.edu>
Message-ID: <4c80cbc7-1c6e-9d82-822f-1ead6c97f5fa@gmail.com>

On 30/06/2017 4:24 PM, Patrick Perry wrote:
> I'm trying to find information about how to use Rprintf with a UTF-8
> encoded string, and I'm not sure what the right cross-platform usage is.
> I found an earlier thread about this
> (http://r.789695.n4.nabble.com/How-to-print-UTF-8-encoded-strings-from-a-C-routine-to-R-s-output-td4724337.html)
> but it wasn't very helpful.
>
> If I want to print a UTF-8 string, I can do one of the following:
>
> 1) Send native data via Rprintf("%s", translateChar(str));
>
> 2) Send UTF-8 data via Rprintf("%s", translateCharUTF8(str));
>
> If Rprintf is sending its output to stdout, then (1) seems like the
> correct option. If Rprintf is sending to a file connection with encoding
> set to UTF-8 (for example, after a call to sink(file(...,
> encoding="UTF-8"))), then (2) is correct. Is there any way to know the
> encoding that Rprintf is expecting?

It always expects the native encoding.  If the output connection is 
UTF-8 encoded, it will translate from native to UTF-8 as it writes.

Things will hopefully change in R 3.5.0, since the translation from 
UTF-8 to native to UTF-8 can lose information (and is inefficient even 
if not lossy).  I think old code should behave as it did in the past, 
but there will be a way to say that the incoming string is in UTF-8.

Duncan Murdoch


