From john.maindonald at anu.edu.au  Tue May  1 06:26:04 2007
From: john.maindonald at anu.edu.au (John Maindonald)
Date: Tue, 1 May 2007 14:26:04 +1000
Subject: [Rd] Levels attribute in integer columns created by model.frame()
Message-ID: <9C67231E-1C4B-4A64-BC89-C910DAE33BEB@anu.edu.au>

The following is evidence of what is surely an undesirable feature.
The issue is the handling, in calls to model.frame(), of  an
explanatory variable that has been derived as an unclassed
factor. (Ross Darnell drew this to my attention.)

## Data are slightly modified from p.191 of MASS
 > worms <- data.frame(sex=gl(2,6), Dose=factor(rep(2^(0:5),2)),
+                     deaths=c(1,4,9,13,18,20,0,2,6,10,12,16))
 > worms$doselin <- unclass(worms$Dose)
 > class(worms$doselin)
[1] "integer"
 > attributes(worms$doselin)
$levels
[1] "1"  "2"  "4"  "8"  "16" "32"

 > worms.glm <- glm(cbind(deaths, (20-deaths)) ~ sex+ doselin,
+                  data=worms, family=binomial)
 > predict(worms.glm, new=data.frame(sex="1", doselin=6))
Error: variable 'doselin' was fitted with class "other" but class  
"numeric" was supplied
In addition: Warning message:
variable 'doselin' is not a factor in: model.frame.default(Terms,  
newdata, na.action = na.action, xlev = object$xlevels)


The error is reported in the call to model.frame() from predict.lm()
which is called by predict.glm(). It is not clear to me why this call to
model.frame identifies the class that should be expected as "other".

The problem might be fixed by stripping the levels attribute from
any column created by model.frame() that is integer or numeric.

 > ###################################################
 >
 > ## Note the following
 > mframe <- model.frame(cbind(deaths, (20-deaths)) ~ sex+ doselin,
+                       data=worms)
 > class(mframe$doselin)
[1] "integer"
 > attributes(mframe$doselin)
$levels
[1] "1"  "2"  "4"  "8"  "16" "32"


John Maindonald             email: john.maindonald at anu.edu.au
phone : +61 2 (6125)3473    fax  : +61 2(6125)5549
Centre for Mathematics & Its Applications, Room 1194,
John Dedman Mathematical Sciences Building (Building 27)
Australian National University, Canberra ACT 0200.


From sfalcon at fhcrc.org  Tue May  1 06:48:56 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 30 Apr 2007 21:48:56 -0700
Subject: [Rd] Possible problem with S4 dispatch
Message-ID: <m27irtkv2f.fsf@ziti.local>

Hi,

First a bit of disclaimer...  I haven't isolated this problem into an
easy to reproduce case, and I won't be surprised if the root cause is
a fault in my code's use of name spaces or some such.

The error I'm seeing is one in which the desired method is not found.
What worries me in terms of my expectations of how to debug the
problem is that showMethods and selectMethod both find the method.
Here is an example browser session:

    ## Input 1, a character vector
    Browse[1]> gN[1:3]
    [1] "1005_at"   "1007_s_at" "1008_f_at"
    
    ## Input 2, an object of class AtomicAnnMap (subclass of AnnMap)
    Browse[1]> class(LLe)
    [1] "AtomicAnnMap"
    attr(,"package")
    [1] "AnnotationDbi"
    
    ## See what selectMethod has to say (it finds the method I'm expecting)
    Browse[1]> selectMethod("mget", signature(x="character", envir=class(LLe)))
    Method Definition:
    
    function (x, envir, mode = "any", ifnotfound = list(function(x) stop(paste("value for '", 
        x, "' not found", sep = ""), call. = FALSE)), inherits = FALSE) 
    {
        .checkNamesAreStrings(x)
        .checkNamesExist(x, names(envir))
        as.list(envir, names = x)
    }
    <environment: namespace:AnnotationDbi>
    
    Signatures:
            x           envir         
    target  "character" "AtomicAnnMap"
    defined "ANY"       "AnnMap"      
    
    ## Call it (we get base::mget, not the generic and hence an error)
    Browse[1]> mget(gN[1:3], LLe)
    Error in mget(x, envir, mode, ifnotfound, inherits) : 
    	second argument must be an environment
    
    Browse[1]> find("mget")
    [1] "package:AnnotationDbi" "package:base"         


The package code I'm working with imports the package that defines the
mget method (and this package does exportMethods(mget)), yet the
problem seems to be that the mget generic is not found -- but I find
it confusing that selectMethod works here.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From ripley at stats.ox.ac.uk  Tue May  1 08:33:19 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 1 May 2007 07:33:19 +0100 (BST)
Subject: [Rd] Levels attribute in integer columns created by
	model.frame()
In-Reply-To: <9C67231E-1C4B-4A64-BC89-C910DAE33BEB@anu.edu.au>
References: <9C67231E-1C4B-4A64-BC89-C910DAE33BEB@anu.edu.au>
Message-ID: <Pine.LNX.4.64.0705010653410.10582@gannet.stats.ox.ac.uk>

Stripping attributes from a column in model.frame would be highly 
undesirable.

The mistake was using 'unclass' when the intention was to remove the 
levels (I presume).  The new variable given is correctly reported as not 
matching that used during fitting.

Uuse of traceback() would have shown that the error is not reported from 
model.frame (as claimed) but from

4: .checkMFClasses(cl, m)
3: predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==
        "link", "response", type), terms = terms, na.action = na.action)
2: predict.glm(worms.glm, new = data.frame(sex = "1", doselin = 6))
1: predict(worms.glm, new = data.frame(sex = "1", doselin = 6))

The reason the class is reported as "other" is clear from
attr(worms.glm, "dataClasses").  This comes from .MFclass.


On Tue, 1 May 2007, John Maindonald wrote:

> The following is evidence of what is surely an undesirable feature.
> The issue is the handling, in calls to model.frame(), of  an
> explanatory variable that has been derived as an unclassed
> factor. (Ross Darnell drew this to my attention.)

He has already filed a bug report on it, without saying what he thinks the 
bug is.

> ## Data are slightly modified from p.191 of MASS
> > worms <- data.frame(sex=gl(2,6), Dose=factor(rep(2^(0:5),2)),
> +                     deaths=c(1,4,9,13,18,20,0,2,6,10,12,16))
> > worms$doselin <- unclass(worms$Dose)
> > class(worms$doselin)
> [1] "integer"
> > attributes(worms$doselin)
> $levels
> [1] "1"  "2"  "4"  "8"  "16" "32"
>
> > worms.glm <- glm(cbind(deaths, (20-deaths)) ~ sex+ doselin,
> +                  data=worms, family=binomial)
> > predict(worms.glm, new=data.frame(sex="1", doselin=6))
> Error: variable 'doselin' was fitted with class "other" but class
> "numeric" was supplied
> In addition: Warning message:
> variable 'doselin' is not a factor in: model.frame.default(Terms,
> newdata, na.action = na.action, xlev = object$xlevels)
>
>
> The error is reported in the call to model.frame() from predict.lm()
> which is called by predict.glm(). It is not clear to me why this call to
> model.frame identifies the class that should be expected as "other".
>
> The problem might be fixed by stripping the levels attribute from
> any column created by model.frame() that is integer or numeric.
>
> > ###################################################
> >
> > ## Note the following
> > mframe <- model.frame(cbind(deaths, (20-deaths)) ~ sex+ doselin,
> +                       data=worms)
> > class(mframe$doselin)
> [1] "integer"
> > attributes(mframe$doselin)
> $levels
> [1] "1"  "2"  "4"  "8"  "16" "32"
>
>
> John Maindonald             email: john.maindonald at anu.edu.au
> phone : +61 2 (6125)3473    fax  : +61 2(6125)5549
> Centre for Mathematics & Its Applications, Room 1194,
> John Dedman Mathematical Sciences Building (Building 27)
> Australian National University, Canberra ACT 0200.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From John.Maindonald at anu.edu.au  Tue May  1 09:41:45 2007
From: John.Maindonald at anu.edu.au (John Maindonald)
Date: Tue, 1 May 2007 17:41:45 +1000
Subject: [Rd] Levels attribute in integer columns created by
	model.frame()
In-Reply-To: <Pine.LNX.4.64.0705010653410.10582@gannet.stats.ox.ac.uk>
References: <9C67231E-1C4B-4A64-BC89-C910DAE33BEB@anu.edu.au>
	<Pine.LNX.4.64.0705010653410.10582@gannet.stats.ox.ac.uk>
Message-ID: <B1886158-4382-487D-BD53-E02785E93D1F@anu.edu.au>

I get

worms.glm <- glm(cbind(deaths, (20-deaths)) ~ sex+ doselin,
+                   data=worms, family=binomial)
 > attr(worms.glm, "dataClasses")
NULL

But maybe the result from somewhere within predict.lm() or model.frame()
is different.

Surely the levels attribute has no relevance to glm's computations with
the doselin term.  It has treated it as numeric.  In my view, either  
predict()
should maintain the stance (pretence?) that it is numeric, or else  
the call
to  .checkMFClasses() that follows on the use of glm() should report at
least a warning.,

John Maindonald             email: john.maindonald at anu.edu.au
phone : +61 2 (6125)3473    fax  : +61 2(6125)5549
Centre for Mathematics & Its Applications, Room 1194,
John Dedman Mathematical Sciences Building (Building 27)
Australian National University, Canberra ACT 0200.


On 1 May 2007, at 4:33 PM, Prof Brian Ripley wrote:

> Stripping attributes from a column in model.frame would be highly  
> undesirable.
>
> The mistake was using 'unclass' when the intention was to remove  
> the levels (I presume).  The new variable given is correctly  
> reported as not matching that used during fitting.
>
> Uuse of traceback() would have shown that the error is not reported  
> from model.frame (as claimed) but from
>
> 4: .checkMFClasses(cl, m)
> 3: predict.lm(object, newdata, se.fit, scale = 1, type = ifelse 
> (type ==
>        "link", "response", type), terms = terms, na.action =  
> na.action)
> 2: predict.glm(worms.glm, new = data.frame(sex = "1", doselin = 6))
> 1: predict(worms.glm, new = data.frame(sex = "1", doselin = 6))
>
> The reason the class is reported as "other" is clear from
> attr(worms.glm, "dataClasses").  This comes from .MFclass.
>
>
> On Tue, 1 May 2007, John Maindonald wrote:
>
>> The following is evidence of what is surely an undesirable feature.
>> The issue is the handling, in calls to model.frame(), of  an
>> explanatory variable that has been derived as an unclassed
>> factor. (Ross Darnell drew this to my attention.)
>
> He has already filed a bug report on it, without saying what he  
> thinks the bug is.
>
>> ## Data are slightly modified from p.191 of MASS
>> > worms <- data.frame(sex=gl(2,6), Dose=factor(rep(2^(0:5),2)),
>> +                     deaths=c(1,4,9,13,18,20,0,2,6,10,12,16))
>> > worms$doselin <- unclass(worms$Dose)
>> > class(worms$doselin)
>> [1] "integer"
>> > attributes(worms$doselin)
>> $levels
>> [1] "1"  "2"  "4"  "8"  "16" "32"
>>
>> > worms.glm <- glm(cbind(deaths, (20-deaths)) ~ sex+ doselin,
>> +                  data=worms, family=binomial)
>> > predict(worms.glm, new=data.frame(sex="1", doselin=6))
>> Error: variable 'doselin' was fitted with class "other" but class
>> "numeric" was supplied
>> In addition: Warning message:
>> variable 'doselin' is not a factor in: model.frame.default(Terms,
>> newdata, na.action = na.action, xlev = object$xlevels)
>>
>>
>> The error is reported in the call to model.frame() from predict.lm()
>> which is called by predict.glm(). It is not clear to me why this  
>> call to
>> model.frame identifies the class that should be expected as "other".
>>
>> The problem might be fixed by stripping the levels attribute from
>> any column created by model.frame() that is integer or numeric.
>>
>> > ###################################################
>> >
>> > ## Note the following
>> > mframe <- model.frame(cbind(deaths, (20-deaths)) ~ sex+ doselin,
>> +                       data=worms)
>> > class(mframe$doselin)
>> [1] "integer"
>> > attributes(mframe$doselin)
>> $levels
>> [1] "1"  "2"  "4"  "8"  "16" "32"
>>
>>
>> John Maindonald             email: john.maindonald at anu.edu.au
>> phone : +61 2 (6125)3473    fax  : +61 2(6125)5549
>> Centre for Mathematics & Its Applications, Room 1194,
>> John Dedman Mathematical Sciences Building (Building 27)
>> Australian National University, Canberra ACT 0200.
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From orcaforge at googlemail.com  Tue May  1 13:21:53 2007
From: orcaforge at googlemail.com (Stephan)
Date: Tue, 1 May 2007 13:21:53 +0200
Subject: [Rd] integer constants given by hexadecimal notation
Message-ID: <1ae51efd0705010421g6d591837y14885e4e06d43b5e@mail.gmail.com>

Hi,

> 0x10L
returns: int 0

I would expect: int 16?
This happens with all integer constants given by hexadecimal notation.
It's a bug?


> sessionInfo()
R version 2.5.0 (2007-04-23)
i386-pc-mingw32

locale:
LC_COLLATE=German_Germany.1252;LC_CTYPE=German_Germany.1252;LC_MONETARY=German_Germany.1252;LC_NUMERIC=C;LC_TIME=German_Germany.1252

attached base packages:
[1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
[7] "base"


Stephan


From murdoch at stats.uwo.ca  Tue May  1 13:30:27 2007
From: murdoch at stats.uwo.ca (murdoch at stats.uwo.ca)
Date: Tue,  1 May 2007 13:30:27 +0200 (CEST)
Subject: [Rd] integer constants given by hexadecimal notation (PR#9648)
Message-ID: <20070501113027.003035DE3C@slim.kubism.ku.dk>

On 01/05/2007 7:21 AM, Stephan wrote:
> Hi,
> 
>> 0x10L
> returns: int 0
> 
> I would expect: int 16?
> This happens with all integer constants given by hexadecimal notation.
> It's a bug?

Certainly looks like one; I've cc'd this to the bug list (but won't be 
able to look into fixing it).

Duncan Murdoch

> 
> 
>> sessionInfo()
> R version 2.5.0 (2007-04-23)
> i386-pc-mingw32
> 
> locale:
> LC_COLLATE=German_Germany.1252;LC_CTYPE=German_Germany.1252;LC_MONETARY=German_Germany.1252;LC_NUMERIC=C;LC_TIME=German_Germany.1252
> 
> attached base packages:
> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
> [7] "base"
> 
> 
> Stephan
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From p.dalgaard at biostat.ku.dk  Tue May  1 14:04:52 2007
From: p.dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Tue, 01 May 2007 14:04:52 +0200
Subject: [Rd] integer constants given by hexadecimal notation (PR#9648)
In-Reply-To: <20070501113027.003035DE3C@slim.kubism.ku.dk>
References: <20070501113027.003035DE3C@slim.kubism.ku.dk>
Message-ID: <46372CE4.5000801@biostat.ku.dk>

murdoch at stats.uwo.ca wrote:
> On 01/05/2007 7:21 AM, Stephan wrote:
>   
>> Hi,
>>
>>     
>>> 0x10L
>>>       
>> returns: int 0
>>
>> I would expect: int 16?
>> This happens with all integer constants given by hexadecimal notation.
>> It's a bug?
>>     
>
> Certainly looks like one; I've cc'd this to the bug list (but won't be 
> able to look into fixing it).
>
>   
Not happening on Fedora Linux:

 > 0x10L
[1] 16
 > str(0x10L)
 int 16


From ripley at stats.ox.ac.uk  Tue May  1 14:09:19 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 1 May 2007 13:09:19 +0100 (BST)
Subject: [Rd] Possible problem with S4 dispatch
In-Reply-To: <m27irtkv2f.fsf@ziti.local>
References: <m27irtkv2f.fsf@ziti.local>
Message-ID: <Pine.LNX.4.64.0705010907260.16158@gannet.stats.ox.ac.uk>

On Mon, 30 Apr 2007, Seth Falcon wrote:

> First a bit of disclaimer...  I haven't isolated this problem into an
> easy to reproduce case, and I won't be surprised if the root cause is
> a fault in my code's use of name spaces or some such.

Note that you called

selectMethod("mget", signature(x="character", envir=class(LLe)))

by name rather than calling the visible function mget() (which you could 
have supplied as fdef).  I've never really got to the bottom of the 
complicated searches that getGeneric() uses, but the fact that it does not 
just look for a visible function of that name tells you it is doing 
something different.

What I would check from your browser is what parent.env() shows, 
successively until you get to the imports and then the base namespace. If 
mget is not in the imports, something would seem to be up with your 
importing of namespaces.  find() is not relevant here as namespace 
scoping is in play: only if the mget generic is imported will it take 
precedence over base:::mget.  (It is not clear to me what is being browsed 
here, and hence what namespaces are in play.)

Perhaps we need lexical versions of find() and search() to make it easier 
to explore search paths from a function body.

Hope it helps: without a reproducible example I can only guess blindly.


> The error I'm seeing is one in which the desired method is not found.
> What worries me in terms of my expectations of how to debug the
> problem is that showMethods and selectMethod both find the method.
> Here is an example browser session:
>
>    ## Input 1, a character vector
>    Browse[1]> gN[1:3]
>    [1] "1005_at"   "1007_s_at" "1008_f_at"
>
>    ## Input 2, an object of class AtomicAnnMap (subclass of AnnMap)
>    Browse[1]> class(LLe)
>    [1] "AtomicAnnMap"
>    attr(,"package")
>    [1] "AnnotationDbi"
>
>    ## See what selectMethod has to say (it finds the method I'm expecting)
>    Browse[1]> selectMethod("mget", signature(x="character", envir=class(LLe)))
>    Method Definition:
>
>    function (x, envir, mode = "any", ifnotfound = list(function(x) stop(paste("value for '",
>        x, "' not found", sep = ""), call. = FALSE)), inherits = FALSE)
>    {
>        .checkNamesAreStrings(x)
>        .checkNamesExist(x, names(envir))
>        as.list(envir, names = x)
>    }
>    <environment: namespace:AnnotationDbi>
>
>    Signatures:
>            x           envir
>    target  "character" "AtomicAnnMap"
>    defined "ANY"       "AnnMap"
>
>    ## Call it (we get base::mget, not the generic and hence an error)
>    Browse[1]> mget(gN[1:3], LLe)
>    Error in mget(x, envir, mode, ifnotfound, inherits) :
>    	second argument must be an environment
>
>    Browse[1]> find("mget")
>    [1] "package:AnnotationDbi" "package:base"
>
>
> The package code I'm working with imports the package that defines the
> mget method (and this package does exportMethods(mget)), yet the
> problem seems to be that the mget generic is not found -- but I find
> it confusing that selectMethod works here.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Tue May  1 14:19:15 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Tue,  1 May 2007 14:19:15 +0200 (CEST)
Subject: [Rd] integer constants given by hexadecimal notation (PR#9648)
Message-ID: <20070501121915.31A045ACD2@slim.kubism.ku.dk>

This works correctly on Linux.  The problem is that the author assumed 
that atof handles hexadecimal, which it does for a C99 compiler but not 
apparently on MinGW.

We have a workaround for this in mkFloat, and need to use that for the 'L' 
suffix case too.

On Tue, 1 May 2007, murdoch at stats.uwo.ca wrote:

> On 01/05/2007 7:21 AM, Stephan wrote:
>> Hi,
>>
>>> 0x10L
>> returns: int 0
>>
>> I would expect: int 16?
>> This happens with all integer constants given by hexadecimal notation.
>> It's a bug?
>
> Certainly looks like one; I've cc'd this to the bug list (but won't be
> able to look into fixing it).
>
> Duncan Murdoch
>
>>
>>
>>> sessionInfo()
>> R version 2.5.0 (2007-04-23)
>> i386-pc-mingw32
>>
>> locale:
>> LC_COLLATE=German_Germany.1252;LC_CTYPE=German_Germany.1252;LC_MONETARY=German_Germany.1252;LC_NUMERIC=C;LC_TIME=German_Germany.1252
>>
>> attached base packages:
>> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
>> [7] "base"
>>
>>
>> Stephan
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From jeff.horner at vanderbilt.edu  Tue May  1 14:23:10 2007
From: jeff.horner at vanderbilt.edu (Jeffrey Horner)
Date: Tue, 01 May 2007 07:23:10 -0500
Subject: [Rd] Nonexistent URL in R_ext/Callbacks.h
Message-ID: <4637312E.1040007@vanderbilt.edu>

There's no RObjectTables.pdf at developer.r-project.org. I included the 
Omegahat URL from the attach help page:

nonexistent

Index: src/include/R_ext/Callbacks.h
===================================================================
--- src/include/R_ext/Callbacks.h       (revision 41399)
+++ src/include/R_ext/Callbacks.h       (working copy)
@@ -68,7 +68,7 @@
   separate package and these declarations allow the package to
   interface to the internal R code.

- See http://developer.r-project.org/RObjectTables.pdf.
+ See http://www.omegahat.org/RObjectTables/
   */

  typedef struct  _R_ObjectTable R_ObjectTable;


Jeff
-- 
http://biostat.mc.vanderbilt.edu/JeffreyHorner


From maechler at stat.math.ethz.ch  Tue May  1 14:37:21 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 1 May 2007 14:37:21 +0200
Subject: [Rd] integer constants given by hexadecimal notation
In-Reply-To: <1ae51efd0705010421g6d591837y14885e4e06d43b5e@mail.gmail.com>
References: <1ae51efd0705010421g6d591837y14885e4e06d43b5e@mail.gmail.com>
Message-ID: <17975.13441.150050.206821@stat.math.ethz.ch>

>>>>> "Stephan" == Stephan  <orcaforge at googlemail.com>
>>>>>     on Tue, 1 May 2007 13:21:53 +0200 writes:

    Stephan> Hi,
    >> 0x10L
    Stephan> returns: int 0


    Stephan> I would expect: int 16?  This happens with all
    Stephan> integer constants given by hexadecimal notation.
    Stephan> It's a bug?

a bug in your installed version of R I think

    >> sessionInfo()
    Stephan> R version 2.5.0 (2007-04-23) i386-pc-mingw32

    Stephan> locale:
    Stephan> LC_COLLATE=German_Germany.1252;LC_CTYPE=German_Germany.1252;LC_MONETARY=German_Germany.1252;LC_NUMERIC=C;LC_TIME=German_Germany.1252

    Stephan> attached base packages: [1] "stats" "graphics"
    Stephan> "grDevices" "utils" "datasets" "methods" [7] "base"

In my (Linux) versions of R 2.5.0, I see

  $ Rscript --vanilla -e 'str(0x10L)'
  int 16

Martin Maechler, ETH Zurich


From p.dalgaard at biostat.ku.dk  Tue May  1 15:02:27 2007
From: p.dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Tue, 01 May 2007 15:02:27 +0200
Subject: [Rd] Nonexistent URL in R_ext/Callbacks.h
In-Reply-To: <4637312E.1040007@vanderbilt.edu>
References: <4637312E.1040007@vanderbilt.edu>
Message-ID: <46373A63.6030600@biostat.ku.dk>

Jeffrey Horner wrote:
> There's no RObjectTables.pdf at developer.r-project.org. I included the 
> Omegahat URL from the attach help page:
>
> nonexistent
>
>   
I took the quicker approach and copied the PDF file to R-dev-web SVN 
repo. Should turn up on the website on next mirroring.

-pd

> Index: src/include/R_ext/Callbacks.h
> ===================================================================
> --- src/include/R_ext/Callbacks.h       (revision 41399)
> +++ src/include/R_ext/Callbacks.h       (working copy)
> @@ -68,7 +68,7 @@
>    separate package and these declarations allow the package to
>    interface to the internal R code.
>
> - See http://developer.r-project.org/RObjectTables.pdf.
> + See http://www.omegahat.org/RObjectTables/
>    */
>
>   typedef struct  _R_ObjectTable R_ObjectTable;
>
>
> Jeff
>


From ripley at stats.ox.ac.uk  Tue May  1 15:33:20 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Tue,  1 May 2007 15:33:20 +0200 (CEST)
Subject: [Rd] [Fwd: Re: [R-downunder] Beware unclass(factor)] (PR#9641)
Message-ID: <20070501133320.38A0A5DE55@slim.kubism.ku.dk>

It really is unclear what is claimed to be a bug here.  But see

https://stat.ethz.ch/pipermail/r-devel/2007-May/045592.html

for why the bug is not in R: your old and new data do not match.
Your fit is to a category.


[The problem with the web interface to R-bugs was reported last week: it 
is being worked on.]


On Mon, 30 Apr 2007, r.darnell at uq.edu.au wrote:

> This is a multi-part message in MIME format.
> --------------040101030901070905010208
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> Content-Transfer-Encoding: 7bit
>
> The following "issue" was found using
>
> > version
>               _
> platform       i386-pc-mingw32
> arch           i386
> os             mingw32
> system         i386, mingw32
> status
> major          2
> minor          4.1
> year           2006
> month          12
> day            18
> svn rev        40228
> language       R
> version.string R version 2.4.1 (2006-12-18)
> >
>
>
> and discussed on the R-downunder mailing list.
>
> I hope I have provided enough info.  I tried to look at the Bugs
> Tracking page but got---
>
>
> The system encountered a fatal error
>
> *
>
> cannot open config file /home/sfe/r-bugs/jitterbug/R : No such file or directory
>
> *
>
> The last error code was: No such file or directory
>
> uid/gid=30/8
>
>
> Regards
>
> Ross Darnell
>
> --------------040101030901070905010208
> Content-Type: message/rfc822;
> name="Re: [R-downunder] Beware unclass(factor)"
> Content-Transfer-Encoding: 7bit
> Content-Disposition: inline;
> filename="Re: [R-downunder] Beware unclass(factor)"
>
> Return-path: <john.maindonald at anu.edu.au>
> Received: from mail2a.soe.uq.edu.au (mail2a.soe.uq.edu.au [130.102.3.87])
> by MAILSTORE (The University of Queensland Central Mail System)
> with ESMTP id <0JHB00BUB0WHC0 at anode.soe.uq.edu.au> for r.darnell at uq.edu.au;
> Mon, 30 Apr 2007 19:26:41 +1000 (EST)
> Received: from mailhub4.uq.edu.au (mailhub4.uq.edu.au [130.102.149.131])
> by MAILSTORE (The University of Queensland Central Mail System)
> with ESMTP id <0JHB009DL0WH43 at positive.soe.uq.edu.au> for r.darnell at uq.edu.au;
> Mon, 30 Apr 2007 19:26:41 +1000 (EST)
> Received: from customer-domains.icp-qv1-irony10.iinet.net.au
> (customer-domains.icp-qv1-irony10.iinet.net.au [203.59.1.145])
> 	by mailhub4.uq.edu.au (8.13.8/8.13.8) with ESMTP id l3U9QcOd021380	for
> <r.darnell at uq.edu.au>; Mon, 30 Apr 2007 19:26:41 +1000
> Received: from 203-173-2-10.dyn.iinet.net.au (HELO [192.168.0.2])
> ([203.173.2.10]) by iinet-mail.icp-qv1-irony10.iinet.net.au with ESMTP; Mon,
> 30 Apr 2007 17:25:10 +0800
> Date: Mon, 30 Apr 2007 19:25:09 +1000
> From: John Maindonald <john.maindonald at anu.edu.au>
> Subject: Re: [R-downunder] Beware unclass(factor)
> In-reply-to: <46359373.50504 at uq.edu.au>
> To: Ross Darnell <r.darnell at uq.edu.au>
> Cc: r-downunder at stat.auckland.ac.nz
> Message-id: <68935773-EB35-4B4F-9970-0D241FDFF73C at anu.edu.au>
> MIME-version: 1.0 (Apple Message framework v752.3)
> X-Mailer: Apple Mail (2.752.3)
> Content-type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
> Content-transfer-encoding: 7bit
> X-IronPort-Anti-Spam-Filtered: true
> X-IronPort-Anti-Spam-Result: AgAAAARTNUbLrQIKUGdsb2JhbAANj3wBASo
> X-IronPort-AV: i="4.14,469,1170601200";   d="scan'208";
> a="80792155:sNHT7461584868"
> X-Sorbs: not_in_sorbs
> X-Spam-Score: 0 (), 5 = high
> X-UQ-Spam-Score: UQ-Spam-Score (0), 5 = high
> X-UQ-FilterTime: 1177925201
> X-Scanned-By: MIMEDefang 2.58 on UQ Mailhub on 130.102.149.131
> References: <46359373.50504 at uq.edu.au>
> Original-recipient: rfc822;r.darnell at uq.edu.au
>
> Observe the following
>
> > z <- model.frame(cbind(moths,(20-moths)) ~sex+ doselin,data=worms)
> > class(z$doselin)
> [1] "other"
> > levels(z$doselin)
> [1] "1"  "2"  "4"  "8"  "16" "32"
> > attributes(z$doselin)
> $levels
> [1] "1"  "2"  "4"  "8"  "16" "32"
>
> $class
> [1] "other"
>
> The problem surfaces in the call for model.frame() from predict.lm()
> when it is called by predict.glm().  This call is jumping to conclusions
> when it uses the presence of a levels attribute as an indication that
> doselin is a factor, ironic as it was the call that was initiated by glm
> that seems to have given the column doselin of the object returned
> by model.frame() the class "other".
>
> This seems to me to be a bug. The call to unclass() does not
> strip the levels attribute from doselin.  (This is not, I think, the
> bug; rather the problem is in the model matrix that is created.)
> The column worms$doselin does though have class "integer",
> at least as far as the function class() is concerned.
>
> You can fix the problem by setting:
>
>   worms$doselin <- as.vector(unclass(worms$Dose))
>
> This strips off the levels attribute.
>
> In my view model.frame ought to have stripped the levels
> attribute from the column doselin in the object that it
> returned.
>
> I consider that this should be reported as a bug, or at least
> as an undesirable feature.
>
> John Maindonald             email: john.maindonald at anu.edu.au
> phone : +61 2 (6125)3473    fax  : +61 2(6125)5549
> Centre for Mathematics & Its Applications, Room 1194,
> John Dedman Mathematical Sciences Building (Building 27)
> Australian National University, Canberra ACT 0200.
>
>
> On 30 Apr 2007, at 4:57 PM, Ross Darnell wrote:
>
>> Just an observation about the use of unclass() to generate codes
>> for factors.
>>
>> As an example take the  dataset from the MASS4 book
>>
>>> worms <- data.frame(sex=gl(2,6),Dose=factor(rep(2^(0:5),
>> 2)),moths=c(1,4,9,13,18,20,0,2,6,10,12,16))
>>
>>> worms$doselin <- unclass(worms$Dose)
>>
>>> worms.glm <- glm(cbind(moths,(20-moths)) ~sex+
>> doselin,data=worms,family=binomial)
>>
>>> predict(worms.glm,new=data.frame(sex="1",doselin=6))
>> Error: variable 'doselin' was fitted with class "other" but class
>> "numeric" was supplied
>> In addition: Warning message:
>> variable 'doselin' is not a factor in: model.frame.default(Terms,
>> newdata, na.action = na.action, xlev = object$xlevels)
>>>
>>
>>
>> The /doselin/ vector is "atomic" --- good enough for the glm()
>> function but not acceptable by predict()
>>
>>> str(worms$doselin)
>> atomic [1:12] 1 2 3 4 5 6 1 2 3 4 ...
>> - attr(*, "levels")= chr [1:6] "1" "2" "4" "8" ...
>>>
>>
>> Cheers
>>
>> Ross Darnell
>>
>> --
>> R-downunder at stat.auckland.ac.nz
>> http://www.stat.auckland.ac.nz/r-downunder
>>
>> To unsubscribe send an email to R-downunder-
>> unsubscribe at stat.auckland.ac.nz
>
> --------------040101030901070905010208--
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From hin-tak.leung at cimr.cam.ac.uk  Tue May  1 15:35:38 2007
From: hin-tak.leung at cimr.cam.ac.uk (Hin-Tak Leung)
Date: Tue, 01 May 2007 14:35:38 +0100
Subject: [Rd] (PR#9648) integer constants given by hexadecimal notation
In-Reply-To: <20070501121915.31A045ACD2@slim.kubism.ku.dk>
References: <20070501121915.31A045ACD2@slim.kubism.ku.dk>
Message-ID: <4637422A.4010803@cimr.cam.ac.uk>

ripley at stats.ox.ac.uk wrote:
> This works correctly on Linux.  The problem is that the author assumed 
> that atof handles hexadecimal, which it does for a C99 compiler but not 
> apparently on MinGW.
> 
> We have a workaround for this in mkFloat, and need to use that for the 'L' 
> suffix case too.

Kind of irrelevant, but this also works in R-win32 under wine on linux.
I suppose the problem isn't mingw per se but msvcrt (or is the Locale
relevant?)...

----------------------
 > 0x10L
[1] 16
 > sessionInfo()
R version 2.5.0 (2007-04-23)
i386-pc-mingw32

locale:
C

attached base packages:
[1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
[7] "base"
----------------------


> 
> On Tue, 1 May 2007, murdoch at stats.uwo.ca wrote:
> 
>> On 01/05/2007 7:21 AM, Stephan wrote:
>>> Hi,
>>>
>>>> 0x10L
>>> returns: int 0
>>>
>>> I would expect: int 16?
>>> This happens with all integer constants given by hexadecimal notation.
>>> It's a bug?
>> Certainly looks like one; I've cc'd this to the bug list (but won't be
>> able to look into fixing it).
>>
>> Duncan Murdoch
>>
>>>
>>>> sessionInfo()
>>> R version 2.5.0 (2007-04-23)
>>> i386-pc-mingw32
>>>
>>> locale:
>>> LC_COLLATE=German_Germany.1252;LC_CTYPE=German_Germany.1252;LC_MONETARY=German_Germany.1252;LC_NUMERIC=C;LC_TIME=German_Germany.1252
>>>
>>> attached base packages:
>>> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
>>> [7] "base"
>>>
>>>
>>> Stephan
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


From ripley at stats.ox.ac.uk  Tue May  1 15:40:35 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 1 May 2007 14:40:35 +0100 (BST)
Subject: [Rd] (PR#9648) integer constants given by hexadecimal notation
In-Reply-To: <4637422A.4010803@cimr.cam.ac.uk>
References: <20070501121915.31A045ACD2@slim.kubism.ku.dk>
	<4637422A.4010803@cimr.cam.ac.uk>
Message-ID: <Pine.LNX.4.64.0705011436420.26485@gannet.stats.ox.ac.uk>

On Tue, 1 May 2007, Hin-Tak Leung wrote:

> ripley at stats.ox.ac.uk wrote:
>> This works correctly on Linux.  The problem is that the author assumed that 
>> atof handles hexadecimal, which it does for a C99 compiler but not 
>> apparently on MinGW.
>> 
>> We have a workaround for this in mkFloat, and need to use that for the 'L' 
>> suffix case too.
>
> Kind of irrelevant, but this also works in R-win32 under wine on linux.
> I suppose the problem isn't mingw per se but msvcrt (or is the Locale
> relevant?)...

MinGW calls MSVCRT for this, and calling MSVCRT is part of the (modern) 
definition of MinGW (it once called crtdll.dll).  Now, the MSVCRT docs do 
not claim that atof supports hexadecimal, so I suspect your point is that 
wine is an inaccurate emulation of MSVCRT (which is indeed pretty 
irrelevant).

>
> ----------------------
>> 0x10L
> [1] 16
>> sessionInfo()
> R version 2.5.0 (2007-04-23)
> i386-pc-mingw32
>
> locale:
> C
>
> attached base packages:
> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
> [7] "base"
> ----------------------
>
>
>> 
>> On Tue, 1 May 2007, murdoch at stats.uwo.ca wrote:
>> 
>>> On 01/05/2007 7:21 AM, Stephan wrote:
>>>> Hi,
>>>> 
>>>>> 0x10L
>>>> returns: int 0
>>>> 
>>>> I would expect: int 16?
>>>> This happens with all integer constants given by hexadecimal notation.
>>>> It's a bug?
>>> Certainly looks like one; I've cc'd this to the bug list (but won't be
>>> able to look into fixing it).
>>> 
>>> Duncan Murdoch
>>> 
>>>> 
>>>>> sessionInfo()
>>>> R version 2.5.0 (2007-04-23)
>>>> i386-pc-mingw32
>>>> 
>>>> locale:
>>>> LC_COLLATE=German_Germany.1252;LC_CTYPE=German_Germany.1252;LC_MONETARY=German_Germany.1252;LC_NUMERIC=C;LC_TIME=German_Germany.1252
>>>> 
>>>> attached base packages:
>>>> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
>>>> [7] "base"
>>>> 
>>>> 
>>>> Stephan
>>>> 
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>> 
>> 
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Tue May  1 16:02:08 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Tue,  1 May 2007 16:02:08 +0200 (CEST)
Subject: [Rd] (PR#9623)  qr.coef: permutes dimnames; inserts NA; promises
Message-ID: <20070501140208.8C99A5DE57@slim.kubism.ku.dk>



On Thu, 19 Apr 2007, brech at delphioutpost.com wrote:

> Full_Name: Christian Brechbuehler
> Version: 2.4.1 Patched (2007-03-25 r40917)
> OS: Linux 2.6.15-27-adm64-xeon; Ubuntu 6.06.1 LTS
> Submission from: (NULL) (24.61.47.236)
>
>
> Splus and R have different ideas about what qr.coef(qr()) should return,
> which is fine... but I believe that R has a bug in that it is not
> internally consistent, and another separate bug in the documentation.

I agree with the bug in the dimnames, and and have corrected that in 2.5.0 
patched.  But I think the rest stems from the following misunderstanding:

> in math, zero times anything is zero, but in R, NA times
> anything (even zero) is NA.  This seems somewhat inconvenient.

That just is not true. In 'math' it would be true for the real line, but R 
is working with the computer version of the extended real line.
In 'math' 0 * Inf is not zero, and an NA value could be infinite.

Stemming from this, what R is reporting is that certain columns are not 
used in the calculation.  There is a difference between computing a 
coefficient as zero, and excluding that column from the calculation (for 
which R uses NA, because what happens if it were included is unknown).

You are assuming that you can find a linear predictor by multiplying a 
matrix by the coefficients.  That is not true in R (especially for linear 
models), and it is not said to be so in ?qr.coef.


> In particular, on this problem, Splus generates a permuted solution
> vector:
>
> Splus 6.2.1:
>    > A <- matrix(c(0,0,0, 1,1,1), nrow=3,dimnames=list(NULL, c("zero",
> "one")))
>    > A
>         zero one
>    [1,]    0   1
>    [2,]    0   1
>    [3,]    0   1
>    > y <- matrix(c(6,7,8), nrow=3, dimnames=list(NULL, "y"))
>    > y
>         y
>    [1,] 6
>    [2,] 7
>    [3,] 8
>    > x <- qr.coef(qr(A), y)
>    > x
>         y
>     one 7
>    zero 0
>    >
>
> To my taste, the answer from Splus is unexpected; I was looking for
> this:
>
>    > x[qr(A)$pivot,,drop=F]
>         y
>    zero 0
>     one 7
>
> But at least the answer is internally consistent: the values and the
> row names were scrambled in corresponding ways.
>
> However, R seems to helpfully un-permute the data values, but forgets
> to un-permute the dimnames, which seems broken.
>
> R version 2.4.1 Patched (2007-03-25 r40917)
>    > A <- matrix(c(0,0,0, 1,1,1), nrow=3,dimnames=list(NULL, c("zero",
> "one")))
>    > y <- matrix(c(6,7,8), nrow=3, dimnames=list(NULL, "y"))
>    > x <- qr.coef(qr(A), y)
>    > x
>          y
>    one  NA
>    zero  7
>
> I think the answer from qr.coef() should look more like this:
>
>    > x.wanted
>          y
>    zero NA
>    one   7
>    >
>
> In addition, R uses NA to fill in rather than zero.  NA for this
> problem above might mean "undefined": any value will do.  But given
> the application of this function, where the solution might be
> multiplied by the matrix, any NA will cause that to turn into an NA
> result... in math, zero times anything is zero, but in R, NA times
> anything (even zero) is NA.  This seems somewhat inconvenient.  So I'd really
> like
> R to return this:
>
>    > x
>          y
>    zero  0
>    one   7
>
> More on the scrambling; I see in dqrsl.f that:
>
> c               if pivoting was requested in dqrdc, the j-th
> c               component of b will be associated with column jpvt(j)
> c               of the original matrix x that was input into dqrdc.)
>
> which I think is referring to the helpful un-permuting, but I think
> qr.coef() in R needs to correspondingly un-permute the dimnames as
> well?
>
>  Code from qr.coef:
>    if (!is.null(nam <- colnames(qr$qr)))
>        rownames(coef) <- nam
>  Proposed fix: That second line could be changed to
>        rownames(coef)[qr$pivot] <- nam
>
>
> Another issue (either with the documentation or the code) is as follows.
> In R, help(qr) promises:
>
>   'solve.qr' is the method for 'solve' for 'qr' objects. 'qr.solve'
>   solves systems of equations via the QR decomposition: if 'a' is a
>   QR decomposition it is the same as 'solve.qr', but if 'a' is a
>   rectangular matrix the QR decomposition is computed first.  Either
>   will handle over- and under-determined systems, providing a
>   minimal-length solution or a least-squares fit if appropriate.
>
> So unlike Splus, R promises a minimal-length solution, but I don't
> think it delivers that.  For example, let's get the minimal-length
> solution for the following under-determined system:
>
>     x1 + 2*x2  ==  5
>
> qr.solve would fail due to the singular matrix, so use qr.coef:
>
>     > qr.coef(qr(t(1:2)),c(5))
>
>   R:
>     [1]  5 NA
>
>   Splus:
>     [1] 5 0
>
> 1*5 + 2*0 does equal 5, so modulo NA, this is a solution, but it is
> NOT minimal-length.  OTOH, svd gives the right answer in both Splus and
> R:
>
>     > d <- svd(t(1:2));  c(5) %*% d$u %*% diag(1/d$d, length(d$d)) %*% t(d$v)
>          [,1] [,2]
>     [1,]    1    2
>
> This *is* minimum length, and 1*1 + 2*2 == 5.  So either qr.coef(qr())
> should deliver that, or the documentation should clarify when a
> minimal-length solution is delivered?
>
> And revisiting the NA issue... in this problem, for the qr.coef()
> result to be a solution, that 2nd value MUST be zero, no other values
> will work.  So the NA seems wrong here, more clearly than in the other
> example.
>
> Finally, a simpler test case that shows the same issues with a 2x1
> example instead of 2x3; any fix to qr.coef() should handle this as
> well:
>
>> qr.coef(qr(matrix(0:1,1,dimnames=list(NULL, c("zero","one")))),5)
> one zero
>  NA    5
>
> I think that should return:
>
> zero  one
>    0    5
>
> or at least:
>
> zero  one
>   NA    5
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From jeff.horner at vanderbilt.edu  Tue May  1 17:20:41 2007
From: jeff.horner at vanderbilt.edu (Jeffrey Horner)
Date: Tue, 01 May 2007 10:20:41 -0500
Subject: [Rd] Embedding R and registering routines
Message-ID: <46375AC9.5000201@vanderbilt.edu>

Hello,

The use of .Call and the like all depend on loading shared libraries and 
registering routines from it. Also, .Primitive and .Internal depend on 
routines being registered in the R binary. And applications that embed R 
can override routines declared in Rinterfac.h, but is there a way for an 
application embedding R to register other routines defined in the 
application without loading a shared library or re-compiling R?

The only such way I've found that comes close to a solution to this is 
creating an RObjectTable and attaching that to the search path. 
Assignments to variables in that environment can call the table's get 
routine which is defined in the application, and I think that might be 
an interesting solution for a new RApache implementation.

For the RApache Project, the mod_R.c shared library get's loaded into 
the apache process and its purpose is to initializes R. Next, it calls 
'library(RApache)' to load RApache.so, a package that implements the 
RApache API. This two-library system works, but the implementation is 
too complex. I'd like to simplify down to just one shared library.

Any comments, suggestion are much appreciated.

Thanks,

Jeff
-- 
http://biostat.mc.vanderbilt.edu/JeffreyHorner


From sfalcon at fhcrc.org  Tue May  1 18:52:24 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 01 May 2007 09:52:24 -0700
Subject: [Rd] Possible problem with S4 dispatch
References: <m27irtkv2f.fsf@ziti.local>
	<Pine.LNX.4.64.0705010907260.16158@gannet.stats.ox.ac.uk>
Message-ID: <m2bqh4jxkn.fsf@ziti.local>

Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:
> Note that you called
>
> selectMethod("mget", signature(x="character", envir=class(LLe)))
>
> by name rather than calling the visible function mget() (which you
> could have supplied as fdef).  I've never really got to the bottom of
> the complicated searches that getGeneric() uses, but the fact that it
> does not just look for a visible function of that name tells you it is
> doing something different.
>
> What I would check from your browser is what parent.env() shows,
> successively until you get to the imports and then the base
> namespace. If mget is not in the imports, something would seem to be
> up with your importing of namespaces.  find() is not relevant here as
> namespace scoping is in play: only if the mget generic is imported
> will it take precedence over base:::mget.  (It is not clear to me what
> is being browsed here, and hence what namespaces are in play.)

This was helpful.  It seems that the strange behavior I was seeing was
due to stale package installations.  After reinstalling the package
and all of its depends and imports, things are looking more normal.

I used the following function to examine the chain of parent
environments while debugging:

    showEncEnvs <- function() {
        etmp <- parent.env(parent.frame())
        while (TRUE) {
            ename <- environmentName(etmp)
            cat(sprintf("Found envirnment: '%s'\n", ename))
            if (exists("mget", etmp, inherits=FALSE))
              cat("found mget\n")
            switch(ename,
                   "R_EmptyEnv"=break,
                   "R_GlobalEnv"=break)
            if (ename == "") {
                cat("**** first five entires\n")
                print(ls(etmp)[1:5])
            }
            etmp <- parent.env(etmp)
        }
    }

One thing to note: One might expect each import to be in the chain of
parent environments.  Instead all imports are merged into a single
environment that is the parent of the package env.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From bill at insightful.com  Tue May  1 19:45:31 2007
From: bill at insightful.com (Bill Dunlap)
Date: Tue, 1 May 2007 10:45:31 -0700 (PDT)
Subject: [Rd] R CMD Rdconv drops sections: arguments, seealso,
 examples (PR#9645)
In-Reply-To: <20070430192244.DDF145ACBC@slim.kubism.ku.dk>
References: <20070430192244.DDF145ACBC@slim.kubism.ku.dk>
Message-ID: <Pine.GSO.4.56.0705011041451.17922@durian.statsci.com>

On Mon, 30 Apr 2007 bill at insightful.com wrote:

> On Tue, 10 Apr 2007 timh at insightful.com wrote:
>
> > I've created a .Rd file (below), then converted that to .sgml using
> > 	R CMD Rdconv --type=Ssgm combn.Rd  > combn.sgml
> > The output (shown below) is missing some of the sections:
> > 	arguments
> > 	seealso
> > 	examples
> > If instead I convert to .d (below), the same sections are missing,
> > and the "note" section is included but without the necessary newline.
>
> The underlying problem was that there were some unmatched open-braces.
> (or 'brackets'?) The attached patch to share/perl/R/Rdconv.pm:mark_brackets()
> seems to detect unmatched open and close braces and throw an error:
>
>    % R CMD INSTALL -l /tmp/Rlib timhPackage
>    * Installing *source* package 'timhPackage' ...
>    ** help
>     >>> Building/Updating help pages for package 'timhPackage'
>         Formats: text html latex example
>    Rdconv(): mismatched braces in help file timh.Rd on or after line 12
>    ERROR: building help failed for package 'timhPackage'
>    ** Removing '/tmp/Rlib/timhPackage'
>    ** Restoring previous '/tmp/Rlib/timhPackage'
>
> The code to report the line number doesn't work quite right
> since any "% comment" lines in the Rd file have been removed
> from $complete_text by the time we get here.  I fudged by
> putting 'on or after line XXX' in the error message.

The following patch adds a little more information (the
name of the \tag or whether it is an unmatched { or })
to the error message, so Tim's example results in

    % R CMD INSTALL -l /tmp/Rlib timhPackage
    * Installing *source* package 'timhPackage' ...
    ** help
     >>> Building/Updating help pages for package 'timhPackage'
         Formats: text html latex example
    Rdconv(): mismatched braces ('\arguments{') in help file timh.Rd on or after line 12
    ERROR: building help failed for package 'timhPackage'
    ** Removing '/tmp/Rlib/timhPackage'
    ** Restoring previous '/tmp/Rlib/timhPackage'


*** Rdconv.pm~	2007-03-29 19:05:08.000000000 -0700
--- Rdconv.pm	2007-05-01 10:28:55.000000000 -0700
***************
*** 254,259 ****
--- 254,275 ----
  	$complete_text =~ s/{([^{}]*)}/$id$1$id/s;
  	print STDERR "." if $debug;
      }
+     # Any remaining brackets must be unmatched ones, hence report error.
+     if ($complete_text =~ /([{}])/s) {
+         # Would like to tell which which line has unmatched { or },
+         # but lines starting with % have already been removed.
+         # Hence the 'on or after' in the message.
+         my $badlineno=0 ;
+ 	my $extra_info = "(\'$1\')" ;
+         if ($complete_text =~ /(\\\w+{)/) {
+ 		$extra_info = "(\'$1\')" ;
+ 	}
+         foreach my $line (split /\n/, $complete_text) {
+             $badlineno++;
+             last if ($line =~ /[{}]/) ;
+         }
+         die "Rdconv(): mismatched braces $extra_info in help file $Rdname on or after line $badlineno\n" ;
+     }
  }

  sub unmark_brackets {


From bill at insightful.com  Tue May  1 19:45:51 2007
From: bill at insightful.com (bill at insightful.com)
Date: Tue,  1 May 2007 19:45:51 +0200 (CEST)
Subject: [Rd] R CMD Rdconv drops sections: arguments, seealso,
	examples (PR#9649)
Message-ID: <20070501174551.E7CAE5A89A@slim.kubism.ku.dk>

On Mon, 30 Apr 2007 bill at insightful.com wrote:

> On Tue, 10 Apr 2007 timh at insightful.com wrote:
>
> > I've created a .Rd file (below), then converted that to .sgml using
> > 	R CMD Rdconv --type=Ssgm combn.Rd  > combn.sgml
> > The output (shown below) is missing some of the sections:
> > 	arguments
> > 	seealso
> > 	examples
> > If instead I convert to .d (below), the same sections are missing,
> > and the "note" section is included but without the necessary newline.
>
> The underlying problem was that there were some unmatched open-braces.
> (or 'brackets'?) The attached patch to share/perl/R/Rdconv.pm:mark_brackets()
> seems to detect unmatched open and close braces and throw an error:
>
>    % R CMD INSTALL -l /tmp/Rlib timhPackage
>    * Installing *source* package 'timhPackage' ...
>    ** help
>     >>> Building/Updating help pages for package 'timhPackage'
>         Formats: text html latex example
>    Rdconv(): mismatched braces in help file timh.Rd on or after line 12
>    ERROR: building help failed for package 'timhPackage'
>    ** Removing '/tmp/Rlib/timhPackage'
>    ** Restoring previous '/tmp/Rlib/timhPackage'
>
> The code to report the line number doesn't work quite right
> since any "% comment" lines in the Rd file have been removed
> from $complete_text by the time we get here.  I fudged by
> putting 'on or after line XXX' in the error message.

The following patch adds a little more information (the
name of the \tag or whether it is an unmatched { or })
to the error message, so Tim's example results in

    % R CMD INSTALL -l /tmp/Rlib timhPackage
    * Installing *source* package 'timhPackage' ...
    ** help
     >>> Building/Updating help pages for package 'timhPackage'
         Formats: text html latex example
    Rdconv(): mismatched braces ('\arguments{') in help file timh.Rd on or after line 12
    ERROR: building help failed for package 'timhPackage'
    ** Removing '/tmp/Rlib/timhPackage'
    ** Restoring previous '/tmp/Rlib/timhPackage'


*** Rdconv.pm~	2007-03-29 19:05:08.000000000 -0700
--- Rdconv.pm	2007-05-01 10:28:55.000000000 -0700
***************
*** 254,259 ****
--- 254,275 ----
  	$complete_text =~ s/{([^{}]*)}/$id$1$id/s;
  	print STDERR "." if $debug;
      }
+     # Any remaining brackets must be unmatched ones, hence report error.
+     if ($complete_text =~ /([{}])/s) {
+         # Would like to tell which which line has unmatched { or },
+         # but lines starting with % have already been removed.
+         # Hence the 'on or after' in the message.
+         my $badlineno=0 ;
+ 	my $extra_info = "(\'$1\')" ;
+         if ($complete_text =~ /(\\\w+{)/) {
+ 		$extra_info = "(\'$1\')" ;
+ 	}
+         foreach my $line (split /\n/, $complete_text) {
+             $badlineno++;
+             last if ($line =~ /[{}]/) ;
+         }
+         die "Rdconv(): mismatched braces $extra_info in help file $Rdname on or after line $badlineno\n" ;
+     }
  }

  sub unmark_brackets {


From duncan at wald.ucdavis.edu  Tue May  1 19:56:05 2007
From: duncan at wald.ucdavis.edu (Duncan Temple Lang)
Date: Tue, 1 May 2007 10:56:05 -0700
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <46375AC9.5000201@vanderbilt.edu>
References: <46375AC9.5000201@vanderbilt.edu>
Message-ID: <20070501175605.GS30532@wald.ucdavis.edu>

Jeffrey Horner wrote:
> Hello,
> 
> The use of .Call and the like all depend on loading shared libraries and 
> registering routines from it. Also, .Primitive and .Internal depend on 
> routines being registered in the R binary. And applications that embed R 
> can override routines declared in Rinterfac.h, but is there a way for an 
> application embedding R to register other routines defined in the 
> application without loading a shared library or re-compiling R?

I think I understand the question, and if so, the answer is yes!

I have put some code near the end of the message that illustrates
(tests) this idea.

The basic idea is that after you initialize R and load your 
RApache package with its .so, you can ask for the corresponding
DllInfo object for that RApache.so. (You need the full path.)

Then, you call R_registerRoutines() with that object as the first
argument and your collection of routines for .C, .Call, .Fortran, etc.
And then those routines are available to R via the corresponding
interface function.

This is currently slightly strained in two ways.

Firstly, R_registerRoutines() just overwrites any existing registered
entries.  So we should have something that allows us to append to
this. We could add something, if this is a worthwhile approach and
others want to chime  in with comments.

Also we are adding these symbols to a table to which they do not
really belong, i.e. pretending they are the same as the routines in
RApache.so. But it works.  Ideally, we would like to be able to create
and add our own special type of DllInfo. A class system from an
object-oriented language would really help here.  But we also would
need to make this possible via the R API.


(Another hacky, unreliable way is using global symbols.
 It is possible for R to resolve symbols  on some platforms 
 by looking in the application's global symbol table.
 So R could find symbols in the executable. Of course, you load 
 mod_R.so and so its symbols are not likely to be in the global symbol
 as I doubt very much Apache loads modules globally.  
 And we would also have to bed R slightly to make this work.
)


main.c:
-----------------------------
#include <Rinternals.h>
#include <Rembedded.h>
#include <R_ext/Rdynload.h>

void
foo(int *x)
{
    fprintf(stderr, "In foo\n");
    *x = 101;
}

SEXP 
bar(SEXP n)
{
    return(ScalarInteger(INTEGER(n)[0] * 2));
}

void
unregistered()
{
    fprintf(stderr, "In unregistered\n");
}

static R_CallMethodDef callMethods[] = {
    {"bar", (DL_FUNC) &bar, 1},
    {NULL, NULL, 0}
};

static R_CMethodDef cmethods[] = {
    {"foo", (DL_FUNC) &foo, 1}, /* type { INTSXP }*/
    {NULL, NULL, 0}
};

void
registerApplicationRoutinesWithR()
{
    DllInfo *dll;
    dll = R_getDllInfo("/home/duncan/Rpackage/XML/libs/XML.so");
    R_registerRoutines(dll, cmethods, callMethods, NULL, NULL);
}

int 
main(int argc, char *argv[])
{
    int errorOccurred = 0;
    SEXP e;
    Rf_initEmbeddedR(argc, argv);
    registerApplicationRoutinesWithR();

    PROTECT(e = allocVector(LANGSXP, 2));
    SETCAR(e, Rf_install("source"));
    SETCAR(CDR(e), mkString("test.R"));
    R_tryEval(e, R_GlobalEnv, &errorOccurred);

    return(0);
}


test.R:
---------------------------
print(.C("foo", x= as.integer(1))$x)
print(.Call("bar", as.integer(3)))




GNUmakefile:
-------------------------------------

CFLAGS=-g -I$(R_HOME)/include 

main: main.o
	$(CC) -o $@ $^ -L$(R_HOME)/lib -lR  

> 
> The only such way I've found that comes close to a solution to this is 
> creating an RObjectTable and attaching that to the search path. 
> Assignments to variables in that environment can call the table's get 
> routine which is defined in the application, and I think that might be 
> an interesting solution for a new RApache implementation.
> 
> For the RApache Project, the mod_R.c shared library get's loaded into 
> the apache process and its purpose is to initializes R. Next, it calls 
> 'library(RApache)' to load RApache.so, a package that implements the 
> RApache API. This two-library system works, but the implementation is 
> too complex. I'd like to simplify down to just one shared library.
> 
> Any comments, suggestion are much appreciated.
> 
> Thanks,
> 
> Jeff
> -- 
> http://biostat.mc.vanderbilt.edu/JeffreyHorner
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Duncan Temple Lang                duncan at wald.ucdavis.edu
Department of Statistics          work:  (530) 752-4782
4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
One Shields Ave.
University of California at Davis
Davis, CA 95616, USA



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20070501/29d34b5e/attachment.bin 

From simon.urbanek at r-project.org  Tue May  1 21:22:54 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 1 May 2007 15:22:54 -0400
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <20070501175605.GS30532@wald.ucdavis.edu>
References: <46375AC9.5000201@vanderbilt.edu>
	<20070501175605.GS30532@wald.ucdavis.edu>
Message-ID: <B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>

Since I'm not sure I really understand Jeff's question this is just  
my interpretation, but I think the point was that you may want to  
register symbols *not* from a DLL but from the embedding application  
itself (e.g. like R.app GUI that embeds libR registers its entry for  
quartz.save). I would welcome a support for this, because the current  
dirty hack (don't do this at home, kids!) is to use R_getDllInfo 
("base") and append the entry instead of overwriting it. It is an  
ugly hack, but I don't think we have any API for this. Maybe a  
worthwhile endeavor would be to simply add something like R_getDllInfo 
("embedded") reserved specifically for such purposes (or "R" or  
whatever...).

Cheers,
Simon

On May 1, 2007, at 1:56 PM, Duncan Temple Lang wrote:

> Jeffrey Horner wrote:
>> Hello,
>>
>> The use of .Call and the like all depend on loading shared  
>> libraries and
>> registering routines from it. Also, .Primitive and .Internal  
>> depend on
>> routines being registered in the R binary. And applications that  
>> embed R
>> can override routines declared in Rinterfac.h, but is there a way  
>> for an
>> application embedding R to register other routines defined in the
>> application without loading a shared library or re-compiling R?
>
> I think I understand the question, and if so, the answer is yes!
>
> I have put some code near the end of the message that illustrates
> (tests) this idea.
>
> The basic idea is that after you initialize R and load your
> RApache package with its .so, you can ask for the corresponding
> DllInfo object for that RApache.so. (You need the full path.)
>
> Then, you call R_registerRoutines() with that object as the first
> argument and your collection of routines for .C, .Call, .Fortran, etc.
> And then those routines are available to R via the corresponding
> interface function.
>
> This is currently slightly strained in two ways.
>
> Firstly, R_registerRoutines() just overwrites any existing registered
> entries.  So we should have something that allows us to append to
> this. We could add something, if this is a worthwhile approach and
> others want to chime  in with comments.
>
> Also we are adding these symbols to a table to which they do not
> really belong, i.e. pretending they are the same as the routines in
> RApache.so. But it works.  Ideally, we would like to be able to create
> and add our own special type of DllInfo. A class system from an
> object-oriented language would really help here.  But we also would
> need to make this possible via the R API.
>
>
> (Another hacky, unreliable way is using global symbols.
>  It is possible for R to resolve symbols  on some platforms
>  by looking in the application's global symbol table.
>  So R could find symbols in the executable. Of course, you load
>  mod_R.so and so its symbols are not likely to be in the global symbol
>  as I doubt very much Apache loads modules globally.
>  And we would also have to bed R slightly to make this work.
> )
>
>
> main.c:
> -----------------------------
> #include <Rinternals.h>
> #include <Rembedded.h>
> #include <R_ext/Rdynload.h>
>
> void
> foo(int *x)
> {
>     fprintf(stderr, "In foo\n");
>     *x = 101;
> }
>
> SEXP
> bar(SEXP n)
> {
>     return(ScalarInteger(INTEGER(n)[0] * 2));
> }
>
> void
> unregistered()
> {
>     fprintf(stderr, "In unregistered\n");
> }
>
> static R_CallMethodDef callMethods[] = {
>     {"bar", (DL_FUNC) &bar, 1},
>     {NULL, NULL, 0}
> };
>
> static R_CMethodDef cmethods[] = {
>     {"foo", (DL_FUNC) &foo, 1}, /* type { INTSXP }*/
>     {NULL, NULL, 0}
> };
>
> void
> registerApplicationRoutinesWithR()
> {
>     DllInfo *dll;
>     dll = R_getDllInfo("/home/duncan/Rpackage/XML/libs/XML.so");
>     R_registerRoutines(dll, cmethods, callMethods, NULL, NULL);
> }
>
> int
> main(int argc, char *argv[])
> {
>     int errorOccurred = 0;
>     SEXP e;
>     Rf_initEmbeddedR(argc, argv);
>     registerApplicationRoutinesWithR();
>
>     PROTECT(e = allocVector(LANGSXP, 2));
>     SETCAR(e, Rf_install("source"));
>     SETCAR(CDR(e), mkString("test.R"));
>     R_tryEval(e, R_GlobalEnv, &errorOccurred);
>
>     return(0);
> }
>
>
> test.R:
> ---------------------------
> print(.C("foo", x= as.integer(1))$x)
> print(.Call("bar", as.integer(3)))
>
>
>
>
> GNUmakefile:
> -------------------------------------
>
> CFLAGS=-g -I$(R_HOME)/include
>
> main: main.o
> 	$(CC) -o $@ $^ -L$(R_HOME)/lib -lR
>
>>
>> The only such way I've found that comes close to a solution to  
>> this is
>> creating an RObjectTable and attaching that to the search path.
>> Assignments to variables in that environment can call the table's get
>> routine which is defined in the application, and I think that  
>> might be
>> an interesting solution for a new RApache implementation.
>>
>> For the RApache Project, the mod_R.c shared library get's loaded into
>> the apache process and its purpose is to initializes R. Next, it  
>> calls
>> 'library(RApache)' to load RApache.so, a package that implements the
>> RApache API. This two-library system works, but the implementation is
>> too complex. I'd like to simplify down to just one shared library.
>>
>> Any comments, suggestion are much appreciated.
>>
>> Thanks,
>>
>> Jeff
>> -- 
>> http://biostat.mc.vanderbilt.edu/JeffreyHorner
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> -- 
> Duncan Temple Lang                duncan at wald.ucdavis.edu
> Department of Statistics          work:  (530) 752-4782
> 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> One Shields Ave.
> University of California at Davis
> Davis, CA 95616, USA
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From duncan at wald.ucdavis.edu  Tue May  1 22:24:45 2007
From: duncan at wald.ucdavis.edu (Duncan Temple Lang)
Date: Tue, 1 May 2007 13:24:45 -0700
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>
References: <46375AC9.5000201@vanderbilt.edu>
	<20070501175605.GS30532@wald.ucdavis.edu>
	<B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>
Message-ID: <20070501202445.GA1806@wald.ucdavis.edu>

Simon Urbanek wrote:
> Since I'm not sure I really understand Jeff's question this is just  
> my interpretation, but I think the point was that you may want to  
> register symbols *not* from a DLL but from the embedding application  
> itself (e.g. like R.app GUI that embeds libR registers its entry for  
> quartz.save). I would welcome a support for this, because the current  
> dirty hack (don't do this at home, kids!) is to use R_getDllInfo 
> ("base") and append the entry instead of overwriting it. It is an  
> ugly hack, but I don't think we have any API for this. Maybe a  
> worthwhile endeavor would be to simply add something like R_getDllInfo 
> ("embedded") reserved specifically for such purposes (or "R" or  
> whatever...).
> 

I think we are all talking about the same thing and the code
that I posted does that for a DLL coming from an arbitrary
package rather than base.

Rather than having yet another global concept, i.e. "embedded", we
could allow users to add their own R_DllInfo and so allow mire than on
in the same session.  The only issue is removing them, freeing the
memory, and so on.  But this is relatively easy to do, and various
implementations suggest themselves.


Thanks for the feedback.

 D. 


> Cheers,
> Simon
> 
> On May 1, 2007, at 1:56 PM, Duncan Temple Lang wrote:
> 
> >Jeffrey Horner wrote:
> >>Hello,
> >>
> >>The use of .Call and the like all depend on loading shared  
> >>libraries and
> >>registering routines from it. Also, .Primitive and .Internal  
> >>depend on
> >>routines being registered in the R binary. And applications that  
> >>embed R
> >>can override routines declared in Rinterfac.h, but is there a way  
> >>for an
> >>application embedding R to register other routines defined in the
> >>application without loading a shared library or re-compiling R?
> >
> >I think I understand the question, and if so, the answer is yes!
> >
> >I have put some code near the end of the message that illustrates
> >(tests) this idea.
> >
> >The basic idea is that after you initialize R and load your
> >RApache package with its .so, you can ask for the corresponding
> >DllInfo object for that RApache.so. (You need the full path.)
> >
> >Then, you call R_registerRoutines() with that object as the first
> >argument and your collection of routines for .C, .Call, .Fortran, etc.
> >And then those routines are available to R via the corresponding
> >interface function.
> >
> >This is currently slightly strained in two ways.
> >
> >Firstly, R_registerRoutines() just overwrites any existing registered
> >entries.  So we should have something that allows us to append to
> >this. We could add something, if this is a worthwhile approach and
> >others want to chime  in with comments.
> >
> >Also we are adding these symbols to a table to which they do not
> >really belong, i.e. pretending they are the same as the routines in
> >RApache.so. But it works.  Ideally, we would like to be able to create
> >and add our own special type of DllInfo. A class system from an
> >object-oriented language would really help here.  But we also would
> >need to make this possible via the R API.
> >
> >
> >(Another hacky, unreliable way is using global symbols.
> > It is possible for R to resolve symbols  on some platforms
> > by looking in the application's global symbol table.
> > So R could find symbols in the executable. Of course, you load
> > mod_R.so and so its symbols are not likely to be in the global symbol
> > as I doubt very much Apache loads modules globally.
> > And we would also have to bed R slightly to make this work.
> >)
> >
> >
> >main.c:
> >-----------------------------
> >#include <Rinternals.h>
> >#include <Rembedded.h>
> >#include <R_ext/Rdynload.h>
> >
> >void
> >foo(int *x)
> >{
> >    fprintf(stderr, "In foo\n");
> >    *x = 101;
> >}
> >
> >SEXP
> >bar(SEXP n)
> >{
> >    return(ScalarInteger(INTEGER(n)[0] * 2));
> >}
> >
> >void
> >unregistered()
> >{
> >    fprintf(stderr, "In unregistered\n");
> >}
> >
> >static R_CallMethodDef callMethods[] = {
> >    {"bar", (DL_FUNC) &bar, 1},
> >    {NULL, NULL, 0}
> >};
> >
> >static R_CMethodDef cmethods[] = {
> >    {"foo", (DL_FUNC) &foo, 1}, /* type { INTSXP }*/
> >    {NULL, NULL, 0}
> >};
> >
> >void
> >registerApplicationRoutinesWithR()
> >{
> >    DllInfo *dll;
> >    dll = R_getDllInfo("/home/duncan/Rpackage/XML/libs/XML.so");
> >    R_registerRoutines(dll, cmethods, callMethods, NULL, NULL);
> >}
> >
> >int
> >main(int argc, char *argv[])
> >{
> >    int errorOccurred = 0;
> >    SEXP e;
> >    Rf_initEmbeddedR(argc, argv);
> >    registerApplicationRoutinesWithR();
> >
> >    PROTECT(e = allocVector(LANGSXP, 2));
> >    SETCAR(e, Rf_install("source"));
> >    SETCAR(CDR(e), mkString("test.R"));
> >    R_tryEval(e, R_GlobalEnv, &errorOccurred);
> >
> >    return(0);
> >}
> >
> >
> >test.R:
> >---------------------------
> >print(.C("foo", x= as.integer(1))$x)
> >print(.Call("bar", as.integer(3)))
> >
> >
> >
> >
> >GNUmakefile:
> >-------------------------------------
> >
> >CFLAGS=-g -I$(R_HOME)/include
> >
> >main: main.o
> >	$(CC) -o $@ $^ -L$(R_HOME)/lib -lR
> >
> >>
> >>The only such way I've found that comes close to a solution to  
> >>this is
> >>creating an RObjectTable and attaching that to the search path.
> >>Assignments to variables in that environment can call the table's get
> >>routine which is defined in the application, and I think that  
> >>might be
> >>an interesting solution for a new RApache implementation.
> >>
> >>For the RApache Project, the mod_R.c shared library get's loaded into
> >>the apache process and its purpose is to initializes R. Next, it  
> >>calls
> >>'library(RApache)' to load RApache.so, a package that implements the
> >>RApache API. This two-library system works, but the implementation is
> >>too complex. I'd like to simplify down to just one shared library.
> >>
> >>Any comments, suggestion are much appreciated.
> >>
> >>Thanks,
> >>
> >>Jeff
> >>-- 
> >>http://biostat.mc.vanderbilt.edu/JeffreyHorner
> >>
> >>______________________________________________
> >>R-devel at r-project.org mailing list
> >>https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >-- 
> >Duncan Temple Lang                duncan at wald.ucdavis.edu
> >Department of Statistics          work:  (530) 752-4782
> >4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> >One Shields Ave.
> >University of California at Davis
> >Davis, CA 95616, USA
> >
> >
> >
> >______________________________________________
> >R-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Duncan Temple Lang                duncan at wald.ucdavis.edu
Department of Statistics          work:  (530) 752-4782
4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
One Shields Ave.
University of California at Davis
Davis, CA 95616, USA



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20070501/fca8d07b/attachment.bin 

From sfalcon at fhcrc.org  Tue May  1 22:31:39 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 01 May 2007 13:31:39 -0700
Subject: [Rd] Questions about name space directives
Message-ID: <m27irsi8us.fsf@ziti.local>

Hi,

I'm hoping to get some clarification of the intent of some of
directives used in NAMESPACE files.

1. Is import(somePkg) also intended to import all classes and methods
   that are exported via exportClasses and exportMethods in somePkg?
   I think import pulls in classes and methods, but it isn't clear
   from the docs whether this is as intended.

2. What is exportMethods intended to do?  I'm confused about when/if
   exportMethods deals with a generic function vs method(s) for a
   generic function.

   a) In a package that defines a generic function "foo" via
      setGeneric, it seems to be sufficient to use
      exportMethods("foo") to export the generic (and any methods
      defined).  Is this as intended or should the author add an
      export("foo") directive to explicitly export the generic
      function?

   b) In a package that only sets methods on generic "foo", an
      exportMethods("foo") directive does not re-export the "foo"
      generic.  I find it confusing that exportMethods sometimes
      exports the generic and sometimes not.  The generic can be
      re-exported using export().


+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From simon.urbanek at r-project.org  Tue May  1 22:58:02 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 1 May 2007 16:58:02 -0400
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <20070501202445.GA1806@wald.ucdavis.edu>
References: <46375AC9.5000201@vanderbilt.edu>
	<20070501175605.GS30532@wald.ucdavis.edu>
	<B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>
	<20070501202445.GA1806@wald.ucdavis.edu>
Message-ID: <5596EE23-E8F8-440C-BAD8-129C48352ACD@r-project.org>

Duncan,

are you going to take care of this? I have a quick solution for R- 
devel that adds a special entry if requested.

I'm not quite convinced that we need as much flexibility as adding  
arbitrary DllInfos, because the embedding application is a really  
special concept (everything else is dynamically loaded except for the  
application). In a sense "base" does that for non-embedded R and the  
distinction is that it doesn't allow dynamic lookup. I don't think  
adding arbitrary DllInfos is wise, because we would have to expose  
DLL handles etc. - do we really want to do that? And as for adding  
NULL-handle DLLInfos, there is only one legitimate use and that is  
the embedding application, so anything else looks more like abuse to  
me... (just lazy solution to not have to determine the dll). Also the  
embedded DllInfo cannot be unloaded by design, so it doesn't need  
anything complicated...

Cheers,
Simon

On May 1, 2007, at 4:24 PM, Duncan Temple Lang wrote:

> Simon Urbanek wrote:
>> Since I'm not sure I really understand Jeff's question this is just
>> my interpretation, but I think the point was that you may want to
>> register symbols *not* from a DLL but from the embedding application
>> itself (e.g. like R.app GUI that embeds libR registers its entry for
>> quartz.save). I would welcome a support for this, because the current
>> dirty hack (don't do this at home, kids!) is to use R_getDllInfo
>> ("base") and append the entry instead of overwriting it. It is an
>> ugly hack, but I don't think we have any API for this. Maybe a
>> worthwhile endeavor would be to simply add something like  
>> R_getDllInfo
>> ("embedded") reserved specifically for such purposes (or "R" or
>> whatever...).
>>
>
> I think we are all talking about the same thing and the code
> that I posted does that for a DLL coming from an arbitrary
> package rather than base.
>
> Rather than having yet another global concept, i.e. "embedded", we
> could allow users to add their own R_DllInfo and so allow mire than on
> in the same session.  The only issue is removing them, freeing the
> memory, and so on.  But this is relatively easy to do, and various
> implementations suggest themselves.
>
>
> Thanks for the feedback.
>
>  D.
>
>
>> Cheers,
>> Simon
>>
>> On May 1, 2007, at 1:56 PM, Duncan Temple Lang wrote:
>>
>>> Jeffrey Horner wrote:
>>>> Hello,
>>>>
>>>> The use of .Call and the like all depend on loading shared
>>>> libraries and
>>>> registering routines from it. Also, .Primitive and .Internal
>>>> depend on
>>>> routines being registered in the R binary. And applications that
>>>> embed R
>>>> can override routines declared in Rinterfac.h, but is there a way
>>>> for an
>>>> application embedding R to register other routines defined in the
>>>> application without loading a shared library or re-compiling R?
>>>
>>> I think I understand the question, and if so, the answer is yes!
>>>
>>> I have put some code near the end of the message that illustrates
>>> (tests) this idea.
>>>
>>> The basic idea is that after you initialize R and load your
>>> RApache package with its .so, you can ask for the corresponding
>>> DllInfo object for that RApache.so. (You need the full path.)
>>>
>>> Then, you call R_registerRoutines() with that object as the first
>>> argument and your collection of routines for .C, .Call, .Fortran,  
>>> etc.
>>> And then those routines are available to R via the corresponding
>>> interface function.
>>>
>>> This is currently slightly strained in two ways.
>>>
>>> Firstly, R_registerRoutines() just overwrites any existing  
>>> registered
>>> entries.  So we should have something that allows us to append to
>>> this. We could add something, if this is a worthwhile approach and
>>> others want to chime  in with comments.
>>>
>>> Also we are adding these symbols to a table to which they do not
>>> really belong, i.e. pretending they are the same as the routines in
>>> RApache.so. But it works.  Ideally, we would like to be able to  
>>> create
>>> and add our own special type of DllInfo. A class system from an
>>> object-oriented language would really help here.  But we also would
>>> need to make this possible via the R API.
>>>
>>>
>>> (Another hacky, unreliable way is using global symbols.
>>> It is possible for R to resolve symbols  on some platforms
>>> by looking in the application's global symbol table.
>>> So R could find symbols in the executable. Of course, you load
>>> mod_R.so and so its symbols are not likely to be in the global  
>>> symbol
>>> as I doubt very much Apache loads modules globally.
>>> And we would also have to bed R slightly to make this work.
>>> )
>>>
>>>
>>> main.c:
>>> -----------------------------
>>> #include <Rinternals.h>
>>> #include <Rembedded.h>
>>> #include <R_ext/Rdynload.h>
>>>
>>> void
>>> foo(int *x)
>>> {
>>>    fprintf(stderr, "In foo\n");
>>>    *x = 101;
>>> }
>>>
>>> SEXP
>>> bar(SEXP n)
>>> {
>>>    return(ScalarInteger(INTEGER(n)[0] * 2));
>>> }
>>>
>>> void
>>> unregistered()
>>> {
>>>    fprintf(stderr, "In unregistered\n");
>>> }
>>>
>>> static R_CallMethodDef callMethods[] = {
>>>    {"bar", (DL_FUNC) &bar, 1},
>>>    {NULL, NULL, 0}
>>> };
>>>
>>> static R_CMethodDef cmethods[] = {
>>>    {"foo", (DL_FUNC) &foo, 1}, /* type { INTSXP }*/
>>>    {NULL, NULL, 0}
>>> };
>>>
>>> void
>>> registerApplicationRoutinesWithR()
>>> {
>>>    DllInfo *dll;
>>>    dll = R_getDllInfo("/home/duncan/Rpackage/XML/libs/XML.so");
>>>    R_registerRoutines(dll, cmethods, callMethods, NULL, NULL);
>>> }
>>>
>>> int
>>> main(int argc, char *argv[])
>>> {
>>>    int errorOccurred = 0;
>>>    SEXP e;
>>>    Rf_initEmbeddedR(argc, argv);
>>>    registerApplicationRoutinesWithR();
>>>
>>>    PROTECT(e = allocVector(LANGSXP, 2));
>>>    SETCAR(e, Rf_install("source"));
>>>    SETCAR(CDR(e), mkString("test.R"));
>>>    R_tryEval(e, R_GlobalEnv, &errorOccurred);
>>>
>>>    return(0);
>>> }
>>>
>>>
>>> test.R:
>>> ---------------------------
>>> print(.C("foo", x= as.integer(1))$x)
>>> print(.Call("bar", as.integer(3)))
>>>
>>>
>>>
>>>
>>> GNUmakefile:
>>> -------------------------------------
>>>
>>> CFLAGS=-g -I$(R_HOME)/include
>>>
>>> main: main.o
>>> 	$(CC) -o $@ $^ -L$(R_HOME)/lib -lR
>>>
>>>>
>>>> The only such way I've found that comes close to a solution to
>>>> this is
>>>> creating an RObjectTable and attaching that to the search path.
>>>> Assignments to variables in that environment can call the  
>>>> table's get
>>>> routine which is defined in the application, and I think that
>>>> might be
>>>> an interesting solution for a new RApache implementation.
>>>>
>>>> For the RApache Project, the mod_R.c shared library get's loaded  
>>>> into
>>>> the apache process and its purpose is to initializes R. Next, it
>>>> calls
>>>> 'library(RApache)' to load RApache.so, a package that implements  
>>>> the
>>>> RApache API. This two-library system works, but the  
>>>> implementation is
>>>> too complex. I'd like to simplify down to just one shared library.
>>>>
>>>> Any comments, suggestion are much appreciated.
>>>>
>>>> Thanks,
>>>>
>>>> Jeff
>>>> -- 
>>>> http://biostat.mc.vanderbilt.edu/JeffreyHorner
>>>>
>>>> ______________________________________________
>>>> R-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> -- 
>>> Duncan Temple Lang                duncan at wald.ucdavis.edu
>>> Department of Statistics          work:  (530) 752-4782
>>> 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
>>> One Shields Ave.
>>> University of California at Davis
>>> Davis, CA 95616, USA
>>>
>>>
>>>
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> -- 
> Duncan Temple Lang                duncan at wald.ucdavis.edu
> Department of Statistics          work:  (530) 752-4782
> 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> One Shields Ave.
> University of California at Davis
> Davis, CA 95616, USA
>
>
>


From duncan at wald.ucdavis.edu  Tue May  1 23:47:00 2007
From: duncan at wald.ucdavis.edu (Duncan Temple Lang)
Date: Tue, 1 May 2007 14:47:00 -0700
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <5596EE23-E8F8-440C-BAD8-129C48352ACD@r-project.org>
References: <46375AC9.5000201@vanderbilt.edu>
	<20070501175605.GS30532@wald.ucdavis.edu>
	<B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>
	<20070501202445.GA1806@wald.ucdavis.edu>
	<5596EE23-E8F8-440C-BAD8-129C48352ACD@r-project.org>
Message-ID: <20070501214700.GE1806@wald.ucdavis.edu>

Simon Urbanek wrote:
> Duncan,
> 
> are you going to take care of this? I have a quick solution for R- 
> devel that adds a special entry if requested.

If you want to go ahead,  be my guest.
I'm somewhat occupied for the next few days...

> 
> I'm not quite convinced that we need as much flexibility as adding  
> arbitrary DllInfos, because the embedding application is a really  
> special concept (everything else is dynamically loaded except for the  
> application). In a sense "base" does that for non-embedded R and the  
> distinction is that it doesn't allow dynamic lookup. I don't think  
> adding arbitrary DllInfos is wise, because we would have to expose  
> DLL handles etc. - do we really want to do that? And as for adding  
> NULL-handle DLLInfos, there is only one legitimate use and that is  
> the embedding application, so anything else looks more like abuse to  
> me... (just lazy solution to not have to determine the dll). Also the  
> embedded DllInfo cannot be unloaded by design, so it doesn't need  
> anything complicated...

I agree that we don't necessarily want to expose the entire DllInfo
structure (but we don't need to - just a constructor function to
create a new instance), and also that the embedded case is
special. However, Jeff's example illustrates that it is not as simple
as the host application maing symbols available to R.  In fact, it is
not apache that is making the symbols available to R, it is the code
in mod_R.so.  And it might be that we want to make routines available
from a different module dynamically loaded into apache.  Now, 
we can do this by shovelling them all into the "embed" DllInfo,
but that is almost the same as putting them all into "base" 
as we have lost the provenance of the registration.
And so if we want to unload an apache module and therefore unregister
the routines it provided to R, our life is somewhat more complex.

I am not saying that we absolutely need this level of generality.
Clearly we have lived without it for a while. However, it does arise
in other embedded situations such as when we put R inside
Java, Python, Perl, Postgres, ... as each of them can load other 
.so's.  I do believe that we want to and can merge a lot of this
inter-system functionality in an increasingly transparent way, and
keeping things separate with reflection information is vital for
this. 

And of course, once we make a particular feature such as "add to
embed" into R, we are loate to take it out and we live with these
constraints for a long time.  But in this case, it is not a big deal,
so please go ahead if you have the time and want to.

 Thanks, 
   D.

> 
> Cheers,
> Simon
> 
> On May 1, 2007, at 4:24 PM, Duncan Temple Lang wrote:
> 
> >Simon Urbanek wrote:
> >>Since I'm not sure I really understand Jeff's question this is just
> >>my interpretation, but I think the point was that you may want to
> >>register symbols *not* from a DLL but from the embedding application
> >>itself (e.g. like R.app GUI that embeds libR registers its entry for
> >>quartz.save). I would welcome a support for this, because the current
> >>dirty hack (don't do this at home, kids!) is to use R_getDllInfo
> >>("base") and append the entry instead of overwriting it. It is an
> >>ugly hack, but I don't think we have any API for this. Maybe a
> >>worthwhile endeavor would be to simply add something like  
> >>R_getDllInfo
> >>("embedded") reserved specifically for such purposes (or "R" or
> >>whatever...).
> >>
> >
> >I think we are all talking about the same thing and the code
> >that I posted does that for a DLL coming from an arbitrary
> >package rather than base.
> >
> >Rather than having yet another global concept, i.e. "embedded", we
> >could allow users to add their own R_DllInfo and so allow mire than on
> >in the same session.  The only issue is removing them, freeing the
> >memory, and so on.  But this is relatively easy to do, and various
> >implementations suggest themselves.
> >
> >
> >Thanks for the feedback.
> >
> > D.
> >
> >
> >>Cheers,
> >>Simon
> >>
> >>On May 1, 2007, at 1:56 PM, Duncan Temple Lang wrote:
> >>
> >>>Jeffrey Horner wrote:
> >>>>Hello,
> >>>>
> >>>>The use of .Call and the like all depend on loading shared
> >>>>libraries and
> >>>>registering routines from it. Also, .Primitive and .Internal
> >>>>depend on
> >>>>routines being registered in the R binary. And applications that
> >>>>embed R
> >>>>can override routines declared in Rinterfac.h, but is there a way
> >>>>for an
> >>>>application embedding R to register other routines defined in the
> >>>>application without loading a shared library or re-compiling R?
> >>>
> >>>I think I understand the question, and if so, the answer is yes!
> >>>
> >>>I have put some code near the end of the message that illustrates
> >>>(tests) this idea.
> >>>
> >>>The basic idea is that after you initialize R and load your
> >>>RApache package with its .so, you can ask for the corresponding
> >>>DllInfo object for that RApache.so. (You need the full path.)
> >>>
> >>>Then, you call R_registerRoutines() with that object as the first
> >>>argument and your collection of routines for .C, .Call, .Fortran,  
> >>>etc.
> >>>And then those routines are available to R via the corresponding
> >>>interface function.
> >>>
> >>>This is currently slightly strained in two ways.
> >>>
> >>>Firstly, R_registerRoutines() just overwrites any existing  
> >>>registered
> >>>entries.  So we should have something that allows us to append to
> >>>this. We could add something, if this is a worthwhile approach and
> >>>others want to chime  in with comments.
> >>>
> >>>Also we are adding these symbols to a table to which they do not
> >>>really belong, i.e. pretending they are the same as the routines in
> >>>RApache.so. But it works.  Ideally, we would like to be able to  
> >>>create
> >>>and add our own special type of DllInfo. A class system from an
> >>>object-oriented language would really help here.  But we also would
> >>>need to make this possible via the R API.
> >>>
> >>>
> >>>(Another hacky, unreliable way is using global symbols.
> >>>It is possible for R to resolve symbols  on some platforms
> >>>by looking in the application's global symbol table.
> >>>So R could find symbols in the executable. Of course, you load
> >>>mod_R.so and so its symbols are not likely to be in the global  
> >>>symbol
> >>>as I doubt very much Apache loads modules globally.
> >>>And we would also have to bed R slightly to make this work.
> >>>)
> >>>
> >>>
> >>>main.c:
> >>>-----------------------------
> >>>#include <Rinternals.h>
> >>>#include <Rembedded.h>
> >>>#include <R_ext/Rdynload.h>
> >>>
> >>>void
> >>>foo(int *x)
> >>>{
> >>>   fprintf(stderr, "In foo\n");
> >>>   *x = 101;
> >>>}
> >>>
> >>>SEXP
> >>>bar(SEXP n)
> >>>{
> >>>   return(ScalarInteger(INTEGER(n)[0] * 2));
> >>>}
> >>>
> >>>void
> >>>unregistered()
> >>>{
> >>>   fprintf(stderr, "In unregistered\n");
> >>>}
> >>>
> >>>static R_CallMethodDef callMethods[] = {
> >>>   {"bar", (DL_FUNC) &bar, 1},
> >>>   {NULL, NULL, 0}
> >>>};
> >>>
> >>>static R_CMethodDef cmethods[] = {
> >>>   {"foo", (DL_FUNC) &foo, 1}, /* type { INTSXP }*/
> >>>   {NULL, NULL, 0}
> >>>};
> >>>
> >>>void
> >>>registerApplicationRoutinesWithR()
> >>>{
> >>>   DllInfo *dll;
> >>>   dll = R_getDllInfo("/home/duncan/Rpackage/XML/libs/XML.so");
> >>>   R_registerRoutines(dll, cmethods, callMethods, NULL, NULL);
> >>>}
> >>>
> >>>int
> >>>main(int argc, char *argv[])
> >>>{
> >>>   int errorOccurred = 0;
> >>>   SEXP e;
> >>>   Rf_initEmbeddedR(argc, argv);
> >>>   registerApplicationRoutinesWithR();
> >>>
> >>>   PROTECT(e = allocVector(LANGSXP, 2));
> >>>   SETCAR(e, Rf_install("source"));
> >>>   SETCAR(CDR(e), mkString("test.R"));
> >>>   R_tryEval(e, R_GlobalEnv, &errorOccurred);
> >>>
> >>>   return(0);
> >>>}
> >>>
> >>>
> >>>test.R:
> >>>---------------------------
> >>>print(.C("foo", x= as.integer(1))$x)
> >>>print(.Call("bar", as.integer(3)))
> >>>
> >>>
> >>>
> >>>
> >>>GNUmakefile:
> >>>-------------------------------------
> >>>
> >>>CFLAGS=-g -I$(R_HOME)/include
> >>>
> >>>main: main.o
> >>>	$(CC) -o $@ $^ -L$(R_HOME)/lib -lR
> >>>
> >>>>
> >>>>The only such way I've found that comes close to a solution to
> >>>>this is
> >>>>creating an RObjectTable and attaching that to the search path.
> >>>>Assignments to variables in that environment can call the  
> >>>>table's get
> >>>>routine which is defined in the application, and I think that
> >>>>might be
> >>>>an interesting solution for a new RApache implementation.
> >>>>
> >>>>For the RApache Project, the mod_R.c shared library get's loaded  
> >>>>into
> >>>>the apache process and its purpose is to initializes R. Next, it
> >>>>calls
> >>>>'library(RApache)' to load RApache.so, a package that implements  
> >>>>the
> >>>>RApache API. This two-library system works, but the  
> >>>>implementation is
> >>>>too complex. I'd like to simplify down to just one shared library.
> >>>>
> >>>>Any comments, suggestion are much appreciated.
> >>>>
> >>>>Thanks,
> >>>>
> >>>>Jeff
> >>>>-- 
> >>>>http://biostat.mc.vanderbilt.edu/JeffreyHorner
> >>>>
> >>>>______________________________________________
> >>>>R-devel at r-project.org mailing list
> >>>>https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>>-- 
> >>>Duncan Temple Lang                duncan at wald.ucdavis.edu
> >>>Department of Statistics          work:  (530) 752-4782
> >>>4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> >>>One Shields Ave.
> >>>University of California at Davis
> >>>Davis, CA 95616, USA
> >>>
> >>>
> >>>
> >>>______________________________________________
> >>>R-devel at r-project.org mailing list
> >>>https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >-- 
> >Duncan Temple Lang                duncan at wald.ucdavis.edu
> >Department of Statistics          work:  (530) 752-4782
> >4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> >One Shields Ave.
> >University of California at Davis
> >Davis, CA 95616, USA
> >
> >
> >

-- 
Duncan Temple Lang                duncan at wald.ucdavis.edu
Department of Statistics          work:  (530) 752-4782
4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
One Shields Ave.
University of California at Davis
Davis, CA 95616, USA



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20070501/1fe6e2dc/attachment.bin 

From sfalcon at fhcrc.org  Tue May  1 23:59:43 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 01 May 2007 14:59:43 -0700
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <5596EE23-E8F8-440C-BAD8-129C48352ACD@r-project.org> (Simon
	Urbanek's message of "Tue, 1 May 2007 16:58:02 -0400")
References: <46375AC9.5000201@vanderbilt.edu>
	<20070501175605.GS30532@wald.ucdavis.edu>
	<B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>
	<20070501202445.GA1806@wald.ucdavis.edu>
	<5596EE23-E8F8-440C-BAD8-129C48352ACD@r-project.org>
Message-ID: <m2slaggq7k.fsf@ziti.local>

Simon Urbanek <simon.urbanek at r-project.org> writes:

> Duncan,
>
> are you going to take care of this? I have a quick solution for R- 
> devel that adds a special entry if requested.
>
> I'm not quite convinced that we need as much flexibility as adding  
> arbitrary DllInfos, because the embedding application is a really  
> special concept (everything else is dynamically loaded except for the  
> application). In a sense "base" does that for non-embedded R and the  
> distinction is that it doesn't allow dynamic lookup. I don't think  
> adding arbitrary DllInfos is wise, because we would have to expose  
> DLL handles etc. - do we really want to do that? And as for adding  
> NULL-handle DLLInfos, there is only one legitimate use and that is  
> the embedding application, so anything else looks more like abuse to  
> me... (just lazy solution to not have to determine the dll). Also the  
> embedded DllInfo cannot be unloaded by design, so it doesn't need  
> anything complicated...

Perhaps I'm not understanding the issues at hand, but I think there
are other use cases for a mechanism accessible to package developers
to dynamically register routines.  Just as R can load packages to make
new routines available, I don't see why an R package should not be
able to provide an analogous plugin mechanism of its own.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From simon.urbanek at r-project.org  Wed May  2 03:13:18 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 1 May 2007 21:13:18 -0400
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <m2slaggq7k.fsf@ziti.local>
References: <46375AC9.5000201@vanderbilt.edu>
	<20070501175605.GS30532@wald.ucdavis.edu>
	<B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>
	<20070501202445.GA1806@wald.ucdavis.edu>
	<5596EE23-E8F8-440C-BAD8-129C48352ACD@r-project.org>
	<m2slaggq7k.fsf@ziti.local>
Message-ID: <08DC0118-78EB-454A-96C8-F128D1DF7ACA@r-project.org>

Seth,

On May 1, 2007, at 5:59 PM, Seth Falcon wrote:

> Simon Urbanek <simon.urbanek at r-project.org> writes:
>
>> Duncan,
>>
>> are you going to take care of this? I have a quick solution for R- 
>> devel that adds a special entry if requested.
>>
>> I'm not quite convinced that we need as much flexibility as adding  
>> arbitrary DllInfos, because the embedding application is a really  
>> special concept (everything else is dynamically loaded except for  
>> the application). In a sense "base" does that for non-embedded R  
>> and the distinction is that it doesn't allow dynamic lookup. I  
>> don't think adding arbitrary DllInfos is wise, because we would  
>> have to expose DLL handles etc. - do we really want to do that?  
>> And as for adding NULL-handle DLLInfos, there is only one  
>> legitimate use and that is the embedding application, so anything  
>> else looks more like abuse to me... (just lazy solution to not  
>> have to determine the dll). Also the embedded DllInfo cannot be  
>> unloaded by design, so it doesn't need anything complicated...
>
> Perhaps I'm not understanding the issues at hand, but I think there  
> are other use cases for a mechanism accessible to package  
> developers to dynamically register routines.  Just as R can load  
> packages to make new routines available, I don't see why an R  
> package should not be able to provide an analogous plugin mechanism  
> of its own.
>

That is a different issue - packages are free to register any  
routines as they already have a DllInfo entry in the current  
implementation. What we are talking about here is the embedded case  
where the embedding application doesn't have a DllInfo because it's  
loading R and not vice versa, so it cannot register anything.

Cheers,
Simon


From simon.urbanek at r-project.org  Wed May  2 03:17:23 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 1 May 2007 21:17:23 -0400
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <20070501214700.GE1806@wald.ucdavis.edu>
References: <46375AC9.5000201@vanderbilt.edu>
	<20070501175605.GS30532@wald.ucdavis.edu>
	<B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>
	<20070501202445.GA1806@wald.ucdavis.edu>
	<5596EE23-E8F8-440C-BAD8-129C48352ACD@r-project.org>
	<20070501214700.GE1806@wald.ucdavis.edu>
Message-ID: <78778752-78D4-46AB-8068-D86654DAE6DC@r-project.org>

Duncan,

I see your point. But in that case Apache is the one managing the  
life of the so, not R, and in many cases unloading the module would  
also mean to unload R in which case the problem doesn't arise. Also  
that general case requires that R and the embedding application agree  
on the dylib loading method so they can share the handle. This may  
not be trivial across platforms. So on the whole I agree, but I'm not  
quite convinced yet that it's worth the extra effort.. maybe at some  
point ;) ...

Cheers,
Simon


On May 1, 2007, at 5:47 PM, Duncan Temple Lang wrote:

> Simon Urbanek wrote:
>> Duncan,
>>
>> are you going to take care of this? I have a quick solution for R-
>> devel that adds a special entry if requested.
>
> If you want to go ahead,  be my guest.
> I'm somewhat occupied for the next few days...
>
>>
>> I'm not quite convinced that we need as much flexibility as adding
>> arbitrary DllInfos, because the embedding application is a really
>> special concept (everything else is dynamically loaded except for the
>> application). In a sense "base" does that for non-embedded R and the
>> distinction is that it doesn't allow dynamic lookup. I don't think
>> adding arbitrary DllInfos is wise, because we would have to expose
>> DLL handles etc. - do we really want to do that? And as for adding
>> NULL-handle DLLInfos, there is only one legitimate use and that is
>> the embedding application, so anything else looks more like abuse to
>> me... (just lazy solution to not have to determine the dll). Also the
>> embedded DllInfo cannot be unloaded by design, so it doesn't need
>> anything complicated...
>
> I agree that we don't necessarily want to expose the entire DllInfo
> structure (but we don't need to - just a constructor function to
> create a new instance), and also that the embedded case is
> special. However, Jeff's example illustrates that it is not as simple
> as the host application maing symbols available to R.  In fact, it is
> not apache that is making the symbols available to R, it is the code
> in mod_R.so.  And it might be that we want to make routines available
> from a different module dynamically loaded into apache.  Now,
> we can do this by shovelling them all into the "embed" DllInfo,
> but that is almost the same as putting them all into "base"
> as we have lost the provenance of the registration.
> And so if we want to unload an apache module and therefore unregister
> the routines it provided to R, our life is somewhat more complex.
>
> I am not saying that we absolutely need this level of generality.
> Clearly we have lived without it for a while. However, it does arise
> in other embedded situations such as when we put R inside
> Java, Python, Perl, Postgres, ... as each of them can load other
> .so's.  I do believe that we want to and can merge a lot of this
> inter-system functionality in an increasingly transparent way, and
> keeping things separate with reflection information is vital for
> this.
>
> And of course, once we make a particular feature such as "add to
> embed" into R, we are loate to take it out and we live with these
> constraints for a long time.  But in this case, it is not a big deal,
> so please go ahead if you have the time and want to.
>
>  Thanks,
>    D.
>
>>
>> Cheers,
>> Simon
>>
>> On May 1, 2007, at 4:24 PM, Duncan Temple Lang wrote:
>>
>>> Simon Urbanek wrote:
>>>> Since I'm not sure I really understand Jeff's question this is just
>>>> my interpretation, but I think the point was that you may want to
>>>> register symbols *not* from a DLL but from the embedding  
>>>> application
>>>> itself (e.g. like R.app GUI that embeds libR registers its entry  
>>>> for
>>>> quartz.save). I would welcome a support for this, because the  
>>>> current
>>>> dirty hack (don't do this at home, kids!) is to use R_getDllInfo
>>>> ("base") and append the entry instead of overwriting it. It is an
>>>> ugly hack, but I don't think we have any API for this. Maybe a
>>>> worthwhile endeavor would be to simply add something like
>>>> R_getDllInfo
>>>> ("embedded") reserved specifically for such purposes (or "R" or
>>>> whatever...).
>>>>
>>>
>>> I think we are all talking about the same thing and the code
>>> that I posted does that for a DLL coming from an arbitrary
>>> package rather than base.
>>>
>>> Rather than having yet another global concept, i.e. "embedded", we
>>> could allow users to add their own R_DllInfo and so allow mire  
>>> than on
>>> in the same session.  The only issue is removing them, freeing the
>>> memory, and so on.  But this is relatively easy to do, and various
>>> implementations suggest themselves.
>>>
>>>
>>> Thanks for the feedback.
>>>
>>> D.
>>>
>>>
>>>> Cheers,
>>>> Simon
>>>>
>>>> On May 1, 2007, at 1:56 PM, Duncan Temple Lang wrote:
>>>>
>>>>> Jeffrey Horner wrote:
>>>>>> Hello,
>>>>>>
>>>>>> The use of .Call and the like all depend on loading shared
>>>>>> libraries and
>>>>>> registering routines from it. Also, .Primitive and .Internal
>>>>>> depend on
>>>>>> routines being registered in the R binary. And applications that
>>>>>> embed R
>>>>>> can override routines declared in Rinterfac.h, but is there a way
>>>>>> for an
>>>>>> application embedding R to register other routines defined in the
>>>>>> application without loading a shared library or re-compiling R?
>>>>>
>>>>> I think I understand the question, and if so, the answer is yes!
>>>>>
>>>>> I have put some code near the end of the message that illustrates
>>>>> (tests) this idea.
>>>>>
>>>>> The basic idea is that after you initialize R and load your
>>>>> RApache package with its .so, you can ask for the corresponding
>>>>> DllInfo object for that RApache.so. (You need the full path.)
>>>>>
>>>>> Then, you call R_registerRoutines() with that object as the first
>>>>> argument and your collection of routines for .C, .Call, .Fortran,
>>>>> etc.
>>>>> And then those routines are available to R via the corresponding
>>>>> interface function.
>>>>>
>>>>> This is currently slightly strained in two ways.
>>>>>
>>>>> Firstly, R_registerRoutines() just overwrites any existing
>>>>> registered
>>>>> entries.  So we should have something that allows us to append to
>>>>> this. We could add something, if this is a worthwhile approach and
>>>>> others want to chime  in with comments.
>>>>>
>>>>> Also we are adding these symbols to a table to which they do not
>>>>> really belong, i.e. pretending they are the same as the  
>>>>> routines in
>>>>> RApache.so. But it works.  Ideally, we would like to be able to
>>>>> create
>>>>> and add our own special type of DllInfo. A class system from an
>>>>> object-oriented language would really help here.  But we also  
>>>>> would
>>>>> need to make this possible via the R API.
>>>>>
>>>>>
>>>>> (Another hacky, unreliable way is using global symbols.
>>>>> It is possible for R to resolve symbols  on some platforms
>>>>> by looking in the application's global symbol table.
>>>>> So R could find symbols in the executable. Of course, you load
>>>>> mod_R.so and so its symbols are not likely to be in the global
>>>>> symbol
>>>>> as I doubt very much Apache loads modules globally.
>>>>> And we would also have to bed R slightly to make this work.
>>>>> )
>>>>>
>>>>>
>>>>> main.c:
>>>>> -----------------------------
>>>>> #include <Rinternals.h>
>>>>> #include <Rembedded.h>
>>>>> #include <R_ext/Rdynload.h>
>>>>>
>>>>> void
>>>>> foo(int *x)
>>>>> {
>>>>>   fprintf(stderr, "In foo\n");
>>>>>   *x = 101;
>>>>> }
>>>>>
>>>>> SEXP
>>>>> bar(SEXP n)
>>>>> {
>>>>>   return(ScalarInteger(INTEGER(n)[0] * 2));
>>>>> }
>>>>>
>>>>> void
>>>>> unregistered()
>>>>> {
>>>>>   fprintf(stderr, "In unregistered\n");
>>>>> }
>>>>>
>>>>> static R_CallMethodDef callMethods[] = {
>>>>>   {"bar", (DL_FUNC) &bar, 1},
>>>>>   {NULL, NULL, 0}
>>>>> };
>>>>>
>>>>> static R_CMethodDef cmethods[] = {
>>>>>   {"foo", (DL_FUNC) &foo, 1}, /* type { INTSXP }*/
>>>>>   {NULL, NULL, 0}
>>>>> };
>>>>>
>>>>> void
>>>>> registerApplicationRoutinesWithR()
>>>>> {
>>>>>   DllInfo *dll;
>>>>>   dll = R_getDllInfo("/home/duncan/Rpackage/XML/libs/XML.so");
>>>>>   R_registerRoutines(dll, cmethods, callMethods, NULL, NULL);
>>>>> }
>>>>>
>>>>> int
>>>>> main(int argc, char *argv[])
>>>>> {
>>>>>   int errorOccurred = 0;
>>>>>   SEXP e;
>>>>>   Rf_initEmbeddedR(argc, argv);
>>>>>   registerApplicationRoutinesWithR();
>>>>>
>>>>>   PROTECT(e = allocVector(LANGSXP, 2));
>>>>>   SETCAR(e, Rf_install("source"));
>>>>>   SETCAR(CDR(e), mkString("test.R"));
>>>>>   R_tryEval(e, R_GlobalEnv, &errorOccurred);
>>>>>
>>>>>   return(0);
>>>>> }
>>>>>
>>>>>
>>>>> test.R:
>>>>> ---------------------------
>>>>> print(.C("foo", x= as.integer(1))$x)
>>>>> print(.Call("bar", as.integer(3)))
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> GNUmakefile:
>>>>> -------------------------------------
>>>>>
>>>>> CFLAGS=-g -I$(R_HOME)/include
>>>>>
>>>>> main: main.o
>>>>> 	$(CC) -o $@ $^ -L$(R_HOME)/lib -lR
>>>>>
>>>>>>
>>>>>> The only such way I've found that comes close to a solution to
>>>>>> this is
>>>>>> creating an RObjectTable and attaching that to the search path.
>>>>>> Assignments to variables in that environment can call the
>>>>>> table's get
>>>>>> routine which is defined in the application, and I think that
>>>>>> might be
>>>>>> an interesting solution for a new RApache implementation.
>>>>>>
>>>>>> For the RApache Project, the mod_R.c shared library get's loaded
>>>>>> into
>>>>>> the apache process and its purpose is to initializes R. Next, it
>>>>>> calls
>>>>>> 'library(RApache)' to load RApache.so, a package that implements
>>>>>> the
>>>>>> RApache API. This two-library system works, but the
>>>>>> implementation is
>>>>>> too complex. I'd like to simplify down to just one shared  
>>>>>> library.
>>>>>>
>>>>>> Any comments, suggestion are much appreciated.
>>>>>>
>>>>>> Thanks,
>>>>>>
>>>>>> Jeff
>>>>>> -- 
>>>>>> http://biostat.mc.vanderbilt.edu/JeffreyHorner
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>
>>>>> -- 
>>>>> Duncan Temple Lang                duncan at wald.ucdavis.edu
>>>>> Department of Statistics          work:  (530) 752-4782
>>>>> 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
>>>>> One Shields Ave.
>>>>> University of California at Davis
>>>>> Davis, CA 95616, USA
>>>>>
>>>>>
>>>>>
>>>>> ______________________________________________
>>>>> R-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>
>>> -- 
>>> Duncan Temple Lang                duncan at wald.ucdavis.edu
>>> Department of Statistics          work:  (530) 752-4782
>>> 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
>>> One Shields Ave.
>>> University of California at Davis
>>> Davis, CA 95616, USA
>>>
>>>
>>>
>
> -- 
> Duncan Temple Lang                duncan at wald.ucdavis.edu
> Department of Statistics          work:  (530) 752-4782
> 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> One Shields Ave.
> University of California at Davis
> Davis, CA 95616, USA
>
>
>


From ripley at stats.ox.ac.uk  Wed May  2 09:56:16 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 2 May 2007 08:56:16 +0100 (BST)
Subject: [Rd] Questions about name space directives
In-Reply-To: <m27irsi8us.fsf@ziti.local>
References: <m27irsi8us.fsf@ziti.local>
Message-ID: <Pine.LNX.4.64.0705020709001.2841@gannet.stats.ox.ac.uk>

On Tue, 1 May 2007, Seth Falcon wrote:

> Hi,
>
> I'm hoping to get some clarification of the intent of some of
> directives used in NAMESPACE files.

For 'intent' you would have to get a response from the authors.
Pending that, here are some comments on what they implemented.

> 1. Is import(somePkg) also intended to import all classes and methods
>   that are exported via exportClasses and exportMethods in somePkg?
>   I think import pulls in classes and methods, but it isn't clear
>   from the docs whether this is as intended.

`Import' and `export' are not being used in the everyday sense.  export() 
in a name space is to do with whether objects in the name space are in the 
package environment (as distinct from the name space environment). 
import() imports the name space and not the package environment.  As the 
classes, methods and any created generics are in the name space, they are 
_all_ imported by import(somePkg) (whether exported or not).

However, for methods on generics not in the same package you need to do 
more than import them: you need to tell the S4 dispatch mechanisms about 
them.  At that point there seem to be some differences between import() 
and importMethodsFrom() that I do not currently understand, relating to 
importing methods from more than one namespace and merging the methods 
tables.  (I suspect that the differences, if real, are unintentional.)

Using importMethods() also imports the corresponding generics if they are 
in the namespace being imported from, but that is best thought of as an 
implementation detail.


> 2. What is exportMethods intended to do?  I'm confused about when/if
>   exportMethods deals with a generic function vs method(s) for a
>   generic function.
>
>   a) In a package that defines a generic function "foo" via
>      setGeneric, it seems to be sufficient to use
>      exportMethods("foo") to export the generic (and any methods
>      defined).  Is this as intended or should the author add an
>      export("foo") directive to explicitly export the generic
>      function?

Naming a generic in exportMethods() will export the generic if it is in 
the namespace.  Conversely, exporting a generic will export its methods
(namespace.R:406).

>   b) In a package that only sets methods on generic "foo", an
>      exportMethods("foo") directive does not re-export the "foo"
>      generic.  I find it confusing that exportMethods sometimes
>      exports the generic and sometimes not.  The generic can be
>      re-exported using export().

I don't know what you mean by 're-export' here, but I think that relates 
to using these terms in the everyday sense.  I guess you are saying that 
if you import a generic (which need not have been exported) from another 
name space, that is not exported by exportMethods.  That is correct 
according to my previous para: that generic was never 'in' the name space 
but in its enclosing environment.  As export() works not just on the name 
space but also its imports, you can explicitly export a generic you 
imported.  (All you need in order to be able to export an object is for it 
to be visible from the name space when the latter is loaded.)

I'll look into adding a bit more to `Writing R Extensions', but some of 
this is implementation detail that we do not necessarily wish to enshrine 
in the API.  (OTOH, changing it is likely to break things nowadays.)

Brian

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From duncan at wald.ucdavis.edu  Wed May  2 19:12:30 2007
From: duncan at wald.ucdavis.edu (Duncan Temple Lang)
Date: Wed, 2 May 2007 10:12:30 -0700
Subject: [Rd] Embedding R and registering routines
In-Reply-To: <78778752-78D4-46AB-8068-D86654DAE6DC@r-project.org>
References: <46375AC9.5000201@vanderbilt.edu>
	<20070501175605.GS30532@wald.ucdavis.edu>
	<B564A90A-FF27-4BEA-B0BC-D60853F71782@r-project.org>
	<20070501202445.GA1806@wald.ucdavis.edu>
	<5596EE23-E8F8-440C-BAD8-129C48352ACD@r-project.org>
	<20070501214700.GE1806@wald.ucdavis.edu>
	<78778752-78D4-46AB-8068-D86654DAE6DC@r-project.org>
Message-ID: <20070502171230.GA15690@wald.ucdavis.edu>

Simon Urbanek wrote:
> Duncan,
> 
> I see your point. But in that case Apache is the one managing the  
> life of the so, not R, and in many cases unloading the module would  
> also mean to unload R in which case the problem doesn't arise. 

Not quite. If apache loads mod_perl and mod_R, say, and
"we" make routines in mod_perl available to R, when apache
unloads mod_perl but not mod_R, we have to tell R that
these are no longer available. 


> Also  that general case requires that R and the embedding application agree  
> on the dylib loading method so they can share the handle. This may  
> not be trivial across platforms. 

If by handle we are talking about the handle to the DLL, then
while, I can see some potential complications in strange cases,
generally it is not an issue.
The registration mechanism precisely avoids sharing the handle
and deals directly with pointers to routines. Indeed, it is getting
away from global variables found by name lookup.


> So on the whole I agree, but I'm not  
> quite convinced yet that it's worth the extra effort.. maybe at some  
> point ;) ...

Neither am I; just cautious about making things too simple
at one step which makes the entire thing more complex in subsequent
steps.  I think we have data on that  ... :-)


> 
> Cheers,
> Simon
> 
> 
> On May 1, 2007, at 5:47 PM, Duncan Temple Lang wrote:
> 
> > Simon Urbanek wrote:
> >> Duncan,
> >>
> >> are you going to take care of this? I have a quick solution for R-
> >> devel that adds a special entry if requested.
> >
> > If you want to go ahead,  be my guest.
> > I'm somewhat occupied for the next few days...
> >
> >>
> >> I'm not quite convinced that we need as much flexibility as adding
> >> arbitrary DllInfos, because the embedding application is a really
> >> special concept (everything else is dynamically loaded except for the
> >> application). In a sense "base" does that for non-embedded R and the
> >> distinction is that it doesn't allow dynamic lookup. I don't think
> >> adding arbitrary DllInfos is wise, because we would have to expose
> >> DLL handles etc. - do we really want to do that? And as for adding
> >> NULL-handle DLLInfos, there is only one legitimate use and that is
> >> the embedding application, so anything else looks more like abuse to
> >> me... (just lazy solution to not have to determine the dll). Also the
> >> embedded DllInfo cannot be unloaded by design, so it doesn't need
> >> anything complicated...
> >
> > I agree that we don't necessarily want to expose the entire DllInfo
> > structure (but we don't need to - just a constructor function to
> > create a new instance), and also that the embedded case is
> > special. However, Jeff's example illustrates that it is not as simple
> > as the host application maing symbols available to R.  In fact, it is
> > not apache that is making the symbols available to R, it is the code
> > in mod_R.so.  And it might be that we want to make routines available
> > from a different module dynamically loaded into apache.  Now,
> > we can do this by shovelling them all into the "embed" DllInfo,
> > but that is almost the same as putting them all into "base"
> > as we have lost the provenance of the registration.
> > And so if we want to unload an apache module and therefore unregister
> > the routines it provided to R, our life is somewhat more complex.
> >
> > I am not saying that we absolutely need this level of generality.
> > Clearly we have lived without it for a while. However, it does arise
> > in other embedded situations such as when we put R inside
> > Java, Python, Perl, Postgres, ... as each of them can load other
> > .so's.  I do believe that we want to and can merge a lot of this
> > inter-system functionality in an increasingly transparent way, and
> > keeping things separate with reflection information is vital for
> > this.
> >
> > And of course, once we make a particular feature such as "add to
> > embed" into R, we are loate to take it out and we live with these
> > constraints for a long time.  But in this case, it is not a big deal,
> > so please go ahead if you have the time and want to.
> >
> >  Thanks,
> >    D.
> >
> >>
> >> Cheers,
> >> Simon
> >>
> >> On May 1, 2007, at 4:24 PM, Duncan Temple Lang wrote:
> >>
> >>> Simon Urbanek wrote:
> >>>> Since I'm not sure I really understand Jeff's question this is just
> >>>> my interpretation, but I think the point was that you may want to
> >>>> register symbols *not* from a DLL but from the embedding  
> >>>> application
> >>>> itself (e.g. like R.app GUI that embeds libR registers its entry  
> >>>> for
> >>>> quartz.save). I would welcome a support for this, because the  
> >>>> current
> >>>> dirty hack (don't do this at home, kids!) is to use R_getDllInfo
> >>>> ("base") and append the entry instead of overwriting it. It is an
> >>>> ugly hack, but I don't think we have any API for this. Maybe a
> >>>> worthwhile endeavor would be to simply add something like
> >>>> R_getDllInfo
> >>>> ("embedded") reserved specifically for such purposes (or "R" or
> >>>> whatever...).
> >>>>
> >>>
> >>> I think we are all talking about the same thing and the code
> >>> that I posted does that for a DLL coming from an arbitrary
> >>> package rather than base.
> >>>
> >>> Rather than having yet another global concept, i.e. "embedded", we
> >>> could allow users to add their own R_DllInfo and so allow mire  
> >>> than on
> >>> in the same session.  The only issue is removing them, freeing the
> >>> memory, and so on.  But this is relatively easy to do, and various
> >>> implementations suggest themselves.
> >>>
> >>>
> >>> Thanks for the feedback.
> >>>
> >>> D.
> >>>
> >>>
> >>>> Cheers,
> >>>> Simon
> >>>>
> >>>> On May 1, 2007, at 1:56 PM, Duncan Temple Lang wrote:
> >>>>
> >>>>> Jeffrey Horner wrote:
> >>>>>> Hello,
> >>>>>>
> >>>>>> The use of .Call and the like all depend on loading shared
> >>>>>> libraries and
> >>>>>> registering routines from it. Also, .Primitive and .Internal
> >>>>>> depend on
> >>>>>> routines being registered in the R binary. And applications that
> >>>>>> embed R
> >>>>>> can override routines declared in Rinterfac.h, but is there a way
> >>>>>> for an
> >>>>>> application embedding R to register other routines defined in the
> >>>>>> application without loading a shared library or re-compiling R?
> >>>>>
> >>>>> I think I understand the question, and if so, the answer is yes!
> >>>>>
> >>>>> I have put some code near the end of the message that illustrates
> >>>>> (tests) this idea.
> >>>>>
> >>>>> The basic idea is that after you initialize R and load your
> >>>>> RApache package with its .so, you can ask for the corresponding
> >>>>> DllInfo object for that RApache.so. (You need the full path.)
> >>>>>
> >>>>> Then, you call R_registerRoutines() with that object as the first
> >>>>> argument and your collection of routines for .C, .Call, .Fortran,
> >>>>> etc.
> >>>>> And then those routines are available to R via the corresponding
> >>>>> interface function.
> >>>>>
> >>>>> This is currently slightly strained in two ways.
> >>>>>
> >>>>> Firstly, R_registerRoutines() just overwrites any existing
> >>>>> registered
> >>>>> entries.  So we should have something that allows us to append to
> >>>>> this. We could add something, if this is a worthwhile approach and
> >>>>> others want to chime  in with comments.
> >>>>>
> >>>>> Also we are adding these symbols to a table to which they do not
> >>>>> really belong, i.e. pretending they are the same as the  
> >>>>> routines in
> >>>>> RApache.so. But it works.  Ideally, we would like to be able to
> >>>>> create
> >>>>> and add our own special type of DllInfo. A class system from an
> >>>>> object-oriented language would really help here.  But we also  
> >>>>> would
> >>>>> need to make this possible via the R API.
> >>>>>
> >>>>>
> >>>>> (Another hacky, unreliable way is using global symbols.
> >>>>> It is possible for R to resolve symbols  on some platforms
> >>>>> by looking in the application's global symbol table.
> >>>>> So R could find symbols in the executable. Of course, you load
> >>>>> mod_R.so and so its symbols are not likely to be in the global
> >>>>> symbol
> >>>>> as I doubt very much Apache loads modules globally.
> >>>>> And we would also have to bed R slightly to make this work.
> >>>>> )
> >>>>>
> >>>>>
> >>>>> main.c:
> >>>>> -----------------------------
> >>>>> #include <Rinternals.h>
> >>>>> #include <Rembedded.h>
> >>>>> #include <R_ext/Rdynload.h>
> >>>>>
> >>>>> void
> >>>>> foo(int *x)
> >>>>> {
> >>>>>   fprintf(stderr, "In foo\n");
> >>>>>   *x = 101;
> >>>>> }
> >>>>>
> >>>>> SEXP
> >>>>> bar(SEXP n)
> >>>>> {
> >>>>>   return(ScalarInteger(INTEGER(n)[0] * 2));
> >>>>> }
> >>>>>
> >>>>> void
> >>>>> unregistered()
> >>>>> {
> >>>>>   fprintf(stderr, "In unregistered\n");
> >>>>> }
> >>>>>
> >>>>> static R_CallMethodDef callMethods[] = {
> >>>>>   {"bar", (DL_FUNC) &bar, 1},
> >>>>>   {NULL, NULL, 0}
> >>>>> };
> >>>>>
> >>>>> static R_CMethodDef cmethods[] = {
> >>>>>   {"foo", (DL_FUNC) &foo, 1}, /* type { INTSXP }*/
> >>>>>   {NULL, NULL, 0}
> >>>>> };
> >>>>>
> >>>>> void
> >>>>> registerApplicationRoutinesWithR()
> >>>>> {
> >>>>>   DllInfo *dll;
> >>>>>   dll = R_getDllInfo("/home/duncan/Rpackage/XML/libs/XML.so");
> >>>>>   R_registerRoutines(dll, cmethods, callMethods, NULL, NULL);
> >>>>> }
> >>>>>
> >>>>> int
> >>>>> main(int argc, char *argv[])
> >>>>> {
> >>>>>   int errorOccurred = 0;
> >>>>>   SEXP e;
> >>>>>   Rf_initEmbeddedR(argc, argv);
> >>>>>   registerApplicationRoutinesWithR();
> >>>>>
> >>>>>   PROTECT(e = allocVector(LANGSXP, 2));
> >>>>>   SETCAR(e, Rf_install("source"));
> >>>>>   SETCAR(CDR(e), mkString("test.R"));
> >>>>>   R_tryEval(e, R_GlobalEnv, &errorOccurred);
> >>>>>
> >>>>>   return(0);
> >>>>> }
> >>>>>
> >>>>>
> >>>>> test.R:
> >>>>> ---------------------------
> >>>>> print(.C("foo", x= as.integer(1))$x)
> >>>>> print(.Call("bar", as.integer(3)))
> >>>>>
> >>>>>
> >>>>>
> >>>>>
> >>>>> GNUmakefile:
> >>>>> -------------------------------------
> >>>>>
> >>>>> CFLAGS=-g -I$(R_HOME)/include
> >>>>>
> >>>>> main: main.o
> >>>>> 	$(CC) -o $@ $^ -L$(R_HOME)/lib -lR
> >>>>>
> >>>>>>
> >>>>>> The only such way I've found that comes close to a solution to
> >>>>>> this is
> >>>>>> creating an RObjectTable and attaching that to the search path.
> >>>>>> Assignments to variables in that environment can call the
> >>>>>> table's get
> >>>>>> routine which is defined in the application, and I think that
> >>>>>> might be
> >>>>>> an interesting solution for a new RApache implementation.
> >>>>>>
> >>>>>> For the RApache Project, the mod_R.c shared library get's loaded
> >>>>>> into
> >>>>>> the apache process and its purpose is to initializes R. Next, it
> >>>>>> calls
> >>>>>> 'library(RApache)' to load RApache.so, a package that implements
> >>>>>> the
> >>>>>> RApache API. This two-library system works, but the
> >>>>>> implementation is
> >>>>>> too complex. I'd like to simplify down to just one shared  
> >>>>>> library.
> >>>>>>
> >>>>>> Any comments, suggestion are much appreciated.
> >>>>>>
> >>>>>> Thanks,
> >>>>>>
> >>>>>> Jeff
> >>>>>> -- 
> >>>>>> http://biostat.mc.vanderbilt.edu/JeffreyHorner
> >>>>>>
> >>>>>> ______________________________________________
> >>>>>> R-devel at r-project.org mailing list
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>>>
> >>>>> -- 
> >>>>> Duncan Temple Lang                duncan at wald.ucdavis.edu
> >>>>> Department of Statistics          work:  (530) 752-4782
> >>>>> 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> >>>>> One Shields Ave.
> >>>>> University of California at Davis
> >>>>> Davis, CA 95616, USA
> >>>>>
> >>>>>
> >>>>>
> >>>>> ______________________________________________
> >>>>> R-devel at r-project.org mailing list
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>>
> >>> -- 
> >>> Duncan Temple Lang                duncan at wald.ucdavis.edu
> >>> Department of Statistics          work:  (530) 752-4782
> >>> 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> >>> One Shields Ave.
> >>> University of California at Davis
> >>> Davis, CA 95616, USA
> >>>
> >>>
> >>>
> >
> > -- 
> > Duncan Temple Lang                duncan at wald.ucdavis.edu
> > Department of Statistics          work:  (530) 752-4782
> > 4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
> > One Shields Ave.
> > University of California at Davis
> > Davis, CA 95616, USA
> >
> >
> >
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Duncan Temple Lang                duncan at wald.ucdavis.edu
Department of Statistics          work:  (530) 752-4782
4210 Mathematical Sciences Bldg.  fax:   (530) 752-7099
One Shields Ave.
University of California at Davis
Davis, CA 95616, USA



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20070502/ca65bfa0/attachment.bin 

From hin-tak.leung at cimr.cam.ac.uk  Wed May  2 20:21:36 2007
From: hin-tak.leung at cimr.cam.ac.uk (Hin-Tak Leung)
Date: Wed, 02 May 2007 19:21:36 +0100
Subject: [Rd] mingw-cross rpm spec file
Message-ID: <4638D6B0.5050109@cimr.cam.ac.uk>

Attached (and pasted in it entirety, although quite a few of the long 
lines are munched) is my rpm spec file for building the mingw
cross-compiler as an rpm. It is more or less a wrapper which massages
the cross-tool script and setting some of the directories in
the "RPM" way and eventually everything is under /opt/mingw ; the
only tricky part is telling rpm not to strip binaries.

The mingw folks has already stated that they do *not* want to distribute
mingw-cross as an rpm (or any binary-packaging), so this is likely to 
end up as part of a Wiki article on the mingw web site I'll probably
contribute in time.

As my primary use of mingw-cross at the moment is with R (and the
R people do currently provide mingw-cross binaries), I think it
is appropriate that it be taken into CRAN, either being used, or
archived somewhere for others as reference...

I have only used it on fedora core 6, so be warned :-). Hope it is 
useful to somebody else.

HTL

================================================================
Name:           mingw
Version:        1.0
Release:        1%{?dist}
Summary:        MinGW environment on Linux

%define cross_tool_ver x86-mingw32-build.sh-0.0-20061107-1

# Can't allow strip to remove the archive indices
%define __strip /bin/true

Group:          Development/Libraries
License:        Distributable
URL:            http://sourceforge.net/projects/mingw/
Source0:        %{cross_tool_ver}.tar.bz2
Source1:        binutils-2.17.50-20070129-1-src.tar.gz
Source2:        gcc-ada-3.4.5-20060117-1-src.tar.gz
Source3:        gcc-core-3.4.5-20060117-1-src.tar.gz
Source4:        gcc-g++-3.4.5-20060117-1-src.tar.gz
Source5:        gcc-g77-3.4.5-20060117-1-src.tar.gz
Source6:        gcc-java-3.4.5-20060117-1-src.tar.gz
Source7:        gcc-objc-3.4.5-20060117-1-src.tar.gz
Source8:        mingw-runtime-3.12-src.tar.gz
Source9:        w32api-3.9-src.tar.gz


BuildRoot: 
%{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)

BuildRequires:  perl
#Requires:

%description
MinGW is a set of include files and import libraries that allow one to 
use GCC to build
native Windows applications that use vendor-supplied runtime.

%prep
%setup -q -n %{cross_tool_ver}

perl -pi -e "s(assume WORKING_DIR.+)(assume WORKING_DIR
${RPM_BUILD_DIR}/mingw-3.4.5)" x86-mingw32-build.sh.conf
perl -pi -e  "s(assume PACKAGE_DIR.+)(assume PACKAGE_DIR 
${RPM_SOURCE_DIR})" x86-mingw32-build.sh.conf
perl -pi -e  "s(assume INSTALL_DIR.+)(assume INSTALL_DIR 
${RPM_BUILD_ROOT}/opt/mingw)" x86-mingw32-build.sh.conf

%build
[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT
sh ./x86-mingw32-build.sh --no-download --use-latest-versions --unattended

%install
# no op

%clean
[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT


%files
%defattr(-,root,root,-)
%doc x86-mingw32-build.sh.log
/opt/mingw


%changelog
================================================================
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: mingw.spec
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070502/f54cb59a/attachment.pl 

From Inman.Brant at mayo.edu  Wed May  2 06:04:55 2007
From: Inman.Brant at mayo.edu (Inman, Brant A.   M.D.)
Date: Tue, 1 May 2007 23:04:55 -0500
Subject: [Rd] ? R 2.5.0 alpha bug
Message-ID: <6021CA6EF4C8374084D4F5A141F1CBBBC14BE2@msgebe23.mfad.mfroot.org>


This email is intended to highlight 2 problems that I encountered
running R 2.5.0 alpha on a Windows XP machine.

#1 - Open script error

If I click the "Open folder" icon on the toolbar, R opens my script
files perfectly.  However, when I select "File > Open Script >
MyFileLocation", I get a fatal error that causes R to close immediately.
This error was reproduced on 3 consecutive occasions but has been
intermittent thereafter. One of these fatal errors resulted in a typical
error reporting box being generated which I sent off.  I was not able to
verify if this error has been reported and corrected in subsequent
versions of 2.5.

#2 - Bug reporting link on CRAN website

I tried to report the bug listed above on the CRAN website but when I
clicked on the bug reporting link on the left-hand side panel of the
main site (http://bugs.r-project.org/cgi-bin/R) , I get an error page
with the following message:

The system encountered a fatal error 
cannot open config file /home/sfe/r-bugs/jitterbug/R : No such file or
directory
The last error code was: No such file or directory 
uid/gid=30/8 


Thanks,

Brant Inman


From ripley at stats.ox.ac.uk  Thu May  3 09:34:33 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 3 May 2007 08:34:33 +0100 (BST)
Subject: [Rd] ? R 2.5.0 alpha bug
In-Reply-To: <6021CA6EF4C8374084D4F5A141F1CBBBC14BE2@msgebe23.mfad.mfroot.org>
References: <6021CA6EF4C8374084D4F5A141F1CBBBC14BE2@msgebe23.mfad.mfroot.org>
Message-ID: <Pine.LNX.4.64.0705030822400.14679@auk.stats>

Why are you resending this?

You sent it to R-help
(https://stat.ethz.ch/pipermail/r-help/2007-May/130986.html)
and got a reply.

On Tue, 1 May 2007, Inman, Brant A.   M.D. wrote:

> This email is intended to highlight 2 problems that I encountered
> running R 2.5.0 alpha on a Windows XP machine.

The alpha period closed 3 weeks ago.  Please use a released version.

> #1 - Open script error
>
> If I click the "Open folder" icon on the toolbar, R opens my script
> files perfectly.  However, when I select "File > Open Script >
> MyFileLocation", I get a fatal error that causes R to close immediately.
> This error was reproduced on 3 consecutive occasions but has been
> intermittent thereafter. One of these fatal errors resulted in a typical
> error reporting box being generated which I sent off.  I was not able to
> verify if this error has been reported and corrected in subsequent
> versions of 2.5.

It has not been corrected, as no one else has seen it (or at least 
reported it).  I've used that facility heavily in the last 3 weeks.
So we may find it hard to reproduce if it is in the released version.

> #2 - Bug reporting link on CRAN website
>
> I tried to report the bug listed above on the CRAN website but when I
> clicked on the bug reporting link on the left-hand side panel of the
> main site (http://bugs.r-project.org/cgi-bin/R) , I get an error page
> with the following message:
>
> The system encountered a fatal error
> cannot open config file /home/sfe/r-bugs/jitterbug/R : No such file or
> directory
> The last error code was: No such file or directory
> uid/gid=30/8

It is already up again.

>
> Thanks,
>
> Brant Inman
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Thu May  3 12:52:26 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 3 May 2007 11:52:26 +0100 (BST)
Subject: [Rd] R CMD Rdconv drops sections: arguments, seealso,
 examples (PR#9649)
In-Reply-To: <20070501174551.E7CAE5A89A@slim.kubism.ku.dk>
References: <20070501174551.E7CAE5A89A@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0705031144260.10593@gannet.stats.ox.ac.uk>

Bill,

Now we have access again to the R-bugs repository (the database has been 
offline for about a week) I can try to understand this.

This is a follow up to PR#9645 which was itself a follow up to PR#9606, 
which was a report that Rdconv silently drops sections it makes no sense 
of.  (The latter is well known, and that's why R CMD check has an 
independent check of Rd syntax using R code.)

And this supersedes the suggestion in PR#9645, both of which are that 
Rdconv should detect unclosed sections and throw an error.

It is not clear to me that throwing an error is helpful as it would stop 
the package installation process when all but one section in one .Rd file 
would be useful.  But it would seem good to give a warning, and so I 
propose that we adapt your code to do so.

Does that reasonably reflect the various PRs?

Brian


On Tue, 1 May 2007, bill at insightful.com wrote:

> On Mon, 30 Apr 2007 bill at insightful.com wrote:
>
>> On Tue, 10 Apr 2007 timh at insightful.com wrote:
>>
>>> I've created a .Rd file (below), then converted that to .sgml using
>>> 	R CMD Rdconv --type=Ssgm combn.Rd  > combn.sgml
>>> The output (shown below) is missing some of the sections:
>>> 	arguments
>>> 	seealso
>>> 	examples
>>> If instead I convert to .d (below), the same sections are missing,
>>> and the "note" section is included but without the necessary newline.
>>
>> The underlying problem was that there were some unmatched open-braces.
>> (or 'brackets'?) The attached patch to share/perl/R/Rdconv.pm:mark_brackets()
>> seems to detect unmatched open and close braces and throw an error:
>>
>>    % R CMD INSTALL -l /tmp/Rlib timhPackage
>>    * Installing *source* package 'timhPackage' ...
>>    ** help
>>    >>> Building/Updating help pages for package 'timhPackage'
>>         Formats: text html latex example
>>    Rdconv(): mismatched braces in help file timh.Rd on or after line 12
>>    ERROR: building help failed for package 'timhPackage'
>>    ** Removing '/tmp/Rlib/timhPackage'
>>    ** Restoring previous '/tmp/Rlib/timhPackage'
>>
>> The code to report the line number doesn't work quite right
>> since any "% comment" lines in the Rd file have been removed
>> from $complete_text by the time we get here.  I fudged by
>> putting 'on or after line XXX' in the error message.
>
> The following patch adds a little more information (the
> name of the \tag or whether it is an unmatched { or })
> to the error message, so Tim's example results in
>
>    % R CMD INSTALL -l /tmp/Rlib timhPackage
>    * Installing *source* package 'timhPackage' ...
>    ** help
>     >>> Building/Updating help pages for package 'timhPackage'
>         Formats: text html latex example
>    Rdconv(): mismatched braces ('\arguments{') in help file timh.Rd on or after line 12
>    ERROR: building help failed for package 'timhPackage'
>    ** Removing '/tmp/Rlib/timhPackage'
>    ** Restoring previous '/tmp/Rlib/timhPackage'
>
>
> *** Rdconv.pm~	2007-03-29 19:05:08.000000000 -0700
> --- Rdconv.pm	2007-05-01 10:28:55.000000000 -0700
> ***************
> *** 254,259 ****
> --- 254,275 ----
>  	$complete_text =~ s/{([^{}]*)}/$id$1$id/s;
>  	print STDERR "." if $debug;
>      }
> +     # Any remaining brackets must be unmatched ones, hence report error.
> +     if ($complete_text =~ /([{}])/s) {
> +         # Would like to tell which which line has unmatched { or },
> +         # but lines starting with % have already been removed.
> +         # Hence the 'on or after' in the message.
> +         my $badlineno=0 ;
> + 	my $extra_info = "(\'$1\')" ;
> +         if ($complete_text =~ /(\\\w+{)/) {
> + 		$extra_info = "(\'$1\')" ;
> + 	}
> +         foreach my $line (split /\n/, $complete_text) {
> +             $badlineno++;
> +             last if ($line =~ /[{}]/) ;
> +         }
> +         die "Rdconv(): mismatched braces $extra_info in help file $Rdname on or after line $badlineno\n" ;
> +     }
>  }
>
>  sub unmark_brackets {
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From mtmorgan at fhcrc.org  Thu May  3 21:56:06 2007
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Thu, 03 May 2007 12:56:06 -0700
Subject: [Rd] Inherited S4 .Data prototype not assigned
Message-ID: <6ph6479znop.fsf@gopher4.fhcrc.org>

An S4 class inheriting from another class with a prototype does not
inherit (at least sometimes) the prototype for .Data:

> setClass("A", "numeric", 1)
> setClass("B", "A")
> new("A")
An object of class "A"
[1] 1
> new("B")
An object of class "B"
numeric(0)

My expectation is that prototype inheritance of .Data behaves as for
regular slots:

> setClass("A",
+          representation=representation(x="numeric"),
+          prototype=prototype(x=1))
[1] "A"
> setClass("B", "A")
[1] "B"
> new("B")
An object of class "B"
Slot "x":
[1] 1

I think this traces first to an errant ! that claims the data part is
filled, when it is not yet, and second to a call to getDataPart with a
primitive that occupies, but does not have, a .Data slot.

Martin

--- src/library/methods/R/RClassUtils.R (revision 41426)
+++ src/library/methods/R/RClassUtils.R (working copy)
@@ -45,7 +45,7 @@
     ## try for a single superclass that is not virtual
     supers <- names(extends)
     virtual <- NA
-    dataPartDone <- length(slots)==0 || !is.na(match(".Data", snames))
+    dataPartDone <- length(slots)==0 || is.na(match(".Data", snames))
     dataPartClass <- if(dataPartDone) "ANY" else elNamed(slots, ".Data")
     prototype <- ClassDef at prototype
     ## check for a formal prototype object (TODO:  sometime ensure that this happens
@@ -79,8 +79,15 @@
             else if(length(slots) > 0) {
                 for(slotName in slotsi) {
                     if(identical(slotName, ".Data")) {
-                        if(!dataPartDone) {
-                            prototype <- setDataPart(prototype, getDataPart(pri))
+                        if (!dataPartDone) {
+                            temp <- getClass(class(pri))@slots
+                            if (length(temp)==0 ||
+                                is.na(match(".Data", names(temp)))) {
+                                prototype <- pri
+                                attributes(prototype) <- NULL
+                            } else
+                                prototype <-
+                                    setDataPart(prototype, getDataPart(pri))
                             dataPartDone <- TRUE
                         }
                     }
> sessionInfo()
R version 2.6.0 Under development (unstable) (2007-05-03 r41426) 
x86_64-unknown-linux-gnu 

locale:
LC_CTYPE=en_US;LC_NUMERIC=C;LC_TIME=en_US;LC_COLLATE=en_US;LC_MONETARY=en_US;LC_MESSAGES=en_US;LC_PAPER=en_US;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US;LC_IDENTIFICATION=C

attached base packages:
[1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"  
[7] "base"     

-- 
Martin Morgan
Bioconductor / Computational Biology
http://bioconductor.org


From brech at delphioutpost.com  Thu May  3 22:07:25 2007
From: brech at delphioutpost.com (brech at delphioutpost.com)
Date: Thu,  3 May 2007 22:07:25 +0200 (CEST)
Subject: [Rd] (PR#9623)  qr.coef: permutes dimnames; inserts NA; promises
Message-ID: <20070503200725.B60E962623@slim.kubism.ku.dk>

> From: Prof Brian Ripley <ripley at stats.ox.ac.uk>
> Date: Tue, 1 May 2007 15:01:51 +0100 (BST)
> 
> On Thu, 19 Apr 2007, brech at delphioutpost.com wrote:
> 
> > Full_Name: Christian Brechbuehler
> > Version: 2.4.1 Patched (2007-03-25 r40917)
> > OS: Linux 2.6.15-27-adm64-xeon; Ubuntu 6.06.1 LTS
> > Submission from: (NULL) (24.61.47.236)
> >
> >
> > I believe that R has a bug in that it is not
> > internally consistent, and another separate bug in the documentation.
> 
> I agree with the bug in the dimnames, and and have corrected that in 2.5.0 
> patched.

I see it in svn:

       if(!is.null(nam <- colnames(qr$qr)))
  -       rownames(coef) <- nam
  +        if(k < p) rownames(coef)[qr$pivot] <- nam
  +        else rownames(coef) <- nam
  +

Thank you!


> But I think the rest stems from the following misunderstanding:
> 
> > in math, zero times anything is zero, but in R, NA times
> > anything (even zero) is NA.  This seems somewhat inconvenient.
> 
> That just is not true.

OK, I accept that.

> Stemming from this, what R is reporting is that certain columns are not 
> used in the calculation.

OK, I understand qr.coef indicates with NA that dcrdc2 decided to
exclude the corresponding columns (because of linear dependency).

I still think the documentation is misleading -- trimming to the essence:

> > help(qr):
> >
> >   'solve.qr' is the method for 'solve' for 'qr' objects. 'qr.solve'
> >   solves systems of equations via the QR decomposition: if 'a' is a
> >   QR decomposition it is the same as 'solve.qr', but if 'a' is a
> >   rectangular matrix the QR decomposition is computed first.  Either
> >   will handle over- and under-determined systems, providing a
> >   minimal-length solution or a least-squares fit if appropriate.

(A)
'qr.solve' and 'solve.qr' will NOT handle under-determined systems.
They both perform this check:

    if (a$rank != nc) 
        stop("singular matrix 'a' in solve")

But 'qr.coef', which they call when all is well, does.

(B)
Help promises a minimal-length solution, but QR does not deliver that.

> >     > qr.coef(qr(t(1:2)), 5)
> >
> >     [1]  5 NA

> > 1*5 + 2*0 does equal 5, so this is a solution, but it is
> > NOT minimal-length.  OTOH
> >
> >     > d <- svd(t(1:2));  5 %*% d$u %*% (d$d^-1 * t(d$v))
> >          [,1] [,2]
> >     [1,]    1    2
> >
> > This *is* minimum length, and 1*1 + 2*2 == 5.
> >
> > The documentation should clarify when minimal-length solution is
> > provided.

Maybe the phrase "a minimal-length solution or" should be removed?

/Christian Brechbuehler


From rpeng at jhsph.edu  Thu May  3 23:13:49 2007
From: rpeng at jhsph.edu (Roger D. Peng)
Date: Thu, 03 May 2007 17:13:49 -0400
Subject: [Rd] Imports/exports of S4 methods
Message-ID: <463A508D.4090307@jhsph.edu>

I have a question about what to do in the following situation (please bear with 
the setup):

Package A defines an S4 generic 'foo' and as well as S4 methods for 'foo' and has

exportMethods("foo")

in its NAMESPACE file.

Package B defines another method for 'foo' for class "bar" and has

importFrom(A, "foo")
exportMethods("foo")
exportClasses("bar")

in its NAMESPACE file.  Should Package B also have Package A in the 'Depends:' 
field of the DESCRIPTION file or is it correct to import Package A only?

Finally, Package C has a single exported function named 'myfunc' which needs to 
use the method for 'foo' defined in Package B, so its NAMESPACE file has

importFrom(A, "foo")
importMethodsFrom(B, "foo")
importClassesFrom(B, "bar")
export("myfunc")

Is this the correct thing to do?

The error I get under this setup is that 'myfunc' cannot find the method for 
'foo' defined in Package B when 'myfunc' calls 'foo' on an object of class "bar".

If you've made it this far I'm already grateful!  Any help with this would be 
appreciated.

-roger
-- 
Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/


From osklyar at ebi.ac.uk  Fri May  4 00:37:34 2007
From: osklyar at ebi.ac.uk (Oleg Sklyar)
Date: Thu, 03 May 2007 23:37:34 +0100
Subject: [Rd] Inherited S4 .Data prototype not assigned
In-Reply-To: <6ph6479znop.fsf@gopher4.fhcrc.org>
References: <6ph6479znop.fsf@gopher4.fhcrc.org>
Message-ID: <463A642E.80306@ebi.ac.uk>

Martin, thanks for commenting on the issue. I did not know if this was a 
"feature" and therefore did not post before, but:

in EBImage, BioC, the class Image is derived from array and since 
recently (R2.5) I had a problem with the following constructor: 
new("Image", .Data=data). Finally I had to do res <- new("Image"); 
res at .Data <- dat, which worked.

However, what I have problem with, is that R does not have a concept of 
public, private or protected members. Therefore I do not really see why 
.Data should be hidden and why then now and not initially. If this goes 
on this way and there will be no direct access to it, it will simply 
break my whole package.

Best,
Oleg


Martin Morgan wrote:
> An S4 class inheriting from another class with a prototype does not
> inherit (at least sometimes) the prototype for .Data:
> 
>> setClass("A", "numeric", 1)
>> setClass("B", "A")
>> new("A")
> An object of class "A"
> [1] 1
>> new("B")
> An object of class "B"
> numeric(0)
> 
> My expectation is that prototype inheritance of .Data behaves as for
> regular slots:
> 
>> setClass("A",
> +          representation=representation(x="numeric"),
> +          prototype=prototype(x=1))
> [1] "A"
>> setClass("B", "A")
> [1] "B"
>> new("B")
> An object of class "B"
> Slot "x":
> [1] 1
> 
> I think this traces first to an errant ! that claims the data part is
> filled, when it is not yet, and second to a call to getDataPart with a
> primitive that occupies, but does not have, a .Data slot.
> 
> Martin
> 
> --- src/library/methods/R/RClassUtils.R (revision 41426)
> +++ src/library/methods/R/RClassUtils.R (working copy)
> @@ -45,7 +45,7 @@
>      ## try for a single superclass that is not virtual
>      supers <- names(extends)
>      virtual <- NA
> -    dataPartDone <- length(slots)==0 || !is.na(match(".Data", snames))
> +    dataPartDone <- length(slots)==0 || is.na(match(".Data", snames))
>      dataPartClass <- if(dataPartDone) "ANY" else elNamed(slots, ".Data")
>      prototype <- ClassDef at prototype
>      ## check for a formal prototype object (TODO:  sometime ensure that this happens
> @@ -79,8 +79,15 @@
>              else if(length(slots) > 0) {
>                  for(slotName in slotsi) {
>                      if(identical(slotName, ".Data")) {
> -                        if(!dataPartDone) {
> -                            prototype <- setDataPart(prototype, getDataPart(pri))
> +                        if (!dataPartDone) {
> +                            temp <- getClass(class(pri))@slots
> +                            if (length(temp)==0 ||
> +                                is.na(match(".Data", names(temp)))) {
> +                                prototype <- pri
> +                                attributes(prototype) <- NULL
> +                            } else
> +                                prototype <-
> +                                    setDataPart(prototype, getDataPart(pri))
>                              dataPartDone <- TRUE
>                          }
>                      }
>> sessionInfo()
> R version 2.6.0 Under development (unstable) (2007-05-03 r41426) 
> x86_64-unknown-linux-gnu 
> 
> locale:
> LC_CTYPE=en_US;LC_NUMERIC=C;LC_TIME=en_US;LC_COLLATE=en_US;LC_MONETARY=en_US;LC_MESSAGES=en_US;LC_PAPER=en_US;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US;LC_IDENTIFICATION=C
> 
> attached base packages:
> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"  
> [7] "base"     
> 

-- 
Dr Oleg Sklyar | EBI-EMBL, Cambridge CB10 1SD, UK | +44-1223-494466


From deepayan.sarkar at gmail.com  Fri May  4 02:52:01 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Thu, 3 May 2007 17:52:01 -0700
Subject: [Rd] Qt device update
Message-ID: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>

Hi,

a few days back I had asked for help on a Qt device package. Thanks to
hints from Duncan TL and Thomas Friedrichsmeier, I now have something
more or less functional. For those interested, It can be downloaded
from

http://dsarkar.fhcrc.org/R/R-Qt.html

I have a couple of related questions. First, dev.interactive(), used
in example() and many demo()-s to decide if the current device is
interactive, is currently implemented as:

> dev.interactive
function (orNone = FALSE)
{
    iDevs <- c("X11", "GTK", "gnome", "quartz", "windows", "JavaGD")
    interactive() && (.Device %in% iDevs || (orNone && .Device ==
        "null device" && getOption("device") %in% iDevs))
}

This makes it impossible for new devices to be treated as interactive.
Perhaps it would be  better to change this to something like

    iDevs <- c("X11", "GTK", "gnome", "quartz", "windows", "JavaGD",
               getOption("interactive.devices"))

so that packages can set an option to be included in this list.

Second, can someone explain the details of what happens when a symbol
font is requested (with font=5 or with plotmath stuff)? demo(plotmath)
seems to work on a machine with LANG=en_US (I don't know what encoding
this means, probably latin1), but some symbols don't work on my
desktop which has en_US.UTF-8. Presumably, this means I have to
interpret the encoding differently, but what exactly is the rule? Is
it enough to treat it as latin1? Some devices have a lot of code
dealing with encodings, and I want to make sure I understand the
issues before I go off on a wild goose chase.

-Deepayan


From ripley at stats.ox.ac.uk  Fri May  4 07:50:25 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 4 May 2007 06:50:25 +0100 (BST)
Subject: [Rd] Qt device update
In-Reply-To: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705040627180.19693@gannet.stats.ox.ac.uk>

On Thu, 3 May 2007, Deepayan Sarkar wrote:

> Hi,
>
> a few days back I had asked for help on a Qt device package. Thanks to
> hints from Duncan TL and Thomas Friedrichsmeier, I now have something
> more or less functional. For those interested, It can be downloaded
> from
>
> http://dsarkar.fhcrc.org/R/R-Qt.html
>
> I have a couple of related questions. First, dev.interactive(), used
> in example() and many demo()-s to decide if the current device is
> interactive, is currently implemented as:
>
>> dev.interactive
> function (orNone = FALSE)
> {
>    iDevs <- c("X11", "GTK", "gnome", "quartz", "windows", "JavaGD")
>    interactive() && (.Device %in% iDevs || (orNone && .Device ==
>        "null device" && getOption("device") %in% iDevs))
> }
>
> This makes it impossible for new devices to be treated as interactive.
> Perhaps it would be  better to change this to something like
>
>    iDevs <- c("X11", "GTK", "gnome", "quartz", "windows", "JavaGD",
>               getOption("interactive.devices"))
>
> so that packages can set an option to be included in this list.

That would work differently from any existing option, adding to the list.
But it would make sense for package grDevices to have a function to 
request being added to the list.

(If the device is already running we could use 
grDevices:::dev.displaylist() to ask if this looked like a screen device.)

> Second, can someone explain the details of what happens when a symbol
> font is requested (with font=5 or with plotmath stuff)? demo(plotmath)
> seems to work on a machine with LANG=en_US (I don't know what encoding
> this means, probably latin1),

If a Linux machine, yes, it is shorthand for en_US.iso88591.
It could also mean ASCII and according to the standards (XPG?) probably 
should.

> but some symbols don't work on my desktop which has en_US.UTF-8. 
> Presumably, this means I have to interpret the encoding differently, but 
> what exactly is the rule? Is it enough to treat it as latin1? Some 
> devices have a lot of code dealing with encodings, and I want to make 
> sure I understand the issues before I go off on a wild goose chase.

The symbol font is regarded as being in Adobe Symbol encoding, which is an 
8-bit encoding.  So you have to be careful to handle font 5 without 
re-encoding, but that's not hard at device level (the graphics engine has 
handled the re-encoding needed).

If some symbols work and some do not, this is almost certainly a font 
selection issue.  If X11 is involved (and AFAIK the Qt implementations on 
Linux run on X11), you do need to ensure that getting a font in the 
desired encoding is given top priority (which can be hard to achieve in 
X11).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Fri May  4 13:20:54 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 4 May 2007 12:20:54 +0100 (BST)
Subject: [Rd] R CMD Rdconv drops sections: arguments, seealso,
 examples (PR#9649)
In-Reply-To: <Pine.LNX.4.64.0705031144260.10593@gannet.stats.ox.ac.uk>
References: <20070501174551.E7CAE5A89A@slim.kubism.ku.dk>
	<Pine.LNX.4.64.0705031144260.10593@gannet.stats.ox.ac.uk>
Message-ID: <Pine.LNX.4.64.0705041218490.1365@gannet.stats.ox.ac.uk>

On Thu, 3 May 2007, Prof Brian Ripley wrote:

> Bill,
>
> Now we have access again to the R-bugs repository (the database has been
> offline for about a week) I can try to understand this.
>
> This is a follow up to PR#9645 which was itself a follow up to PR#9606,
> which was a report that Rdconv silently drops sections it makes no sense
> of.  (The latter is well known, and that's why R CMD check has an
> independent check of Rd syntax using R code.)
>
> And this supersedes the suggestion in PR#9645, both of which are that
> Rdconv should detect unclosed sections and throw an error.
>
> It is not clear to me that throwing an error is helpful as it would stop
> the package installation process when all but one section in one .Rd file
> would be useful.  But it would seem good to give a warning, and so I
> propose that we adapt your code to do so.

Doing so (now in R-devel) shows a couple of false positives (\align{{} in 
Paren.Rd is one), and rather a lot of correct warnings about excess }s 
that are not doing any harm.  So I have tuned the warnings to be less 
strident in the latter case.


> Does that reasonably reflect the various PRs?
>
> Brian
>
>
> On Tue, 1 May 2007, bill at insightful.com wrote:
>
>> On Mon, 30 Apr 2007 bill at insightful.com wrote:
>>
>>> On Tue, 10 Apr 2007 timh at insightful.com wrote:
>>>
>>>> I've created a .Rd file (below), then converted that to .sgml using
>>>> 	R CMD Rdconv --type=Ssgm combn.Rd  > combn.sgml
>>>> The output (shown below) is missing some of the sections:
>>>> 	arguments
>>>> 	seealso
>>>> 	examples
>>>> If instead I convert to .d (below), the same sections are missing,
>>>> and the "note" section is included but without the necessary newline.
>>>
>>> The underlying problem was that there were some unmatched open-braces.
>>> (or 'brackets'?) The attached patch to share/perl/R/Rdconv.pm:mark_brackets()
>>> seems to detect unmatched open and close braces and throw an error:
>>>
>>>    % R CMD INSTALL -l /tmp/Rlib timhPackage
>>>    * Installing *source* package 'timhPackage' ...
>>>    ** help
>>>   >>> Building/Updating help pages for package 'timhPackage'
>>>         Formats: text html latex example
>>>    Rdconv(): mismatched braces in help file timh.Rd on or after line 12
>>>    ERROR: building help failed for package 'timhPackage'
>>>    ** Removing '/tmp/Rlib/timhPackage'
>>>    ** Restoring previous '/tmp/Rlib/timhPackage'
>>>
>>> The code to report the line number doesn't work quite right
>>> since any "% comment" lines in the Rd file have been removed
>>> from $complete_text by the time we get here.  I fudged by
>>> putting 'on or after line XXX' in the error message.
>>
>> The following patch adds a little more information (the
>> name of the \tag or whether it is an unmatched { or })
>> to the error message, so Tim's example results in
>>
>>    % R CMD INSTALL -l /tmp/Rlib timhPackage
>>    * Installing *source* package 'timhPackage' ...
>>    ** help
>>    >>> Building/Updating help pages for package 'timhPackage'
>>         Formats: text html latex example
>>    Rdconv(): mismatched braces ('\arguments{') in help file timh.Rd on or after line 12
>>    ERROR: building help failed for package 'timhPackage'
>>    ** Removing '/tmp/Rlib/timhPackage'
>>    ** Restoring previous '/tmp/Rlib/timhPackage'
>>
>>
>> *** Rdconv.pm~	2007-03-29 19:05:08.000000000 -0700
>> --- Rdconv.pm	2007-05-01 10:28:55.000000000 -0700
>> ***************
>> *** 254,259 ****
>> --- 254,275 ----
>>  	$complete_text =~ s/{([^{}]*)}/$id$1$id/s;
>>  	print STDERR "." if $debug;
>>      }
>> +     # Any remaining brackets must be unmatched ones, hence report error.
>> +     if ($complete_text =~ /([{}])/s) {
>> +         # Would like to tell which which line has unmatched { or },
>> +         # but lines starting with % have already been removed.
>> +         # Hence the 'on or after' in the message.
>> +         my $badlineno=0 ;
>> + 	my $extra_info = "(\'$1\')" ;
>> +         if ($complete_text =~ /(\\\w+{)/) {
>> + 		$extra_info = "(\'$1\')" ;
>> + 	}
>> +         foreach my $line (split /\n/, $complete_text) {
>> +             $badlineno++;
>> +             last if ($line =~ /[{}]/) ;
>> +         }
>> +         die "Rdconv(): mismatched braces $extra_info in help file $Rdname on or after line $badlineno\n" ;
>> +     }
>>  }
>>
>>  sub unmark_brackets {
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From rdpeng at gmail.com  Fri May  4 16:35:41 2007
From: rdpeng at gmail.com (Roger Peng)
Date: Fri, 4 May 2007 10:35:41 -0400
Subject: [Rd] Display list redraw incomplete
Message-ID: <66f3bd910705040735g45afe896h4d9881869949f1b@mail.gmail.com>

Since compiling R 2.5.0 from source on my Mac (PowerBook) I've noticed
some strange behavior when plotting.  I'm not sure if it's a problem
with my setup/compilation because I feel like a problem as basic as
this one would have been reported already.  I'm running R with X11 and
R was built with gcc 4.0.1.

Basically, I run

> plot(0, 0)
> dev.off()
X11
  4
Warning message:
Display list redraw incomplete

I don't think I've ever seen that warning before.  In addition to the
warning, two extra x11 devices are launched.  Same thing happens in
R-devel (r41438).  Any thoughts on what might be going on?

Thanks,
-roger
-- 
Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/


From pgilbert at bank-banque-canada.ca  Fri May  4 16:45:08 2007
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Fri, 04 May 2007 10:45:08 -0400
Subject: [Rd] Imports/exports of S4 methods
In-Reply-To: <463A508D.4090307@jhsph.edu>
References: <463A508D.4090307@jhsph.edu>
Message-ID: <463B46F4.2080208@bank-banque-canada.ca>

I'm wrestling with the same issues, so this is the blind leading the 
blind,  but that usually prompts someone knowledgeable to say something 
useful.

Roger D. Peng wrote:

>I have a question about what to do in the following situation (please bear with 
>the setup):
>
>Package A defines an S4 generic 'foo' and as well as S4 methods for 'foo' and has
>
>exportMethods("foo")
>
>in its NAMESPACE file.
>
>Package B defines another method for 'foo' for class "bar" and has
>
>importFrom(A, "foo")
>exportMethods("foo")
>exportClasses("bar")
>
>in its NAMESPACE file.  Should Package B also have Package A in the 'Depends:' 
>field of the DESCRIPTION file or is it correct to import Package A only?
>  
>
I thought it should only be necessary to import A in NAMESPACE and list 
it in Imports in the DESCRPTION file,  but I get warning messages if the 
code in B does not require("A") in the .onLoad function.  This in turn 
means that A needs to be in the Depends line of DESCRIPTION.

>Finally, Package C has a single exported function named 'myfunc' which needs to 
>use the method for 'foo' defined in Package B, so its NAMESPACE file has
>
>importFrom(A, "foo")
>importMethodsFrom(B, "foo")
>importClassesFrom(B, "bar")
>export("myfunc")
>
>Is this the correct thing to do?
>  
>
I don't think you need the imports in this case, just the the export. 
You do need B (and thus implicitly A) in the Depends line of DESCRIPTION.

>The error I get under this setup is that 'myfunc' cannot find the method for 
>'foo' defined in Package B when 'myfunc' calls 'foo' on an object of class "bar".
>  
>
I'm not sure why, but the one problem I have had is that when the syntax 
of the NAMESPACE file is messed up, you only get warnings when to 
require the package, but then you get errors when you try to use the 
functions.  Be sure to look back and see if you got warnings when you 
require("B").

>If you've made it this far I'm already grateful!  Any help with this would be 
>appreciated.
>  
>
Thanks, you just saved me writing up the same questions.

>-roger
>  
>
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}


From simon.urbanek at r-project.org  Fri May  4 20:09:44 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Fri, 4 May 2007 14:09:44 -0400
Subject: [Rd] Qt device update
In-Reply-To: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
Message-ID: <7B29DCD1-E483-482B-8CCE-526305FE2E9F@r-project.org>


On May 3, 2007, at 8:52 PM, Deepayan Sarkar wrote:

> [...] I have a couple of related questions. First, dev.interactive 
> (), used in example() and many demo()-s to decide if the current  
> device is interactive, is currently implemented as:
>
>> dev.interactive
> function (orNone = FALSE)
> {
>     iDevs <- c("X11", "GTK", "gnome", "quartz", "windows", "JavaGD")
>     interactive() && (.Device %in% iDevs || (orNone && .Device ==
>         "null device" && getOption("device") %in% iDevs))
> }
>
> This makes it impossible for new devices to be treated as interactive.


I think we should finally pass this question to the device itself.  
For some devices like Cairo the answer depends on the parameters with  
which the device was created (e.g. type='x11' is interactive whereas  
type='png' is not), so each instance of the device will answer  
differently. We could simply add an another capability flag - that is  
IMHO the only reliable solution. Any other ideas?

Cheers,
Simon


From Dietrich.Trenkler at uni-osnabrueck.de  Fri May  4 16:13:16 2007
From: Dietrich.Trenkler at uni-osnabrueck.de (Dietrich.Trenkler at uni-osnabrueck.de)
Date: Fri,  4 May 2007 16:13:16 +0200 (CEST)
Subject: [Rd] Bug in qr.R ? (PR#9655)
Message-ID: <20070504141316.A055862635@slim.kubism.ku.dk>

Ladies and Gentlemen,

using

 > A <- structure(c(1, 0, 0, 3, 2, 1, 4, 5, -3, -2, 1, 0), .Dim = 
as.integer(c(3,4)))

I get

 > dim(A)
[1] 3 4

 >  qr.R(qr(A),complete=TRUE)
     [,1]      [,2]      [,3]       [,4]
[1,]   -1 -3.000000 -4.000000  2.0000000
[2,]    0 -2.236068 -3.130495 -0.8944272
[3,]    0  0.000000 -4.919350 -0.4472136
 >  qr.R(qr(A),complete=FALSE)
     [,1]      [,2]      [,3]       [,4]
[1,]   -1 -3.000000 -4.000000  2.0000000
[2,]    0 -2.236068 -3.130495 -0.8944272
[3,]    0  0.000000 -4.919350 -0.4472136

In ?qr.R I find

/qr.R returns R. The number of rows of R is nrow(X) or ncol(X), 
depending on whether complete is TRUE or FALSE./

As you can see, the number of rows stays the same...
 
Thank you.

D. Trenkler

--please do not edit the information below--

Version:
 platform = i386-pc-mingw32
 arch = i386
 os = mingw32
 system = i386, mingw32
 status =
 major = 2
 minor = 5.0
 year = 2007
 month = 04
 day = 23
 svn rev = 41293
 language = R
 version.string = R version 2.5.0 (2007-04-23)

Windows XP (build 2600) Service Pack 2.0

Locale:
LC_COLLATE=English_United States.1252;LC_CTYPE=English_United 
States.1252;LC_MONETARY=English_United 
States.1252;LC_NUMERIC=C;LC_TIME=English_United States.1252

Search Path:
 .GlobalEnv, package:stats, package:graphics, package:grDevices, 
package:utils, package:datasets, package:methods, Autoloads, package:base

-- 
Dietrich Trenkler c/o Universitaet Osnabrueck 
Rolandstr. 8; D-49069 Osnabrueck, Germany    
email: Dietrich.Trenkler at Uni-Osnabrueck.de


From deepayan.sarkar at gmail.com  Fri May  4 21:43:24 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Fri, 4 May 2007 12:43:24 -0700
Subject: [Rd] Qt device update
In-Reply-To: <Pine.LNX.4.64.0705040627180.19693@gannet.stats.ox.ac.uk>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
	<Pine.LNX.4.64.0705040627180.19693@gannet.stats.ox.ac.uk>
Message-ID: <eb555e660705041243w5a82aea8t757355801eea269b@mail.gmail.com>

On 5/3/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> On Thu, 3 May 2007, Deepayan Sarkar wrote:
>
> > Hi,
> >
> > a few days back I had asked for help on a Qt device package. Thanks to
> > hints from Duncan TL and Thomas Friedrichsmeier, I now have something
> > more or less functional. For those interested, It can be downloaded
> > from
> >
> > http://dsarkar.fhcrc.org/R/R-Qt.html
> >
> > I have a couple of related questions. First, dev.interactive(), used
> > in example() and many demo()-s to decide if the current device is
> > interactive, is currently implemented as:
> >
> >> dev.interactive
> > function (orNone = FALSE)
> > {
> >    iDevs <- c("X11", "GTK", "gnome", "quartz", "windows", "JavaGD")
> >    interactive() && (.Device %in% iDevs || (orNone && .Device ==
> >        "null device" && getOption("device") %in% iDevs))
> > }
> >
> > This makes it impossible for new devices to be treated as interactive.
> > Perhaps it would be  better to change this to something like
> >
> >    iDevs <- c("X11", "GTK", "gnome", "quartz", "windows", "JavaGD",
> >               getOption("interactive.devices"))
> >
> > so that packages can set an option to be included in this list.
>
> That would work differently from any existing option, adding to the list.
> But it would make sense for package grDevices to have a function to
> request being added to the list.
>
> (If the device is already running we could use
> grDevices:::dev.displaylist() to ask if this looked like a screen device.)

I will be happy with anything that works. Given Simon's comments, it
looks like this might be non-trivial, so a short term solution could
be to add a ask= argument to demo() (like example() already has) and
remove the explicit overrides in the standard demos.

> > Second, can someone explain the details of what happens when a symbol
> > font is requested (with font=5 or with plotmath stuff)? demo(plotmath)
> > seems to work on a machine with LANG=en_US (I don't know what encoding
> > this means, probably latin1),
>
> If a Linux machine, yes, it is shorthand for en_US.iso88591.
> It could also mean ASCII and according to the standards (XPG?) probably
> should.
>
> > but some symbols don't work on my desktop which has en_US.UTF-8.
> > Presumably, this means I have to interpret the encoding differently, but
> > what exactly is the rule? Is it enough to treat it as latin1? Some
> > devices have a lot of code dealing with encodings, and I want to make
> > sure I understand the issues before I go off on a wild goose chase.
>
> The symbol font is regarded as being in Adobe Symbol encoding, which is an
> 8-bit encoding.  So you have to be careful to handle font 5 without
> re-encoding, but that's not hard at device level (the graphics engine has
> handled the re-encoding needed).

Ah, that's the piece I was missing. I was reencoding everything using
QString::fromLocal8bit(). If I skip that when fontface=5, things work
better. I do need it for other fontfaces to get multibyte encodings
working properly.

> If some symbols work and some do not, this is almost certainly a font
> selection issue.  If X11 is involved (and AFAIK the Qt implementations on
> Linux run on X11), you do need to ensure that getting a font in the
> desired encoding is given top priority (which can be hard to achieve in
> X11).

That may be a problem in general, but the only problem I see on (both)
my Linux machines after the above fix is that %prop% shows up as mu
(but Windows is fine). I'm not really sure what font is being used,
I'll try to track it down.

-Deepayan


From ripley at stats.ox.ac.uk  Fri May  4 23:09:58 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 4 May 2007 22:09:58 +0100 (BST)
Subject: [Rd] Qt device update
In-Reply-To: <7B29DCD1-E483-482B-8CCE-526305FE2E9F@r-project.org>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
	<7B29DCD1-E483-482B-8CCE-526305FE2E9F@r-project.org>
Message-ID: <Pine.LNX.4.64.0705042200220.29064@gannet.stats.ox.ac.uk>

On Fri, 4 May 2007, Simon Urbanek wrote:

>
> On May 3, 2007, at 8:52 PM, Deepayan Sarkar wrote:
>
>> [...] I have a couple of related questions. First, dev.interactive
>> (), used in example() and many demo()-s to decide if the current
>> device is interactive, is currently implemented as:
>>
>>> dev.interactive
>> function (orNone = FALSE)
>> {
>>     iDevs <- c("X11", "GTK", "gnome", "quartz", "windows", "JavaGD")
>>     interactive() && (.Device %in% iDevs || (orNone && .Device ==
>>         "null device" && getOption("device") %in% iDevs))
>> }
>>
>> This makes it impossible for new devices to be treated as interactive.
>
>
> I think we should finally pass this question to the device itself.
> For some devices like Cairo the answer depends on the parameters with
> which the device was created (e.g. type='x11' is interactive whereas
> type='png' is not), so each instance of the device will answer
> differently. We could simply add an another capability flag - that is
> IMHO the only reliable solution. Any other ideas?

Do we need a reliable solution?  The worst that happens that if R thinks a 
device is interactive and it is not, you get asked to go on to the next 
page a few times.

I've altered R-devel to look at the displaylist.  All the devices I knew 
had that enabled by default iff they are screen devices, but I've just 
looked at Cairo and it seems that could be a bit less dumb about its
setting.

You can't in general ask the device, as there might be no device open and 
you need to know what the device that would automatically opened will do. 
And you don't want to open it, as it might not be needed.  Allowing 
devices to say by name that they will be interactive is the only way 
anyone has come up with on this so far.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From deepayan.sarkar at gmail.com  Fri May  4 23:48:48 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Fri, 4 May 2007 14:48:48 -0700
Subject: [Rd] sending signals to embedded R
Message-ID: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>

Hi,

one thing I haven't been able to figure out from R-exts is how to
interrupt a calculation running inside an embedded R. C code inside R
calls R_CheckUserInterrupt() intermittently to check for interrupts,
but how does my GUI tell R that the user wants it interrupted?

-Deepayan


From ripley at stats.ox.ac.uk  Sat May  5 00:17:01 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 4 May 2007 23:17:01 +0100 (BST)
Subject: [Rd] sending signals to embedded R
In-Reply-To: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>

On Fri, 4 May 2007, Deepayan Sarkar wrote:

> one thing I haven't been able to figure out from R-exts is how to
> interrupt a calculation running inside an embedded R. C code inside R
> calls R_CheckUserInterrupt() intermittently to check for interrupts,
> but how does my GUI tell R that the user wants it interrupted?

Well, the intention is that you send an interrupt, which hardly needs to 
be in the manual.

But SIGINT is caught and used to set R_interrupts_pending = 1, so you 
could risk using that non-API entry point (and be prepared to have your 
GUI broken at any time).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From deepayan.sarkar at gmail.com  Sat May  5 00:34:48 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Fri, 4 May 2007 15:34:48 -0700
Subject: [Rd] sending signals to embedded R
In-Reply-To: <Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
Message-ID: <eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>

On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>
> > one thing I haven't been able to figure out from R-exts is how to
> > interrupt a calculation running inside an embedded R. C code inside R
> > calls R_CheckUserInterrupt() intermittently to check for interrupts,
> > but how does my GUI tell R that the user wants it interrupted?
>
> Well, the intention is that you send an interrupt, which hardly needs to
> be in the manual.

I didn't mean to imply that it does. I'm just new to signals and
things that should be obvious aren't.

Basically kill(2) seems to be the right thing to use, but I wasn't
sure what the PID needs to be. Turns out sending SIGINT to my GUI from
a shell interrupts R, so raise(SIGINT) should be enough.

-Deepayan


From luke at stat.uiowa.edu  Sat May  5 01:35:20 2007
From: luke at stat.uiowa.edu (Luke Tierney)
Date: Fri, 4 May 2007 18:35:20 -0500 (CDT)
Subject: [Rd] sending signals to embedded R
In-Reply-To: <eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>

On Fri, 4 May 2007, Deepayan Sarkar wrote:

> On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>
>>> one thing I haven't been able to figure out from R-exts is how to
>>> interrupt a calculation running inside an embedded R. C code inside R
>>> calls R_CheckUserInterrupt() intermittently to check for interrupts,
>>> but how does my GUI tell R that the user wants it interrupted?
>>
>> Well, the intention is that you send an interrupt, which hardly needs to
>> be in the manual.
>
> I didn't mean to imply that it does. I'm just new to signals and
> things that should be obvious aren't.
>
> Basically kill(2) seems to be the right thing to use, but I wasn't
> sure what the PID needs to be. Turns out sending SIGINT to my GUI from
> a shell interrupts R, so raise(SIGINT) should be enough.

The tricky bit here is figuring out who does the sending.  It you have
a separate thread/process for the GUI and R then that is fine (though
may raise other issues).  If it is a single thread then you need your
event processing to get an occasional look in to recognise the user
action that triggers an interrupt. The Windows version handles this by
having R_CheckUserInterrupt() do a limited amount of event processing
(you need to be careful in GUI events have R actions associated with
them).  I believe the Mac version is similar though it has been a
while since I looked at that. I don't believe the unix version of
R_CheckUserInterrupt() does not provide hooks for installing such
checking (we have talked about this off an on but I don't believe
anything happened -- could be wrong there though).

If Qt allows this one option may be to have events on your nterrupt
widget managed by a small thread that does nothing other than send a
signal to the main thread if the widget is clicked.

Best,

luke

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:      luke at stat.uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From spencer.graves at pdf.com  Sat May  5 04:20:04 2007
From: spencer.graves at pdf.com (Spencer Graves)
Date: Fri, 04 May 2007 19:20:04 -0700
Subject: [Rd] [R] factanal  AIC?
In-Reply-To: <20070503094645.121170@gmx.net>
References: <20070503094645.121170@gmx.net>
Message-ID: <463BE9D4.70808@pdf.com>

Dear R Developers: 

      What is the proper log(likelihood) for 'factanal'?  I believe it 
should be something like the following: 

      (-n/2)*(k*(log(2*pi)+1)+log(det(S)))

or without k*(log(2*pi)-1): 

      (-n/2)*log(det(S)),

where n = the number of (multivariate) observations. 

      The 'factanal' help file say the factanal component "criteria:  
The results of the optimization: the value of the negative 
log-likelihood and information on the iterations used." 

      However, I'm not able to get this.  If it's a log(likelihood), 
then replacing a data set m1 by rbind(m1, m1) should double the 
log(likelihood).  However it has no impact on it.  Consider the 
following modification of the first example in the 'factanal' help page: 

 >    v1 <- c(1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,4,5,6)
 >      v2 <- c(1,2,1,1,1,1,2,1,2,1,3,4,3,3,3,4,6,5)
 >      v3 <- c(3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,5,4,6)
 >      v4 <- c(3,3,4,3,3,1,1,2,1,1,1,1,2,1,1,5,6,4)
 >      v5 <- c(1,1,1,1,1,3,3,3,3,3,1,1,1,1,1,6,4,5)
 >      v6 <- c(1,1,1,2,1,3,3,3,4,3,1,1,1,2,1,6,5,4)
 >      m1 <- cbind(v1,v2,v3,v4,v5,v6)
 > tst <- factanal(m1, factors=3)
 > fit1 <- factanal(m1, factors=3)
 > fit2 <- factanal(rbind(m1, m1), factors=3)
 > fit1$criteria["objective"]
objective
0.4755156
 > fit2$criteria["objective"]
objective
0.4755156

      From the following example, it seems that the "k*(log(2*pi)-1) 
term is omitted: 

 > x2 <- c(-1,1)
 > X2.4 <- as.matrix(expand.grid(x2, x2, x2, x2))
 > factanal(X2.4, 1)$criteria
      objective counts.function counts.gradient
              0               7               7

      However, I can't get the 'fit1$criteria' above, even ignoring the 
sample size.  Consider the following: 

      > S3 <- tcrossprod(fit1$loadings)+diag(fit1$uniquenesses)
 > log(det(S3))
[1] -6.725685

      Shouldn't this be something closer to the 0.4755 for fit1$criteria? 

      Thanks,
      Spencer Graves

JENS:  For your purposes, I suggest you try to compute 
(-n/2)*log(det(tcrossprod(fit$loadings)+diag(fit$uniquenesses)).  If you 
do this, you might get more sensible results with your examples. 

      Hope this helps. 
      Spencer Graves

Jens Oehlschl?gel wrote:
> Dear list members,
>
> Could any expert on factor analysis be so kind to explain how to calculate AIC on the output of factanal. Do I calculate AIC wrong or is factanal$criteria["objective"] not a negative log-likelihood?
>
> Best regards
>
>
> Jens Oehlschl?gel
>
>
>
> The AIC calculated using summary.factanal below don't appear correct to me:
>
>       n items factors total.df rest.df model.df           LL       AIC      AICc       BIC
> 1  1000    20       1      210     170       40 -5.192975386  90.38595  93.80618  286.6962
> 2  1000    20       2      210     151       59 -3.474172303 124.94834 132.48026  414.5059
> 3  1000    20       3      210     133       77 -1.745821627 157.49164 170.51984  535.3888
> 4  1000    20       4      210     116       94 -0.120505369 188.24101 207.97582  649.5700
> 5  1000    20       5      210     100      110 -0.099209921 220.19842 247.66749  760.0515
> 6  1000    20       6      210      85      125 -0.072272695 250.14455 286.18574  863.6140
> 7  1000    20       7      210      71      139 -0.054668588 278.10934 323.36515  960.2873
> 8  1000    20       8      210      58      152 -0.041708051 304.08342 358.99723 1050.0622
> 9  1000    20       9      210      46      164 -0.028686298 328.05737 392.87174 1132.9292
> 10 1000    20      10      210      35      175 -0.015742783 350.03149 424.78877 1208.8887
> 11 1000    20      11      210      25      185 -0.007007901 370.01402 454.55947 1277.9487
> 12 1000    20      12      210      16      194 -0.005090725 388.01018 481.99776 1340.1147
>
>
> summary.factanal <- function(object, ...){
>   if (inherits(object, "try-error")){
>     c(n=NA, items=NA, factors=NA, total.df=NA, rest.df=NA, model.df=NA, LL=NA, AIC=NA, AICc=NA, BIC=NA)
>   }else{
>     n <- object$n.obs
>     p <- length(object$uniquenesses)
>     m <- object$factors
>     model.df <- (p*m) + (m*(m+1))/2 + p - m^2
>     total.df <- p*(p+1)/2
>     rest.df <- total.df - model.df # = object$dof
>     LL <- -as.vector(object$criteria["objective"])
>     k <- model.df
>     aic <- 2*k - 2*LL
>     aicc <- aic + (2*k*(k+1))/(n-k-1)
>     bic  <- k*log(n) - 2*LL
>     c(n=n, items=p, factors=m, total.df=total.df, rest.df=rest.df, model.df=model.df, LL=LL, AIC=aic, AICc=aicc, BIC=bic)
>   }
> }
>
> multifactanal <- function(factors=1:3, ...){
>   names(factors) <- factors
>   ret <- lapply(factors, function(factors){
>     try(factanal(factors=factors, ...))
>   })
>   class(ret) <- "multifactanal"
>   ret
> }
>
> summary.multifactanal <- function(object,...){
>   do.call("rbind", lapply(object, summary.factanal))
> }
>
> print.multifactanal <- function(x,...){
>   ret <- summary.multifactanal(x)
>   print(ret, ...)
>   invisible(ret)
> }
>
> # simulate a true 4-factor model
> n <- 1000
> ktrue <- 4
> kfac <- 5
> true <- matrix(rnorm(n*ktrue), ncol=ktrue)
> x <- matrix(rep(true, kfac)+rnorm(n*ktrue*kfac), ncol=ktrue*kfac)
> dimnames(x) <- list(NULL, paste(rep(letters[1:ktrue], kfac), rep(1:kfac, rep(ktrue, kfac)), sep=""))
> covmat <- cov.wt(x)
> # run factanal for several numbers of factors
> mf <- multifactanal(factors=1:12, covmat=covmat)
> mf
>
>
> version
>                _                           
> platform       i386-pc-mingw32             
> arch           i386                        
> os             mingw32                     
> system         i386, mingw32               
> status                                     
> major          2                           
> minor          5.0                         
> year           2007                        
> month          04                          
> day            23                          
> svn rev        41293                       
> language       R                           
> version.string R version 2.5.0 (2007-04-23)
>


From ripley at stats.ox.ac.uk  Sat May  5 10:09:55 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Sat,  5 May 2007 10:09:55 +0200 (CEST)
Subject: [Rd] Bug in qr.R ? (PR#9655)
Message-ID: <20070505080955.ED82E6264F@slim.kubism.ku.dk>

And the purported bug is what: you failed to say!  This looks most like a 
misreading on your part of the documentation.

The help page says:

complete: logical expression of length 1.  Indicates whether an
           arbitrary  orthogonal completion of the *Q* or *X* matrices
           is to be made, or whether the *R* matrix is to be completed
           by binding zero-value rows beneath the square upper triangle.

You only need to complete R for n < p, as in:

> A <- matrix(1:12, 4)
>
>  qr.R(qr(A),complete=TRUE)
           [,1]       [,2]          [,3]
[1,] -5.477226 -12.780193 -2.008316e+01
[2,]  0.000000  -3.265986 -6.531973e+00
[3,]  0.000000   0.000000  2.641083e-15
[4,]  0.000000   0.000000  0.000000e+00
>  qr.R(qr(A),complete=FALSE)
           [,1]       [,2]          [,3]
[1,] -5.477226 -12.780193 -2.008316e+01
[2,]  0.000000  -3.265986 -6.531973e+00
[3,]  0.000000   0.000000  2.641083e-15


On Fri, 4 May 2007, Dietrich.Trenkler at uni-osnabrueck.de wrote:

> Ladies and Gentlemen,
>
> using
>
> > A <- structure(c(1, 0, 0, 3, 2, 1, 4, 5, -3, -2, 1, 0), .Dim =
> as.integer(c(3,4)))
>
> I get
>
> > dim(A)
> [1] 3 4
>
> >  qr.R(qr(A),complete=TRUE)
>     [,1]      [,2]      [,3]       [,4]
> [1,]   -1 -3.000000 -4.000000  2.0000000
> [2,]    0 -2.236068 -3.130495 -0.8944272
> [3,]    0  0.000000 -4.919350 -0.4472136
> >  qr.R(qr(A),complete=FALSE)
>     [,1]      [,2]      [,3]       [,4]
> [1,]   -1 -3.000000 -4.000000  2.0000000
> [2,]    0 -2.236068 -3.130495 -0.8944272
> [3,]    0  0.000000 -4.919350 -0.4472136
>
> In ?qr.R I find
>
> /qr.R returns R. The number of rows of R is nrow(X) or ncol(X),
> depending on whether complete is TRUE or FALSE./
>
> As you can see, the number of rows stays the same...

But it says it is one of the two values, and that which depends on 
'complete' (but not that different values of 'complete' necessarily give 
different answers, just that they might).  You may have read this as if it 
said 'respectively', but it does not.

[...]

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Sat May  5 10:34:51 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 5 May 2007 09:34:51 +0100 (BST)
Subject: [Rd] sending signals to embedded R
In-Reply-To: <Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
Message-ID: <Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>

On Fri, 4 May 2007, Luke Tierney wrote:

> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>
>> On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>> 
>>>> one thing I haven't been able to figure out from R-exts is how to
>>>> interrupt a calculation running inside an embedded R. C code inside R
>>>> calls R_CheckUserInterrupt() intermittently to check for interrupts,
>>>> but how does my GUI tell R that the user wants it interrupted?
>>> 
>>> Well, the intention is that you send an interrupt, which hardly needs to
>>> be in the manual.
>> 
>> I didn't mean to imply that it does. I'm just new to signals and
>> things that should be obvious aren't.
>> 
>> Basically kill(2) seems to be the right thing to use, but I wasn't
>> sure what the PID needs to be. Turns out sending SIGINT to my GUI from
>> a shell interrupts R, so raise(SIGINT) should be enough.
>
> The tricky bit here is figuring out who does the sending.  It you have
> a separate thread/process for the GUI and R then that is fine (though
> may raise other issues).  If it is a single thread then you need your
> event processing to get an occasional look in to recognise the user
> action that triggers an interrupt. The Windows version handles this by
> having R_CheckUserInterrupt() do a limited amount of event processing
> (you need to be careful in GUI events have R actions associated with
> them).  I believe the Mac version is similar though it has been a

I was assuming that Deepayan's GUI (which seems to need Qt4, BTW, so I was 
unable to compile it) worked via the R-Unix eventloop, in which case it 
gets some CPU time from time to time.

gnomeGUI has an interrupt menu item with action 'onintr', which may well 
be what Deepayan is looking for: the only reason that package still exists 
is to provide example code.  (Not that it was ever properly integrated 
with the R event loop.)

If the issue is what happens when the user Ctrl-C's in the GUI console, 
that depends on what the GUI toolkit does with keyboard input: if it 
generates a SIGINT this should just work, but otherwise the keyboard 
handler needs to be told to call onintr() one way or another.


> while since I looked at that. I don't believe the unix version of
> R_CheckUserInterrupt() does not provide hooks for installing such
> checking (we have talked about this off an on but I don't believe
> anything happened -- could be wrong there though).
>
> If Qt allows this one option may be to have events on your nterrupt
> widget managed by a small thread that does nothing other than send a
> signal to the main thread if the widget is clicked.
>
> Best,
>
> luke
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From lawremi at iastate.edu  Sat May  5 14:01:03 2007
From: lawremi at iastate.edu (lawremi at iastate.edu)
Date: Sat,  5 May 2007 14:01:03 +0200 (CEST)
Subject: [Rd] rbind fails with zero row data.frame and non-data.frame
	(PR#9657)
Message-ID: <20070505120103.8903262651@slim.kubism.ku.dk>

Full_Name: Michael Lawrence
Version: 2.5.0
OS: Linux
Submission from: (NULL) (69.5.145.41)


With R 2.5.0, when trying to rbind a zero row data.frame to a 
non-data.frame (eg character vector), the following error is output:
Error in all.levs[[j]] : subscript out of bounds

Here is the code to reproduce the error:
rbind(data.frame(foo=character(0), bar=character(0)), c(foo="foo", bar="bar"))

It seems that the code assumes that it has at least one data.frame but 
the data.frame was filtered out at the beginning, because it had zero 
rows.

--please do not edit the information below--
Version:
 platform = i686-pc-linux-gnu
 arch = i686
 os = linux-gnu
 system = i686, linux-gnu
 status = 
 major = 2
 minor = 5.0
 year = 2007
 month = 04
 day = 23
 svn rev = 41293
 language = R
 version.string = R version 2.5.0 (2007-04-23)

Locale:
C

Search Path:
 .GlobalEnv, package:stats, package:graphics, package:grDevices, package:utils,
package:datasets, package:methods, Autoloads, package:base


From maechler at stat.math.ethz.ch  Sat May  5 16:04:46 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 5 May 2007 16:04:46 +0200
Subject: [Rd] Qt device update
In-Reply-To: <Pine.LNX.4.64.0705042200220.29064@gannet.stats.ox.ac.uk>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
	<7B29DCD1-E483-482B-8CCE-526305FE2E9F@r-project.org>
	<Pine.LNX.4.64.0705042200220.29064@gannet.stats.ox.ac.uk>
Message-ID: <17980.36606.321639.460692@stat.math.ethz.ch>

>>>>> "BDR" == Prof Brian Ripley <ripley at stats.ox.ac.uk>
>>>>>     on Fri, 4 May 2007 22:09:58 +0100 (BST) writes:

    BDR> On Fri, 4 May 2007, Simon Urbanek wrote:
    >>  On May 3, 2007, at 8:52 PM, Deepayan Sarkar wrote:
    >> 
    >>> [...] I have a couple of related questions. First,
    >>> dev.interactive (), used in example() and many demo()-s
    >>> to decide if the current device is interactive, is
    >>> currently implemented as:
    >>> 
    >>>> dev.interactive
    >>> function (orNone = FALSE) { iDevs <- c("X11", "GTK",
    >>> "gnome", "quartz", "windows", "JavaGD") interactive() &&
    >>> (.Device %in% iDevs || (orNone && .Device == "null
    >>> device" && getOption("device") %in% iDevs)) }
    >>> 
    >>> This makes it impossible for new devices to be treated
    >>> as interactive.
    >> 
    >> 
    >> I think we should finally pass this question to the
    >> device itself.  For some devices like Cairo the answer
    >> depends on the parameters with which the device was
    >> created (e.g. type='x11' is interactive whereas
    >> type='png' is not), so each instance of the device will
    >> answer differently. We could simply add an another
    >> capability flag - that is IMHO the only reliable
    >> solution. Any other ideas?

    BDR> Do we need a reliable solution?  The worst that happens
    BDR> that if R thinks a device is interactive and it is not,
    BDR> you get asked to go on to the next page a few times.

    BDR> I've altered R-devel to look at the displaylist.  All
    BDR> the devices I knew had that enabled by default iff they
    BDR> are screen devices, but I've just looked at Cairo and
    BDR> it seems that could be a bit less dumb about its
    BDR> setting.

    BDR> You can't in general ask the device, as there might be
    BDR> no device open and you need to know what the device
    BDR> that would automatically opened will do.  And you don't
    BDR> want to open it, as it might not be needed.  Allowing
    BDR> devices to say by name that they will be interactive is
    BDR> the only way anyone has come up with on this so far.

I agree (particularly about the very logical reason above).
But I tend to agree with Deepayan, that
we should give the useR / programmeR a way to just add a name to
that list (well "readably", i.e. with a selfexplainable function
call).
Even for Cairo, the useR can add "cairo" to that
list when she knows that cairo will be called in X11-mode; or
maybe the cairo "initialization/setup" code code do that
automatically when it's loaded..

Martin


From ripley at stats.ox.ac.uk  Sat May  5 16:22:30 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 5 May 2007 15:22:30 +0100 (BST)
Subject: [Rd] Qt device update
In-Reply-To: <17980.36606.321639.460692@stat.math.ethz.ch>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
	<7B29DCD1-E483-482B-8CCE-526305FE2E9F@r-project.org>
	<Pine.LNX.4.64.0705042200220.29064@gannet.stats.ox.ac.uk>
	<17980.36606.321639.460692@stat.math.ethz.ch>
Message-ID: <Pine.LNX.4.64.0705051521050.15149@gannet.stats.ox.ac.uk>

On Sat, 5 May 2007, Martin Maechler wrote:

>>>>>> "BDR" == Prof Brian Ripley <ripley at stats.ox.ac.uk>
>>>>>>     on Fri, 4 May 2007 22:09:58 +0100 (BST) writes:
>
>    BDR> On Fri, 4 May 2007, Simon Urbanek wrote:
>    >>  On May 3, 2007, at 8:52 PM, Deepayan Sarkar wrote:
>    >>
>    >>> [...] I have a couple of related questions. First,
>    >>> dev.interactive (), used in example() and many demo()-s
>    >>> to decide if the current device is interactive, is
>    >>> currently implemented as:
>    >>>
>    >>>> dev.interactive
>    >>> function (orNone = FALSE) { iDevs <- c("X11", "GTK",
>    >>> "gnome", "quartz", "windows", "JavaGD") interactive() &&
>    >>> (.Device %in% iDevs || (orNone && .Device == "null
>    >>> device" && getOption("device") %in% iDevs)) }
>    >>>
>    >>> This makes it impossible for new devices to be treated
>    >>> as interactive.
>    >>
>    >>
>    >> I think we should finally pass this question to the
>    >> device itself.  For some devices like Cairo the answer
>    >> depends on the parameters with which the device was
>    >> created (e.g. type='x11' is interactive whereas
>    >> type='png' is not), so each instance of the device will
>    >> answer differently. We could simply add an another
>    >> capability flag - that is IMHO the only reliable
>    >> solution. Any other ideas?
>
>    BDR> Do we need a reliable solution?  The worst that happens
>    BDR> that if R thinks a device is interactive and it is not,
>    BDR> you get asked to go on to the next page a few times.
>
>    BDR> I've altered R-devel to look at the displaylist.  All
>    BDR> the devices I knew had that enabled by default iff they
>    BDR> are screen devices, but I've just looked at Cairo and
>    BDR> it seems that could be a bit less dumb about its
>    BDR> setting.
>
>    BDR> You can't in general ask the device, as there might be
>    BDR> no device open and you need to know what the device
>    BDR> that would automatically opened will do.  And you don't
>    BDR> want to open it, as it might not be needed.  Allowing
>    BDR> devices to say by name that they will be interactive is
>    BDR> the only way anyone has come up with on this so far.
>
> I agree (particularly about the very logical reason above).
> But I tend to agree with Deepayan, that
> we should give the useR / programmeR a way to just add a name to
> that list (well "readably", i.e. with a selfexplainable function
> call).

You meam as in

     o	dev.interactive() regards devices with the displaylist enabled
 	as interactive, and packages can register the names of their
 	devices as interactive via deviceIsInteractive().

?

> Even for Cairo, the useR can add "cairo" to that
> list when she knows that cairo will be called in X11-mode; or
> maybe the cairo "initialization/setup" code code do that
> automatically when it's loaded..
>
> Martin
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From maechler at stat.math.ethz.ch  Sat May  5 16:49:34 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 5 May 2007 16:49:34 +0200
Subject: [Rd] Qt device update
In-Reply-To: <Pine.LNX.4.64.0705051521050.15149@gannet.stats.ox.ac.uk>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
	<7B29DCD1-E483-482B-8CCE-526305FE2E9F@r-project.org>
	<Pine.LNX.4.64.0705042200220.29064@gannet.stats.ox.ac.uk>
	<17980.36606.321639.460692@stat.math.ethz.ch>
	<Pine.LNX.4.64.0705051521050.15149@gannet.stats.ox.ac.uk>
Message-ID: <17980.39294.227859.385880@stat.math.ethz.ch>

>>>>> "BDR" == Prof Brian Ripley <ripley at stats.ox.ac.uk>
>>>>>     on Sat, 5 May 2007 15:22:30 +0100 (BST) writes:

    BDR> On Sat, 5 May 2007, Martin Maechler wrote:
    >>>>>>> "BDR" == Prof Brian Ripley <ripley at stats.ox.ac.uk>
    >>>>>>> on Fri, 4 May 2007 22:09:58 +0100 (BST) writes:
    >>
    BDR> On Fri, 4 May 2007, Simon Urbanek wrote:
    >> >> On May 3, 2007, at 8:52 PM, Deepayan Sarkar wrote:
    >> >>
    >> >>> [...] I have a couple of related questions. First,
    >> >>> dev.interactive (), used in example() and many
    >> demo()-s >>> to decide if the current device is
    >> interactive, is >>> currently implemented as:
    >> >>>
    >> >>>> dev.interactive >>> function (orNone = FALSE) {
    >> iDevs <- c("X11", "GTK", >>> "gnome", "quartz",
    >> "windows", "JavaGD") interactive() && >>> (.Device %in%
    >> iDevs || (orNone && .Device == "null >>> device" &&
    >> getOption("device") %in% iDevs)) }
    >> >>>
    >> >>> This makes it impossible for new devices to be
    >> treated >>> as interactive.
    >> >>
    >> >>
    >> >> I think we should finally pass this question to the >>
    >> device itself.  For some devices like Cairo the answer >>
    >> depends on the parameters with which the device was >>
    >> created (e.g. type='x11' is interactive whereas >>
    >> type='png' is not), so each instance of the device will
    >> >> answer differently. We could simply add an another >>
    >> capability flag - that is IMHO the only reliable >>
    >> solution. Any other ideas?
    >> 
    BDR> Do we need a reliable solution?  The worst that happens
    BDR> that if R thinks a device is interactive and it is not,
    BDR> you get asked to go on to the next page a few times.
    >>
    BDR> I've altered R-devel to look at the displaylist.  All
    BDR> the devices I knew had that enabled by default iff they
    BDR> are screen devices, but I've just looked at Cairo and
    BDR> it seems that could be a bit less dumb about its
    BDR> setting.
    >>
    BDR> You can't in general ask the device, as there might be
    BDR> no device open and you need to know what the device
    BDR> that would automatically opened will do.  And you don't
    BDR> want to open it, as it might not be needed.  Allowing
    BDR> devices to say by name that they will be interactive is
    BDR> the only way anyone has come up with on this so far.
    >>  I agree (particularly about the very logical reason
    >> above).  But I tend to agree with Deepayan, that we
    >> should give the useR / programmeR a way to just add a
    >> name to that list (well "readably", i.e. with a
    >> selfexplainable function call).

    BDR> You meam as in

    BDR>      o dev.interactive() regards devices with the
    BDR> displaylist enabled as interactive, and packages can
    BDR> register the names of their devices as interactive via
    BDR> deviceIsInteractive().

    BDR> ?

Yes, indeed... you are moving faster than I do thinking ;-)

Martin

    >> Even for Cairo, the useR can add "cairo" to that list
    >> when she knows that cairo will be called in X11-mode; or
    >> maybe the cairo "initialization/setup" code code do that
    >> automatically when it's loaded..
    >> 
    >> Martin
    >> 

    BDR> -- Brian D. Ripley, ripley at stats.ox.ac.uk Professor of
    BDR> Applied Statistics, http://www.stats.ox.ac.uk/~ripley/
    BDR> University of Oxford, Tel: +44 1865 272861 (self) 1
    BDR> South Parks Road, +44 1865 272866 (PA) Oxford OX1 3TG,
    BDR> UK Fax: +44 1865 272595


From luke at stat.uiowa.edu  Sat May  5 17:37:09 2007
From: luke at stat.uiowa.edu (Luke Tierney)
Date: Sat, 5 May 2007 10:37:09 -0500 (CDT)
Subject: [Rd] sending signals to embedded R
In-Reply-To: <Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>
Message-ID: <Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org>

On Sat, 5 May 2007, Prof Brian Ripley wrote:

> On Fri, 4 May 2007, Luke Tierney wrote:
>
>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>> 
>>> On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>>> 
>>>>> one thing I haven't been able to figure out from R-exts is how to
>>>>> interrupt a calculation running inside an embedded R. C code inside R
>>>>> calls R_CheckUserInterrupt() intermittently to check for interrupts,
>>>>> but how does my GUI tell R that the user wants it interrupted?
>>>> 
>>>> Well, the intention is that you send an interrupt, which hardly needs to
>>>> be in the manual.
>>> 
>>> I didn't mean to imply that it does. I'm just new to signals and
>>> things that should be obvious aren't.
>>> 
>>> Basically kill(2) seems to be the right thing to use, but I wasn't
>>> sure what the PID needs to be. Turns out sending SIGINT to my GUI from
>>> a shell interrupts R, so raise(SIGINT) should be enough.
>> 
>> The tricky bit here is figuring out who does the sending.  It you have
>> a separate thread/process for the GUI and R then that is fine (though
>> may raise other issues).  If it is a single thread then you need your
>> event processing to get an occasional look in to recognise the user
>> action that triggers an interrupt. The Windows version handles this by
>> having R_CheckUserInterrupt() do a limited amount of event processing
>> (you need to be careful in GUI events have R actions associated with
>> them).  I believe the Mac version is similar though it has been a
>
> I was assuming that Deepayan's GUI (which seems to need Qt4, BTW, so I was 
> unable to compile it) worked via the R-Unix eventloop, in which case it gets 
> some CPU time from time to time.

I was assuming that as well.  But my recollection is that on unix the
event loop is only run from within the console reader.  On Windows
(and Mac OS X I believe) some event processing also happens in
R_CheckUserInterrupt(); on Windows there is also some more in some
blocking library calls, like socket reads as I recall.  But unless
things have changed since I last looked none of that happens on unix.

>
> gnomeGUI has an interrupt menu item with action 'onintr', which may well be 
> what Deepayan is looking for: the only reason that package still exists is to 
> provide example code.  (Not that it was ever properly integrated with the R 
> event loop.)

It does have some sort of interrupt device (I can't recall if it is a
menu item or a butto and I can't seem to build a working gnomeGUI to
check). And I believe if you try to use that item (or button?) during
a long-running computation you can't because the events won't be
looked at until R gets back to a console read, at which point the
events will be processed and you jump to the top level (where you
already are).

>
> If the issue is what happens when the user Ctrl-C's in the GUI console, that 
> depends on what the GUI toolkit does with keyboard input: if it generates a 
> SIGINT this should just work, but otherwise the keyboard handler needs to be 
> told to call onintr() one way or another.

Again only if the GUI gets a chance to look at the keyboard input,
which I don't think we currently give it.

The UI provided by a shell running in a separate process may not have
a 'G' but it does have its advantages :-)

Best,

luke

>> while since I looked at that. I don't believe the unix version of
>> R_CheckUserInterrupt() does not provide hooks for installing such
>> checking (we have talked about this off an on but I don't believe
>> anything happened -- could be wrong there though).
>> 
>> If Qt allows this one option may be to have events on your nterrupt
>> widget managed by a small thread that does nothing other than send a
>> signal to the main thread if the widget is clicked.
>> 
>> Best,
>> 
>> luke
>> 
>> 
>
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:      luke at stat.uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From ripley at stats.ox.ac.uk  Sat May  5 19:09:39 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 5 May 2007 18:09:39 +0100 (BST)
Subject: [Rd] sending signals to embedded R
In-Reply-To: <Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org>
Message-ID: <Pine.LNX.4.64.0705051758140.5930@auk.stats>

On Sat, 5 May 2007, Luke Tierney wrote:

> On Sat, 5 May 2007, Prof Brian Ripley wrote:
>
>> On Fri, 4 May 2007, Luke Tierney wrote:
>> 
>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>> 
>>>> On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>>>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>>>> 
>>>>>> one thing I haven't been able to figure out from R-exts is how to
>>>>>> interrupt a calculation running inside an embedded R. C code inside R
>>>>>> calls R_CheckUserInterrupt() intermittently to check for interrupts,
>>>>>> but how does my GUI tell R that the user wants it interrupted?
>>>>> 
>>>>> Well, the intention is that you send an interrupt, which hardly needs 
>>>>> to
>>>>> be in the manual.
>>>> 
>>>> I didn't mean to imply that it does. I'm just new to signals and
>>>> things that should be obvious aren't.
>>>> 
>>>> Basically kill(2) seems to be the right thing to use, but I wasn't
>>>> sure what the PID needs to be. Turns out sending SIGINT to my GUI from
>>>> a shell interrupts R, so raise(SIGINT) should be enough.
>>> 
>>> The tricky bit here is figuring out who does the sending.  It you have
>>> a separate thread/process for the GUI and R then that is fine (though
>>> may raise other issues).  If it is a single thread then you need your
>>> event processing to get an occasional look in to recognise the user
>>> action that triggers an interrupt. The Windows version handles this by
>>> having R_CheckUserInterrupt() do a limited amount of event processing
>>> (you need to be careful in GUI events have R actions associated with
>>> them).  I believe the Mac version is similar though it has been a
>> 
>> I was assuming that Deepayan's GUI (which seems to need Qt4, BTW, so I was 
>> unable to compile it) worked via the R-Unix eventloop, in which case it 
>> gets some CPU time from time to time.
>
> I was assuming that as well.  But my recollection is that on unix the
> event loop is only run from within the console reader.  On Windows
> (and Mac OS X I believe) some event processing also happens in
> R_CheckUserInterrupt(); on Windows there is also some more in some
> blocking library calls, like socket reads as I recall.  But unless
> things have changed since I last looked none of that happens on unix.
>
>> 
>> gnomeGUI has an interrupt menu item with action 'onintr', which may well 
>> be what Deepayan is looking for: the only reason that package still exists 
>> is to provide example code.  (Not that it was ever properly integrated 
>> with the R event loop.)
>
> It does have some sort of interrupt device (I can't recall if it is a
> menu item or a butto and I can't seem to build a working gnomeGUI to
> check). And I believe if you try to use that item (or button?) during
> a long-running computation you can't because the events won't be
> looked at until R gets back to a console read, at which point the
> events will be processed and you jump to the top level (where you
> already are).

That belief is correct (it has a menu item and a button), but my final 
parenthetical remark was that gnomeGUI was not wedged into the event loop.

>> If the issue is what happens when the user Ctrl-C's in the GUI console, 
>> that depends on what the GUI toolkit does with keyboard input: if it 
>> generates a SIGINT this should just work, but otherwise the keyboard 
>> handler needs to be told to call onintr() one way or another.
>
> Again only if the GUI gets a chance to look at the keyboard input,
> which I don't think we currently give it.

We builtin the ability for a front-end to register handlers with the R 
event loop, including a polling handler (and that is how we can have a 
Tcl/Tk front end).  That postdates gnomeGUI, which runs the Gtk 
event-loop, not R's.

So my assumption 'worked via the R-Unix eventloop' was that a handler 
(probably a polling handler) had been wedged in the eventloop.
That was in contrast to running under a separate thread.

> The UI provided by a shell running in a separate process may not have
> a 'G' but it does have its advantages :-)

Or a separate thread, as Rterm.exe does.  Really RGui should also run in a 
separate thread, but when Guido did so, it did not work under Windows 95: 
if we ever give up support for pre-NT Windows I will take a look again at 
this.

I guess my underlying point is that rather than run the GUI from 
R_ProcessEvents (as RGui is), on Unix you can run it from an eventloop 
handler.

Brian

>
> Best,
>
> luke
>
>>> while since I looked at that. I don't believe the unix version of
>>> R_CheckUserInterrupt() does not provide hooks for installing such
>>> checking (we have talked about this off an on but I don't believe
>>> anything happened -- could be wrong there though).
>>> 
>>> If Qt allows this one option may be to have events on your nterrupt
>>> widget managed by a small thread that does nothing other than send a
>>> signal to the main thread if the widget is clicked.
>>> 
>>> Best,
>>> 
>>> luke
>>> 
>>> 
>> 
>> 
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From luke at stat.uiowa.edu  Sat May  5 19:40:23 2007
From: luke at stat.uiowa.edu (Luke Tierney)
Date: Sat, 5 May 2007 12:40:23 -0500 (CDT)
Subject: [Rd] sending signals to embedded R
In-Reply-To: <Pine.LNX.4.64.0705051758140.5930@auk.stats>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705051758140.5930@auk.stats>
Message-ID: <Pine.OSX.4.61.0705051231050.608@luke-tierneys-computer-3.local>

On Sat, 5 May 2007, Prof Brian Ripley wrote:

> On Sat, 5 May 2007, Luke Tierney wrote:
>
>> On Sat, 5 May 2007, Prof Brian Ripley wrote:
>> 
>>> On Fri, 4 May 2007, Luke Tierney wrote:
>>> 
>>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>>> 
>>>>> On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>>>>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>>>>> 
>>>>>>> one thing I haven't been able to figure out from R-exts is how to
>>>>>>> interrupt a calculation running inside an embedded R. C code inside R
>>>>>>> calls R_CheckUserInterrupt() intermittently to check for interrupts,
>>>>>>> but how does my GUI tell R that the user wants it interrupted?
>>>>>> 
>>>>>> Well, the intention is that you send an interrupt, which hardly needs 
>>>>>> to
>>>>>> be in the manual.
>>>>> 
>>>>> I didn't mean to imply that it does. I'm just new to signals and
>>>>> things that should be obvious aren't.
>>>>> 
>>>>> Basically kill(2) seems to be the right thing to use, but I wasn't
>>>>> sure what the PID needs to be. Turns out sending SIGINT to my GUI from
>>>>> a shell interrupts R, so raise(SIGINT) should be enough.
>>>> 
>>>> The tricky bit here is figuring out who does the sending.  It you have
>>>> a separate thread/process for the GUI and R then that is fine (though
>>>> may raise other issues).  If it is a single thread then you need your
>>>> event processing to get an occasional look in to recognise the user
>>>> action that triggers an interrupt. The Windows version handles this by
>>>> having R_CheckUserInterrupt() do a limited amount of event processing
>>>> (you need to be careful in GUI events have R actions associated with
>>>> them).  I believe the Mac version is similar though it has been a
>>> 
>>> I was assuming that Deepayan's GUI (which seems to need Qt4, BTW, so I was 
>>> unable to compile it) worked via the R-Unix eventloop, in which case it 
>>> gets some CPU time from time to time.
>> 
>> I was assuming that as well.  But my recollection is that on unix the
>> event loop is only run from within the console reader.  On Windows
>> (and Mac OS X I believe) some event processing also happens in
>> R_CheckUserInterrupt(); on Windows there is also some more in some
>> blocking library calls, like socket reads as I recall.  But unless
>> things have changed since I last looked none of that happens on unix.
>> 
>>> 
>>> gnomeGUI has an interrupt menu item with action 'onintr', which may well 
>>> be what Deepayan is looking for: the only reason that package still exists 
>>> is to provide example code.  (Not that it was ever properly integrated 
>>> with the R event loop.)
>> 
>> It does have some sort of interrupt device (I can't recall if it is a
>> menu item or a butto and I can't seem to build a working gnomeGUI to
>> check). And I believe if you try to use that item (or button?) during
>> a long-running computation you can't because the events won't be
>> looked at until R gets back to a console read, at which point the
>> events will be processed and you jump to the top level (where you
>> already are).
>
> That belief is correct (it has a menu item and a button), but my final 
> parenthetical remark was that gnomeGUI was not wedged into the event loop.
>
>>> If the issue is what happens when the user Ctrl-C's in the GUI console, 
>>> that depends on what the GUI toolkit does with keyboard input: if it 
>>> generates a SIGINT this should just work, but otherwise the keyboard 
>>> handler needs to be told to call onintr() one way or another.
>> 
>> Again only if the GUI gets a chance to look at the keyboard input,
>> which I don't think we currently give it.
>
> We builtin the ability for a front-end to register handlers with the R event 
> loop, including a polling handler (and that is how we can have a Tcl/Tk front 
> end).  That postdates gnomeGUI, which runs the Gtk event-loop, not R's.
>

I had forgotten about that -- thanks for the reminder.

However, R_PolledEvents is only called from a limited set of places
now (including the socket reading code to keep things responsive
during blocking reads).  But it is not called from the interupt
checking code, which means if a user does something equivalent to

    while (TRUE) {}

there is not point where events get looked at to see a user interrupt
action. The current definition of R_CheckUserInterrupt is

void R_CheckUserInterrupt(void)
{
     R_CheckStack();
     /* This is the point where GUI systems need to do enough event
        processing to determine whether there is a user interrupt event
        pending.  Need to be careful not to do too much event
        processing though: if event handlers written in R are allowed
        to run at this point then we end up with concurrent R
        evaluations and that can cause problems until we have proper
        concurrency support. LT */
#if  ( defined(HAVE_AQUA) || defined(Win32) )
     R_ProcessEvents();
#else
     if (R_interrupts_pending)
         onintr();
#endif /* Win32 */
}

So only on Windows or Mac do we do event processing.  We could add a
R_PolledEvents() call in the #else bit to support this, though the
cautions in the comment do need to be kept in mind.

Best,

luke

> So my assumption 'worked via the R-Unix eventloop' was that a handler 
> (probably a polling handler) had been wedged in the eventloop.
> That was in contrast to running under a separate thread.
>
>> The UI provided by a shell running in a separate process may not have
>> a 'G' but it does have its advantages :-)
>
> Or a separate thread, as Rterm.exe does.  Really RGui should also run in a 
> separate thread, but when Guido did so, it did not work under Windows 95: if 
> we ever give up support for pre-NT Windows I will take a look again at this.
>
> I guess my underlying point is that rather than run the GUI from 
> R_ProcessEvents (as RGui is), on Unix you can run it from an eventloop 
> handler.
>
> Brian
>
>> 
>> Best,
>> 
>> luke
>> 
>>>> while since I looked at that. I don't believe the unix version of
>>>> R_CheckUserInterrupt() does not provide hooks for installing such
>>>> checking (we have talked about this off an on but I don't believe
>>>> anything happened -- could be wrong there though).
>>>> 
>>>> If Qt allows this one option may be to have events on your nterrupt
>>>> widget managed by a small thread that does nothing other than send a
>>>> signal to the main thread if the widget is clicked.
>>>> 
>>>> Best,
>>>> 
>>>> luke
>>>> 
>>>> 
>>> 
>>> 
>> 
>> 
>
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:      luke at stat.uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From ripley at stats.ox.ac.uk  Sat May  5 20:26:21 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 5 May 2007 19:26:21 +0100 (BST)
Subject: [Rd] Building R on Solaris
Message-ID: <Pine.LNX.4.64.0705051900390.3387@gannet.stats.ox.ac.uk>

This comes up on R-help from time to time, so I am putting this message in 
the archives that may be helpful to refer back to.

We have just got a brand-new Sun Solaris 10 box: this is a Sparc server to 
be the first of a clustered pair (our file/mail server), and we will also 
be buying an Opteron server.

The good news is that things worked very smoothly with Solaris 10.
The bad news is that libsunperf is just as broken as in 2002 and the
consequences are worse.  So just avoid it!

We don't know what Solaris 10 boxes normally ship with, but our supplier
(an academic specialist reseller) had loaded ours with

Sun Studio 11 compilers (which are now a free download).
A set of Open Source tools from www.sunfreeware.com in /usr/sfw.
A large set of Open Source tools in /opt/csw.

The latter was new to me, and uses a repository at www.blastwave.org and a 
nifty tool called 'pkg-get'.  My sysadmin (who has an HP-UX and Debian 
bias) thought this was the best he had seen, ahead of apt-get and yum, for 
example.  This box already had everything I needed to build R, including 
gcc3, gcc4, libreadline and libiconv.

pkg-get is at http://www.bolthole.com/solaris/pkg-get.html if it was not 
already installed.

As far as I can tell, OpenSolaris aka Solaris Express Community Edition 
aka 'Solaris 11' can be built to have the same set of tools.  (We will 
probably do so on an older box in due course.)

I've written up what we needed to do in the 'R Installation and 
Administration Manual' for R-patched and R-devel.   Some trickery with 
paths was needed for some of the builds (but not to run: these tools are 
set up using ld -R to get the correct run-time library paths and run a 
mixed 64-and 32-bit OS with three different compiler sets very smoothly).


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From elw at stderr.org  Sat May  5 22:43:33 2007
From: elw at stderr.org (elw at stderr.org)
Date: Sat, 5 May 2007 15:43:33 -0500 (CDT)
Subject: [Rd] Building R on Solaris
In-Reply-To: <Pine.LNX.4.64.0705051900390.3387@gannet.stats.ox.ac.uk>
References: <Pine.LNX.4.64.0705051900390.3387@gannet.stats.ox.ac.uk>
Message-ID: <Pine.LNX.4.64.0705051542470.26416@illuminati.stderr.org>


> Sun Studio 11 compilers (which are now a free download).
> A set of Open Source tools from www.sunfreeware.com in /usr/sfw.
> A large set of Open Source tools in /opt/csw.
>
> The latter was new to me, and uses a repository at www.blastwave.org and 
> a nifty tool called 'pkg-get'.  My sysadmin (who has an HP-UX and Debian 
> bias) thought this was the best he had seen, ahead of apt-get and yum, 
> for example.  This box already had everything I needed to build R, 
> including


Your sysadmin will change his mind the first time that blastwave packages 
totally f*ck one of his machines.  They're usually a bit stale.  Building 
your own kit is much more reliable...

--elijah


From ripley at stats.ox.ac.uk  Sun May  6 09:04:44 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sun, 6 May 2007 08:04:44 +0100 (BST)
Subject: [Rd] (PR#9657) rbind fails with zero row data.frame and
 non-data.frame
In-Reply-To: <20070505120103.8903262651@slim.kubism.ku.dk>
References: <20070505120103.8903262651@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0705060801380.5018@gannet.stats.ox.ac.uk>

Thank you, fixed in 2.5.0 patched:

> A <- data.frame(foo=character(0), bar=character(0))
> rbind(A, c(foo="a", bar="b"))
   X.a. X.b.
1    a    b

Note though that rbind-ing a character vector to a data frame does not in 
general work well:

> A <- data.frame(foo=character(2), bar=character(2))
> rbind(A, c(foo="a", bar="b"))
    foo  bar
1
2
3 <NA> <NA>
Warning messages:
1: invalid factor level, NAs generated in: `[<-.factor`(`*tmp*`, ri, value 
= "a")
2: invalid factor level, NAs generated in: `[<-.factor`(`*tmp*`, ri, value 
= "b")

and I am not sure that one should expect it to do so.


On Sat, 5 May 2007, lawremi at iastate.edu wrote:

> Full_Name: Michael Lawrence
> Version: 2.5.0
> OS: Linux
> Submission from: (NULL) (69.5.145.41)
>
>
> With R 2.5.0, when trying to rbind a zero row data.frame to a
> non-data.frame (eg character vector), the following error is output:
> Error in all.levs[[j]] : subscript out of bounds
>
> Here is the code to reproduce the error:
> rbind(data.frame(foo=character(0), bar=character(0)), c(foo="foo", bar="bar"))
>
> It seems that the code assumes that it has at least one data.frame but
> the data.frame was filtered out at the beginning, because it had zero
> rows.
>
> --please do not edit the information below--
> Version:
> platform = i686-pc-linux-gnu
> arch = i686
> os = linux-gnu
> system = i686, linux-gnu
> status =
> major = 2
> minor = 5.0
> year = 2007
> month = 04
> day = 23
> svn rev = 41293
> language = R
> version.string = R version 2.5.0 (2007-04-23)
>
> Locale:
> C
>
> Search Path:
> .GlobalEnv, package:stats, package:graphics, package:grDevices, package:utils,
> package:datasets, package:methods, Autoloads, package:base
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From deepayan.sarkar at gmail.com  Sun May  6 20:29:50 2007
From: deepayan.sarkar at gmail.com (deepayan.sarkar at gmail.com)
Date: Sun, 6 May 2007 13:29:50 -0500
Subject: [Rd] sending signals to embedded R
In-Reply-To: <Pine.OSX.4.61.0705051231050.608@luke-tierneys-computer-3.local>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705051758140.5930@auk.stats>
	<Pine.OSX.4.61.0705051231050.608@luke-tierneys-computer-3.local>
Message-ID: <eb555e660705061129p360419c9ub116a8c33005dd0d@mail.gmail.com>

On 5/5/07, Luke Tierney <luke at stat.uiowa.edu> wrote:
> On Sat, 5 May 2007, Prof Brian Ripley wrote:
>
> > On Sat, 5 May 2007, Luke Tierney wrote:
> >
> >> On Sat, 5 May 2007, Prof Brian Ripley wrote:
> >>
> >>> On Fri, 4 May 2007, Luke Tierney wrote:
> >>>
> >>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
> >>>>
> >>>>> On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> >>>>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
> >>>>>>
> >>>>>>> one thing I haven't been able to figure out from R-exts is how to
> >>>>>>> interrupt a calculation running inside an embedded R. C code inside
> R
> >>>>>>> calls R_CheckUserInterrupt() intermittently to check for interrupts,
> >>>>>>> but how does my GUI tell R that the user wants it interrupted?
> >>>>>>
> >>>>>> Well, the intention is that you send an interrupt, which hardly needs
> >>>>>> to
> >>>>>> be in the manual.
> >>>>>
> >>>>> I didn't mean to imply that it does. I'm just new to signals and
> >>>>> things that should be obvious aren't.
> >>>>>
> >>>>> Basically kill(2) seems to be the right thing to use, but I wasn't
> >>>>> sure what the PID needs to be. Turns out sending SIGINT to my GUI from
> >>>>> a shell interrupts R, so raise(SIGINT) should be enough.
> >>>>
> >>>> The tricky bit here is figuring out who does the sending.  It you have
> >>>> a separate thread/process for the GUI and R then that is fine (though
> >>>> may raise other issues).  If it is a single thread then you need your
> >>>> event processing to get an occasional look in to recognise the user
> >>>> action that triggers an interrupt. The Windows version handles this by
> >>>> having R_CheckUserInterrupt() do a limited amount of event processing
> >>>> (you need to be careful in GUI events have R actions associated with
> >>>> them).  I believe the Mac version is similar though it has been a
> >>>
> >>> I was assuming that Deepayan's GUI (which seems to need Qt4, BTW, so I
> was
> >>> unable to compile it)

Why is that a problem? As far as I can tell, Qt4 can peacefully
coexist with Qt3, and while compiling you just need to use the right
qmake (this is currently hardcoded in the configure script
unfortunately).

Qt4 has been around for a while now, and it's GPL on Windows/Mac as
well as X11, so it seemed like the natural choice.

> >>> worked via the R-Unix eventloop, in which case it
> >>> gets some CPU time from time to time.
> >>
> >> I was assuming that as well.  But my recollection is that on unix the
> >> event loop is only run from within the console reader.  On Windows
> >> (and Mac OS X I believe) some event processing also happens in
> >> R_CheckUserInterrupt(); on Windows there is also some more in some
> >> blocking library calls, like socket reads as I recall.  But unless
> >> things have changed since I last looked none of that happens on unix.
> >>
> >>>
> >>> gnomeGUI has an interrupt menu item with action 'onintr', which may well
> >>> be what Deepayan is looking for: the only reason that package still
> exists
> >>> is to provide example code.  (Not that it was ever properly integrated
> >>> with the R event loop.)
> >>
> >> It does have some sort of interrupt device (I can't recall if it is a
> >> menu item or a butto and I can't seem to build a working gnomeGUI to
> >> check). And I believe if you try to use that item (or button?) during
> >> a long-running computation you can't because the events won't be
> >> looked at until R gets back to a console read, at which point the
> >> events will be processed and you jump to the top level (where you
> >> already are).
> >
> > That belief is correct (it has a menu item and a button), but my final
> > parenthetical remark was that gnomeGUI was not wedged into the event loop.
> >
> >>> If the issue is what happens when the user Ctrl-C's in the GUI console,
> >>> that depends on what the GUI toolkit does with keyboard input: if it
> >>> generates a SIGINT this should just work, but otherwise the keyboard
> >>> handler needs to be told to call onintr() one way or another.
> >>
> >> Again only if the GUI gets a chance to look at the keyboard input,
> >> which I don't think we currently give it.
> >
> > We builtin the ability for a front-end to register handlers with the R
> event
> > loop, including a polling handler (and that is how we can have a Tcl/Tk
> front
> > end).  That postdates gnomeGUI, which runs the Gtk event-loop, not R's.
> >
>
> I had forgotten about that -- thanks for the reminder.
>
> However, R_PolledEvents is only called from a limited set of places
> now (including the socket reading code to keep things responsive
> during blocking reads).  But it is not called from the interupt
> checking code, which means if a user does something equivalent to
>
>     while (TRUE) {}
>
> there is not point where events get looked at to see a user interrupt
> action. The current definition of R_CheckUserInterrupt is
>
> void R_CheckUserInterrupt(void)
> {
>      R_CheckStack();
>      /* This is the point where GUI systems need to do enough event
>         processing to determine whether there is a user interrupt event
>         pending.  Need to be careful not to do too much event
>         processing though: if event handlers written in R are allowed
>         to run at this point then we end up with concurrent R
>         evaluations and that can cause problems until we have proper
>         concurrency support. LT */
> #if  ( defined(HAVE_AQUA) || defined(Win32) )
>      R_ProcessEvents();
> #else
>      if (R_interrupts_pending)
>          onintr();
> #endif /* Win32 */
> }
>
> So only on Windows or Mac do we do event processing.

Is there a reason R_ProcessEvents cannot be set on Unix but can on
Mac? It doesn't seem user-settable on Windows, but whatever the built
in default is seems to handle the Qt event loop. And for that matter,
why is it possible to set the file.edit callback on Mac but not Linux?
This seems arbitrary, and no explanation is given (that I could find).

> We could add a
> R_PolledEvents() call in the #else bit to support this, though the
> cautions in the comment do need to be kept in mind.

Yes, that's what I ended up trying, and it seems to work reasonably
well (with one caveat, see below).

My R_PolledEvents calls qApp->processEvents, and if I set the Esc key
to call kill(getpid(), SIGINT) or onintr(), then I can interrupt some
things, like Sys.sleep. But without the patch to make
R_CheckUserInterrupt call R_PolledEvents (or runHandlers) many other
things, like all plotting routines, cannot be interrupted. So, it
would indeed be very helpful to have R_PolledEvents called on Linux,
or allow the setting of the R_ProcessEvents callback.

The problem I'm having with this solution is that whenever I interrupt
a graphics command, R crashes. This is true for commands being
evaluated by R_tryEval, but not those run from the REPL (for example,
if I make the call inside a debug() environment, interrupting it
causes no problems). As far as I can tell, this is only a problem with
graphics; other commands can be interrupted even when run using
R_tryEval().

Running R in a separate thread is a better solution to the GUI
responsiveness issue (and maybe interrupts can be cleanly sent too).
Unfortunately, Qt's threading paradigm doesn't like it when the
process running in the secondary thread (R in this case) tries to run
Qt widgets of its own (e.g. a Qt graphics device). There may be a
general solution to this, but making use of R_CheckUserInterrupt() is
the easier solution for now.

-Deepayan

[...]

> > So my assumption 'worked via the R-Unix eventloop' was that a handler
> > (probably a polling handler) had been wedged in the eventloop.
> > That was in contrast to running under a separate thread.
> >
> >> The UI provided by a shell running in a separate process may not have
> >> a 'G' but it does have its advantages :-)
> >
> > Or a separate thread, as Rterm.exe does.  Really RGui should also run in a
> > separate thread, but when Guido did so, it did not work under Windows 95:
> if
> > we ever give up support for pre-NT Windows I will take a look again at
> this.
> >
> > I guess my underlying point is that rather than run the GUI from
> > R_ProcessEvents (as RGui is), on Unix you can run it from an eventloop
> > handler.
> >
> > Brian
> >
> >>
> >> Best,
> >>
> >> luke
> >>
> >>>> while since I looked at that. I don't believe the unix version of
> >>>> R_CheckUserInterrupt() does not provide hooks for installing such
> >>>> checking (we have talked about this off an on but I don't believe
> >>>> anything happened -- could be wrong there though).
> >>>>
> >>>> If Qt allows this one option may be to have events on your nterrupt
> >>>> widget managed by a small thread that does nothing other than send a
> >>>> signal to the main thread if the widget is clicked.
> >>>>
> >>>> Best,
> >>>>
> >>>> luke


From luke at stat.uiowa.edu  Mon May  7 00:07:10 2007
From: luke at stat.uiowa.edu (Luke Tierney)
Date: Sun, 6 May 2007 17:07:10 -0500 (CDT)
Subject: [Rd] sending signals to embedded R
In-Reply-To: <eb555e660705061129p360419c9ub116a8c33005dd0d@mail.gmail.com>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com> 
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk> 
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com> 
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org> 
	<Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk> 
	<Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org> 
	<Pine.LNX.4.64.0705051758140.5930@auk.stats> 
	<Pine.OSX.4.61.0705051231050.608@luke-tierneys-computer-3.local>
	<eb555e660705061129p360419c9ub116a8c33005dd0d@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705061706490.6113@nokomis.stat.uiowa.edu>

On Sun, 6 May 2007 deepayan.sarkar at gmail.com wrote:

> On 5/5/07, Luke Tierney <luke at stat.uiowa.edu> wrote:
>> On Sat, 5 May 2007, Prof Brian Ripley wrote:
>> 
>> > On Sat, 5 May 2007, Luke Tierney wrote:
>> >
>> >> On Sat, 5 May 2007, Prof Brian Ripley wrote:
>> >>
>> >>> On Fri, 4 May 2007, Luke Tierney wrote:
>> >>>
>> >>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>> >>>>
>> >>>>> On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>> >>>>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>> >>>>>>
>> >>>>>>> one thing I haven't been able to figure out from R-exts is how to
>> >>>>>>> interrupt a calculation running inside an embedded R. C code inside
>> R
>> >>>>>>> calls R_CheckUserInterrupt() intermittently to check for 
>> interrupts,
>> >>>>>>> but how does my GUI tell R that the user wants it interrupted?
>> >>>>>>
>> >>>>>> Well, the intention is that you send an interrupt, which hardly 
>> needs
>> >>>>>> to
>> >>>>>> be in the manual.
>> >>>>>
>> >>>>> I didn't mean to imply that it does. I'm just new to signals and
>> >>>>> things that should be obvious aren't.
>> >>>>>
>> >>>>> Basically kill(2) seems to be the right thing to use, but I wasn't
>> >>>>> sure what the PID needs to be. Turns out sending SIGINT to my GUI 
>> from
>> >>>>> a shell interrupts R, so raise(SIGINT) should be enough.
>> >>>>
>> >>>> The tricky bit here is figuring out who does the sending.  It you have
>> >>>> a separate thread/process for the GUI and R then that is fine (though
>> >>>> may raise other issues).  If it is a single thread then you need your
>> >>>> event processing to get an occasional look in to recognise the user
>> >>>> action that triggers an interrupt. The Windows version handles this by
>> >>>> having R_CheckUserInterrupt() do a limited amount of event processing
>> >>>> (you need to be careful in GUI events have R actions associated with
>> >>>> them).  I believe the Mac version is similar though it has been a
>> >>>
>> >>> I was assuming that Deepayan's GUI (which seems to need Qt4, BTW, so I
>> was
>> >>> unable to compile it)
>
> Why is that a problem? As far as I can tell, Qt4 can peacefully
> coexist with Qt3, and while compiling you just need to use the right
> qmake (this is currently hardcoded in the configure script
> unfortunately).
>
> Qt4 has been around for a while now, and it's GPL on Windows/Mac as
> well as X11, so it seemed like the natural choice.
>
>> >>> worked via the R-Unix eventloop, in which case it
>> >>> gets some CPU time from time to time.
>> >>
>> >> I was assuming that as well.  But my recollection is that on unix the
>> >> event loop is only run from within the console reader.  On Windows
>> >> (and Mac OS X I believe) some event processing also happens in
>> >> R_CheckUserInterrupt(); on Windows there is also some more in some
>> >> blocking library calls, like socket reads as I recall.  But unless
>> >> things have changed since I last looked none of that happens on unix.
>> >>
>> >>>
>> >>> gnomeGUI has an interrupt menu item with action 'onintr', which may 
>> well
>> >>> be what Deepayan is looking for: the only reason that package still
>> exists
>> >>> is to provide example code.  (Not that it was ever properly integrated
>> >>> with the R event loop.)
>> >>
>> >> It does have some sort of interrupt device (I can't recall if it is a
>> >> menu item or a butto and I can't seem to build a working gnomeGUI to
>> >> check). And I believe if you try to use that item (or button?) during
>> >> a long-running computation you can't because the events won't be
>> >> looked at until R gets back to a console read, at which point the
>> >> events will be processed and you jump to the top level (where you
>> >> already are).
>> >
>> > That belief is correct (it has a menu item and a button), but my final
>> > parenthetical remark was that gnomeGUI was not wedged into the event 
>> loop.
>> >
>> >>> If the issue is what happens when the user Ctrl-C's in the GUI console,
>> >>> that depends on what the GUI toolkit does with keyboard input: if it
>> >>> generates a SIGINT this should just work, but otherwise the keyboard
>> >>> handler needs to be told to call onintr() one way or another.
>> >>
>> >> Again only if the GUI gets a chance to look at the keyboard input,
>> >> which I don't think we currently give it.
>> >
>> > We builtin the ability for a front-end to register handlers with the R
>> event
>> > loop, including a polling handler (and that is how we can have a Tcl/Tk
>> front
>> > end).  That postdates gnomeGUI, which runs the Gtk event-loop, not R's.
>> >
>> 
>> I had forgotten about that -- thanks for the reminder.
>> 
>> However, R_PolledEvents is only called from a limited set of places
>> now (including the socket reading code to keep things responsive
>> during blocking reads).  But it is not called from the interupt
>> checking code, which means if a user does something equivalent to
>>
>>     while (TRUE) {}
>> 
>> there is not point where events get looked at to see a user interrupt
>> action. The current definition of R_CheckUserInterrupt is
>> 
>> void R_CheckUserInterrupt(void)
>> {
>>      R_CheckStack();
>>      /* This is the point where GUI systems need to do enough event
>>         processing to determine whether there is a user interrupt event
>>         pending.  Need to be careful not to do too much event
>>         processing though: if event handlers written in R are allowed
>>         to run at this point then we end up with concurrent R
>>         evaluations and that can cause problems until we have proper
>>         concurrency support. LT */
>> #if  ( defined(HAVE_AQUA) || defined(Win32) )
>>      R_ProcessEvents();
>> #else
>>      if (R_interrupts_pending)
>>          onintr();
>> #endif /* Win32 */
>> }
>> 
>> So only on Windows or Mac do we do event processing.
>
> Is there a reason R_ProcessEvents cannot be set on Unix but can on
> Mac? It doesn't seem user-settable on Windows, but whatever the built
> in default is seems to handle the Qt event loop. And for that matter,
> why is it possible to set the file.edit callback on Mac but not Linux?
> This seems arbitrary, and no explanation is given (that I could find).

The R_PRocessEvents callback may be settable on MacOS but I'm not sure
it's used -- at least a quick grep didn't reveal its use anywhere
outside the gnuwin32 code.

It would be good to unify the Mac and *nix mechanisms here since the
OS underpinings are now so similar, but it will have to get high
enough on someone's priority list to happen.

Adding the polled events callback is probably not unreasonable at
least as a temporary measure.  It might be useful to think about an
alternate interface that allows code to distinguish a call frm the
interrupt check, which might want to be very fast and not do any more
than necessary to check for an interrupt event, and calbacks in
blocking situations like socket reads.

>
>> We could add a
>> R_PolledEvents() call in the #else bit to support this, though the
>> cautions in the comment do need to be kept in mind.
>
> Yes, that's what I ended up trying, and it seems to work reasonably
> well (with one caveat, see below).
>
> My R_PolledEvents calls qApp->processEvents, and if I set the Esc key
> to call kill(getpid(), SIGINT) or onintr(), then I can interrupt some
> things, like Sys.sleep. But without the patch to make
> R_CheckUserInterrupt call R_PolledEvents (or runHandlers) many other
> things, like all plotting routines, cannot be interrupted. So, it
> would indeed be very helpful to have R_PolledEvents called on Linux,
> or allow the setting of the R_ProcessEvents callback.
>
> The problem I'm having with this solution is that whenever I interrupt
> a graphics command, R crashes. This is true for commands being
> evaluated by R_tryEval, but not those run from the REPL (for example,
> if I make the call inside a debug() environment, interrupting it
> causes no problems). As far as I can tell, this is only a problem with
> graphics; other commands can be interrupted even when run using
> R_tryEval().

That sounds like a longjmp being done to a place that doesn't exist --
maybe a threading issue in Qt.  See what gdb tells you about where the
crash is occurring. It might be different for onintr and kill.  You
might also try just setting the R_interrupts_pending flag from the
interrupt event handler rather than calling onintr (which probably
longjmp's) or kill (which may be doing something you don't want if
other threads with other signal handlers are involved).

Best,

luke

>
> Running R in a separate thread is a better solution to the GUI
> responsiveness issue (and maybe interrupts can be cleanly sent too).
> Unfortunately, Qt's threading paradigm doesn't like it when the
> process running in the secondary thread (R in this case) tries to run
> Qt widgets of its own (e.g. a Qt graphics device). There may be a
> general solution to this, but making use of R_CheckUserInterrupt() is
> the easier solution for now.
>
> -Deepayan
>
> [...]
>
>> > So my assumption 'worked via the R-Unix eventloop' was that a handler
>> > (probably a polling handler) had been wedged in the eventloop.
>> > That was in contrast to running under a separate thread.
>> >
>> >> The UI provided by a shell running in a separate process may not have
>> >> a 'G' but it does have its advantages :-)
>> >
>> > Or a separate thread, as Rterm.exe does.  Really RGui should also run in 
>> a
>> > separate thread, but when Guido did so, it did not work under Windows 95:
>> if
>> > we ever give up support for pre-NT Windows I will take a look again at
>> this.
>> >
>> > I guess my underlying point is that rather than run the GUI from
>> > R_ProcessEvents (as RGui is), on Unix you can run it from an eventloop
>> > handler.
>> >
>> > Brian
>> >
>> >>
>> >> Best,
>> >>
>> >> luke
>> >>
>> >>>> while since I looked at that. I don't believe the unix version of
>> >>>> R_CheckUserInterrupt() does not provide hooks for installing such
>> >>>> checking (we have talked about this off an on but I don't believe
>> >>>> anything happened -- could be wrong there though).
>> >>>>
>> >>>> If Qt allows this one option may be to have events on your nterrupt
>> >>>> widget managed by a small thread that does nothing other than send a
>> >>>> signal to the main thread if the widget is clicked.
>> >>>>
>> >>>> Best,
>> >>>>
>> >>>> luke
>

-- 
Luke Tierney
Chair, Statistics and Actuarial Science
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
      Actuarial Science
241 Schaeffer Hall                  email:      luke at stat.uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From jeff.horner at vanderbilt.edu  Mon May  7 00:38:00 2007
From: jeff.horner at vanderbilt.edu (Jeffrey Horner)
Date: Sun, 06 May 2007 17:38:00 -0500
Subject: [Rd] sending signals to embedded R
In-Reply-To: <Pine.LNX.4.64.0705061706490.6113@nokomis.stat.uiowa.edu>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705042309520.21366@gannet.stats.ox.ac.uk>
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705051758140.5930@auk.stats>
	<Pine.OSX.4.61.0705051231050.608@luke-tierneys-computer-3.local>	<eb555e660705061129p360419c9ub116a8c33005dd0d@mail.gmail.com>
	<Pine.LNX.4.64.0705061706490.6113@nokomis.stat.uiowa.edu>
Message-ID: <463E58C8.9090106@vanderbilt.edu>

Luke Tierney wrote:
> On Sun, 6 May 2007 deepayan.sarkar at gmail.com wrote:
> 
>> On 5/5/07, Luke Tierney <luke at stat.uiowa.edu> wrote:
>>> On Sat, 5 May 2007, Prof Brian Ripley wrote:
>>>
>>>> On Sat, 5 May 2007, Luke Tierney wrote:
>>>>
>>>>> On Sat, 5 May 2007, Prof Brian Ripley wrote:
>>>>>
>>>>>> On Fri, 4 May 2007, Luke Tierney wrote:
>>>>>>
>>>>>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>>>>>>
>>>>>>>> On 5/4/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>>>>>>>>> On Fri, 4 May 2007, Deepayan Sarkar wrote:
>>>>>>>>>
>>>>>>>>>> one thing I haven't been able to figure out from R-exts is how to
>>>>>>>>>> interrupt a calculation running inside an embedded R. C code inside
>>> R
>>>>>>>>>> calls R_CheckUserInterrupt() intermittently to check for 
>>> interrupts,
>>>>>>>>>> but how does my GUI tell R that the user wants it interrupted?
>>>>>>>>> Well, the intention is that you send an interrupt, which hardly 
>>> needs
>>>>>>>>> to
>>>>>>>>> be in the manual.
>>>>>>>> I didn't mean to imply that it does. I'm just new to signals and
>>>>>>>> things that should be obvious aren't.
>>>>>>>>
>>>>>>>> Basically kill(2) seems to be the right thing to use, but I wasn't
>>>>>>>> sure what the PID needs to be. Turns out sending SIGINT to my GUI 
>>> from
>>>>>>>> a shell interrupts R, so raise(SIGINT) should be enough.
>>>>>>> The tricky bit here is figuring out who does the sending.  It you have
>>>>>>> a separate thread/process for the GUI and R then that is fine (though
>>>>>>> may raise other issues).  If it is a single thread then you need your
>>>>>>> event processing to get an occasional look in to recognise the user
>>>>>>> action that triggers an interrupt. The Windows version handles this by
>>>>>>> having R_CheckUserInterrupt() do a limited amount of event processing
>>>>>>> (you need to be careful in GUI events have R actions associated with
>>>>>>> them).  I believe the Mac version is similar though it has been a
>>>>>> I was assuming that Deepayan's GUI (which seems to need Qt4, BTW, so I
>>> was
>>>>>> unable to compile it)
>> Why is that a problem? As far as I can tell, Qt4 can peacefully
>> coexist with Qt3, and while compiling you just need to use the right
>> qmake (this is currently hardcoded in the configure script
>> unfortunately).
>>
>> Qt4 has been around for a while now, and it's GPL on Windows/Mac as
>> well as X11, so it seemed like the natural choice.
>>
>>>>>> worked via the R-Unix eventloop, in which case it
>>>>>> gets some CPU time from time to time.
>>>>> I was assuming that as well.  But my recollection is that on unix the
>>>>> event loop is only run from within the console reader.  On Windows
>>>>> (and Mac OS X I believe) some event processing also happens in
>>>>> R_CheckUserInterrupt(); on Windows there is also some more in some
>>>>> blocking library calls, like socket reads as I recall.  But unless
>>>>> things have changed since I last looked none of that happens on unix.
>>>>>
>>>>>> gnomeGUI has an interrupt menu item with action 'onintr', which may 
>>> well
>>>>>> be what Deepayan is looking for: the only reason that package still
>>> exists
>>>>>> is to provide example code.  (Not that it was ever properly integrated
>>>>>> with the R event loop.)
>>>>> It does have some sort of interrupt device (I can't recall if it is a
>>>>> menu item or a butto and I can't seem to build a working gnomeGUI to
>>>>> check). And I believe if you try to use that item (or button?) during
>>>>> a long-running computation you can't because the events won't be
>>>>> looked at until R gets back to a console read, at which point the
>>>>> events will be processed and you jump to the top level (where you
>>>>> already are).
>>>> That belief is correct (it has a menu item and a button), but my final
>>>> parenthetical remark was that gnomeGUI was not wedged into the event 
>>> loop.
>>>>>> If the issue is what happens when the user Ctrl-C's in the GUI console,
>>>>>> that depends on what the GUI toolkit does with keyboard input: if it
>>>>>> generates a SIGINT this should just work, but otherwise the keyboard
>>>>>> handler needs to be told to call onintr() one way or another.
>>>>> Again only if the GUI gets a chance to look at the keyboard input,
>>>>> which I don't think we currently give it.
>>>> We builtin the ability for a front-end to register handlers with the R
>>> event
>>>> loop, including a polling handler (and that is how we can have a Tcl/Tk
>>> front
>>>> end).  That postdates gnomeGUI, which runs the Gtk event-loop, not R's.
>>>>
>>> I had forgotten about that -- thanks for the reminder.
>>>
>>> However, R_PolledEvents is only called from a limited set of places
>>> now (including the socket reading code to keep things responsive
>>> during blocking reads).  But it is not called from the interupt
>>> checking code, which means if a user does something equivalent to
>>>
>>>     while (TRUE) {}
>>>
>>> there is not point where events get looked at to see a user interrupt
>>> action. The current definition of R_CheckUserInterrupt is
>>>
>>> void R_CheckUserInterrupt(void)
>>> {
>>>      R_CheckStack();
>>>      /* This is the point where GUI systems need to do enough event
>>>         processing to determine whether there is a user interrupt event
>>>         pending.  Need to be careful not to do too much event
>>>         processing though: if event handlers written in R are allowed
>>>         to run at this point then we end up with concurrent R
>>>         evaluations and that can cause problems until we have proper
>>>         concurrency support. LT */
>>> #if  ( defined(HAVE_AQUA) || defined(Win32) )
>>>      R_ProcessEvents();
>>> #else
>>>      if (R_interrupts_pending)
>>>          onintr();
>>> #endif /* Win32 */
>>> }
>>>
>>> So only on Windows or Mac do we do event processing.
>> Is there a reason R_ProcessEvents cannot be set on Unix but can on
>> Mac? It doesn't seem user-settable on Windows, but whatever the built
>> in default is seems to handle the Qt event loop. And for that matter,
>> why is it possible to set the file.edit callback on Mac but not Linux?
>> This seems arbitrary, and no explanation is given (that I could find).
> 
> The R_PRocessEvents callback may be settable on MacOS but I'm not sure
> it's used -- at least a quick grep didn't reveal its use anywhere
> outside the gnuwin32 code.
> 
> It would be good to unify the Mac and *nix mechanisms here since the
> OS underpinings are now so similar, but it will have to get high
> enough on someone's priority list to happen.
> 
> Adding the polled events callback is probably not unreasonable at
> least as a temporary measure.  It might be useful to think about an
> alternate interface that allows code to distinguish a call frm the
> interrupt check, which might want to be very fast and not do any more
> than necessary to check for an interrupt event, and calbacks in
> blocking situations like socket reads.
> 
>>> We could add a
>>> R_PolledEvents() call in the #else bit to support this, though the
>>> cautions in the comment do need to be kept in mind.
>> Yes, that's what I ended up trying, and it seems to work reasonably
>> well (with one caveat, see below).
>>
>> My R_PolledEvents calls qApp->processEvents, and if I set the Esc key
>> to call kill(getpid(), SIGINT) or onintr(), then I can interrupt some
>> things, like Sys.sleep. But without the patch to make
>> R_CheckUserInterrupt call R_PolledEvents (or runHandlers) many other
>> things, like all plotting routines, cannot be interrupted. So, it
>> would indeed be very helpful to have R_PolledEvents called on Linux,
>> or allow the setting of the R_ProcessEvents callback.
>>
>> The problem I'm having with this solution is that whenever I interrupt
>> a graphics command, R crashes. This is true for commands being
>> evaluated by R_tryEval, but not those run from the REPL (for example,
>> if I make the call inside a debug() environment, interrupting it
>> causes no problems). As far as I can tell, this is only a problem with
>> graphics; other commands can be interrupted even when run using
>> R_tryEval().
> 
> That sounds like a longjmp being done to a place that doesn't exist --
> maybe a threading issue in Qt.  See what gdb tells you about where the
> crash is occurring. It might be different for onintr and kill.  You
> might also try just setting the R_interrupts_pending flag from the
> interrupt event handler rather than calling onintr (which probably
> longjmp's) or kill (which may be doing something you don't want if
> other threads with other signal handlers are involved).
> 
> Best,
> 
> luke

Deepayan, this is your code from quter-20070502 below, where R_tryEval 
is called:

     PROTECT(cmdSexp = mkString(cmd));
     PROTECT(cmdExpr = R_ParseVector(cmdSexp, -1, &status, R_NilValue));
     if (status == PARSE_OK) {
         int i, errorOccurred;
         for(i = 0; i < length(cmdExpr); i++) {
         ans = R_tryEval(VECTOR_ELT(cmdExpr, i),
                 NULL, &errorOccurred);
     }
     if (errorOccurred) ans = R_NilValue;
     UNPROTECT(2);

Question: is each element of cmdExpr actually on the protection stack? 
Or rather, is the caller guaranteed that the cmdExpr element will not be 
garbage collected? My assumption is yes, since cmdExpr is, but I could 
be wrong. Just curious because I just ran into troubles with calling 
R_tryEval with unprotected expressions and accepting signals. I 
witnessed what Luke explained above, that longjmp's were being done to a 
place that I wasn't anticipating, e.g. R_tryEval was never returning.

Jeff

> 
>> Running R in a separate thread is a better solution to the GUI
>> responsiveness issue (and maybe interrupts can be cleanly sent too).
>> Unfortunately, Qt's threading paradigm doesn't like it when the
>> process running in the secondary thread (R in this case) tries to run
>> Qt widgets of its own (e.g. a Qt graphics device). There may be a
>> general solution to this, but making use of R_CheckUserInterrupt() is
>> the easier solution for now.
>>
>> -Deepayan
>>
>> [...]
>>
>>>> So my assumption 'worked via the R-Unix eventloop' was that a handler
>>>> (probably a polling handler) had been wedged in the eventloop.
>>>> That was in contrast to running under a separate thread.
>>>>
>>>>> The UI provided by a shell running in a separate process may not have
>>>>> a 'G' but it does have its advantages :-)
>>>> Or a separate thread, as Rterm.exe does.  Really RGui should also run in 
>>> a
>>>> separate thread, but when Guido did so, it did not work under Windows 95:
>>> if
>>>> we ever give up support for pre-NT Windows I will take a look again at
>>> this.
>>>> I guess my underlying point is that rather than run the GUI from
>>>> R_ProcessEvents (as RGui is), on Unix you can run it from an eventloop
>>>> handler.
>>>>
>>>> Brian
>>>>
>>>>> Best,
>>>>>
>>>>> luke
>>>>>
>>>>>>> while since I looked at that. I don't believe the unix version of
>>>>>>> R_CheckUserInterrupt() does not provide hooks for installing such
>>>>>>> checking (we have talked about this off an on but I don't believe
>>>>>>> anything happened -- could be wrong there though).
>>>>>>>
>>>>>>> If Qt allows this one option may be to have events on your nterrupt
>>>>>>> widget managed by a small thread that does nothing other than send a
>>>>>>> signal to the main thread if the widget is clicked.
>>>>>>>
>>>>>>> Best,
>>>>>>>
>>>>>>> luke
> 


-- 
http://biostat.mc.vanderbilt.edu/JeffreyHorner


From deepayan.sarkar at gmail.com  Mon May  7 02:57:04 2007
From: deepayan.sarkar at gmail.com (deepayan.sarkar at gmail.com)
Date: Sun, 6 May 2007 19:57:04 -0500
Subject: [Rd] sending signals to embedded R
In-Reply-To: <463E58C8.9090106@vanderbilt.edu>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<eb555e660705041534r32c2d62di7309b5a457456c7c@mail.gmail.com>
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705051758140.5930@auk.stats>
	<Pine.OSX.4.61.0705051231050.608@luke-tierneys-computer-3.local>
	<eb555e660705061129p360419c9ub116a8c33005dd0d@mail.gmail.com>
	<Pine.LNX.4.64.0705061706490.6113@nokomis.stat.uiowa.edu>
	<463E58C8.9090106@vanderbilt.edu>
Message-ID: <eb555e660705061757o73bcf5dapb9a138a1456ffef8@mail.gmail.com>

On 5/6/07, Jeffrey Horner <jeff.horner at vanderbilt.edu> wrote:
> Luke Tierney wrote:

[...]

> >> Is there a reason R_ProcessEvents cannot be set on Unix but can on
> >> Mac? It doesn't seem user-settable on Windows, but whatever the built
> >> in default is seems to handle the Qt event loop. And for that matter,
> >> why is it possible to set the file.edit callback on Mac but not Linux?
> >> This seems arbitrary, and no explanation is given (that I could find).
> >
> > The R_PRocessEvents callback may be settable on MacOS but I'm not sure
> > it's used -- at least a quick grep didn't reveal its use anywhere
> > outside the gnuwin32 code.

I meant the callback ptr_R_ProcessEvents (in Rinterface.h).  The Mac
GUI source has (this is probably not the latest version):

dsarkar at kanika:~/Mac-GUI-1.17$ grep -i ptr_r_process */*
REngine/Rinit.c:extern void (*ptr_R_ProcessEvents)();
REngine/Rinit.c:    ptr_R_ProcessEvents =  Re_ProcessEvents;

and R/trunk/src/unix/aqua.c has:

void R_ProcessEvents(void)
{
    if(!useaqua){
        if (R_interrupts_pending)
            onintr();
        return;
    } else
        ptr_R_ProcessEvents();
}

> > It would be good to unify the Mac and *nix mechanisms here since the
> > OS underpinings are now so similar, but it will have to get high
> > enough on someone's priority list to happen.

[...]

> >> The problem I'm having with this solution is that whenever I interrupt
> >> a graphics command, R crashes. This is true for commands being
> >> evaluated by R_tryEval, but not those run from the REPL (for example,
> >> if I make the call inside a debug() environment, interrupting it
> >> causes no problems). As far as I can tell, this is only a problem with
> >> graphics; other commands can be interrupted even when run using
> >> R_tryEval().
> >
> > That sounds like a longjmp being done to a place that doesn't exist --
> > maybe a threading issue in Qt.  See what gdb tells you about where the
> > crash is occurring. It might be different for onintr and kill.  You
> > might also try just setting the R_interrupts_pending flag from the
> > interrupt event handler rather than calling onintr (which probably
> > longjmp's) or kill (which may be doing something you don't want if
> > other threads with other signal handlers are involved).


I will have to start learning about gdb sometime soon, but in this case, the
problem seems to be due to the interaction of R_tryEval() and
graphics, and has nothing to do with interruptions.  Here's a variant
of the trEval test case that triggers a legitimate error caused by

grid.text('foo', gp = gpar(font=1, fontface=1))

dsarkar at kanika:~$ cat tryEvalGraphics.c ## beware of line wrapping

/*
   Compile this as:

RPROG=R-devel

export LD_LIBRARY_PATH=`${RPROG} RHOME`/lib:\${LD_LIBRARY_PATH}
gcc `${RPROG} CMD config --cppflags` \
    `${RPROG} CMD config --ldflags`  \
    -o tryEvalGraphics tryEvalGraphics.c

 */


#include <Rinternals.h>
#include <Rembedded.h>

#include <R_ext/Parse.h>


int
main(int argc, char *argv[])
{
    SEXP e, val;
    int i, errorOccurred;
    ParseStatus status;
    char *cmds[] = {
        "library(lattice)",
        "library(grid)",
        "grid.text('foo', gp = gpar(font=1, fontface=1))",
        "xyplot(1 ~ 1, panel = function() grid.text('foo', gp =
gpar(font=1, fontface=1)))"
    };

    argv[0] = "R";
    Rf_initEmbeddedR(argc, argv);

    for (i = 0; i < 4; i++) {
        printf("** I **: Executing command: %s\n", cmds[i]);
        fflush(stdout); sleep(1);
        PROTECT(e = R_ParseVector(mkString(cmds[i]), -1, &status, R_NilValue));
        val = R_tryEval(VECTOR_ELT(e, 0), NULL, &errorOccurred);
        if (errorOccurred) { Rprintf("Error executing: %s\n", cmds[i]); }
        else Rf_PrintValue(val);
        UNPROTECT(1);
        printf("** I **: Succeeded\n");
        fflush(stdout); sleep(1);
    }

    Rf_endEmbeddedR(0);
    return(0);
}


Running this, I get:


dsarkar at kanika:~$ R-devel CMD ./tryEvalGraphics

R version 2.6.0 Under development (unstable) (2007-05-04 r41439)

[...]

[Previously saved workspace restored]

** I **: Executing command: library(lattice)
[1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "lattice"
[7] "rcompgen"  "methods"   "base"
** I **: Succeeded
** I **: Executing command: library(grid)
 [1] "grid"      "stats"     "graphics"  "grDevices" "utils"     "datasets"
 [7] "lattice"   "rcompgen"  "methods"   "base"
** I **: Succeeded
** I **: Executing command: grid.text('foo', gp = gpar(font=1, fontface=1))
Error in validGP(list(...)) : Must specify only one of 'font' and 'fontface'
Error executing: grid.text('foo', gp = gpar(font=1, fontface=1))
** I **: Succeeded
** I **: Executing command: xyplot(1 ~ 1, panel = function()
grid.text('foo', gp = gpar(font=1, fontface=1)))
Error in validGP(list(...)) : Must specify only one of 'font' and 'fontface'

 *** caught segfault ***
address 0x22000440, cause 'memory not mapped'

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace
Selection: 3
dsarkar at kanika:~$

Note that the first error (which doesn't actually get around to
starting a device) is handled properly, while the second is not.

[...]


> Deepayan, this is your code from quter-20070502 below, where R_tryEval
> is called:
>
>      PROTECT(cmdSexp = mkString(cmd));
>      PROTECT(cmdExpr = R_ParseVector(cmdSexp, -1, &status, R_NilValue));
>      if (status == PARSE_OK) {
>          int i, errorOccurred;
>          for(i = 0; i < length(cmdExpr); i++) {
>          ans = R_tryEval(VECTOR_ELT(cmdExpr, i),
>                  NULL, &errorOccurred);
>      }
>      if (errorOccurred) ans = R_NilValue;
>      UNPROTECT(2);
>
> Question: is each element of cmdExpr actually on the protection stack?
> Or rather, is the caller guaranteed that the cmdExpr element will not be
> garbage collected? My assumption is yes, since cmdExpr is, but I could
> be wrong.

Normally I would say yes, because my understanding is that
sub-elements of protected SEXP's are supposed to be automatically
protected. But I don't really know what happens when there is an
error. On the other hand, I haven't been seeing any errors (other than
the graphics one described above) recently with that code.

One possibly relevant factoid: a few days ago I was trying to play
with R_topLevelExec(), and that seemed to require an extra UNPROTECT()
for no reason (there's a similar hack in rkward). I sort of got it
working, but two consecutive errors reproducibly took me to a
situation where the same error message would get repeated whatever I
did after that. I didn't pursue this because I figured out an
alternative solution to my problem.

-Deepayan

> Just curious because I just ran into troubles with calling
> R_tryEval with unprotected expressions and accepting signals. I
> witnessed what Luke explained above, that longjmp's were being done to a
> place that I wasn't anticipating, e.g. R_tryEval was never returning.
>
> Jeff


From savicky at cs.cas.cz  Mon May  7 16:20:13 2007
From: savicky at cs.cas.cz (Petr Savicky)
Date: Mon, 7 May 2007 16:20:13 +0200
Subject: [Rd] grep with fixed=TRUE and ignore.case=TRUE
In-Reply-To: <20070429135347.GA4690@cs.cas.cz>
References: <20070428114959.GA25723@cs.cas.cz>
	<46337DE1.5030607@statistik.uni-dortmund.de>
	<20070429135347.GA4690@cs.cas.cz>
Message-ID: <20070507142012.GF31253@cs.cas.cz>

Dear R developers,

I suggest to modify the behaviour of "grep" function with fixed=TRUE option.

Currently, fixed=TRUE implies ignore.case=FALSE (overrides ignore.case=TRUE,
if set by the user).

I suggest to keep ignore.case as set by the user even if fixed=TRUE. Since
the default of ignore.case is FALSE, this would not change the behaviour
of grep, if the user does not set ignore.case explicitly.

In my opinion, fixed=TRUE is most useful for suppressing meta-character
expansion. On the other hand, for a simple word search, ignoring
case is sometimes useful.

If for some reason, it is better to keep the current behavior of grep, then I
suggest to extend the documentation as follows:

ORIGINAL:
   fixed: logical.  If 'TRUE', 'pattern' is a string to be matched as
          is.  Overrides all conflicting arguments.

SUGGESTED:
   fixed: logical.  If 'TRUE', 'pattern' is a string to be matched as
          is.  Overrides all conflicting arguments including ignore.case.

All the best, Petr Savicky.


From ggrothendieck at gmail.com  Mon May  7 16:37:30 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 7 May 2007 10:37:30 -0400
Subject: [Rd] grep with fixed=TRUE and ignore.case=TRUE
In-Reply-To: <20070507142012.GF31253@cs.cas.cz>
References: <20070428114959.GA25723@cs.cas.cz>
	<46337DE1.5030607@statistik.uni-dortmund.de>
	<20070429135347.GA4690@cs.cas.cz> <20070507142012.GF31253@cs.cas.cz>
Message-ID: <971536df0705070737g6f8ac4b5k9a4c15529e4672ef@mail.gmail.com>

Seems like a good idea to me.

Here is a workaround that works in any event which combines (?i), \Q and \E .
to get the same effect.  (?i) gives case insensitive matches and \Q and \E
quote and endquote the intervening text disabling special characters:

x <- c("D.G cat", "d.g cat", "dog cat")
z <- "d.g"
rx <- paste("(?i)\\Q", z, "\\E", sep = "")
grep(rx, x, perl = TRUE)  # 1 2


On 5/7/07, Petr Savicky <savicky at cs.cas.cz> wrote:
> Dear R developers,
>
> I suggest to modify the behaviour of "grep" function with fixed=TRUE option.
>
> Currently, fixed=TRUE implies ignore.case=FALSE (overrides ignore.case=TRUE,
> if set by the user).
>
> I suggest to keep ignore.case as set by the user even if fixed=TRUE. Since
> the default of ignore.case is FALSE, this would not change the behaviour
> of grep, if the user does not set ignore.case explicitly.
>
> In my opinion, fixed=TRUE is most useful for suppressing meta-character
> expansion. On the other hand, for a simple word search, ignoring
> case is sometimes useful.
>
> If for some reason, it is better to keep the current behavior of grep, then I
> suggest to extend the documentation as follows:
>
> ORIGINAL:
>   fixed: logical.  If 'TRUE', 'pattern' is a string to be matched as
>          is.  Overrides all conflicting arguments.
>
> SUGGESTED:
>   fixed: logical.  If 'TRUE', 'pattern' is a string to be matched as
>          is.  Overrides all conflicting arguments including ignore.case.
>
> All the best, Petr Savicky.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From deepayan.sarkar at gmail.com  Mon May  7 21:07:17 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Mon, 7 May 2007 12:07:17 -0700
Subject: [Rd] Qt device update
In-Reply-To: <Pine.LNX.4.64.0705051521050.15149@gannet.stats.ox.ac.uk>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com>
	<7B29DCD1-E483-482B-8CCE-526305FE2E9F@r-project.org>
	<Pine.LNX.4.64.0705042200220.29064@gannet.stats.ox.ac.uk>
	<17980.36606.321639.460692@stat.math.ethz.ch>
	<Pine.LNX.4.64.0705051521050.15149@gannet.stats.ox.ac.uk>
Message-ID: <eb555e660705071207m1f05a9c4j316b38b02f7f6aa3@mail.gmail.com>

On 5/5/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:

[...]

>      o	dev.interactive() regards devices with the displaylist enabled
>  	as interactive, and packages can register the names of their
>  	devices as interactive via deviceIsInteractive().

Thanks. A related issue: 2.5.0's NEWS has:

    o   options(device = ) now accepts a function object as well as
        the name of a function.

(For some reason, I had thought this was true all along, but in any
case) This means that it's now reasonable to do

> options(device = function() x11("", 4, 4))

But then I get (iff there is no device open)

> example(glm)
Error in match(x, table, nomatch = 0) : 'match' requires vector arguments

because dev.interactive() doesn't know about the change yet.
dev.interactive() cannot really do anything useful in this case, but
an error seems too harsh (especially since example(glm) doesn't even
have any graphics).

-Deepayan


From bill at insightful.com  Mon May  7 21:39:40 2007
From: bill at insightful.com (Bill Dunlap)
Date: Mon, 7 May 2007 12:39:40 -0700 (PDT)
Subject: [Rd] R CMD Rdconv drops sections: arguments, seealso,
 examples (PR#9649)
In-Reply-To: <Pine.LNX.4.64.0705041218490.1365@gannet.stats.ox.ac.uk>
References: <20070501174551.E7CAE5A89A@slim.kubism.ku.dk>
	<Pine.LNX.4.64.0705031144260.10593@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0705041218490.1365@gannet.stats.ox.ac.uk>
Message-ID: <Pine.GSO.4.56.0705071230260.988@durian.statsci.com>

On Fri, 4 May 2007, Prof Brian Ripley wrote:

> On Thu, 3 May 2007, Prof Brian Ripley wrote:
>
> > It is not clear to me that throwing an error is helpful as it would stop
> > the package installation process when all but one section in one .Rd file
> > would be useful.  But it would seem good to give a warning, and so I
> > propose that we adapt your code to do so.
>
> Doing so (now in R-devel) shows a couple of false positives (\align{{} in
> Paren.Rd is one), and rather a lot of correct warnings about excess }s
> that are not doing any harm.  So I have tuned the warnings to be less
> strident in the latter case.

That sounds good.

Here is a modification of your fix that prints a message for
problem in the Rd file, not just the first.   E.g., in an old
version of the msm package it gives
  Note: unmatched right brace in './msm/man/deltamethod.Rd' on or after line 32
  Note: unmatched right brace in './msm/man/deltamethod.Rd' on or after line 54
  Note: unmatched right brace in './msm/man/deltamethod.Rd' on or after line 55
instead of just complaining about the first one.

Index: Rdconv.pm
===================================================================
--- Rdconv.pm	(revision 41470)
+++ Rdconv.pm	(working copy)
@@ -258,24 +258,25 @@
     }
     # Any remaining brackets must be unmatched ones.
     # However, unmatched brackets are sometimes legal,
-    # (e.g. \alias{{}), so only warn.
+    # (e.g. \alias{{}), so only warn. # }match brace in comment
     if ($complete_text =~ /([{}])/s) {
         # Would like to tell which which line has unmatched { or },
         # but lines starting with % have already been removed.
         # Hence the 'on or after' in the message.
         my $badlineno = 0 ;
-	my $extra_info = "\'$1\'" ;
-        $extra_info = "\'$1\'" if $complete_text =~ /(\\\w+{)/ ;
 	foreach my $line (split /\n/, $complete_text) {
 	    $badlineno++;
-	    last if ($line =~ /[{}]/) ;
+	    if ($line =~ /([{}])/) {
+	        my $extra_info = "\'$1\'" ;
+            	$extra_info = "\'$1\'" if $line =~ /(\\\w+{)/ ; # }match brace in pattern
+	        if( $extra_info =~ /^'}'$/ ) {
+	            warn "Note: unmatched right brace in '$Rdname'".
+		        " on or after line $badlineno\n";
+	        } elsif(! ($extra_info =~ /\\alias{/) )  # }match brace in pattern
+	            { warn "Warning: unmatched brace ($extra_info) in '$Rdname'".
+		           " on or after line $badlineno\n"; }
+           }
 	}
-	if( $extra_info =~ /^'}'$/ ) {
-	    warn "Note: unmatched right brace in '$Rdname'".
-		" on or after line $badlineno\n";
-	} elsif(! ($extra_info =~ /\\alias{/) )
-	    { warn "Warning: unmatched brace ($extra_info) in '$Rdname'".
-		   " on or after line $badlineno\n"; }
     }
 }


----------------------------------------------------------------------------
Bill Dunlap
Insightful Corporation
bill at insightful dot com
360-428-8146

 "All statements in this message represent the opinions of the author and do
 not necessarily reflect Insightful Corporation policy or position."


From ripley at stats.ox.ac.uk  Mon May  7 22:02:32 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 7 May 2007 21:02:32 +0100 (BST)
Subject: [Rd] Qt device update
In-Reply-To: <eb555e660705071207m1f05a9c4j316b38b02f7f6aa3@mail.gmail.com>
References: <eb555e660705031752p5a96153fifaabd0d5fdf0bdeb@mail.gmail.com> 
	<7B29DCD1-E483-482B-8CCE-526305FE2E9F@r-project.org> 
	<Pine.LNX.4.64.0705042200220.29064@gannet.stats.ox.ac.uk> 
	<17980.36606.321639.460692@stat.math.ethz.ch> 
	<Pine.LNX.4.64.0705051521050.15149@gannet.stats.ox.ac.uk>
	<eb555e660705071207m1f05a9c4j316b38b02f7f6aa3@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705072101130.6489@gannet.stats.ox.ac.uk>

On Mon, 7 May 2007, Deepayan Sarkar wrote:

> On 5/5/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>
> [...]
>
>>      o	dev.interactive() regards devices with the displaylist 
>> enabled
>>  	as interactive, and packages can register the names of their
>>  	devices as interactive via deviceIsInteractive().
>
> Thanks. A related issue: 2.5.0's NEWS has:
>
>   o   options(device = ) now accepts a function object as well as
>       the name of a function.
>
> (For some reason, I had thought this was true all along, but in any
> case) This means that it's now reasonable to do
>
>> options(device = function() x11("", 4, 4))
>
> But then I get (iff there is no device open)
>
>> example(glm)
> Error in match(x, table, nomatch = 0) : 'match' requires vector arguments
>
> because dev.interactive() doesn't know about the change yet.
> dev.interactive() cannot really do anything useful in this case, but
> an error seems too harsh (especially since example(glm) doesn't even
> have any graphics).

Thanks, easily fixed.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From deepayan.sarkar at gmail.com  Tue May  8 03:44:27 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Mon, 7 May 2007 18:44:27 -0700
Subject: [Rd] sending signals to embedded R
In-Reply-To: <eb555e660705061757o73bcf5dapb9a138a1456ffef8@mail.gmail.com>
References: <eb555e660705041448h27679664o21522a5d04285d74@mail.gmail.com>
	<Pine.LNX.4.64.0705041828340.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705050910190.1517@gannet.stats.ox.ac.uk>
	<Pine.LNX.4.64.0705050923360.32397@itasca2.wildberry.org>
	<Pine.LNX.4.64.0705051758140.5930@auk.stats>
	<Pine.OSX.4.61.0705051231050.608@luke-tierneys-computer-3.local>
	<eb555e660705061129p360419c9ub116a8c33005dd0d@mail.gmail.com>
	<Pine.LNX.4.64.0705061706490.6113@nokomis.stat.uiowa.edu>
	<463E58C8.9090106@vanderbilt.edu>
	<eb555e660705061757o73bcf5dapb9a138a1456ffef8@mail.gmail.com>
Message-ID: <eb555e660705071844h10949c98t9121b4472041296c@mail.gmail.com>

On 5/6/07, Deepayan Sarkar <deepayan.sarkar at gmail.com> wrote:

> I will have to start learning about gdb sometime soon, but in this case, the
> problem seems to be due to the interaction of R_tryEval() and
> graphics, and has nothing to do with interruptions.  Here's a variant
> of the trEval test case that triggers a legitimate error caused by
>
> grid.text('foo', gp = gpar(font=1, fontface=1))

[...]

> Running this, I get:
>
>
> dsarkar at kanika:~$ R-devel CMD ./tryEvalGraphics
>
> R version 2.6.0 Under development (unstable) (2007-05-04 r41439)
>
> [...]
>
> [Previously saved workspace restored]
>
> ** I **: Executing command: library(lattice)
> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "lattice"
> [7] "rcompgen"  "methods"   "base"
> ** I **: Succeeded
> ** I **: Executing command: library(grid)
>  [1] "grid"      "stats"     "graphics"  "grDevices" "utils"     "datasets"
>  [7] "lattice"   "rcompgen"  "methods"   "base"
> ** I **: Succeeded
> ** I **: Executing command: grid.text('foo', gp = gpar(font=1, fontface=1))
> Error in validGP(list(...)) : Must specify only one of 'font' and 'fontface'
> Error executing: grid.text('foo', gp = gpar(font=1, fontface=1))
> ** I **: Succeeded
> ** I **: Executing command: xyplot(1 ~ 1, panel = function()
> grid.text('foo', gp = gpar(font=1, fontface=1)))
> Error in validGP(list(...)) : Must specify only one of 'font' and 'fontface'
>
>  *** caught segfault ***
> address 0x22000440, cause 'memory not mapped'
>
> Possible actions:
> 1: abort (with core dump, if enabled)
> 2: normal R exit
> 3: exit R without saving workspace
> 4: exit R saving workspace
> Selection: 3
> dsarkar at kanika:~$

And running this again with optimization turned off, I get for the last command:

** I **: Executing command: xyplot(1 ~ 1, panel = function()
grid.text('foo', gp = gpar(font=1, fontface=1)))
Error in validGP(list(...)) : Must specify only one of 'font' and 'fontface'
Error: unprotect(): only 0 protected items
** I **: Succeeded

-Deepayan


From sfalcon at fhcrc.org  Tue May  8 06:59:57 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 07 May 2007 21:59:57 -0700
Subject: [Rd] Problem calling $ inside a $ method
Message-ID: <m24pmn6hbm.fsf@ziti.local>

Hello,

I wonder if this will make it through the spam filters given the
subject line.

I'm seeing the following when trying to call a dollar method inside of
a dollar method.


    setClass("Foo", representation(d="list"))
    [1] "Foo"

    f <- new("Foo", d=list(bob=1, alice=2))

## We can call dollar at this level and it works as expected

    `$`(f, "bo")
    [1] 1

    `$`(f, "al")
    [1] 2

## So set a method on Foo that does this

    setMethod("$", "Foo", function(x, name) `$`(x at d, name))
    [1] "$"

## But it doesn't work.  Why?

    f$bo
    NULL

    f$al
    NULL

## Here is a hackish workaround.

    setMethod("$", "Foo", function(x, name)
              eval(substitute(x at d$FOO, list(FOO=name))))
    [1] "$"

    f$bo
    [1] 1

    f$al
    [1] 2

Other suggestions for workarounds?  Is this a bug?

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From deepayan.sarkar at gmail.com  Tue May  8 07:55:02 2007
From: deepayan.sarkar at gmail.com (deepayan.sarkar at gmail.com)
Date: Tue, 8 May 2007 00:55:02 -0500
Subject: [Rd] sending signals to embedded R [SOLVED]
Message-ID: <eb555e660705072255g4bd7f400g4d1fe8758c847820@mail.gmail.com>

On 5/7/07, Deepayan Sarkar <deepayan.sarkar at gmail.com> wrote:
> On 5/6/07, Deepayan Sarkar <deepayan.sarkar at gmail.com> wrote:
>
> > I will have to start learning about gdb sometime soon, but in this case,
> the
> > problem seems to be due to the interaction of R_tryEval() and
> > graphics, and has nothing to do with interruptions.  Here's a variant
> > of the trEval test case that triggers a legitimate error caused by

[...]

Turns out R_tryEval is not to blame; the error (here as well as in my
GUI) was occurring inside the unprotected call to PrintValue() after
tryEval returned. I should have noticed that sooner. Sorry for the
noise.

-Deepayan


From p.dalgaard at biostat.ku.dk  Tue May  8 08:23:46 2007
From: p.dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Tue, 08 May 2007 08:23:46 +0200
Subject: [Rd] Problem calling $ inside a $ method
In-Reply-To: <m24pmn6hbm.fsf@ziti.local>
References: <m24pmn6hbm.fsf@ziti.local>
Message-ID: <46401772.1060201@biostat.ku.dk>

Seth Falcon wrote:
> Hello,
>
> I wonder if this will make it through the spam filters given the
> subject line.
>
> I'm seeing the following when trying to call a dollar method inside of
> a dollar method.
>
>
>     setClass("Foo", representation(d="list"))
>     [1] "Foo"
>
>     f <- new("Foo", d=list(bob=1, alice=2))
>
> ## We can call dollar at this level and it works as expected
>
>     `$`(f, "bo")
>     [1] 1
>
>     `$`(f, "al")
>     [1] 2
>   
`$`(f at d, "bo"), surely.
> ## So set a method on Foo that does this
>
>     setMethod("$", "Foo", function(x, name) `$`(x at d, name))
>     [1] "$"
>
> ## But it doesn't work.  Why?
>
>   
This has nothing to do with methods, it's $'s nonstandard evaluation 
rules that are doing you in. This doesn't work either

 > x <- "al"
 > `$`(f at d, x)
NULL

and the reason is that `$`(a,b) is _exactly_ equivalent to a$b insofar 
as auto-quoting the second argument is concerned
>     f$bo
>     NULL
>
>     f$al
>     NULL
>
>   
...so both of these look for f at d$name which isn't there.
> ## Here is a hackish workaround.
>
>     setMethod("$", "Foo", function(x, name)
>               eval(substitute(x at d$FOO, list(FOO=name))))
>     [1] "$"
>
>     f$bo
>     [1] 1
>
>     f$al
>     [1] 2
>
> Other suggestions for workarounds?  Is this a bug?
>   
Not a bug. Another workaround is to use "[[", but beware that Robert has 
evil intentions with respect to that and partial matching...


From ripley at stats.ox.ac.uk  Tue May  8 08:25:43 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 8 May 2007 07:25:43 +0100 (BST)
Subject: [Rd] Problem calling $ inside a $ method
In-Reply-To: <m24pmn6hbm.fsf@ziti.local>
References: <m24pmn6hbm.fsf@ziti.local>
Message-ID: <Pine.LNX.4.64.0705080659320.31427@gannet.stats.ox.ac.uk>

In x$name, 'name' is supposed to be a symbol, unevaluated, or a 
literal character string (but not a character vector).

> f <- list(bob=1, alice=2)
> `$`(f, "bob")
[1] 1
> nm <- "bob"
> `$`(f, nm)
NULL

illustrates your misunderstanding.

Note that the S4 generic for $ in fact is

"$" = function(x, name)
{
     name <- as.character(substitute(name))
     standardGeneric("$")
}

so within S4 dispatch you will have a character vector for 'name'.
You need substitute() to get back to a literal character string.

I think the latter should be documented somewhere, but like many details 
of S4, it is not AFAIK.


On Mon, 7 May 2007, Seth Falcon wrote:

> Hello,
>
> I wonder if this will make it through the spam filters given the
> subject line.
>
> I'm seeing the following when trying to call a dollar method inside of
> a dollar method.
>
>
>    setClass("Foo", representation(d="list"))
>    [1] "Foo"
>
>    f <- new("Foo", d=list(bob=1, alice=2))
>
> ## We can call dollar at this level and it works as expected
>
>    `$`(f, "bo")
>    [1] 1
>
>    `$`(f, "al")
>    [1] 2
>
> ## So set a method on Foo that does this
>
>    setMethod("$", "Foo", function(x, name) `$`(x at d, name))
>    [1] "$"
>
> ## But it doesn't work.  Why?
>
>    f$bo
>    NULL
>
>    f$al
>    NULL
>
> ## Here is a hackish workaround.
>
>    setMethod("$", "Foo", function(x, name)
>              eval(substitute(x at d$FOO, list(FOO=name))))
>    [1] "$"
>
>    f$bo
>    [1] 1
>
>    f$al
>    [1] 2
>
> Other suggestions for workarounds?  Is this a bug?
>
> + seth
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From sfalcon at fhcrc.org  Tue May  8 16:42:10 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 08 May 2007 07:42:10 -0700
Subject: [Rd] Problem calling $ inside a $ method
In-Reply-To: <Pine.LNX.4.64.0705080659320.31427@gannet.stats.ox.ac.uk> (Brian
	Ripley's message of "Tue, 8 May 2007 07:25:43 +0100 (BST)")
References: <m24pmn6hbm.fsf@ziti.local>
	<Pine.LNX.4.64.0705080659320.31427@gannet.stats.ox.ac.uk>
Message-ID: <m2vef32x8d.fsf@ziti.local>

Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:

> In x$name, 'name' is supposed to be a symbol, unevaluated, or a
> literal character string (but not a character vector).
>
>> f <- list(bob=1, alice=2)
>> `$`(f, "bob")
> [1] 1
>> nm <- "bob"
>> `$`(f, nm)
> NULL

Thanks, this is the piece I was missing.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From jose.sierra at integromics.com  Tue May  8 19:08:39 2007
From: jose.sierra at integromics.com (Jose Sierra)
Date: Tue, 08 May 2007 19:08:39 +0200
Subject: [Rd] Median
Message-ID: <4640AE97.4040007@integromics.com>

Hello.

I need calculate the median of several column of a data.frame, in a new 
column of this data frame, but the median operator only calculate from a 
vector.

I have made a functionc that calculate the median but it is very slow. 
Are there any method in any package to calculate this?

Best regards.
Jose Sierra.

           A                        B                        C
-0.01678042      -0.0003354948     -0.0003354948
 0.17320485       0.2359448911      0.4884204711
-0.76066019      -0.6024409891     -0.5814788340
-0.04365426      -0.0060560612     -0.0025470274
 0.01885735       0.0027792718      0.0184081858
-0.07275884      -0.0371542622     -0.0315041630
  0.05740122       0.0814235514      0.0468193512
 -0.05404834      -0.0590145580      0.0489612929
 -0.28197518      -0.1899247807     -0.2089076920
 -0.02465713      -0.2222512947     -0.2688619668


From pepejunior at gmail.com  Tue May  8 20:58:30 2007
From: pepejunior at gmail.com (=?ISO-8859-1?Q?Jos=E9_Fern=E1ndez_Men=E9ndez?=)
Date: Tue, 8 May 2007 20:58:30 +0200
Subject: [Rd] Median
In-Reply-To: <4640AE97.4040007@integromics.com>
References: <4640AE97.4040007@integromics.com>
Message-ID: <3aa96040705081158o5be7e5b0k9dd4f39cbcdeae66@mail.gmail.com>

i don't understand very well but
apply(your_data_frame, 1,median) calculates the median of every row of
your data frame
apply(your_data_frame, 2, median) calculates the median  of every column

2007/5/8, Jose Sierra <jose.sierra at integromics.com>:
> Hello.
>
> I need calculate the median of several column of a data.frame, in a new
> column of this data frame, but the median operator only calculate from a
> vector.
>
> I have made a functionc that calculate the median but it is very slow.
> Are there any method in any package to calculate this?
>
> Best regards.
> Jose Sierra.
>
>            A                        B                        C
> -0.01678042      -0.0003354948     -0.0003354948
>  0.17320485       0.2359448911      0.4884204711
> -0.76066019      -0.6024409891     -0.5814788340
> -0.04365426      -0.0060560612     -0.0025470274
>  0.01885735       0.0027792718      0.0184081858
> -0.07275884      -0.0371542622     -0.0315041630
>   0.05740122       0.0814235514      0.0468193512
>  -0.05404834      -0.0590145580      0.0489612929
>  -0.28197518      -0.1899247807     -0.2089076920
>  -0.02465713      -0.2222512947     -0.2688619668
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From villegas.ro at gmail.com  Tue May  8 21:05:58 2007
From: villegas.ro at gmail.com (R. Villegas)
Date: Tue, 8 May 2007 21:05:58 +0200
Subject: [Rd] Median
In-Reply-To: <4640AE97.4040007@integromics.com>
References: <4640AE97.4040007@integromics.com>
Message-ID: <29cf68350705081205g39b5fa21y5f62f9cde3e442b1@mail.gmail.com>

2007/5/8, Jose Sierra <jose.sierra at integromics.com>:
> Hello.
>
> I need calculate the median of several column of a data.frame, in a new
> column of this data frame, but the median operator only calculate from a
> vector.
>
> I have made a functionc that calculate the median but it is very slow.
> Are there any method in any package to calculate this?
>
> Best regards.
> Jose Sierra.
>
>            A                        B                        C
> -0.01678042      -0.0003354948     -0.0003354948
>  0.17320485       0.2359448911      0.4884204711
> -0.76066019      -0.6024409891     -0.5814788340
> -0.04365426      -0.0060560612     -0.0025470274
>  0.01885735       0.0027792718      0.0184081858
> -0.07275884      -0.0371542622     -0.0315041630
>   0.05740122       0.0814235514      0.0468193512
>  -0.05404834      -0.0590145580      0.0489612929
>  -0.28197518      -0.1899247807     -0.2089076920
>  -0.02465713      -0.2222512947     -0.2688619668
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

Maybe you can start with this:

m2 <- data.frame(matrix(c(
-0.01678042,      -0.0003354948,     -0.0003354948,
 0.17320485,       0.2359448911,      0.4884204711,
-0.76066019,      -0.6024409891,     -0.5814788340,
-0.04365426,      -0.0060560612,     -0.0025470274,
 0.01885735,       0.0027792718,      0.0184081858,
-0.07275884,      -0.0371542622,     -0.0315041630,
 0.05740122,       0.0814235514,      0.0468193512,
-0.05404834,      -0.0590145580,      0.0489612929,
-0.28197518,      -0.1899247807,     -0.2089076920,
-0.02465713,      -0.2222512947,     -0.2688619668
),nrow=10))

m2[,4]<- median(m2[,1])
m2[,5]<- median(m2[,2])
m2[,6]<- median(m2[,3])

Rod.


From ripley at stats.ox.ac.uk  Wed May  9 07:41:23 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 9 May 2007 06:41:23 +0100 (BST)
Subject: [Rd] grep with fixed=TRUE and ignore.case=TRUE
In-Reply-To: <20070507142012.GF31253@cs.cas.cz>
References: <20070428114959.GA25723@cs.cas.cz>
	<46337DE1.5030607@statistik.uni-dortmund.de>
	<20070429135347.GA4690@cs.cas.cz> <20070507142012.GF31253@cs.cas.cz>
Message-ID: <Pine.LNX.4.64.0705090628200.6312@gannet.stats.ox.ac.uk>

On Mon, 7 May 2007, Petr Savicky wrote:

> Dear R developers,
>
> I suggest to modify the behaviour of "grep" function with fixed=TRUE option.
>
> Currently, fixed=TRUE implies ignore.case=FALSE (overrides ignore.case=TRUE,
> if set by the user).

As it clearly says it does.

> I suggest to keep ignore.case as set by the user even if fixed=TRUE. Since
> the default of ignore.case is FALSE, this would not change the behaviour
> of grep, if the user does not set ignore.case explicitly.
>
> In my opinion, fixed=TRUE is most useful for suppressing meta-character
> expansion. On the other hand, for a simple word search, ignoring
> case is sometimes useful.

Well, it was written to use in R's own code as a quick way to match a 
fixed sequence of bytes.  It is not suitable for a 'word' search as it 
does not (just) match to words.

> If for some reason, it is better to keep the current behavior of grep, then I
> suggest to extend the documentation as follows:
>
> ORIGINAL:
>   fixed: logical.  If 'TRUE', 'pattern' is a string to be matched as
>          is.  Overrides all conflicting arguments.
>
> SUGGESTED:
>   fixed: logical.  If 'TRUE', 'pattern' is a string to be matched as
>          is.  Overrides all conflicting arguments including ignore.case.

Oh come on, ignore.case clearly conflicts with 'as is'!
Adding unnecessary qualifiers just makes the text harder to read.


I suggest you collaborate with the person who replied that he thought this 
was a good idea to supply patches against the R-devel sources for 
scrutiny.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From maechler at stat.math.ethz.ch  Wed May  9 08:45:51 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 9 May 2007 08:45:51 +0200
Subject: [Rd] Do NOT misuse R-devel! {was "Median"}
In-Reply-To: <4640AE97.4040007@integromics.com>
References: <4640AE97.4040007@integromics.com>
Message-ID: <17985.28191.114979.268244@stat.math.ethz.ch>

Please, Jose,  do NOT misuse  R-devel for such questions!

There's R-help (and many good books on R and maybe your local R expert)
for asking such questions.

Definitely *not* the R-devel mailing list.

--> http://www.R-project.org/mail.html , the posting guide, etc.

Martin Maechler, ETH Zurich
{as maintainer of these R mailing lists}


>>  Hello.
>>  I need calculate the median of several column of a data.frame, in a new 
>>  column of this data frame, but the median operator only calculate from a 
>>  vector.
>> 
>>  I have made a functionc that calculate the median but it is very slow. 
>>  Are there any method in any package to calculate this?
>> 
>>  Best regards.
>>  Jose Sierra.
>> 
>> 	    A                        B                        C
>>  -0.01678042      -0.0003354948     -0.0003354948
............


From jarioksa at sun3.oulu.fi  Wed May  9 10:10:22 2007
From: jarioksa at sun3.oulu.fi (Jari Oksanen)
Date: Wed, 09 May 2007 08:10:22 +0000
Subject: [Rd] step() in sink() and Sweave()
Message-ID: <1178698222.28498.18.camel@biol102145.oulu.fi>

Dear developers,

I just noticed that step() function currently prints the current model
using message(), but the resulting model using print(). The relevant
commands within the step() body are:

if (trace) message("Start:  AIC=", format(round(bAIC, 2)), "\n", 
    cut.string(deparse(as.vector(formula(fit)))), "\n")

(with example() output:) 
Start:  AIC=190.69
Fertility ~ Agriculture + Examination + Education + Catholic + 
    Infant.Mortality

And later:

if (trace) print(aod[o, ])

(with example() output:)

                   Df Sum of Sq    RSS    AIC
- Examination       1      53.0 2158.1  189.9
<none>                          2105.0  190.7
- Agriculture       1     307.7 2412.8  195.1
- Infant.Mortality  1     408.8 2513.8  197.0
- Catholic          1     447.7 2552.8  197.8
- Education         1    1162.6 3267.6  209.4

This is a nuisance if you want to divert output to a file with sink() or
use step() in Sweave: the header and the table go to different places,
and without message() part the print() part is crippled.  It may be that
there is some way to avoid this, but obviously that needs some degree of
acrobatic R skills. 

An example of the behaviour:

sink(tempfile())
example(step)
sink()

I assueme that the behaviour is intentional but searching NEWS did not
give any information or reasoning. Would it be sensible to go back to
the old behaviour? I found some Swoven files from R 2.4.0 that still put
both parts of the output to the same place. For the sake of Sweave and
sink, I'd prefer the one place to be stdout instead of stderr.

Best wishes, Jari Oksanen
-- 
Jari Oksanen <jarioksa at cc.oulu.fi>


From S.Ellison at lgc.co.uk  Wed May  9 12:01:50 2007
From: S.Ellison at lgc.co.uk (S Ellison)
Date: Wed, 09 May 2007 11:01:50 +0100
Subject: [Rd] One for the wish list - var.default etc
Message-ID: <s641aa32.094@tedmail2.lgc.co.uk>

I was working on a permutation-like variant of the bootstrap for smaller samples, and wanted to be able to get summary stats of my estimator conveniently. mean() is OK as its a generic, so a mean.oddboot function gets used automatically. But var, sd and others are not originally written as generic; they have to be explicitly masked by a package or new declaration.

It would have been nice if stats::var was a generic to make it more easily extensible... one for the wish list?

Steve Ellison

*******************************************************************
This email and any attachments are confidential. Any use, co...{{dropped}}


From ripley at stats.ox.ac.uk  Wed May  9 13:00:14 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 9 May 2007 12:00:14 +0100 (BST)
Subject: [Rd] One for the wish list - var.default etc
In-Reply-To: <s641aa32.094@tedmail2.lgc.co.uk>
References: <s641aa32.094@tedmail2.lgc.co.uk>
Message-ID: <Pine.LNX.4.64.0705091153330.7060@gannet.stats.ox.ac.uk>

On Wed, 9 May 2007, S Ellison wrote:

> I was working on a permutation-like variant of the bootstrap for smaller 
> samples, and wanted to be able to get summary stats of my estimator 
> conveniently. mean() is OK as its a generic, so a mean.oddboot function 
> gets used automatically. But var, sd and others are not originally 
> written as generic; they have to be explicitly masked by a package or 
> new declaration.
>
> It would have been nice if stats::var was a generic to make it more 
> easily extensible... one for the wish list?

There is a reason: does your version have exactly the semantics of the 
function in stats (which does more than compute a variance)?  If we make
functions generic, we rely on package writers implementing the documented 
semantics (and that is not easy to check).  That was deemed to be too
easy to get wrong for var().

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From S.Ellison at lgc.co.uk  Wed May  9 14:43:50 2007
From: S.Ellison at lgc.co.uk (S Ellison)
Date: Wed, 09 May 2007 13:43:50 +0100
Subject: [Rd] One for the wish list - var.default etc
Message-ID: <s641d024.022@tedmail2.lgc.co.uk>

Brian,

>If we make functions generic, we rely on package writers implementing the documented 
>semantics (and that is not easy to check).  That was deemed to be too
>easy to get wrong for var().

Hard to argue with a considered decision, but the alternative facing increasing numbers of package developers seems to me to be pretty bad too ...

There are two ways a package developer can currently get a function tailored to their own new class. One is to rely on a generic function to launch their class-specific instance, and write only the class-specific instance. That may indeed be hard to check, though I would be inclined to think that is the package developer's problem, not the core team's. But it has (as far as I know today ...?) no wider impact.

The other option, with no existing generic, is to mask the original function by writing a new generic function that respects the original syntax exactly, and then implement a fun.default that replicates the original non-generic function's behaviour, hopefully by calling it directly. As an example, library(circular) masks stats::var, though I'm fairly sure its not the only case.
This has obvious disadvantages, including potentially system-wide (R-wide at least!) impact and unfavourable interactions between packages masking each other's generics and defaults). 

I will use masking if I have to, at least for my own local use where its only me that suffers if (when?) I get it wrong. But the idea makes me very nervous, especially if I imagine folk who _don't_ get as nervous at the idea. 

Hence the feeling that wider use of generics for fundamental and common functions might make for a safer world. 


Steve E

*******************************************************************
This email and any attachments are confidential. Any use, co...{{dropped}}


From sgiannerini at gmail.com  Wed May  9 15:15:23 2007
From: sgiannerini at gmail.com (Simone Giannerini)
Date: Wed, 9 May 2007 15:15:23 +0200
Subject: [Rd] fix() changes the class of mts objects
Message-ID: <3c12769c0705090615y3be14091w37bf6cc06bb01b0c@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070509/747f16ed/attachment.pl 

From ggrothendieck at gmail.com  Wed May  9 15:28:42 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 9 May 2007 09:28:42 -0400
Subject: [Rd] One for the wish list - var.default etc
In-Reply-To: <s641d024.022@tedmail2.lgc.co.uk>
References: <s641d024.022@tedmail2.lgc.co.uk>
Message-ID: <971536df0705090628k3f50b63bn5bc1138aab1c5ee@mail.gmail.com>

I agree that wider use of generics in the core of R is desirable as
it facilitates designs in various addon packages that are much easier
to use.  In the absence of generics, the addon package either has to
clobber/mask the version in the core, which really is unacceptable, or define
a different name which adds the mental load of having to remember
yet something else whenever you use that aspect of the package.

filter, as.POSIXlt, rowMeans, rowSums, integrate and various lattice
panel functions are others that I would like to see made
generic for the sake of zoo, fame and/or Ryacas and likely other
packages.

On 5/9/07, S Ellison <S.Ellison at lgc.co.uk> wrote:
> Brian,
>
> >If we make functions generic, we rely on package writers implementing the documented
> >semantics (and that is not easy to check).  That was deemed to be too
> >easy to get wrong for var().
>
> Hard to argue with a considered decision, but the alternative facing increasing numbers of package developers seems to me to be pretty bad too ...
>
> There are two ways a package developer can currently get a function tailored to their own new class. One is to rely on a generic function to launch their class-specific instance, and write only the class-specific instance. That may indeed be hard to check, though I would be inclined to think that is the package developer's problem, not the core team's. But it has (as far as I know today ...?) no wider impact.
>
> The other option, with no existing generic, is to mask the original function by writing a new generic function that respects the original syntax exactly, and then implement a fun.default that replicates the original non-generic function's behaviour, hopefully by calling it directly. As an example, library(circular) masks stats::var, though I'm fairly sure its not the only case.
> This has obvious disadvantages, including potentially system-wide (R-wide at least!) impact and unfavourable interactions between packages masking each other's generics and defaults).
>
> I will use masking if I have to, at least for my own local use where its only me that suffers if (when?) I get it wrong. But the idea makes me very nervous, especially if I imagine folk who _don't_ get as nervous at the idea.
>
> Hence the feeling that wider use of generics for fundamental and common functions might make for a safer world.
>
>
> Steve E
>
> *******************************************************************
> This email and any attachments are confidential. Any use, co...{{dropped}}
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From ripley at stats.ox.ac.uk  Wed May  9 16:00:14 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 9 May 2007 15:00:14 +0100 (BST)
Subject: [Rd] fix() changes the class of mts objects
In-Reply-To: <3c12769c0705090615y3be14091w37bf6cc06bb01b0c@mail.gmail.com>
References: <3c12769c0705090615y3be14091w37bf6cc06bb01b0c@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705091457250.6403@auk.stats>

Why did you expect otherwise?: fix() is treating it as matrix and 
?edit.matrix says that it only works on 'simple data frames' (and converts 
matrices to such).

Editing R objects can easily change aspects of them, as dput() is not 
faithful, environments can get lost and so on.

On Wed, 9 May 2007, Simone Giannerini wrote:

> Dear all,
>
> it looks like fix() changes the class of mts objects, here is a reproducible
> example (tested both on WinXP and Linux):
>
>> x <- ts(cbind(1:5,1:5))
>> x
> Time Series:
> Start = 1
> End = 5
> Frequency = 1
>  Series 1 Series 2
> 1        1        1
> 2        2        2
> 3        3        3
> 4        4        4
> 5        5        5
>> class(x)
> [1] "mts" "ts"
>> edit(x)
>     Series 1 Series 2
> [1,]        1        1
> [2,]        2        2
> [3,]        3        3
> [4,]        4        4
> [5,]        5        5
>> class(x)
> [1] "mts" "ts"
>> fix(x)
>> class(x)
> [1] "matrix"
>> x
>     Series 1 Series 2
> [1,]        1        1
> [2,]        2        2
> [3,]        3        3
> [4,]        4        4
> [5,]        5        5
>
>> R.version
>               _
> platform       i386-pc-mingw32
> arch           i386
> os             mingw32
> system         i386, mingw32
> status
> major          2
> minor          5.0
> year           2007
> month          04
> day            23
> svn rev        41293
> language       R
> version.string R version 2.5.0 (2007-04-23)
>
>> R.version
> platform       x86_64-unknown-linux-gnu
> arch           x86_64
> os             linux-gnu
> system         x86_64, linux-gnu
> status
> major          2
> minor          5.0
> year           2007
> month          04
> day            23
> svn rev        41293
> language       R
> version.string R version 2.5.0 (2007-04-23)
>
> ______________________________________________________
>
> Simone Giannerini
> Dipartimento di Scienze Statistiche "Paolo Fortunati"
> Universita' di Bologna
> Via delle belle arti 41 - 40126  Bologna,  ITALY
> Tel: +39 051 2098262  Fax: +39 051 232153
> ______________________________________________________
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Wed May  9 16:08:55 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 9 May 2007 15:08:55 +0100 (BST)
Subject: [Rd] One for the wish list - var.default etc
In-Reply-To: <s641d024.022@tedmail2.lgc.co.uk>
References: <s641d024.022@tedmail2.lgc.co.uk>
Message-ID: <Pine.LNX.4.64.0705091353090.30339@auk.stats>

On Wed, 9 May 2007, S Ellison wrote:

> Brian,
>
>> If we make functions generic, we rely on package writers implementing 
>> the documented semantics (and that is not easy to check).  That was 
>> deemed to be too easy to get wrong for var().
>
> Hard to argue with a considered decision, but the alternative facing 
> increasing numbers of package developers seems to me to be pretty bad 
> too ...
>
> There are two ways a package developer can currently get a function 
> tailored to their own new class. One is to rely on a generic function to 
> launch their class-specific instance, and write only the class-specific 
> instance. That may indeed be hard to check, though I would be inclined 
> to think that is the package developer's problem, not the core team's. 
> But it has (as far as I know today ...?) no wider impact.

But it does: it gives the method privileged access, in this case to the 
stats namespace, even allowing a user to change the default method
which namespaces to a very large extent protect against.

If var is not generic, we can be sure that all uses within the stats 
namespace and any namespace that imports it are of stats::var.  That is 
not something to give up lightly.

> The other option, with no existing generic, is to mask the original 
> function by writing a new generic function that respects the original 
> syntax exactly, and then implement a fun.default that replicates the 
> original non-generic function's behaviour, hopefully by calling it 
> directly. As an example, library(circular) masks stats::var, though I'm 
> fairly sure its not the only case. This has obvious disadvantages, 
> including potentially system-wide (R-wide at least!) impact and 
> unfavourable interactions between packages masking each other's generics 
> and defaults).

Just as can happen with methods.

> I will use masking if I have to, at least for my own local use where its 
> only me that suffers if (when?) I get it wrong. But the idea makes me 
> very nervous, especially if I imagine folk who _don't_ get as nervous at 
> the idea.
>
> Hence the feeling that wider use of generics for fundamental and common 
> functions might make for a safer world.

The opposite appears to be truer.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From jeff.horner at vanderbilt.edu  Wed May  9 16:30:02 2007
From: jeff.horner at vanderbilt.edu (Jeffrey Horner)
Date: Wed, 09 May 2007 09:30:02 -0500
Subject: [Rd] Duplicate assignment in function newbzfile on R-trunk
Message-ID: <4641DAEA.5050601@vanderbilt.edu>

There's a duplicated assignment to new->fgetc in function newbzfile:

Index: src/main/connections.c
===================================================================
--- src/main/connections.c      (revision 41502)
+++ src/main/connections.c      (working copy)
@@ -1311,7 +1311,6 @@
      new->vfprintf = &dummy_vfprintf;
      new->fgetc_internal = &bzfile_fgetc_internal;
      new->fgetc = &dummy_fgetc;
-    new->fgetc = &dummy_fgetc;
      new->seek = &null_seek;
      new->fflush = &null_fflush;
      new->read = &bzfile_read;


Jeff
-- 
http://biostat.mc.vanderbilt.edu/JeffreyHorner


From sgiannerini at gmail.com  Wed May  9 16:42:45 2007
From: sgiannerini at gmail.com (Simone Giannerini)
Date: Wed, 9 May 2007 16:42:45 +0200
Subject: [Rd] fix() changes the class of mts objects
In-Reply-To: <Pine.LNX.4.64.0705091457250.6403@auk.stats>
References: <3c12769c0705090615y3be14091w37bf6cc06bb01b0c@mail.gmail.com>
	<Pine.LNX.4.64.0705091457250.6403@auk.stats>
Message-ID: <3c12769c0705090742n53e8b641ma68bbe4267a60dad@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070509/5b80ae12/attachment.pl 

From ripley at stats.ox.ac.uk  Wed May  9 16:44:16 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 9 May 2007 15:44:16 +0100 (BST)
Subject: [Rd] fix() changes the class of mts objects
In-Reply-To: <3c12769c0705090742n53e8b641ma68bbe4267a60dad@mail.gmail.com>
References: <3c12769c0705090615y3be14091w37bf6cc06bb01b0c@mail.gmail.com> 
	<Pine.LNX.4.64.0705091457250.6403@auk.stats>
	<3c12769c0705090742n53e8b641ma68bbe4267a60dad@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705091543360.9689@gannet.stats.ox.ac.uk>

On Wed, 9 May 2007, Simone Giannerini wrote:

> My concern here is that users can be confused from the fact that if one has
> a single time series fix() uses the default method of edit() and does not
> change
> its class
>
>> x <- ts(1:5)
>> fix(x)
>> class(x)
> [1] "ts"
>
> whereas for mts objects edit.data.frame is used so that in my opinion it
> might be worth to clarify it in the documentation.

Which documentation do you suggest?  That vectors and matrices are treated 
differently is there.

>
> Regards
>
> Simone
>
> On 5/9/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>> 
>> Why did you expect otherwise?: fix() is treating it as matrix and
>> ?edit.matrix says that it only works on 'simple data frames' (and converts
>> matrices to such).
>> 
>> Editing R objects can easily change aspects of them, as dput() is not
>> faithful, environments can get lost and so on.
>> 
>> On Wed, 9 May 2007, Simone Giannerini wrote:
>> 
>> > Dear all,
>> >
>> > it looks like fix() changes the class of mts objects, here is a
>> reproducible
>> > example (tested both on WinXP and Linux):
>> >
>> >> x <- ts(cbind(1:5,1:5))
>> >> x
>> > Time Series:
>> > Start = 1
>> > End = 5
>> > Frequency = 1
>> >  Series 1 Series 2
>> > 1        1        1
>> > 2        2        2
>> > 3        3        3
>> > 4        4        4
>> > 5        5        5
>> >> class(x)
>> > [1] "mts" "ts"
>> >> edit(x)
>> >     Series 1 Series 2
>> > [1,]        1        1
>> > [2,]        2        2
>> > [3,]        3        3
>> > [4,]        4        4
>> > [5,]        5        5
>> >> class(x)
>> > [1] "mts" "ts"
>> >> fix(x)
>> >> class(x)
>> > [1] "matrix"
>> >> x
>> >     Series 1 Series 2
>> > [1,]        1        1
>> > [2,]        2        2
>> > [3,]        3        3
>> > [4,]        4        4
>> > [5,]        5        5
>> >
>> >> R.version
>> >               _
>> > platform       i386-pc-mingw32
>> > arch           i386
>> > os             mingw32
>> > system         i386, mingw32
>> > status
>> > major          2
>> > minor          5.0
>> > year           2007
>> > month          04
>> > day            23
>> > svn rev        41293
>> > language       R
>> > version.string R version 2.5.0 (2007-04-23)
>> >
>> >> R.version
>> > platform       x86_64-unknown-linux-gnu
>> > arch           x86_64
>> > os             linux-gnu
>> > system         x86_64, linux-gnu
>> > status
>> > major          2
>> > minor          5.0
>> > year           2007
>> > month          04
>> > day            23
>> > svn rev        41293
>> > language       R
>> > version.string R version 2.5.0 (2007-04-23)
>> >
>> > ______________________________________________________
>> >
>> > Simone Giannerini
>> > Dipartimento di Scienze Statistiche "Paolo Fortunati"
>> > Universita' di Bologna
>> > Via delle belle arti 41 - 40126  Bologna,  ITALY
>> > Tel: +39 051 2098262  Fax: +39 051 232153
>> > ______________________________________________________
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>> 
>> --
>> Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
>> University of Oxford,             Tel:  +44 1865 272861 (self)
>> 1 South Parks Road,                     +44 1865 272866 (PA)
>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>> 
>
>
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From jfox at mcmaster.ca  Wed May  9 17:10:29 2007
From: jfox at mcmaster.ca (John Fox)
Date: Wed, 9 May 2007 11:10:29 -0400
Subject: [Rd] Behaviour of read.table with empty columns
Message-ID: <20070509151030.BAGH1673.tomts16-srv.bellnexxia.net@JohnDesktop8300>

Dear r-devel list members,

I stumbled across the following behaviour of read.table() recently: Suppose
that I have the data

a  " " ""
"" ""  ""

in a file or copied to the clipboard, and issue the command

> DF <- read.table("clipboard")
> DF
  V1 V2 V3
1  a NA NA
2    NA NA

> is.na(DF)
        V1   V2   V3
[1,] FALSE TRUE TRUE
[2,] FALSE TRUE TRUE

I was surprised by the NAs. Note that they occur only when a column consists
entirely of empty strings or strings composed of blanks. 

On the other hand

> data.frame(A=c("", "", ""))
  A
1  
2  
3  

works as I would have expected.

A work-around for me was

> DF[is.na(DF)] <- ""
> DF
  V1 V2 V3
1  a      
2         

But, as I said, I found the behaviour of read.table() puzzling. 

All this is with R 2.5.0 on a Windows XP Pro SP 2 system.

Comments?

Thanks,
 John

--------------------------------
John Fox, Professor
Department of Sociology
McMaster University
Hamilton, Ontario
Canada L8S 4M4
905-525-9140x23604
http://socserv.mcmaster.ca/jfox


From sgiannerini at gmail.com  Wed May  9 17:11:34 2007
From: sgiannerini at gmail.com (Simone Giannerini)
Date: Wed, 9 May 2007 17:11:34 +0200
Subject: [Rd] fix() changes the class of mts objects
In-Reply-To: <Pine.LNX.4.64.0705091543360.9689@gannet.stats.ox.ac.uk>
References: <3c12769c0705090615y3be14091w37bf6cc06bb01b0c@mail.gmail.com>
	<Pine.LNX.4.64.0705091457250.6403@auk.stats>
	<3c12769c0705090742n53e8b641ma68bbe4267a60dad@mail.gmail.com>
	<Pine.LNX.4.64.0705091543360.9689@gannet.stats.ox.ac.uk>
Message-ID: <3c12769c0705090811s3b4261cfi10f728c6123df48c@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070509/e9363ae2/attachment.pl 

From jhallman at frb.gov  Wed May  9 17:29:48 2007
From: jhallman at frb.gov (Jeffrey J. Hallman)
Date: 09 May 2007 11:29:48 -0400
Subject: [Rd] fix() changes the class of mts objects
References: <3c12769c0705090615y3be14091w37bf6cc06bb01b0c@mail.gmail.com>
	<Pine.LNX.4.64.0705091457250.6403@auk.stats>
	<3c12769c0705090742n53e8b641ma68bbe4267a60dad@mail.gmail.com>
Message-ID: <xmrirb2qakz.fsf@mralx1.rsma.frb.gov>

"Simone Giannerini" <sgiannerini at gmail.com> writes:

> My concern here is that users can be confused from the fact that if one has
> a single time series fix() uses the default method of edit() and does not
> change
> its class
> 
> > x <- ts(1:5)
> > fix(x)
> > class(x)
> [1] "ts"
> 
> whereas for mts objects edit.data.frame is used so that in my opinion it
> might be worth to clarify it in the documentation.

So write edit.ts() and submit it.

-- 
Jeff


From ggrothendieck at gmail.com  Wed May  9 17:40:57 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 9 May 2007 11:40:57 -0400
Subject: [Rd] Behaviour of read.table with empty columns
In-Reply-To: <20070509151030.BAGH1673.tomts16-srv.bellnexxia.net@JohnDesktop8300>
References: <20070509151030.BAGH1673.tomts16-srv.bellnexxia.net@JohnDesktop8300>
Message-ID: <971536df0705090840u2eb24d33t5f535b4dfe6ac648@mail.gmail.com>

Perhaps this has to do with the fact that there is not enough
information available
to establish the class of those columns.  For example, try this:

read.table("clipboard", colClasses = "character")


On 5/9/07, John Fox <jfox at mcmaster.ca> wrote:
> Dear r-devel list members,
>
> I stumbled across the following behaviour of read.table() recently: Suppose
> that I have the data
>
> a  " " ""
> "" ""  ""
>
> in a file or copied to the clipboard, and issue the command
>
> > DF <- read.table("clipboard")
> > DF
>  V1 V2 V3
> 1  a NA NA
> 2    NA NA
>
> > is.na(DF)
>        V1   V2   V3
> [1,] FALSE TRUE TRUE
> [2,] FALSE TRUE TRUE
>
> I was surprised by the NAs. Note that they occur only when a column consists
> entirely of empty strings or strings composed of blanks.
>
> On the other hand
>
> > data.frame(A=c("", "", ""))
>  A
> 1
> 2
> 3
>
> works as I would have expected.
>
> A work-around for me was
>
> > DF[is.na(DF)] <- ""
> > DF
>  V1 V2 V3
> 1  a
> 2
>
> But, as I said, I found the behaviour of read.table() puzzling.
>
> All this is with R 2.5.0 on a Windows XP Pro SP 2 system.
>
> Comments?
>
> Thanks,
>  John
>
> --------------------------------
> John Fox, Professor
> Department of Sociology
> McMaster University
> Hamilton, Ontario
> Canada L8S 4M4
> 905-525-9140x23604
> http://socserv.mcmaster.ca/jfox
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From jhallman at frb.gov  Wed May  9 17:46:13 2007
From: jhallman at frb.gov (Jeffrey J. Hallman)
Date: 09 May 2007 11:46:13 -0400
Subject: [Rd] One for the wish list - var.default etc
References: <s641d024.022@tedmail2.lgc.co.uk>
	<Pine.LNX.4.64.0705091353090.30339@auk.stats>
Message-ID: <xmrejlqq9tm.fsf@mralx1.rsma.frb.gov>

Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:

> On Wed, 9 May 2007, S Ellison wrote:
> 
> > Brian,
> >
> >> If we make functions generic, we rely on package writers implementing 
> >> the documented semantics (and that is not easy to check).  That was 
> >> deemed to be too easy to get wrong for var().
> >
> > Hard to argue with a considered decision, but the alternative facing 
> > increasing numbers of package developers seems to me to be pretty bad 
> > too ...
> >
> > There are two ways a package developer can currently get a function 
> > tailored to their own new class. One is to rely on a generic function to 
> > launch their class-specific instance, and write only the class-specific 
> > instance. That may indeed be hard to check, though I would be inclined 
> > to think that is the package developer's problem, not the core team's. 
> > But it has (as far as I know today ...?) no wider impact.
> 
> But it does: it gives the method privileged access, in this case to the 
> stats namespace, even allowing a user to change the default method
> which namespaces to a very large extent protect against.
> 
> If var is not generic, we can be sure that all uses within the stats 
> namespace and any namespace that imports it are of stats::var.  That is 
> not something to give up lightly.

No, but neither is the flexibility afforded by generics. What we have here is
a false tradeoff between flexibility vs. the safety of locking stuff down. 

The tradeoff is false because unit tests are a better way to assure safety.
If the major packages (like stats) had a suite of tests, a package developer
could load his own package, run all the unit tests, and see if he broke
something.  If it turns out that he broke something that wasn't covered by the
tests, he could create a new test for that and submit it somewhere, perhaps
on the R Wiki. 

-- 
Jeff


From ripley at stats.ox.ac.uk  Wed May  9 18:04:58 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 9 May 2007 17:04:58 +0100 (BST)
Subject: [Rd] Behaviour of read.table with empty columns
In-Reply-To: <20070509151030.BAGH1673.tomts16-srv.bellnexxia.net@JohnDesktop8300>
References: <20070509151030.BAGH1673.tomts16-srv.bellnexxia.net@JohnDesktop8300>
Message-ID: <Pine.LNX.4.64.0705091622520.20583@gannet.stats.ox.ac.uk>

On Wed, 9 May 2007, John Fox wrote:

> Dear r-devel list members,
>
> I stumbled across the following behaviour of read.table() recently: 
Suppose
> that I have the data
>
> a  " " ""
> "" ""  ""
>
> in a file or copied to the clipboard, and issue the command
>
>> DF <- read.table("clipboard")
>> DF
>  V1 V2 V3
> 1  a NA NA
> 2    NA NA
>
>> is.na(DF)
>        V1   V2   V3
> [1,] FALSE TRUE TRUE
> [2,] FALSE TRUE TRUE
>
> I was surprised by the NAs. Note that they occur only when a column consists
> entirely of empty strings or strings composed of blanks.
>
> On the other hand
>
>> data.frame(A=c("", "", ""))
>  A
> 1
> 2
> 3
>
> works as I would have expected.

How did you expect R to know that "" meant a character column?  You are 
allowed to quote any type of column, so as far as read.table is concerned 
the columns is entirely empty and so its type is unknown.  It defaults to 
the simplest possible type, logical.

The answer is I think to use colClasses="character".

It is probably slightly more accurate to say that if colClasses is not 
given, all columns are read as character columns, and then converted to 
the simplest possible type.  In earlier versions of R you could get NULL 
columns (if there were no rows at all), but now the simplest is logical.

Brian

> A work-around for me was
>
>> DF[is.na(DF)] <- ""
>> DF
>  V1 V2 V3
> 1  a
> 2
>
> But, as I said, I found the behaviour of read.table() puzzling.
>
> All this is with R 2.5.0 on a Windows XP Pro SP 2 system.
>
> Comments?
>
> Thanks,
> John
>
> --------------------------------
> John Fox, Professor
> Department of Sociology
> McMaster University
> Hamilton, Ontario
> Canada L8S 4M4
> 905-525-9140x23604
> http://socserv.mcmaster.ca/jfox
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From rgentlem at fhcrc.org  Wed May  9 18:12:35 2007
From: rgentlem at fhcrc.org (Robert Gentleman)
Date: Wed, 09 May 2007 09:12:35 -0700
Subject: [Rd] One for the wish list - var.default etc
In-Reply-To: <xmrejlqq9tm.fsf@mralx1.rsma.frb.gov>
References: <s641d024.022@tedmail2.lgc.co.uk>	<Pine.LNX.4.64.0705091353090.30339@auk.stats>
	<xmrejlqq9tm.fsf@mralx1.rsma.frb.gov>
Message-ID: <4641F2F3.5030806@fhcrc.org>



Jeffrey J. Hallman wrote:
> Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:
> 
>> On Wed, 9 May 2007, S Ellison wrote:
>>
>>> Brian,
>>>
>>>> If we make functions generic, we rely on package writers implementing 
>>>> the documented semantics (and that is not easy to check).  That was 
>>>> deemed to be too easy to get wrong for var().
>>> Hard to argue with a considered decision, but the alternative facing 
>>> increasing numbers of package developers seems to me to be pretty bad 
>>> too ...
>>>
>>> There are two ways a package developer can currently get a function 
>>> tailored to their own new class. One is to rely on a generic function to 
>>> launch their class-specific instance, and write only the class-specific 
>>> instance. That may indeed be hard to check, though I would be inclined 
>>> to think that is the package developer's problem, not the core team's. 
>>> But it has (as far as I know today ...?) no wider impact.
>> But it does: it gives the method privileged access, in this case to the 
>> stats namespace, even allowing a user to change the default method
>> which namespaces to a very large extent protect against.
>>
>> If var is not generic, we can be sure that all uses within the stats 
>> namespace and any namespace that imports it are of stats::var.  That is 
>> not something to give up lightly.
> 
> No, but neither is the flexibility afforded by generics. What we have here is
> a false tradeoff between flexibility vs. the safety of locking stuff down. 

   Yes, that is precisely one of the points, and as some of us recently 
experienced, a reasonably dedicated programmer can over-ride any base 
function through an add-on package. It is, in my opinion a bad idea to 
become the police here.

   AFAIK, Brian's considered decision, was his, I am aware of no 
discussion of that particular point of view about var (and as noted 
above, it simply doesn't work), it also, AFAICS confuses what happens 
(implementation) from what should happen (which is easy to do, because 
with most of the methods, either S3 or S4 there is very little written 
about what should happen).

   That said, there has been some relatively open discussion on one 
solution to this problem, and I am hopeful that we will have something 
in place before the end of July.

   A big problem with S4 generics is who owns them, and what seems to be 
a reasonable medium term solution is to provide a package that lives 
slightly above base in the search path that will hold generic functions 
for any base functions that do not have them. Authors of add on packages 
can then at least share a common generic when that is appropriate. But 
do realize that there are lots of reasons to have generics with the same 
name, in different packages that are not compatible, and normal scoping 
rules apply. For example the XML package has a generic function addNode, 
as does the graph package, and they are not compatible, nor should they 
be. Anyone wanting to use both packages (and I often do) needs to manage 
the name conflicts (and that is where namespaces are essential).

best wishes
   Robert



> 
> The tradeoff is false because unit tests are a better way to assure safety.
> If the major packages (like stats) had a suite of tests, a package developer
> could load his own package, run all the unit tests, and see if he broke
> something.  If it turns out that he broke something that wasn't covered by the
> tests, he could create a new test for that and submit it somewhere, perhaps
> on the R Wiki. 
> 

-- 
Robert Gentleman, PhD
Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M2-B876
PO Box 19024
Seattle, Washington 98109-1024
206-667-7700
rgentlem at fhcrc.org


From ggrothendieck at gmail.com  Wed May  9 18:32:26 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 9 May 2007 12:32:26 -0400
Subject: [Rd] One for the wish list - var.default etc
In-Reply-To: <4641F2F3.5030806@fhcrc.org>
References: <s641d024.022@tedmail2.lgc.co.uk>
	<Pine.LNX.4.64.0705091353090.30339@auk.stats>
	<xmrejlqq9tm.fsf@mralx1.rsma.frb.gov> <4641F2F3.5030806@fhcrc.org>
Message-ID: <971536df0705090932g68b9605dk8039b2da12aaa@mail.gmail.com>

The generics don't have to be S4.  In fact, in many cases it would
be better to have them be S3 for consistency with other similar generics
in the core of R.

Or I wonder about the possibility of having generics which can have
some methods being of S3 and others of S4.

On 5/9/07, Robert Gentleman <rgentlem at fhcrc.org> wrote:
>
>
> Jeffrey J. Hallman wrote:
> > Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:
> >
> >> On Wed, 9 May 2007, S Ellison wrote:
> >>
> >>> Brian,
> >>>
> >>>> If we make functions generic, we rely on package writers implementing
> >>>> the documented semantics (and that is not easy to check).  That was
> >>>> deemed to be too easy to get wrong for var().
> >>> Hard to argue with a considered decision, but the alternative facing
> >>> increasing numbers of package developers seems to me to be pretty bad
> >>> too ...
> >>>
> >>> There are two ways a package developer can currently get a function
> >>> tailored to their own new class. One is to rely on a generic function to
> >>> launch their class-specific instance, and write only the class-specific
> >>> instance. That may indeed be hard to check, though I would be inclined
> >>> to think that is the package developer's problem, not the core team's.
> >>> But it has (as far as I know today ...?) no wider impact.
> >> But it does: it gives the method privileged access, in this case to the
> >> stats namespace, even allowing a user to change the default method
> >> which namespaces to a very large extent protect against.
> >>
> >> If var is not generic, we can be sure that all uses within the stats
> >> namespace and any namespace that imports it are of stats::var.  That is
> >> not something to give up lightly.
> >
> > No, but neither is the flexibility afforded by generics. What we have here is
> > a false tradeoff between flexibility vs. the safety of locking stuff down.
>
>   Yes, that is precisely one of the points, and as some of us recently
> experienced, a reasonably dedicated programmer can over-ride any base
> function through an add-on package. It is, in my opinion a bad idea to
> become the police here.
>
>   AFAIK, Brian's considered decision, was his, I am aware of no
> discussion of that particular point of view about var (and as noted
> above, it simply doesn't work), it also, AFAICS confuses what happens
> (implementation) from what should happen (which is easy to do, because
> with most of the methods, either S3 or S4 there is very little written
> about what should happen).
>
>   That said, there has been some relatively open discussion on one
> solution to this problem, and I am hopeful that we will have something
> in place before the end of July.
>
>   A big problem with S4 generics is who owns them, and what seems to be
> a reasonable medium term solution is to provide a package that lives
> slightly above base in the search path that will hold generic functions
> for any base functions that do not have them. Authors of add on packages
> can then at least share a common generic when that is appropriate. But
> do realize that there are lots of reasons to have generics with the same
> name, in different packages that are not compatible, and normal scoping
> rules apply. For example the XML package has a generic function addNode,
> as does the graph package, and they are not compatible, nor should they
> be. Anyone wanting to use both packages (and I often do) needs to manage
> the name conflicts (and that is where namespaces are essential).
>
> best wishes
>   Robert
>
>
>
> >
> > The tradeoff is false because unit tests are a better way to assure safety.
> > If the major packages (like stats) had a suite of tests, a package developer
> > could load his own package, run all the unit tests, and see if he broke
> > something.  If it turns out that he broke something that wasn't covered by the
> > tests, he could create a new test for that and submit it somewhere, perhaps
> > on the R Wiki.
> >
>
> --
> Robert Gentleman, PhD
> Program in Computational Biology
> Division of Public Health Sciences
> Fred Hutchinson Cancer Research Center
> 1100 Fairview Ave. N, M2-B876
> PO Box 19024
> Seattle, Washington 98109-1024
> 206-667-7700
> rgentlem at fhcrc.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From jfox at mcmaster.ca  Wed May  9 18:43:32 2007
From: jfox at mcmaster.ca (John Fox)
Date: Wed, 9 May 2007 12:43:32 -0400
Subject: [Rd] Behaviour of read.table with empty columns
In-Reply-To: <Pine.LNX.4.64.0705091622520.20583@gannet.stats.ox.ac.uk>
Message-ID: <20070509164334.XHRK1521.tomts25-srv.bellnexxia.net@JohnDesktop8300>

Dear Brian (and Gabor),

Thanks -- that makes sense.

John

--------------------------------
John Fox, Professor
Department of Sociology
McMaster University
Hamilton, Ontario
Canada L8S 4M4
905-525-9140x23604
http://socserv.mcmaster.ca/jfox 
-------------------------------- 

> -----Original Message-----
> From: r-devel-bounces at r-project.org 
> [mailto:r-devel-bounces at r-project.org] On Behalf Of Prof Brian Ripley
> Sent: Wednesday, May 09, 2007 12:05 PM
> To: John Fox
> Cc: r-devel at r-project.org
> Subject: Re: [Rd] Behaviour of read.table with empty columns
> 
> On Wed, 9 May 2007, John Fox wrote:
> 
> > Dear r-devel list members,
> >
> > I stumbled across the following behaviour of read.table() recently: 
> Suppose
> > that I have the data
> >
> > a  " " ""
> > "" ""  ""
> >
> > in a file or copied to the clipboard, and issue the command
> >
> >> DF <- read.table("clipboard")
> >> DF
> >  V1 V2 V3
> > 1  a NA NA
> > 2    NA NA
> >
> >> is.na(DF)
> >        V1   V2   V3
> > [1,] FALSE TRUE TRUE
> > [2,] FALSE TRUE TRUE
> >
> > I was surprised by the NAs. Note that they occur only when a column 
> > consists entirely of empty strings or strings composed of blanks.
> >
> > On the other hand
> >
> >> data.frame(A=c("", "", ""))
> >  A
> > 1
> > 2
> > 3
> >
> > works as I would have expected.
> 
> How did you expect R to know that "" meant a character 
> column?  You are allowed to quote any type of column, so as 
> far as read.table is concerned the columns is entirely empty 
> and so its type is unknown.  It defaults to the simplest 
> possible type, logical.
> 
> The answer is I think to use colClasses="character".
> 
> It is probably slightly more accurate to say that if 
> colClasses is not given, all columns are read as character 
> columns, and then converted to the simplest possible type.  
> In earlier versions of R you could get NULL columns (if there 
> were no rows at all), but now the simplest is logical.
> 
> Brian
> 
> > A work-around for me was
> >
> >> DF[is.na(DF)] <- ""
> >> DF
> >  V1 V2 V3
> > 1  a
> > 2
> >
> > But, as I said, I found the behaviour of read.table() puzzling.
> >
> > All this is with R 2.5.0 on a Windows XP Pro SP 2 system.
> >
> > Comments?
> >
> > Thanks,
> > John
> >
> > --------------------------------
> > John Fox, Professor
> > Department of Sociology
> > McMaster University
> > Hamilton, Ontario
> > Canada L8S 4M4
> > 905-525-9140x23604
> > http://socserv.mcmaster.ca/jfox
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From Greg.Snow at intermountainmail.org  Wed May  9 18:51:16 2007
From: Greg.Snow at intermountainmail.org (Greg Snow)
Date: Wed, 9 May 2007 10:51:16 -0600
Subject: [Rd] One for the wish list - var.default etc
In-Reply-To: <s641aa32.094@tedmail2.lgc.co.uk>
Message-ID: <07E228A5BE53C24CAD490193A7381BBB9AA2FB@LP-EXCHVS07.CO.IHC.COM>

The vcov function in package stats is already a generic, could you write
your methods for vcov rather than for var?

-- 
Gregory (Greg) L. Snow Ph.D.
Statistical Data Center
Intermountain Healthcare
greg.snow at intermountainmail.org
(801) 408-8111
 
 

> -----Original Message-----
> From: r-devel-bounces at r-project.org 
> [mailto:r-devel-bounces at r-project.org] On Behalf Of S Ellison
> Sent: Wednesday, May 09, 2007 4:02 AM
> To: r-devel at r-project.org
> Subject: [Rd] One for the wish list - var.default etc
> 
> I was working on a permutation-like variant of the bootstrap 
> for smaller samples, and wanted to be able to get summary 
> stats of my estimator conveniently. mean() is OK as its a 
> generic, so a mean.oddboot function gets used automatically. 
> But var, sd and others are not originally written as generic; 
> they have to be explicitly masked by a package or new declaration.
> 
> It would have been nice if stats::var was a generic to make 
> it more easily extensible... one for the wish list?
> 
> Steve Ellison
> 
> *******************************************************************
> This email and any attachments are confidential. Any use,\...{{dropped}}


From bolker at zoo.ufl.edu  Thu May 10 08:13:27 2007
From: bolker at zoo.ufl.edu (Ben Bolker)
Date: Thu, 10 May 2007 06:13:27 +0000 (UTC)
Subject: [Rd] bounties
Message-ID: <loom.20070510T081052-759@post.gmane.org>


  Has anyone considered a bounty system for R?
(i.e., some kind of system whereby users could put
up money to request particular improvements/bits of
R code.  These bits of R code need not be incorporated
into base R unless they're deemed sufficiently useful,
but they could go (e.g.) on the Wiki)

  Ben Bolker


From maechler at stat.math.ethz.ch  Thu May 10 09:12:31 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Thu, 10 May 2007 09:12:31 +0200
Subject: [Rd] One for the wish list - var.default etc
In-Reply-To: <971536df0705090932g68b9605dk8039b2da12aaa@mail.gmail.com>
References: <s641d024.022@tedmail2.lgc.co.uk>
	<Pine.LNX.4.64.0705091353090.30339@auk.stats>
	<xmrejlqq9tm.fsf@mralx1.rsma.frb.gov> <4641F2F3.5030806@fhcrc.org>
	<971536df0705090932g68b9605dk8039b2da12aaa@mail.gmail.com>
Message-ID: <17986.50655.671109.801220@stat.math.ethz.ch>

>>>>> "Gabor" == Gabor Grothendieck <ggrothendieck at gmail.com>
>>>>>     on Wed, 9 May 2007 12:32:26 -0400 writes:

    Gabor> The generics don't have to be S4.  In fact, in many cases it would
    Gabor> be better to have them be S3 for consistency with other similar generics
    Gabor> in the core of R.

    Gabor> Or I wonder about the possibility of having generics which can have
    Gabor> some methods being of S3 and others of S4.

Do wonder no longer.  These have been in existence for many
moons, indeed years!  

The Green Book mentions these very clearly, one example being
plot() {which is particularly "interesting" since it dispatches
        on both 'x' and 'y' for S4 methods}.

Martin

    Gabor> On 5/9/07, Robert Gentleman <rgentlem at fhcrc.org> wrote:
    >> 
    >> 
    >> Jeffrey J. Hallman wrote:
    >> > Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:
    >> >
    >> >> On Wed, 9 May 2007, S Ellison wrote:
    >> >>
    >> >>> Brian,
    >> >>>
    >> >>>> If we make functions generic, we rely on package writers implementing
    >> >>>> the documented semantics (and that is not easy to check).  That was
    >> >>>> deemed to be too easy to get wrong for var().
    >> >>> Hard to argue with a considered decision, but the alternative facing
    >> >>> increasing numbers of package developers seems to me to be pretty bad
    >> >>> too ...
    >> >>>
    >> >>> There are two ways a package developer can currently get a function
    >> >>> tailored to their own new class. One is to rely on a generic function to
    >> >>> launch their class-specific instance, and write only the class-specific
    >> >>> instance. That may indeed be hard to check, though I would be inclined
    >> >>> to think that is the package developer's problem, not the core team's.
    >> >>> But it has (as far as I know today ...?) no wider impact.
    >> >> But it does: it gives the method privileged access, in this case to the
    >> >> stats namespace, even allowing a user to change the default method
    >> >> which namespaces to a very large extent protect against.
    >> >>
    >> >> If var is not generic, we can be sure that all uses within the stats
    >> >> namespace and any namespace that imports it are of stats::var.  That is
    >> >> not something to give up lightly.
    >> >
    >> > No, but neither is the flexibility afforded by generics. What we have here is
    >> > a false tradeoff between flexibility vs. the safety of locking stuff down.
    >> 
    >> Yes, that is precisely one of the points, and as some of us recently
    >> experienced, a reasonably dedicated programmer can over-ride any base
    >> function through an add-on package. It is, in my opinion a bad idea to
    >> become the police here.
    >> 
    >> AFAIK, Brian's considered decision, was his, I am aware of no
    >> discussion of that particular point of view about var (and as noted
    >> above, it simply doesn't work), it also, AFAICS confuses what happens
    >> (implementation) from what should happen (which is easy to do, because
    >> with most of the methods, either S3 or S4 there is very little written
    >> about what should happen).
    >> 
    >> That said, there has been some relatively open discussion on one
    >> solution to this problem, and I am hopeful that we will have something
    >> in place before the end of July.
    >> 
    >> A big problem with S4 generics is who owns them, and what seems to be
    >> a reasonable medium term solution is to provide a package that lives
    >> slightly above base in the search path that will hold generic functions
    >> for any base functions that do not have them. Authors of add on packages
    >> can then at least share a common generic when that is appropriate. But
    >> do realize that there are lots of reasons to have generics with the same
    >> name, in different packages that are not compatible, and normal scoping
    >> rules apply. For example the XML package has a generic function addNode,
    >> as does the graph package, and they are not compatible, nor should they
    >> be. Anyone wanting to use both packages (and I often do) needs to manage
    >> the name conflicts (and that is where namespaces are essential).
    >> 
    >> best wishes
    >> Robert
    >> 
    >> 
    >> 
    >> >
    >> > The tradeoff is false because unit tests are a better way to assure safety.
    >> > If the major packages (like stats) had a suite of tests, a package developer
    >> > could load his own package, run all the unit tests, and see if he broke
    >> > something.  If it turns out that he broke something that wasn't covered by the
    >> > tests, he could create a new test for that and submit it somewhere, perhaps
    >> > on the R Wiki.
    >> >
    >> 
    >> --
    >> Robert Gentleman, PhD
    >> Program in Computational Biology
    >> Division of Public Health Sciences
    >> Fred Hutchinson Cancer Research Center
    >> 1100 Fairview Ave. N, M2-B876
    >> PO Box 19024
    >> Seattle, Washington 98109-1024
    >> 206-667-7700
    >> rgentlem at fhcrc.org
    >> 
    >> ______________________________________________
    >> R-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-devel
    >> 

    Gabor> ______________________________________________
    Gabor> R-devel at r-project.org mailing list
    Gabor> https://stat.ethz.ch/mailman/listinfo/r-devel


From prechelt at inf.fu-berlin.de  Tue May  8 19:12:20 2007
From: prechelt at inf.fu-berlin.de (prechelt at inf.fu-berlin.de)
Date: Tue,  8 May 2007 19:12:20 +0200 (CEST)
Subject: [Rd] 'aggregate' should preserve level ordering of factors (PR#9666)
Message-ID: <20070508171220.71C5A48697@slim.kubism.ku.dk>

Full_Name: Lutz Prechelt
Version: 2.4.1
OS: Windows XP
Submission from: (NULL) (160.45.111.67)


aggregate (from package stats) should preserve the 
ordering of levels of factors it works on and also their
'ordered' attribute if present.
But it does not.

Here is an example:

ff = factor(c("a","b","a","b"),levels=c("b","a"),ordered=T)
agg = aggregate(1:4, list(groups=ff), sum)
print(levels(agg$groups))  # should be: "b" "a"
[1] "a" "b"
print(is.ordered(agg$groups))  # should be: TRUE
[1] FALSE

-----

?aggregate ignores the issue completely:
- the terms 'order' or 'level' do not occur in the
  text at all
- the term 'factor' is mentioned only once:
  "The elements of the list will be coerced to
   factors (if they are not already factors)."

-----

This issue made me write the following code used
for preparing the data for a barchart:

  df.a = aggregate(df[,value.var],
                   list(grouping=dfgrouping, other=dfsubbar.var),
                   FUN=FUN)
  if (is.factor(dfsubbar.var)) {  # R 2.4: this should be done by 'aggregate'
    df.a$other = factor(df.a$other,
                        levels=levels(dfsubbar.var),
                        ordered=is.ordered(dfsubbar.var))
  }

Cumbersome.

R is great anyway. Thanks for your service building it!

  Lutz Prechelt


From rdpeng at gmail.com  Thu May 10 19:30:50 2007
From: rdpeng at gmail.com (Roger Peng)
Date: Thu, 10 May 2007 13:30:50 -0400
Subject: [Rd] Display list redraw incomplete
In-Reply-To: <66f3bd910705040735g45afe896h4d9881869949f1b@mail.gmail.com>
References: <66f3bd910705040735g45afe896h4d9881869949f1b@mail.gmail.com>
Message-ID: <66f3bd910705101030i285cb8d9x13fa8120717b0904@mail.gmail.com>

Just to follow up with a few more details on this problem (which
persists on my PowerBook Mac but no where else).  I ran a bisection
search on the sources and found that SVN revision 40634 introduces
this problem.  This revision introduced quite a few changes to
'src/main/graphics.c' which I am just beginning to go through.

GIven that I don't see this problem on my Linux box and only on the
Mac, I'm tempted to think this is a compiler issue or perhaps some
weird problem with my setup.  I noticed that I don't have the exact
same gfortran compiler as recommended on
http://r.research.att.com/tools/ but I don't see how that would cause
a problem here.
Otherwise, I am using gcc 4.0.1 which comes with Xcode.

I will keep digging but any pointers would be appreciated.

Thanks,
-roger

On 5/4/07, Roger Peng <rdpeng at gmail.com> wrote:
> Since compiling R 2.5.0 from source on my Mac (PowerBook) I've noticed
> some strange behavior when plotting.  I'm not sure if it's a problem
> with my setup/compilation because I feel like a problem as basic as
> this one would have been reported already.  I'm running R with X11 and
> R was built with gcc 4.0.1.
>
> Basically, I run
>
> > plot(0, 0)
> > dev.off()
> X11
>   4
> Warning message:
> Display list redraw incomplete
>
> I don't think I've ever seen that warning before.  In addition to the
> warning, two extra x11 devices are launched.  Same thing happens in
> R-devel (r41438).  Any thoughts on what might be going on?
>
> Thanks,
> -roger
> --
> Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/
>


-- 
Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/


From deepayan.sarkar at gmail.com  Thu May 10 21:02:39 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Thu, 10 May 2007 12:02:39 -0700
Subject: [Rd] Display list redraw incomplete
In-Reply-To: <66f3bd910705101030i285cb8d9x13fa8120717b0904@mail.gmail.com>
References: <66f3bd910705040735g45afe896h4d9881869949f1b@mail.gmail.com>
	<66f3bd910705101030i285cb8d9x13fa8120717b0904@mail.gmail.com>
Message-ID: <eb555e660705101202u59beef6ar14f283076c52490d@mail.gmail.com>

On 5/10/07, Roger Peng <rdpeng at gmail.com> wrote:
> Just to follow up with a few more details on this problem (which
> persists on my PowerBook Mac but no where else).  I ran a bisection
> search on the sources and found that SVN revision 40634 introduces
> this problem.  This revision introduced quite a few changes to
> 'src/main/graphics.c' which I am just beginning to go through.
>
> GIven that I don't see this problem on my Linux box and only on the
> Mac, I'm tempted to think this is a compiler issue or perhaps some
> weird problem with my setup.  I noticed that I don't have the exact
> same gfortran compiler as recommended on
> http://r.research.att.com/tools/ but I don't see how that would cause
> a problem here.
> Otherwise, I am using gcc 4.0.1 which comes with Xcode.
>
> I will keep digging but any pointers would be appreciated.

For the record, I saw the same behaviour a few days back on PPC Linux,
but it was only inside my experimental GUI and not with the CLI. I
assumed it was a problem with my GUI code. The "Display list redraw
incomplete" message was intermittent, but the opening of the extra
windows was fairly consistent (but they popped up and then closed).

I don't remember the exact triggering mechanism, and I don't remember
seeing it recently. I can't reproduce it on my desktop, which is i486
Linux (according to R). I'll try the ppc when I get home.

-Deepayan

>
> Thanks,
> -roger
>
> On 5/4/07, Roger Peng <rdpeng at gmail.com> wrote:
> > Since compiling R 2.5.0 from source on my Mac (PowerBook) I've noticed
> > some strange behavior when plotting.  I'm not sure if it's a problem
> > with my setup/compilation because I feel like a problem as basic as
> > this one would have been reported already.  I'm running R with X11 and
> > R was built with gcc 4.0.1.
> >
> > Basically, I run
> >
> > > plot(0, 0)
> > > dev.off()
> > X11
> >   4
> > Warning message:
> > Display list redraw incomplete
> >
> > I don't think I've ever seen that warning before.  In addition to the
> > warning, two extra x11 devices are launched.  Same thing happens in
> > R-devel (r41438).  Any thoughts on what might be going on?
> >
> > Thanks,
> > -roger
> > --
> > Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/
> >
>
>
> --
> Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From p.murrell at auckland.ac.nz  Thu May 10 21:28:39 2007
From: p.murrell at auckland.ac.nz (Paul Murrell)
Date: Fri, 11 May 2007 07:28:39 +1200
Subject: [Rd] Display list redraw incomplete
In-Reply-To: <eb555e660705101202u59beef6ar14f283076c52490d@mail.gmail.com>
References: <66f3bd910705040735g45afe896h4d9881869949f1b@mail.gmail.com>	<66f3bd910705101030i285cb8d9x13fa8120717b0904@mail.gmail.com>
	<eb555e660705101202u59beef6ar14f283076c52490d@mail.gmail.com>
Message-ID: <46437267.4070105@stat.auckland.ac.nz>

Hi

Sorry I haven't had time to look at this closely yet.  Some general info
in case it helps in the meantime.

That warning comes from the redrawing of the display list if one of the
graphics system states becomes "invalid".  Because this is a trditional
plot, it suggests that the GE_CheckPlot code in baseCallback() (in
base.c) is returning FALSE.  I doubt that code has changed recently, but
have not checked to be sure.

I have no idea how to explain the launching of two extra x11 devices.

Paul


Deepayan Sarkar wrote:
> On 5/10/07, Roger Peng <rdpeng at gmail.com> wrote:
>> Just to follow up with a few more details on this problem (which
>> persists on my PowerBook Mac but no where else).  I ran a bisection
>> search on the sources and found that SVN revision 40634 introduces
>> this problem.  This revision introduced quite a few changes to
>> 'src/main/graphics.c' which I am just beginning to go through.
>>
>> GIven that I don't see this problem on my Linux box and only on the
>> Mac, I'm tempted to think this is a compiler issue or perhaps some
>> weird problem with my setup.  I noticed that I don't have the exact
>> same gfortran compiler as recommended on
>> http://r.research.att.com/tools/ but I don't see how that would cause
>> a problem here.
>> Otherwise, I am using gcc 4.0.1 which comes with Xcode.
>>
>> I will keep digging but any pointers would be appreciated.
> 
> For the record, I saw the same behaviour a few days back on PPC Linux,
> but it was only inside my experimental GUI and not with the CLI. I
> assumed it was a problem with my GUI code. The "Display list redraw
> incomplete" message was intermittent, but the opening of the extra
> windows was fairly consistent (but they popped up and then closed).
> 
> I don't remember the exact triggering mechanism, and I don't remember
> seeing it recently. I can't reproduce it on my desktop, which is i486
> Linux (according to R). I'll try the ppc when I get home.
> 
> -Deepayan
> 
>> Thanks,
>> -roger
>>
>> On 5/4/07, Roger Peng <rdpeng at gmail.com> wrote:
>>> Since compiling R 2.5.0 from source on my Mac (PowerBook) I've noticed
>>> some strange behavior when plotting.  I'm not sure if it's a problem
>>> with my setup/compilation because I feel like a problem as basic as
>>> this one would have been reported already.  I'm running R with X11 and
>>> R was built with gcc 4.0.1.
>>>
>>> Basically, I run
>>>
>>>> plot(0, 0)
>>>> dev.off()
>>> X11
>>>   4
>>> Warning message:
>>> Display list redraw incomplete
>>>
>>> I don't think I've ever seen that warning before.  In addition to the
>>> warning, two extra x11 devices are launched.  Same thing happens in
>>> R-devel (r41438).  Any thoughts on what might be going on?
>>>
>>> Thanks,
>>> -roger
>>> --
>>> Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/
>>>
>>
>> --
>> Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dr Paul Murrell
Department of Statistics
The University of Auckland
Private Bag 92019
Auckland
New Zealand
64 9 3737599 x85392
paul at stat.auckland.ac.nz
http://www.stat.auckland.ac.nz/~paul/


From juan_sr at uol.com.br  Fri May 11 17:06:51 2007
From: juan_sr at uol.com.br (Juan Santiago Ramseyer)
Date: Fri, 11 May 2007 12:06:51 -0300
Subject: [Rd] data.entry bugs
Message-ID: <1178896011.5160.2.camel@localhost.localdomain>

In session of R, occour following bug's in de (data.entry) function.



 *** caught segfault ***
address 0x2c, cause 'memory not mapped'

Traceback:
 1: dataentry(odata, as.list(Modes))
 2: de(..., Modes = Modes, Names = Names)
 3: data.entry(posto, fecha, serie = registros, status)
 4: onEditaSerie(serie, "serie")
 5: function () serie <- onEditaSerie(serie, "serie")()
 6: doTryCatch(return(expr), name, parentenv, handler)
 7: tryCatchOne(expr, names, parentenv, handlers[[1]])
 8: tryCatchList(expr, classes, parentenv, handlers)
 9: tryCatch(expr, error = function(e) {    call <- conditionCall(e)
if (!is.null(call)) {        if (identical(call[[1]],
quote(doTryCatch)))             call <- sys.call(-4)        dcall <-
deparse(call)[1]        prefix <- paste("Error in", dcall, ": ")
LONGCALL <- 30        if (nchar(dcall) > LONGCALL)             prefix <-
paste(prefix, "\n\t", sep = "")    }    else prefix <- "Error : "    msg
<- paste(prefix, conditionMessage(e), "\n", sep =
"")    .Internal(seterrmessage(msg[1]))    if (!silent &&
identical(getOption("show.error.messages"),         TRUE)) {
cat(msg, file = stderr())        .Internal(printDeferredWarnings())    }
invisible(structure(msg, class = "try-error"))})
10: try(function () serie <- onEditaSerie(serie, "serie")())

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace
Selection: 3

Process R exited abnormally with code 70 at Fri May 11 11:55:23 2007




The function call is:
onEditaSerie <- function(lista,nomeLista) {
  posto <- lista$posto
  fecha <- chron2txt(lista$data)
  registros <- lista$serie
  status <- lista$status
  listaaux <- de(posto,fecha,serie=registros,status)
  serieaux <- list(posto=listaaux$posto,
                   data=textotime2tempo(listaaux$fecha),
                   serie=listaaux$registros,
                   status=listaaux$status)
  assign(nomeLista,serieaux,envir=.GlobalEnv)
}




The computer/system is:
CPU: AMD64
System: Fedora Core 6
GUI: KDE/Emacs/ESS

Juan Santiago Ramseyer.
Eng Recursos H?dricos


From savicky at cs.cas.cz  Fri May 11 17:33:37 2007
From: savicky at cs.cas.cz (Petr Savicky)
Date: Fri, 11 May 2007 17:33:37 +0200
Subject: [Rd] grep with fixed=TRUE and ignore.case=TRUE
In-Reply-To: <Pine.LNX.4.64.0705090628200.6312@gannet.stats.ox.ac.uk>
References: <20070428114959.GA25723@cs.cas.cz>
	<46337DE1.5030607@statistik.uni-dortmund.de>
	<20070429135347.GA4690@cs.cas.cz>
	<20070507142012.GF31253@cs.cas.cz>
	<Pine.LNX.4.64.0705090628200.6312@gannet.stats.ox.ac.uk>
Message-ID: <20070511153337.GB6300@cs.cas.cz>

On Wed, May 09, 2007 at 06:41:23AM +0100, Prof Brian Ripley wrote:
> I suggest you collaborate with the person who replied that he thought this 
> was a good idea to supply patches against the R-devel sources for 
> scrutiny.

A possible solution is to use strncasecmp instead of strncmp
in function fgrep_one in R-devel/src/main/character.c.

Corresponding modification of character.c is at
  http://www.cs.cas.cz/~savicky/ignore_case/character.c
and diff file w.r.t. the original character.c (downloaded today) is at
  http://www.cs.cas.cz/~savicky/ignore_case/diff.txt

This seems to work in my installation of R-devel:

  > x <- c("D.G cat", "d.g cat", "dog cat")
  > z <- "d.g"
  > grep(z, x, ignore.case = F, fixed = T)
  [1] 2
  > grep(z, x, ignore.case = T, fixed = T)  # this is the new behavior
  [1] 1 2
  > grep(z, x, ignore.case = T, fixed = F)
  [1] 1 2 3
  >

Since fgrep_one is used many times in character.c, adding igcase_opt as
an additional argument would imply extensive changes to the file.
So, I introduced a new function fgrep_one_igcase called only once in
the file. Another solution is possible.

I do not understand well handling multibyte chars, so I did not test
the function with real multibyte chars, although the code for
this option is used.

Ignore case option is not meaningfull in gsub. It could be meaningful
in regexpr, however, this function does not allow ignore.case option,
so I did no changes to it.

All the best, Petr.


From tplate at acm.org  Fri May 11 19:31:17 2007
From: tplate at acm.org (Tony Plate)
Date: Fri, 11 May 2007 11:31:17 -0600
Subject: [Rd] bounties
In-Reply-To: <loom.20070510T081052-759@post.gmane.org>
References: <loom.20070510T081052-759@post.gmane.org>
Message-ID: <4644A865.9040608@acm.org>

I've wondered about this sort of thing too.  Are there any successful 
models like this for other program languages/systems?

-- Tony Plate

Ben Bolker wrote:
>   Has anyone considered a bounty system for R?
> (i.e., some kind of system whereby users could put
> up money to request particular improvements/bits of
> R code.  These bits of R code need not be incorporated
> into base R unless they're deemed sufficiently useful,
> but they could go (e.g.) on the Wiki)
> 
>   Ben Bolker
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From frederic.gosselin at cemagref.fr  Fri May 11 12:23:46 2007
From: frederic.gosselin at cemagref.fr (frederic.gosselin at cemagref.fr)
Date: Fri, 11 May 2007 12:23:46 +0200 (CEST)
Subject: [Rd] changing the mode of a factor (PR#9675)
Message-ID: <20070511102346.9FE7148F26@slim.kubism.ku.dk>

Full_Name: Fr?d?ric Gosselin
Version: 2.5 vs 2.4 and 2.2.1
OS: windows XP
Submission from: (NULL) (195.221.118.52)


#############
L3 <- LETTERS[1:3]
 (d <- data.frame(cbind(x=1, y=1:10), fac=as.factor(sample(L3, 10,
repl=TRUE))))
mode(d[,3])<-"numeric"
###############

when trying to change the mode of a column in a data.frame that is a factor to
numeric(cf. preceding code), the following error occurs (in French) in R 2.5:

Erreur dans `storage.mode<-`(`*tmp*`, value = "double") : 
        le mode de stockage d'un objet "factor" ne peut ?tre modifi?

The same thing works fine in R2.4 and 2.2.1. 

It does not seem to correspond to new things announced in the NEWS file for the
2.5 version...


From frederic.gosselin at cemagref.fr  Fri May 11 14:15:48 2007
From: frederic.gosselin at cemagref.fr (frederic.gosselin at cemagref.fr)
Date: Fri, 11 May 2007 14:15:48 +0200 (CEST)
Subject: [Rd] dump function and compatibility of .RData files between
	versions 2.4/2.5 and lower (PR#9676)
Message-ID: <20070511121548.AD98C48F47@slim.kubism.ku.dk>

Full_Name: fr?d?ric Gosselin
Version: 2.5 & 2.2.1
OS: windows XP pro
Submission from: (NULL) (195.221.118.52)


(i) I cannot read .Rdata saved with R2.5 with R2.2.1. I think it was the same
with R2.4 vs R2.2.1.

(ii) I have found the strange following problem, using the dump function:
dump(ls(),"text.txt")

in the text.txt file, there are a lot of "L" added at the end of numbers,
particularly in the .Dim attributes. This makes the file undreadable (at least
in R2.2.1 but alos probably in S-Plus...)

I do not know in which respect both potential bugs are related.


From bolker at zoo.ufl.edu  Fri May 11 22:52:05 2007
From: bolker at zoo.ufl.edu (Ben Bolker)
Date: Fri, 11 May 2007 16:52:05 -0400
Subject: [Rd] bounties
In-Reply-To: <4644A865.9040608@acm.org>
References: <loom.20070510T081052-759@post.gmane.org>
	<4644A865.9040608@acm.org>
Message-ID: <4644D775.6070700@zoo.ufl.edu>

Tony Plate wrote:
> I've wondered about this sort of thing too.  Are there any successful
> models like this for other program languages/systems?
> 
> -- Tony Plate
> 
> Ben Bolker wrote:
>>   Has anyone considered a bounty system for R?
>> (i.e., some kind of system whereby users could put
>> up money to request particular improvements/bits of
>> R code.  These bits of R code need not be incorporated
>> into base R unless they're deemed sufficiently useful,
>> but they could go (e.g.) on the Wiki)
>>
>>   Ben Bolker
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>

http://bountycounty.org/ looks like a good reference


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 254 bytes
Desc: OpenPGP digital signature
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20070511/102418d1/attachment.bin 

From wangtong at usc.edu  Sat May 12 02:19:31 2007
From: wangtong at usc.edu (Tong Wang)
Date: Fri, 11 May 2007 17:19:31 -0700
Subject: [Rd] Problem with rnorm ?
Message-ID: <dc69f8e3bca.4644a5a3@usc.edu>

Hi, 
    I couldn't get the rnorm() work right in C, for example, the following code produce strange results.

#include <stdio.h>
#include <Rmath.h>

int main(void){
  double x[3];
  for(int i=0;i<3;i++)  x[i]=rnorm(0,1);
  printf("%lf,%lf,%lf",x[0],x[1],x[2]);
  return 0;
}

output :   -8.773321,-8.773321,-8.773321
compiling script:   gcc -std=gnu99  -Wall -IC:/PROGRA~1/R/R-24~1.1/include test.c -LC:/PROGRA~1/R/R-24~1.1/bin -lR -o test

Could someone tell me what's wrong with my code ? Thanks a lot.


From savicky at cs.cas.cz  Sat May 12 09:20:23 2007
From: savicky at cs.cas.cz (Petr Savicky)
Date: Sat, 12 May 2007 09:20:23 +0200
Subject: [Rd] Problem with rnorm ?
In-Reply-To: <dc69f8e3bca.4644a5a3@usc.edu>
References: <dc69f8e3bca.4644a5a3@usc.edu>
Message-ID: <20070512072022.GA25989@cs.cas.cz>

> #include <stdio.h>
> #include <Rmath.h>
> 
> int main(void){
>   double x[3];
>   for(int i=0;i<3;i++)  x[i]=rnorm(0,1);
>   printf("%lf,%lf,%lf",x[0],x[1],x[2]);
>   return 0;
> }
> 
> output :   -8.773321,-8.773321,-8.773321

You probably have to call GetRNGstate() before rnorm and PutRNGstate() after.
At least for extension packages, this is necessary, see section 6.3 in R-exts.pdf.

Petr.


From ripley at stats.ox.ac.uk  Sat May 12 13:27:33 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sat, 12 May 2007 12:27:33 +0100 (BST)
Subject: [Rd] Problem with rnorm ?
In-Reply-To: <dc69f8e3bca.4644a5a3@usc.edu>
References: <dc69f8e3bca.4644a5a3@usc.edu>
Message-ID: <Pine.LNX.4.64.0705121222570.27426@gannet.stats.ox.ac.uk>

1) You are linking an executable against -lR.  You can't do that as here,
for R is never initialized (and I very much doubt you will be able to 
give a reference that recommended you to do that).  You need to link 
against standalone libRmath, or start up R properly if you really need R.

2) The arguments to rnorm() are doubles, not integers: did you not get a 
warning?  I would expect automatic conversion to occur, but it is better 
to get this right.

On Fri, 11 May 2007, Tong Wang wrote:

> Hi,
>    I couldn't get the rnorm() work right in C, for example, the following code produce strange results.
>
> #include <stdio.h>
> #include <Rmath.h>
>
> int main(void){
>  double x[3];
>  for(int i=0;i<3;i++)  x[i]=rnorm(0,1);
>  printf("%lf,%lf,%lf",x[0],x[1],x[2]);
>  return 0;
> }
>
> output :   -8.773321,-8.773321,-8.773321
> compiling script:   gcc -std=gnu99  -Wall -IC:/PROGRA~1/R/R-24~1.1/include test.c -LC:/PROGRA~1/R/R-24~1.1/bin -lR -o test
>
> Could someone tell me what's wrong with my code ? Thanks a lot.
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From h.wickham at gmail.com  Sat May 12 16:36:03 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Sat, 12 May 2007 16:36:03 +0200
Subject: [Rd] Implicit vs explicit printing and the call stack
Message-ID: <f8e6ff050705120736q754367d9nef4a488c6fa53a03@mail.gmail.com>

Hi everyone,

I've run into a bit of strange problem with implicit vs explicit
printing and the call stack. I've included an example at the bottom of
this email.  The basic problem is that I have an S3 object with a
print method.  When the object is implicitly printed (ie. typed
directly into the console) the function arguments in the call stack
are exploded out to their actual values, rather than just the name I
typed in (see below for an example if my language is confusing).  When
I explicitly "print" the object, the call stack is fine.

This is not just of academic interest, because with a larger dataset
and an implicit print, there is a noticeable delay before control
returns to the prompt  (I can't quantify it exactly because
system.time requires a explicit print, but it's on the order of a few
seconds).

I'm not sure if I've provided enough information to be able to solve
the problem, so please let me know what additional details would be
useful.

Thanks,

Hadley


> ggplot(mtcars, aes(x=cyl, y=-mpg)) + scale_y_log10() + geom_point()
Error in grid.pretty(.$domain()) : infinite axis extents [GEPretty(-inf,inf,5)]
In addition: Warning messages:
1: NaNs produced in: log(x, base)
2: no non-missing arguments to min; returning Inf
3: no non-missing arguments to max; returning -Inf
4: no non-missing arguments to min; returning Inf
5: no non-missing arguments to max; returning -Inf
> traceback()
16: .Call(L_pretty, range)
15: grid.pretty(.$domain())
14: get("breaks", env = .$y(), inherits = TRUE)(.$y(), ...)
13: .$y()$breaks()
12: range(at)
11: as.numeric(x)
10: unit(range(at), "native")
9: ggaxis_line(at, position)
8: ggaxis(.$y()$breaks(), .$y()$labels(), "left", range$y)
7: get("guide_axes", env = coordinates, inherits = TRUE)(coordinates,
       ...)
6: coordinates$guide_axes()
5: guides_basic(plot, scales, cs)
4: ggplot_plot(x, ...)
3: grid.draw(ggplot_plot(x, ...))
2: print.ggplot(list(data = list(mpg = c(21, 21, 22.8, 21.4, 18.7,
   18.1, 14.3, 24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4,
   14.7, 32.4, 30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26,
   30.4, 15.8, 19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4,
   4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8,
   6, 8, 4), disp = c(160, 160, 108, 258, 360, 225, 360, 146.7,
   140.8, 167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7,
   75.7, 71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351,
   145, 301, 121), hp = c(110, 110, 93, 110, 175, 105, 245, 62,
   95, 123, 123, 180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150,
   150, 245, 175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9,
   3.9, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92, 3.07,
   3.07, 3.07, 2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76, 3.15,
   3.73, 3.08, 4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11), wt = c(2.62,
   2.875, 2.32, 3.215, 3.44, 3.46, 3.57, 3.19, 3.15, 3.44, 3.44,
   4.07, 3.73, 3.78, 5.25, 5.424, 5.345, 2.2, 1.615, 1.835, 2.465,
   3.52, 3.435, 3.84, 3.845, 1.935, 2.14, 1.513, 3.17, 2.77, 3.57,
   2.78), qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84,
   20, 22.9, 18.3, 18.9, 17.4, 17.6, 18, 17.98, 17.82, 17.42, 19.47,
   18.52, 19.9, 20.01, 16.87, 17.3, 15.41, 17.05, 18.9, 16.7, 16.9,
   14.5, 15.5, 14.6, 18.6), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1,
   1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
   1), am = c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4,
   4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3,
   3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4, 2,
   2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, 2, 2, 4,
   6, 8, 2)), layers = list(<environment>), scales = <environment>,
       defaults = list(x = cyl, y = -mpg), title = NULL, fixedaspect = FALSE,
       coordinates = <environment>, formula = ". ~ .", margins = FALSE))
1: print(list(data = list(mpg = c(21, 21, 22.8, 21.4, 18.7, 18.1,
   14.3, 24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4, 14.7,
   32.4, 30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26, 30.4,
   15.8, 19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4, 4, 6,
   6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8, 6, 8,
   4), disp = c(160, 160, 108, 258, 360, 225, 360, 146.7, 140.8,
   167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7, 75.7,
   71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351, 145, 301,
   121), hp = c(110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123,
   180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150, 150, 245,
   175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9, 3.9, 3.85,
   3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92, 3.07, 3.07, 3.07,
   2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76, 3.15, 3.73, 3.08,
   4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11), wt = c(2.62, 2.875,
   2.32, 3.215, 3.44, 3.46, 3.57, 3.19, 3.15, 3.44, 3.44, 4.07,
   3.73, 3.78, 5.25, 5.424, 5.345, 2.2, 1.615, 1.835, 2.465, 3.52,
   3.435, 3.84, 3.845, 1.935, 2.14, 1.513, 3.17, 2.77, 3.57, 2.78
   ), qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84,
   20, 22.9, 18.3, 18.9, 17.4, 17.6, 18, 17.98, 17.82, 17.42, 19.47,
   18.52, 19.9, 20.01, 16.87, 17.3, 15.41, 17.05, 18.9, 16.7, 16.9,
   14.5, 15.5, 14.6, 18.6), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1,
   1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
   1), am = c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4,
   4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3,
   3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4, 2,
   2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, 2, 2, 4,
   6, 8, 2)), layers = list(<environment>), scales = <environment>,
       defaults = list(x = cyl, y = -mpg), title = NULL, fixedaspect = FALSE,
       coordinates = <environment>, formula = ". ~ .", margins = FALSE))
> print(ggplot(mtcars, aes(x=cyl, y=-mpg)) + scale_y_log10() + geom_point())
Error in grid.pretty(.$domain()) : infinite axis extents [GEPretty(-inf,inf,5)]
In addition: Warning messages:
1: NaNs produced in: log(x, base)
2: no non-missing arguments to min; returning Inf
3: no non-missing arguments to max; returning -Inf
4: no non-missing arguments to min; returning Inf
5: no non-missing arguments to max; returning -Inf
> traceback()
16: .Call(L_pretty, range)
15: grid.pretty(.$domain())
14: get("breaks", env = .$y(), inherits = TRUE)(.$y(), ...)
13: .$y()$breaks()
12: range(at)
11: as.numeric(x)
10: unit(range(at), "native")
9: ggaxis_line(at, position)
8: ggaxis(.$y()$breaks(), .$y()$labels(), "left", range$y)
7: get("guide_axes", env = coordinates, inherits = TRUE)(coordinates,
       ...)
6: coordinates$guide_axes()
5: guides_basic(plot, scales, cs)
4: ggplot_plot(x, ...)
3: grid.draw(ggplot_plot(x, ...))
2: print.ggplot(ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() +
       geom_point())
1: print(ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() +
       geom_point())


From ggrothendieck at gmail.com  Sat May 12 17:25:29 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Sat, 12 May 2007 11:25:29 -0400
Subject: [Rd] Implicit vs explicit printing and the call stack
In-Reply-To: <f8e6ff050705120736q754367d9nef4a488c6fa53a03@mail.gmail.com>
References: <f8e6ff050705120736q754367d9nef4a488c6fa53a03@mail.gmail.com>
Message-ID: <971536df0705120825x66ab1ee7qc641e2c372b78da9@mail.gmail.com>

I can't reproduce that with ggplot 0.4-0 as some of the functions you are
using do not appear to be part of ggplot (I suspect you are using a newer
version of ggplot than you have released) but the following illustrates
the difference using  "R version 2.5.0 Patched (2007-05-01 r41405)"
and lattice 0.15-5 and grid 2.5-0 on Windows XP:

library(lattice)

xyplot(conc ~ uptake, CO2, xlim = Inf)
traceback()

print(xyplot(conc ~ uptake, CO2, xlim = Inf))
traceback()

On 5/12/07, hadley wickham <h.wickham at gmail.com> wrote:
> Hi everyone,
>
> I've run into a bit of strange problem with implicit vs explicit
> printing and the call stack. I've included an example at the bottom of
> this email.  The basic problem is that I have an S3 object with a
> print method.  When the object is implicitly printed (ie. typed
> directly into the console) the function arguments in the call stack
> are exploded out to their actual values, rather than just the name I
> typed in (see below for an example if my language is confusing).  When
> I explicitly "print" the object, the call stack is fine.
>
> This is not just of academic interest, because with a larger dataset
> and an implicit print, there is a noticeable delay before control
> returns to the prompt  (I can't quantify it exactly because
> system.time requires a explicit print, but it's on the order of a few
> seconds).
>
> I'm not sure if I've provided enough information to be able to solve
> the problem, so please let me know what additional details would be
> useful.
>
> Thanks,
>
> Hadley
>
>
> > ggplot(mtcars, aes(x=cyl, y=-mpg)) + scale_y_log10() + geom_point()
> Error in grid.pretty(.$domain()) : infinite axis extents [GEPretty(-inf,inf,5)]
> In addition: Warning messages:
> 1: NaNs produced in: log(x, base)
> 2: no non-missing arguments to min; returning Inf
> 3: no non-missing arguments to max; returning -Inf
> 4: no non-missing arguments to min; returning Inf
> 5: no non-missing arguments to max; returning -Inf
> > traceback()
> 16: .Call(L_pretty, range)
> 15: grid.pretty(.$domain())
> 14: get("breaks", env = .$y(), inherits = TRUE)(.$y(), ...)
> 13: .$y()$breaks()
> 12: range(at)
> 11: as.numeric(x)
> 10: unit(range(at), "native")
> 9: ggaxis_line(at, position)
> 8: ggaxis(.$y()$breaks(), .$y()$labels(), "left", range$y)
> 7: get("guide_axes", env = coordinates, inherits = TRUE)(coordinates,
>       ...)
> 6: coordinates$guide_axes()
> 5: guides_basic(plot, scales, cs)
> 4: ggplot_plot(x, ...)
> 3: grid.draw(ggplot_plot(x, ...))
> 2: print.ggplot(list(data = list(mpg = c(21, 21, 22.8, 21.4, 18.7,
>   18.1, 14.3, 24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4,
>   14.7, 32.4, 30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26,
>   30.4, 15.8, 19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4,
>   4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8,
>   6, 8, 4), disp = c(160, 160, 108, 258, 360, 225, 360, 146.7,
>   140.8, 167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7,
>   75.7, 71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351,
>   145, 301, 121), hp = c(110, 110, 93, 110, 175, 105, 245, 62,
>   95, 123, 123, 180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150,
>   150, 245, 175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9,
>   3.9, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92, 3.07,
>   3.07, 3.07, 2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76, 3.15,
>   3.73, 3.08, 4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11), wt = c(2.62,
>   2.875, 2.32, 3.215, 3.44, 3.46, 3.57, 3.19, 3.15, 3.44, 3.44,
>   4.07, 3.73, 3.78, 5.25, 5.424, 5.345, 2.2, 1.615, 1.835, 2.465,
>   3.52, 3.435, 3.84, 3.845, 1.935, 2.14, 1.513, 3.17, 2.77, 3.57,
>   2.78), qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84,
>   20, 22.9, 18.3, 18.9, 17.4, 17.6, 18, 17.98, 17.82, 17.42, 19.47,
>   18.52, 19.9, 20.01, 16.87, 17.3, 15.41, 17.05, 18.9, 16.7, 16.9,
>   14.5, 15.5, 14.6, 18.6), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1,
>   1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
>   1), am = c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>   1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4,
>   4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3,
>   3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4, 2,
>   2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, 2, 2, 4,
>   6, 8, 2)), layers = list(<environment>), scales = <environment>,
>       defaults = list(x = cyl, y = -mpg), title = NULL, fixedaspect = FALSE,
>       coordinates = <environment>, formula = ". ~ .", margins = FALSE))
> 1: print(list(data = list(mpg = c(21, 21, 22.8, 21.4, 18.7, 18.1,
>   14.3, 24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4, 14.7,
>   32.4, 30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26, 30.4,
>   15.8, 19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4, 4, 6,
>   6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8, 6, 8,
>   4), disp = c(160, 160, 108, 258, 360, 225, 360, 146.7, 140.8,
>   167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7, 75.7,
>   71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351, 145, 301,
>   121), hp = c(110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123,
>   180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150, 150, 245,
>   175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9, 3.9, 3.85,
>   3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92, 3.07, 3.07, 3.07,
>   2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76, 3.15, 3.73, 3.08,
>   4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11), wt = c(2.62, 2.875,
>   2.32, 3.215, 3.44, 3.46, 3.57, 3.19, 3.15, 3.44, 3.44, 4.07,
>   3.73, 3.78, 5.25, 5.424, 5.345, 2.2, 1.615, 1.835, 2.465, 3.52,
>   3.435, 3.84, 3.845, 1.935, 2.14, 1.513, 3.17, 2.77, 3.57, 2.78
>   ), qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84,
>   20, 22.9, 18.3, 18.9, 17.4, 17.6, 18, 17.98, 17.82, 17.42, 19.47,
>   18.52, 19.9, 20.01, 16.87, 17.3, 15.41, 17.05, 18.9, 16.7, 16.9,
>   14.5, 15.5, 14.6, 18.6), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1,
>   1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
>   1), am = c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>   1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4,
>   4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3,
>   3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4, 2,
>   2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, 2, 2, 4,
>   6, 8, 2)), layers = list(<environment>), scales = <environment>,
>       defaults = list(x = cyl, y = -mpg), title = NULL, fixedaspect = FALSE,
>       coordinates = <environment>, formula = ". ~ .", margins = FALSE))
> > print(ggplot(mtcars, aes(x=cyl, y=-mpg)) + scale_y_log10() + geom_point())
> Error in grid.pretty(.$domain()) : infinite axis extents [GEPretty(-inf,inf,5)]
> In addition: Warning messages:
> 1: NaNs produced in: log(x, base)
> 2: no non-missing arguments to min; returning Inf
> 3: no non-missing arguments to max; returning -Inf
> 4: no non-missing arguments to min; returning Inf
> 5: no non-missing arguments to max; returning -Inf
> > traceback()
> 16: .Call(L_pretty, range)
> 15: grid.pretty(.$domain())
> 14: get("breaks", env = .$y(), inherits = TRUE)(.$y(), ...)
> 13: .$y()$breaks()
> 12: range(at)
> 11: as.numeric(x)
> 10: unit(range(at), "native")
> 9: ggaxis_line(at, position)
> 8: ggaxis(.$y()$breaks(), .$y()$labels(), "left", range$y)
> 7: get("guide_axes", env = coordinates, inherits = TRUE)(coordinates,
>       ...)
> 6: coordinates$guide_axes()
> 5: guides_basic(plot, scales, cs)
> 4: ggplot_plot(x, ...)
> 3: grid.draw(ggplot_plot(x, ...))
> 2: print.ggplot(ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() +
>       geom_point())
> 1: print(ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() +
>       geom_point())
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From daniel.oberski at gmail.com  Sat May 12 20:48:20 2007
From: daniel.oberski at gmail.com (Daniel Oberski)
Date: Sat, 12 May 2007 20:48:20 +0200
Subject: [Rd] The best way to use R's linear algebra functions from C
Message-ID: <817e25730705121148u2d44d9a6ve6ad72225c804726@mail.gmail.com>

First of all, thanks to everybody for R.


I have written a program in C that requires some basic matrix
operations, namely the following:

- matrix multiplication and addition,
- determinant and transpose,
- inverse of a symmetric matrix.

Since I am a happy R user I thought I could call R from within my
program for this purpose. I read "Writing R Extensions" and "R
Internals" and a bunch of other things from the web, ran the
"Embedded" tests, and grep'ed / looked at the source code.

It is now my understanding that there are several ways I could use R from C:

1. Pass data from C to an R function, loaded during R runtime;
2. Build R statements and use Rparse.h to execute them;
3. Use Rembedded.h to call R's C functions;
4. Directly call R's C functions.

4) would be the fastest (I think?), and speed is some concern.
However, I am finding it very tough going to discover how to implement
this. For example: given two matrices represented as arrays of doubles
and their numbers of rows and columns in C, which function in the R
code should I call to multiply them (matprod and co. are not
exported)? Which headers should I include? Should I link against a
library, and if so, which one?

Currently I am leaning towards a very roundabout solution: copy the
double arrays into SEXPs, use Rembedded.h and load the required
formulas from a .R file. This solution seems rather hacky and slow to
me, but it is the only one I can get to work right now. However, I
would rather not use it.

In short, my question is: what is the proper or preferred method of
solving this problem, and how do I find out how to apply it?

Thank you very much for your attention.


Best regards,


Daniel Oberski
University of Tilburg / European Social Survey

daniel.oberski at gmail.com


From wangtong at usc.edu  Sun May 13 06:01:45 2007
From: wangtong at usc.edu (Tong Wang)
Date: Sat, 12 May 2007 21:01:45 -0700
Subject: [Rd] Problem with rnorm ?
In-Reply-To: <Pine.LNX.4.64.0705121222570.27426@gannet.stats.ox.ac.uk>
References: <dc69f8e3bca.4644a5a3@usc.edu>
	<Pine.LNX.4.64.0705121222570.27426@gannet.stats.ox.ac.uk>
Message-ID: <f684c9727d4e.46462b39@usc.edu>

It's working , Thanks a lot !!!

tong

----- Original Message -----
From: Prof Brian Ripley <ripley at stats.ox.ac.uk>
Date: Saturday, May 12, 2007 4:27 am
Subject: Re: [Rd] Problem with rnorm ?
To: Tong Wang <wangtong at usc.edu>
Cc: R-devel <r-devel at r-project.org>

> 1) You are linking an executable against -lR.  You can't do that as 
> here,for R is never initialized (and I very much doubt you will be 
> able to 
> give a reference that recommended you to do that).  You need to 
> link 
> against standalone libRmath, or start up R properly if you really 
> need R.
> 
> 2) The arguments to rnorm() are doubles, not integers: did you not 
> get a 
> warning?  I would expect automatic conversion to occur, but it is 
> better 
> to get this right.
> 
> On Fri, 11 May 2007, Tong Wang wrote:
> 
> > Hi,
> >    I couldn't get the rnorm() work right in C, for example, the 
> following code produce strange results.
> >
> > #include <stdio.h>
> > #include <Rmath.h>
> >
> > int main(void){
> >  double x[3];
> >  for(int i=0;i<3;i++)  x[i]=rnorm(0,1);
> >  printf("%lf,%lf,%lf",x[0],x[1],x[2]);
> >  return 0;
> > }
> >
> > output :   -8.773321,-8.773321,-8.773321
> > compiling script:   gcc -std=gnu99  -Wall -IC:/PROGRA~1/R/R-
> 24~1.1/include test.c -LC:/PROGRA~1/R/R-24~1.1/bin -lR -o test
> >
> > Could someone tell me what's wrong with my code ? Thanks a lot.
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>


From wangtong at usc.edu  Sun May 13 06:21:00 2007
From: wangtong at usc.edu (Tong Wang)
Date: Sat, 12 May 2007 21:21:00 -0700
Subject: [Rd] Strange behavior of debugger
Message-ID: <dd6eb99f7435.46462fbc@usc.edu>

Hi, All:
    I had some trouble debugging C source dynamically loaded into R , when I issued N  in gdb(or insight) , the debugger, instead of moving downward step by step, jumped to strange positions (upward, downward, one step, a few steps away).

   To enter the debugger, I issued  gdb(insight) Rgui.exe in Cygwin and add this line :  asm("int $3");   to my C code.  After 
entering R, I did something like:  dyn.load("mypath/mycode.dll") , then  out <- .C("myfun", arg1=as.numeric(a),......) 
The C files are compiled with:    R CMD SHLIB -d myfile.c
   
   I am using Win XP + Cygwin, and I have a binary version and a cygwin compiled version of R-2.4.1 installed. This same 
behavior show up in both installations.  One thing is, even though I set the evn  DEBUG as T when built R from sourse in 
Cygwin,  the Rgui.exe I got doesn't seem to contain debug info.  (although R.exe does) , I am not sure if this means I did something wrong.  

   Appreciate any help.

tong


From ripley at stats.ox.ac.uk  Sun May 13 11:18:57 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sun, 13 May 2007 10:18:57 +0100 (BST)
Subject: [Rd] Implicit vs explicit printing and the call stack
In-Reply-To: <f8e6ff050705120736q754367d9nef4a488c6fa53a03@mail.gmail.com>
References: <f8e6ff050705120736q754367d9nef4a488c6fa53a03@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705130939060.1927@gannet.stats.ox.ac.uk>

First, it was not clear that you are talking about the output of 
traceback(), which is _a representation of_ the call stack and depends on 
the details of deparsing.

Second, the difference is I believe not implicit vs explicit printing, but 
of printing an evaluated object vs printing a call.  What your subject 
line would correspond to is

x <- ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() + geom_point()
x vs print(x)

I can't demonstrate (what is aes?), but I expect that would show minimal 
differences.

The issue seems to be whether arguments have been evaluated, and if so 
whether they were promises.  Promises can be deparsed back to the symbolic 
representation rather than to their value.  When you call print explicitly 
_on the ggplot call_, you have promises to arguments (to support lazy 
evaluation).  As far as I know (this is a detail of your code), the object 
ggplot returns has evaluated 'mtcars' and contains the value and not the 
promise, hence the difference in the deparsing of the call stack.

You chose to call traceback() without 'max.lines', and the answer would 
seem to be

1) don't use a buggy print method,
2) if you have to (to fix it), use 'max.lines' or do this in two steps.

If you want your end users to see a nicer representation, reconsider what 
you actually return in your object.


On Sat, 12 May 2007, hadley wickham wrote:

> Hi everyone,
>
> I've run into a bit of strange problem with implicit vs explicit
> printing and the call stack. I've included an example at the bottom of
> this email.  The basic problem is that I have an S3 object with a
> print method.  When the object is implicitly printed (ie. typed
> directly into the console) the function arguments in the call stack
> are exploded out to their actual values, rather than just the name I
> typed in (see below for an example if my language is confusing).  When
> I explicitly "print" the object, the call stack is fine.
>
> This is not just of academic interest, because with a larger dataset
> and an implicit print, there is a noticeable delay before control
> returns to the prompt  (I can't quantify it exactly because
> system.time requires a explicit print, but it's on the order of a few
> seconds).
>
> I'm not sure if I've provided enough information to be able to solve
> the problem, so please let me know what additional details would be
> useful.
>
> Thanks,
>
> Hadley
>
>
>> ggplot(mtcars, aes(x=cyl, y=-mpg)) + scale_y_log10() + geom_point()
> Error in grid.pretty(.$domain()) : infinite axis extents [GEPretty(-inf,inf,5)]
> In addition: Warning messages:
> 1: NaNs produced in: log(x, base)
> 2: no non-missing arguments to min; returning Inf
> 3: no non-missing arguments to max; returning -Inf
> 4: no non-missing arguments to min; returning Inf
> 5: no non-missing arguments to max; returning -Inf
>> traceback()
> 16: .Call(L_pretty, range)
> 15: grid.pretty(.$domain())
> 14: get("breaks", env = .$y(), inherits = TRUE)(.$y(), ...)
> 13: .$y()$breaks()
> 12: range(at)
> 11: as.numeric(x)
> 10: unit(range(at), "native")
> 9: ggaxis_line(at, position)
> 8: ggaxis(.$y()$breaks(), .$y()$labels(), "left", range$y)
> 7: get("guide_axes", env = coordinates, inherits = TRUE)(coordinates,
>       ...)
> 6: coordinates$guide_axes()
> 5: guides_basic(plot, scales, cs)
> 4: ggplot_plot(x, ...)
> 3: grid.draw(ggplot_plot(x, ...))
> 2: print.ggplot(list(data = list(mpg = c(21, 21, 22.8, 21.4, 18.7,
>   18.1, 14.3, 24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4,
>   14.7, 32.4, 30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26,
>   30.4, 15.8, 19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4,
>   4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8,
>   6, 8, 4), disp = c(160, 160, 108, 258, 360, 225, 360, 146.7,
>   140.8, 167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7,
>   75.7, 71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351,
>   145, 301, 121), hp = c(110, 110, 93, 110, 175, 105, 245, 62,
>   95, 123, 123, 180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150,
>   150, 245, 175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9,
>   3.9, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92, 3.07,
>   3.07, 3.07, 2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76, 3.15,
>   3.73, 3.08, 4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11), wt = c(2.62,
>   2.875, 2.32, 3.215, 3.44, 3.46, 3.57, 3.19, 3.15, 3.44, 3.44,
>   4.07, 3.73, 3.78, 5.25, 5.424, 5.345, 2.2, 1.615, 1.835, 2.465,
>   3.52, 3.435, 3.84, 3.845, 1.935, 2.14, 1.513, 3.17, 2.77, 3.57,
>   2.78), qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84,
>   20, 22.9, 18.3, 18.9, 17.4, 17.6, 18, 17.98, 17.82, 17.42, 19.47,
>   18.52, 19.9, 20.01, 16.87, 17.3, 15.41, 17.05, 18.9, 16.7, 16.9,
>   14.5, 15.5, 14.6, 18.6), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1,
>   1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
>   1), am = c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>   1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4,
>   4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3,
>   3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4, 2,
>   2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, 2, 2, 4,
>   6, 8, 2)), layers = list(<environment>), scales = <environment>,
>       defaults = list(x = cyl, y = -mpg), title = NULL, fixedaspect = FALSE,
>       coordinates = <environment>, formula = ". ~ .", margins = FALSE))
> 1: print(list(data = list(mpg = c(21, 21, 22.8, 21.4, 18.7, 18.1,
>   14.3, 24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4, 14.7,
>   32.4, 30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26, 30.4,
>   15.8, 19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4, 4, 6,
>   6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8, 6, 8,
>   4), disp = c(160, 160, 108, 258, 360, 225, 360, 146.7, 140.8,
>   167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7, 75.7,
>   71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351, 145, 301,
>   121), hp = c(110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123,
>   180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150, 150, 245,
>   175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9, 3.9, 3.85,
>   3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92, 3.07, 3.07, 3.07,
>   2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76, 3.15, 3.73, 3.08,
>   4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11), wt = c(2.62, 2.875,
>   2.32, 3.215, 3.44, 3.46, 3.57, 3.19, 3.15, 3.44, 3.44, 4.07,
>   3.73, 3.78, 5.25, 5.424, 5.345, 2.2, 1.615, 1.835, 2.465, 3.52,
>   3.435, 3.84, 3.845, 1.935, 2.14, 1.513, 3.17, 2.77, 3.57, 2.78
>   ), qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84,
>   20, 22.9, 18.3, 18.9, 17.4, 17.6, 18, 17.98, 17.82, 17.42, 19.47,
>   18.52, 19.9, 20.01, 16.87, 17.3, 15.41, 17.05, 18.9, 16.7, 16.9,
>   14.5, 15.5, 14.6, 18.6), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1,
>   1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
>   1), am = c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>   1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4,
>   4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3,
>   3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4, 2,
>   2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, 2, 2, 4,
>   6, 8, 2)), layers = list(<environment>), scales = <environment>,
>       defaults = list(x = cyl, y = -mpg), title = NULL, fixedaspect = FALSE,
>       coordinates = <environment>, formula = ". ~ .", margins = FALSE))
>> print(ggplot(mtcars, aes(x=cyl, y=-mpg)) + scale_y_log10() + geom_point())
> Error in grid.pretty(.$domain()) : infinite axis extents [GEPretty(-inf,inf,5)]
> In addition: Warning messages:
> 1: NaNs produced in: log(x, base)
> 2: no non-missing arguments to min; returning Inf
> 3: no non-missing arguments to max; returning -Inf
> 4: no non-missing arguments to min; returning Inf
> 5: no non-missing arguments to max; returning -Inf
>> traceback()
> 16: .Call(L_pretty, range)
> 15: grid.pretty(.$domain())
> 14: get("breaks", env = .$y(), inherits = TRUE)(.$y(), ...)
> 13: .$y()$breaks()
> 12: range(at)
> 11: as.numeric(x)
> 10: unit(range(at), "native")
> 9: ggaxis_line(at, position)
> 8: ggaxis(.$y()$breaks(), .$y()$labels(), "left", range$y)
> 7: get("guide_axes", env = coordinates, inherits = TRUE)(coordinates,
>       ...)
> 6: coordinates$guide_axes()
> 5: guides_basic(plot, scales, cs)
> 4: ggplot_plot(x, ...)
> 3: grid.draw(ggplot_plot(x, ...))
> 2: print.ggplot(ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() +
>       geom_point())
> 1: print(ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() +
>       geom_point())
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From h.wickham at gmail.com  Sun May 13 11:57:21 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Sun, 13 May 2007 11:57:21 +0200
Subject: [Rd] Implicit vs explicit printing and the call stack
In-Reply-To: <Pine.LNX.4.64.0705130939060.1927@gannet.stats.ox.ac.uk>
References: <f8e6ff050705120736q754367d9nef4a488c6fa53a03@mail.gmail.com>
	<Pine.LNX.4.64.0705130939060.1927@gannet.stats.ox.ac.uk>
Message-ID: <f8e6ff050705130257x569bf79ldde2ed81b33b0d96@mail.gmail.com>

> First, it was not clear that you are talking about the output of
> traceback(), which is _a representation of_ the call stack and depends on
> the details of deparsing.

Given that there is a substantial delay in one case, and not in the
other, I had assumed (perhaps falsely) that there was something more
fundamental going on that simply the representation of the call stack
by traceback. Perhaps I should have been more clear that the output of
traceback was a symptom of the problem, not what I was really
interested in.

> Second, the difference is I believe not implicit vs explicit printing, but
> of printing an evaluated object vs printing a call.  What your subject
> line would correspond to is
>
> x <- ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() + geom_point()
> x vs print(x)
>
> I can't demonstrate (what is aes?), but I expect that would show minimal
> differences.

I don't think that is the case.  Using Gabor's reproducible example:

library(lattice)

x <- xyplot(conc ~ uptake, CO2, xlim = Inf)
x
traceback()
print(x)
traceback()

shows the same differences that I reported.

> The issue seems to be whether arguments have been evaluated, and if so
> whether they were promises.  Promises can be deparsed back to the symbolic
> representation rather than to their value.  When you call print explicitly
> _on the ggplot call_, you have promises to arguments (to support lazy
> evaluation).  As far as I know (this is a detail of your code), the object
> ggplot returns has evaluated 'mtcars' and contains the value and not the
> promise, hence the difference in the deparsing of the call stack.

I'm not sure I completely follow, and I don't think your reasoning
holds given the example above. Please correct me if I am wrong.  My
code for ggplot.print follows if that helps.

print.ggplot <- function(x, newpage = is.null(vp), vp = NULL, ...) {
	if (newpage) grid.newpage()
	if (is.null(vp)) {
		grid.draw(ggplot_plot(x, ...))
	} else {
		pushViewport(vp)
		grid.draw(ggplot_plot(x, ...))
		upViewport()
	}
}


>
> You chose to call traceback() without 'max.lines', and the answer would
> seem to be
>
> 1) don't use a buggy print method,
> 2) if you have to (to fix it), use 'max.lines' or do this in two steps.
>
> If you want your end users to see a nicer representation, reconsider what
> you actually return in your object.

I don't really care about the representation in the call stack
(although it is a pain when debugging, even though max.lines helps),
the main problem is the 4-5 second delay after an error before control
returns to the user.  This does not occur with an explicit print.

Hadley


From ripley at stats.ox.ac.uk  Sun May 13 13:13:48 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sun, 13 May 2007 12:13:48 +0100 (BST)
Subject: [Rd] Implicit vs explicit printing and the call stack
In-Reply-To: <f8e6ff050705130257x569bf79ldde2ed81b33b0d96@mail.gmail.com>
References: <f8e6ff050705120736q754367d9nef4a488c6fa53a03@mail.gmail.com> 
	<Pine.LNX.4.64.0705130939060.1927@gannet.stats.ox.ac.uk>
	<f8e6ff050705130257x569bf79ldde2ed81b33b0d96@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705131101230.1927@gannet.stats.ox.ac.uk>

On Sun, 13 May 2007, hadley wickham wrote:

>> First, it was not clear that you are talking about the output of
>> traceback(), which is _a representation of_ the call stack and depends on
>> the details of deparsing.
>
> Given that there is a substantial delay in one case, and not in the
> other, I had assumed (perhaps falsely) that there was something more
> fundamental going on that simply the representation of the call stack
> by traceback. Perhaps I should have been more clear that the output of
> traceback was a symptom of the problem, not what I was really
> interested in.

traceback() does very little apart from show you .Traceback, which is 
constructed (as a representation) at the time of the error.  My guess is 
that the concern is the time it takes to create .Traceback, but see
below.

>> Second, the difference is I believe not implicit vs explicit printing, but
>> of printing an evaluated object vs printing a call.  What your subject
>> line would correspond to is
>> 
>> x <- ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() + 
>> geom_point()
>> x vs print(x)
>> 
>> I can't demonstrate (what is aes?), but I expect that would show minimal
>> differences.
>
> I don't think that is the case.  Using Gabor's reproducible example:
>
> library(lattice)
>
> x <- xyplot(conc ~ uptake, CO2, xlim = Inf)
> x
> traceback()
> print(x)
> traceback()
>
> shows the same differences that I reported.

It is not the same as regards my comments: your example showed the details 
of mtcars, and that appeared to be your concern.  That example does not 
show the details of CO2.

Part of my point is that if your returned object does not contain the 
evaluated dataset (but, say, a promise to it), this will not happen.

>> The issue seems to be whether arguments have been evaluated, and if so
>> whether they were promises.  Promises can be deparsed back to the symbolic
>> representation rather than to their value.  When you call print explicitly
>> _on the ggplot call_, you have promises to arguments (to support lazy
>> evaluation).  As far as I know (this is a detail of your code), the object
>> ggplot returns has evaluated 'mtcars' and contains the value and not the
>> promise, hence the difference in the deparsing of the call stack.
>
> I'm not sure I completely follow, and I don't think your reasoning
> holds given the example above. Please correct me if I am wrong.

It does.  In one traceback() you have print.trellis(x), in the other 
print.trellis(<the result of get("x")>).  This is because in print(x), 
print.trellis is passed a promise, and in 'x', 'x' has been evaluated and 
print and print.trellis are passed the value (a list).

[ ... ]

Let me try to spell out the mechanisms in so far as I understand them (R 
lacks technical documentation):

A) print(x).

The R evaluator sets up an argument list containing a promise to evaluate 
'x' in the calling environemnt. It then calls UseMethod("print"), which 
needs to evaluate the first argument to find the class, finds the method, 
and manipulates the call to be to print.ggplot.  At that point the details 
get complicated, but when evaluation gets to the body of print.ggplot, the 
intention is that it is just as if print.ggplot(x) had been called and so 
the first argument is a promise to evaluate 'x' in the calling environment 
of print().  (Because the details vary across the internals, I am not sure 
without tracing through the code if the promise is a new one or the 
evaluated one: in either case it will deparse to 'x'.)

B) 'x' at top-level.

This creates an anonymous object whose value is the result of eval(x) (at 
C level).  The R evaluator then notices that the R_Visible flag is set and 
calls PrintValueEnv on the anonymous object.  The latter notices that the 
object has the OBJECT bit set and so calls print() on the anonymous 
object. At that point the name 'x' is not available and the anonymous 
object deparses to its value.


Suppose that printing integers had a bug.  Then my understanding is that 
print(2L+3L) would have '2L+3L' in the deparsed call, and '2L+3L' would 
have '5' (or '5L').  That is intended to illustrate that deparsing to the 
call may or may not be more compact than to the value.

>> You chose to call traceback() without 'max.lines', and the answer would
>> seem to be
>> 
>> 1) don't use a buggy print method,
>> 2) if you have to (to fix it), use 'max.lines' or do this in two steps.
>> 
>> If you want your end users to see a nicer representation, reconsider what
>> you actually return in your object.
>
> I don't really care about the representation in the call stack
> (although it is a pain when debugging, even though max.lines helps),
> the main problem is the 4-5 second delay after an error before control
> returns to the user.  This does not occur with an explicit print.

I can't reproduce that of course.  It might well be that deparsing the 
calls to dump the call stack to .Traceback is the problem. in which case 
my '1)' applies. (See the comments about try in ?traceback that will help 
you distinguish.)

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From h.wickham at gmail.com  Sun May 13 14:21:26 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Sun, 13 May 2007 14:21:26 +0200
Subject: [Rd] Implicit vs explicit printing and the call stack
In-Reply-To: <Pine.LNX.4.64.0705131101230.1927@gannet.stats.ox.ac.uk>
References: <f8e6ff050705120736q754367d9nef4a488c6fa53a03@mail.gmail.com>
	<Pine.LNX.4.64.0705130939060.1927@gannet.stats.ox.ac.uk>
	<f8e6ff050705130257x569bf79ldde2ed81b33b0d96@mail.gmail.com>
	<Pine.LNX.4.64.0705131101230.1927@gannet.stats.ox.ac.uk>
Message-ID: <f8e6ff050705130521u42735c86g525bcd111fe6b6be@mail.gmail.com>

On 5/13/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> On Sun, 13 May 2007, hadley wickham wrote:
>
> >> First, it was not clear that you are talking about the output of
> >> traceback(), which is _a representation of_ the call stack and depends on
> >> the details of deparsing.
> >
> > Given that there is a substantial delay in one case, and not in the
> > other, I had assumed (perhaps falsely) that there was something more
> > fundamental going on that simply the representation of the call stack
> > by traceback. Perhaps I should have been more clear that the output of
> > traceback was a symptom of the problem, not what I was really
> > interested in.
>
> traceback() does very little apart from show you .Traceback, which is
> constructed (as a representation) at the time of the error.  My guess is
> that the concern is the time it takes to create .Traceback, but see
> below.
>
> >> Second, the difference is I believe not implicit vs explicit printing, but
> >> of printing an evaluated object vs printing a call.  What your subject
> >> line would correspond to is
> >>
> >> x <- ggplot(mtcars, aes(x = cyl, y = -mpg)) + scale_y_log10() +
> >> geom_point()
> >> x vs print(x)
> >>
> >> I can't demonstrate (what is aes?), but I expect that would show minimal
> >> differences.
> >
> > I don't think that is the case.  Using Gabor's reproducible example:
> >
> > library(lattice)
> >
> > x <- xyplot(conc ~ uptake, CO2, xlim = Inf)
> > x
> > traceback()
> > print(x)
> > traceback()
> >
> > shows the same differences that I reported.
>
> It is not the same as regards my comments: your example showed the details
> of mtcars, and that appeared to be your concern.  That example does not
> show the details of CO2.

Oh, I see - it is much more verbose, but CO2 has not been exploded out.

> Part of my point is that if your returned object does not contain the
> evaluated dataset (but, say, a promise to it), this will not happen.

What is the suggested way to create such a promise? A closure? eg.

ggplot <- function(data) {
list(data = function() data)
}

A promise would have the desirable property of not storing a copy of
the data in the object, and you wouldn't need to update the plot
object if you changed the data in between creation and first plotting
(but not between first and second plotting).

Or delayed assign?

ggplot <- function(data) {
out <- new.env()
delayedAssign("data", data, assign.env=out)
out
}

Or something else?

> >> The issue seems to be whether arguments have been evaluated, and if so
> >> whether they were promises.  Promises can be deparsed back to the symbolic
> >> representation rather than to their value.  When you call print explicitly
> >> _on the ggplot call_, you have promises to arguments (to support lazy
> >> evaluation).  As far as I know (this is a detail of your code), the object
> >> ggplot returns has evaluated 'mtcars' and contains the value and not the
> >> promise, hence the difference in the deparsing of the call stack.
> >
> > I'm not sure I completely follow, and I don't think your reasoning
> > holds given the example above. Please correct me if I am wrong.
>
> It does.  In one traceback() you have print.trellis(x), in the other
> print.trellis(<the result of get("x")>).  This is because in print(x),
> print.trellis is passed a promise, and in 'x', 'x' has been evaluated and
> print and print.trellis are passed the value (a list).

Ok, I think I get it now.  Thanks for the detailed explanation.

> [ ... ]
>
> Let me try to spell out the mechanisms in so far as I understand them (R
> lacks technical documentation):
>
> A) print(x).
>
> The R evaluator sets up an argument list containing a promise to evaluate
> 'x' in the calling environemnt. It then calls UseMethod("print"), which
> needs to evaluate the first argument to find the class, finds the method,
> and manipulates the call to be to print.ggplot.  At that point the details
> get complicated, but when evaluation gets to the body of print.ggplot, the
> intention is that it is just as if print.ggplot(x) had been called and so
> the first argument is a promise to evaluate 'x' in the calling environment
> of print().  (Because the details vary across the internals, I am not sure
> without tracing through the code if the promise is a new one or the
> evaluated one: in either case it will deparse to 'x'.)
>
> B) 'x' at top-level.
>
> This creates an anonymous object whose value is the result of eval(x) (at
> C level).  The R evaluator then notices that the R_Visible flag is set and
> calls PrintValueEnv on the anonymous object.  The latter notices that the
> object has the OBJECT bit set and so calls print() on the anonymous
> object. At that point the name 'x' is not available and the anonymous
> object deparses to its value.
>
>
> Suppose that printing integers had a bug.  Then my understanding is that
> print(2L+3L) would have '2L+3L' in the deparsed call, and '2L+3L' would
> have '5' (or '5L').  That is intended to illustrate that deparsing to the
> call may or may not be more compact than to the value.

Ok, that makes sense to me now.

> >> You chose to call traceback() without 'max.lines', and the answer would
> >> seem to be
> >>
> >> 1) don't use a buggy print method,
> >> 2) if you have to (to fix it), use 'max.lines' or do this in two steps.
> >>
> >> If you want your end users to see a nicer representation, reconsider what
> >> you actually return in your object.
> >
> > I don't really care about the representation in the call stack
> > (although it is a pain when debugging, even though max.lines helps),
> > the main problem is the 4-5 second delay after an error before control
> > returns to the user.  This does not occur with an explicit print.
>
> I can't reproduce that of course.  It might well be that deparsing the
> calls to dump the call stack to .Traceback is the problem. in which case
> my '1)' applies. (See the comments about try in ?traceback that will help
> you distinguish.)

Deparsing is probably the problem, as it needs to deparse a 55000 x 12
data.frame:

> system.time(deparse(diamonds))
   user  system elapsed
  2.912   0.015   2.961

which matches closely the delay I experience. In which case, I need to
fix my buggy print function, but what exactly is buggy about it?

Thanks again for your help,

Hadley


From murdoch at stats.uwo.ca  Sun May 13 14:45:02 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Sun, 13 May 2007 08:45:02 -0400
Subject: [Rd] Strange behavior of debugger
In-Reply-To: <dd6eb99f7435.46462fbc@usc.edu>
References: <dd6eb99f7435.46462fbc@usc.edu>
Message-ID: <4647084E.4040006@stats.uwo.ca>

On 13/05/2007 12:21 AM, Tong Wang wrote:
> Hi, All:
>     I had some trouble debugging C source dynamically loaded into R , when I issued N  in gdb(or insight) , the debugger, instead of moving downward step by step, jumped to strange positions (upward, downward, one step, a few steps away).
> 
>    To enter the debugger, I issued  gdb(insight) Rgui.exe in Cygwin and add this line :  asm("int $3");   to my C code.  After 
> entering R, I did something like:  dyn.load("mypath/mycode.dll") , then  out <- .C("myfun", arg1=as.numeric(a),......) 
> The C files are compiled with:    R CMD SHLIB -d myfile.c
>    
>    I am using Win XP + Cygwin, and I have a binary version and a cygwin compiled version of R-2.4.1 installed. This same 
> behavior show up in both installations.  

I think you're seeing the code rearrangements that happen when gcc 
optimizes the code.  It puts some functions inline, it shares similar 
sequences of instructions between different blocks of code, etc.

If this is causing problems in debugging, change the -O3 to a lower 
level of optimization, e.g. -O0 (i.e. oh zero) in the relevant Makefile: 
  src/gnuwin32/MakeDll if you're debugging your own package, 
src/gnuwin32/Makefile for most of R, etc.  However, be aware that in 
case of nasty bugs, this may change the behaviour of your program.

By the way, if you used Cygwin compilers to build, expect problems.  The 
supported compiler is MinGW.

> One thing is, even though I set the evn  DEBUG as T when built R from sourse in 
> Cygwin,  the Rgui.exe I got doesn't seem to contain debug info.  (although R.exe does) , I am not sure if this means I did something wrong.  

Perhaps you didn't recompile everything with the flag set.  You need it 
set both when the .o object files are created and later when they are 
linked.  And DEBUG=T has no effect on the initial entry point of 
Rgui.exe, because it is coming from the MinGW libraries, not from R 
source, and R doesn't compile those.

Duncan Murdoch


From clausen at econ.upenn.edu  Sun May 13 19:22:41 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Sun, 13 May 2007 13:22:41 -0400
Subject: [Rd] symbollic differentiation in R
Message-ID: <20070513172241.GO6923@econ.upenn.edu>

Hi all,

I wrote a symbollic differentiation function in R, which can be downloaded
here:

        http://www.econ.upenn.edu/~clausen/computing/Deriv.R
        http://www.econ.upenn.edu/~clausen/computing/Simplify.R

It is just a prototype.  Of course, R already contains two differentiation
functions: D and deriv.  However, these functions have several limitations.
They can probably be fixed, but since they are written in C, this would
require a lot of work.  Limitations include:
 * The derivatives table can't be modified at runtime, and is only available
in C.
 * The output of "deriv" can not be differentiated again.
 * Neither function can substitute function calls.  eg:
       f <- function(x, y) x + y; deriv(f(x, x^2), "x")
 * They can't differentiate vector-valued functions (although my code also
can't do this yet)

I think these limitations are fairly important.  As it stands, it's rather
difficult to automatically differentiate a likelihood function.  Ideally, I
would like to be able to write

        ll <- function(mean, sd)
                -sum(log(dnorm(x, mean, sd)))

        ll.deriv <- Deriv.function(ll)

I can't get this to work with my code since:
 * since sum can't add a list of vectors (although I could easily write a sum
replacement.)
 * "x" is assumed to be a scalar in this contect.  I'm not sure if there's a
good way to generalize.

The above code would work right now if there were one parameter (so
sum doesn't screw it up) and one scalar data point "x".

Is there an existing way of doing this that is close to being this convenient?
Is it really much easier to solve the limitations I listed with a fresh
R implementation?

Cheers,
Andrew


From clausen at econ.upenn.edu  Sun May 13 19:29:11 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Sun, 13 May 2007 13:29:11 -0400
Subject: [Rd] relist, an inverse operator to unlist
Message-ID: <20070513172911.GP6923@econ.upenn.edu>

Hi all,

I wrote a function called relist, which is an inverse to the existing
unlist function:

        http://www.econ.upenn.edu/~clausen/computing/relist.R

Some functions need many parameters, which are most easily represented in
complex structures.  Unfortunately, many mathematical functions in R,
including optim, nlm, and grad can only operate on functions whose domain is
a vector.  R has a function to convert complex objects into a vector
representation.  This file provides an inverse operation called "unlist" to
convert vectors back to the convenient structural representation.  Together,
these functions allow structured functions to have simple mathematical
interfaces.

For example, a likelihood function for a multivariate normal model needs a
variance-covariance matrix and a mean vector.  It would be most convenient to
represent it as a list containing a vector and a matrix.  A typical parameter
might look like

        list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))

However, optim can't operate on functions that take lists as input; it
only likes vectors.  The solution is conversion:

         initial.param <- list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))

         ll <- function(param.vector)
         {
                param <- relist(initial.param, param.vector)
                -sum(dnorm(x, mean=param$mean, vcov=param$vcov, log=TRUE))
                # note: dnorm doesn't do vcov... but I hope you get the point
         }

         optim(unlist(initial.param), ll)

"relist" takes two parameters: skeleton and flesh.  Skeleton is a sample
object that has the right "shape" but the wrong content.  "flesh" is a vector
with the right content but the wrong shape.  Invoking

        relist(skeleton, flesh)

will put the content of flesh on the skeleton.

As long as "skeleton" has the right shape, it should be a precise inverse
of unlist.  These equalities hold:

        relist(skeleton, unlist(x)) == x
        unlist(relist(skeleton, y)) == y

Is there any easy way to do this without my new relist function?  Is there any
interest in including this in R's base package?  (Or anywhere else?)  Any
comments on the implementation?  

Cheers,
Andrew


From ggrothendieck at gmail.com  Sun May 13 19:37:09 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Sun, 13 May 2007 13:37:09 -0400
Subject: [Rd] symbollic differentiation in R
In-Reply-To: <20070513172241.GO6923@econ.upenn.edu>
References: <20070513172241.GO6923@econ.upenn.edu>
Message-ID: <971536df0705131037q32d06f1fv6125d1273df56b98@mail.gmail.com>

On 5/13/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> Hi all,
>
> I wrote a symbollic differentiation function in R, which can be downloaded
> here:
>
>        http://www.econ.upenn.edu/~clausen/computing/Deriv.R
>        http://www.econ.upenn.edu/~clausen/computing/Simplify.R
>
> It is just a prototype.  Of course, R already contains two differentiation
> functions: D and deriv.  However, these functions have several limitations.
> They can probably be fixed, but since they are written in C, this would
> require a lot of work.  Limitations include:
>  * The derivatives table can't be modified at runtime, and is only available
> in C.
>  * The output of "deriv" can not be differentiated again.

Try this:

> D(D(quote(x^3), "x"), "x")
3 * (2 * x)

>  * Neither function can substitute function calls.  eg:
>       f <- function(x, y) x + y; deriv(f(x, x^2), "x")

Try Ryacas package:

> library(Ryacas)
> x <- Sym("x")
> f <- function(x)x^2
> deriv(f(x^3))
expression(6 * x^5)

>  * They can't differentiate vector-valued functions (although my code also
> can't do this yet)

> library(Ryacas)
> x <- Sym("x")
> deriv(List(x, x^2))
expression(list(1, 2 * x))


>
> I think these limitations are fairly important.  As it stands, it's rather
> difficult to automatically differentiate a likelihood function.  Ideally, I
> would like to be able to write
>
>        ll <- function(mean, sd)
>                -sum(log(dnorm(x, mean, sd)))
>
>        ll.deriv <- Deriv.function(ll)
>
> I can't get this to work with my code since:
>  * since sum can't add a list of vectors (although I could easily write a sum
> replacement.)
>  * "x" is assumed to be a scalar in this contect.  I'm not sure if there's a
> good way to generalize.
>
> The above code would work right now if there were one parameter (so
> sum doesn't screw it up) and one scalar data point "x".
>
> Is there an existing way of doing this that is close to being this convenient?
> Is it really much easier to solve the limitations I listed with a fresh
> R implementation?
>
> Cheers,
> Andrew
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From clausen at econ.upenn.edu  Sun May 13 21:19:59 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Sun, 13 May 2007 15:19:59 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070513172911.GP6923@econ.upenn.edu>
References: <20070513172911.GP6923@econ.upenn.edu>
Message-ID: <20070513191948.GQ6923@econ.upenn.edu>

On Sun, May 13, 2007 at 01:29:11PM -0400, Andrew Clausen wrote:
> R has a function to convert complex objects into a vector
> representation.  This file provides an inverse operation called "unlist" to
> convert vectors back to the convenient structural representation.

Oops.  I meant to say:

R has a function to convert complex objects into a vector representation called
"unlist".  This file provides an inverse operation called "relist" to convert
vectors back to the convenient structural representation.


From mtmorgan at fhcrc.org  Sun May 13 21:24:26 2007
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Sun, 13 May 2007 12:24:26 -0700
Subject: [Rd] Help understanding LAPACK symbol resolution
Message-ID: <6phtzuga5n9.fsf@gopher4.fhcrc.org>

R developers,

I am trying to understand how symbols are resolved, so that I can
configure a package that I contributed to, and so that I can provide
guidance to (linux / OSX) users of the package. To be concrete, my
package uses the LAPACK Fortran symbol zsysv. This is not in
libRlapack, but is defined on my system in the library
/usr/lib64/liblapack.so.

* I suspect that the reason the symbol is not in libRlapack is just
  one of economy, i.e., no use for the symbol in R routines, rather
  than for other nefarious reasons (?? some fundamental incompatibility
  with R?)

I guess that most of my package users will have an R built without
special attention to their lapack library, so will start with
something like

mtmorgan at gopher4:~> R CMD config LAPACK_LIBS
-L/home/mtmorgan/arch/x86_64/R-devel/lib -lRlapack

My R is built with --enable-R-shlib, so predictably enough

R CMD INSTALL --clean <pkg>

is 'successful' (zsysv_ is marked as unresolved in the <pkg>.so, but
this doesn't stop compiling and linking). Also predictably enough,
loading the package in R indicates 'undefined symbol: zsysv_'. Inside
R, LD_LIBRARY_PATH starts with he R_HOME/lib, and includes /usr/lib64,
so I surmise that the libraries defined at compile / link are the ones
where symbols are searched (rather than all libraries in
LD_LIBRARY_PATH).

To allow the user to provide a specific LAPACK, I added lines to a
configure.in file that allow for a --with-lapack

LAPACK_LIBS=`"${R_HOME}/bin/R" CMD config LAPACK_LIBS`
AC_ARG_WITH([lapack],
	AC_HELP_STRING([--with-lapack=LIB_PATH],
		[LAPACK library location with complex routines]),
		[LAPACK_LIBS=$withval])

added a check to see that zsysv_ is actually available

AC_CHECK_FUNC(zsysv_,,
	AC_MSG_ERROR([lapack needs zsysv_ in ${LAPACK_LIBS}]))

and substituted LAPACK_LIBS into a Makevars.in file

AC_SUBST(LAPACK_LIBS)
AC_OUTPUT(src/Makevars)

Makevars.in:
PKG_LIBS=@LAPACK_LIBS@

I then install my package with

R CMD INSTALL --clean --configure-args=--with-lapack=-llapack <pkg>

or more generally

R CMD INSTALL --clean \
   --configure-args="--with-lapack='-L/usr/lib64 -llapack'" <pkg>

This 'works', in the sense that the package compiles, loads, and
apparently runs as expected. I'm concerned though about how lapack is
being found, and how symbols are actually being resolved.

When I

mtmorgan at gopehr4:~> ldd <pkg>.so

I see an entry

        liblapack.so.3 => /usr/lib64/liblapack.so.3 (0x00002b0928a1c000)

and I do NOT see an entry pointing to libRlapack .Am I right in
interpreting this to mean:

* All LAPACK symbols in my package, including those that
  coincidentally have a definition in libRlapack, resolve to
  /usr/lib64/liblapack.so?

* liblapack.so will be found without any need to specify
  LD_LIBRARY_PATH, or other configuration variables? Or is the library
  being found because my LD_LIBRARY_PATH already includes /usr/lib64?
  If the latter, how can the user 'best' configure their system to
  find the required library (I think I'm looking for something between
  'get the system administrator to install lapack in a findable place'
  and 'set LD_LIBRARY_PATH before starting R').

* Resolving symbols to libraries will occur in a way consistent with
  the last two points (as opposed to the implementation details)
  across platforms, compilers, and static vs. shared libraries?

Thanks for any reassurance or corrective guidance.

Martin
-- 
Martin Morgan
Bioconductor / Computational Biology
http://bioconductor.org


From ripley at stats.ox.ac.uk  Sun May 13 21:58:44 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Sun, 13 May 2007 20:58:44 +0100 (BST)
Subject: [Rd] Help understanding LAPACK symbol resolution
In-Reply-To: <6phtzuga5n9.fsf@gopher4.fhcrc.org>
References: <6phtzuga5n9.fsf@gopher4.fhcrc.org>
Message-ID: <Pine.LNX.4.64.0705132040280.27271@auk.stats>

On Sun, 13 May 2007, Martin Morgan wrote:

> R developers,
>
> I am trying to understand how symbols are resolved, so that I can
> configure a package that I contributed to, and so that I can provide
> guidance to (linux / OSX) users of the package. To be concrete, my
> package uses the LAPACK Fortran symbol zsysv. This is not in
> libRlapack, but is defined on my system in the library
> /usr/lib64/liblapack.so.
>
> * I suspect that the reason the symbol is not in libRlapack is just
>  one of economy, i.e., no use for the symbol in R routines, rather
>  than for other nefarious reasons (?? some fundamental incompatibility
>  with R?)

Space saving.  'Writing R Extensions' covers this.

> I guess that most of my package users will have an R built without
> special attention to their lapack library, so will start with
> something like
>
> mtmorgan at gopher4:~> R CMD config LAPACK_LIBS
> -L/home/mtmorgan/arch/x86_64/R-devel/lib -lRlapack
>
> My R is built with --enable-R-shlib, so predictably enough
>
> R CMD INSTALL --clean <pkg>
>
> is 'successful' (zsysv_ is marked as unresolved in the <pkg>.so, but
> this doesn't stop compiling and linking). Also predictably enough,
> loading the package in R indicates 'undefined symbol: zsysv_'. Inside
> R, LD_LIBRARY_PATH starts with he R_HOME/lib, and includes /usr/lib64,
> so I surmise that the libraries defined at compile / link are the ones
> where symbols are searched (rather than all libraries in
> LD_LIBRARY_PATH).

Not the way R is usually built.  Library dirs specified by -L during 
configure are added to R_LIBRARY_PATH, but not those specified by the 
environment LD_LIBRARY_PATH at build time.  Most loaders have a -R/-rpath 
option, but R does not (by default) make use of it.  (I personally think 
it should: ELF originates on Solaris and that makes very effective use of 
-R.)

At run time ld.so searches its cache as well as LD_LIBRARY_PATH.  The 
order is system-specific: Linux says

    o (ELF only) Using the DT_RPATH dynamic section attribute  of  the
      binary  if present and DT_RUNPATH attribute does not exist.  Use
      of DT_RPATH is deprecated.

    o Using the environment variable LD_LIBRARY_PATH.  Except  if  the
      executable  is  a set-user-ID/set-group-ID binary, in which case
      it is ignored.

    o (ELF only) Using the DT_RUNPATH dynamic section attribute of the
        binary if present.

    o From  the  cache file /etc/ld.so.cache which contains a compiled
      list of candidate libraries previously found  in  the  augmented
      library  path.  If, however, the binary was linked with -z node-
      flib linker option, libraries in the default library  paths  are
      skipped.

    o In  the default path /lib, and then /usr/lib.  If the binary was
      linked with -z nodeflib linker option, this step is skipped.

(and for a 64-bit system, read lib64 for lib).


> To allow the user to provide a specific LAPACK, I added lines to a
> configure.in file that allow for a --with-lapack
>
> LAPACK_LIBS=`"${R_HOME}/bin/R" CMD config LAPACK_LIBS`
> AC_ARG_WITH([lapack],
> 	AC_HELP_STRING([--with-lapack=LIB_PATH],
> 		[LAPACK library location with complex routines]),
> 		[LAPACK_LIBS=$withval])
>
> added a check to see that zsysv_ is actually available
>
> AC_CHECK_FUNC(zsysv_,,
> 	AC_MSG_ERROR([lapack needs zsysv_ in ${LAPACK_LIBS}]))
>
> and substituted LAPACK_LIBS into a Makevars.in file
>
> AC_SUBST(LAPACK_LIBS)
> AC_OUTPUT(src/Makevars)
>
> Makevars.in:
> PKG_LIBS=@LAPACK_LIBS@
>
> I then install my package with
>
> R CMD INSTALL --clean --configure-args=--with-lapack=-llapack <pkg>
>
> or more generally
>
> R CMD INSTALL --clean \
>   --configure-args="--with-lapack='-L/usr/lib64 -llapack'" <pkg>
>
> This 'works', in the sense that the package compiles, loads, and
> apparently runs as expected. I'm concerned though about how lapack is
> being found, and how symbols are actually being resolved.
>
> When I
>
> mtmorgan at gopehr4:~> ldd <pkg>.so
>
> I see an entry
>
>        liblapack.so.3 => /usr/lib64/liblapack.so.3 (0x00002b0928a1c000)
>
> and I do NOT see an entry pointing to libRlapack .Am I right in
> interpreting this to mean:
>
> * All LAPACK symbols in my package, including those that
>  coincidentally have a definition in libRlapack, resolve to
>  /usr/lib64/liblapack.so?

Yes.  libRlapack.so will not be in the search path.

> * liblapack.so will be found without any need to specify
>  LD_LIBRARY_PATH, or other configuration variables? Or is the library
>  being found because my LD_LIBRARY_PATH already includes /usr/lib64?

Both ld (used for linking) and ld.so (used a runtime) look in that path by 
default.

>  If the latter, how can the user 'best' configure their system to
>  find the required library (I think I'm looking for something between
>  'get the system administrator to install lapack in a findable place'
>  and 'set LD_LIBRARY_PATH before starting R').

Better to set it in the ld.so cache (via a file in /etc/ld.so.conf.d on a 
modern system), and set -L at build time.

> * Resolving symbols to libraries will occur in a way consistent with
>  the last two points (as opposed to the implementation details)
>  across platforms, compilers, and static vs. shared libraries?
>
> Thanks for any reassurance or corrective guidance.

The standard advice would be to supply the LAPACK routines in the package, 
and compile them if they are not found in $LAPACK_LIBS.  Remember that 
there are quite a few buggy LAPACKs out there so it is better to use your 
own than a system one that might be faster but inaccurate.

As I recall, fastICA is an example of the latter strategy.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ggrothendieck at gmail.com  Mon May 14 00:37:22 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Sun, 13 May 2007 18:37:22 -0400
Subject: [Rd] symbollic differentiation in R
In-Reply-To: <971536df0705131037q32d06f1fv6125d1273df56b98@mail.gmail.com>
References: <20070513172241.GO6923@econ.upenn.edu>
	<971536df0705131037q32d06f1fv6125d1273df56b98@mail.gmail.com>
Message-ID: <971536df0705131537g5a959f90s7912824a35323c6b@mail.gmail.com>

On 5/13/07, Gabor Grothendieck <ggrothendieck at gmail.com> wrote:
> On 5/13/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> > Hi all,
> >
> > I wrote a symbollic differentiation function in R, which can be downloaded
> > here:
> >
> >        http://www.econ.upenn.edu/~clausen/computing/Deriv.R
> >        http://www.econ.upenn.edu/~clausen/computing/Simplify.R
> >
> > It is just a prototype.  Of course, R already contains two differentiation
> > functions: D and deriv.  However, these functions have several limitations.
> > They can probably be fixed, but since they are written in C, this would
> > require a lot of work.  Limitations include:
> >  * The derivatives table can't be modified at runtime, and is only available
> > in C.
> >  * The output of "deriv" can not be differentiated again.
>
> Try this:
>
> > D(D(quote(x^3), "x"), "x")
> 3 * (2 * x)
>
> >  * Neither function can substitute function calls.  eg:
> >       f <- function(x, y) x + y; deriv(f(x, x^2), "x")
>
> Try Ryacas package:

I had omitted one line.  f has to be registered with yacas:

>
> > library(Ryacas)
> > x <- Sym("x")
> > f <- function(x)x^2

yacas(f)

> > deriv(f(x^3))
> expression(6 * x^5)
>
> >  * They can't differentiate vector-valued functions (although my code also
> > can't do this yet)
>
> > library(Ryacas)
> > x <- Sym("x")
> > deriv(List(x, x^2))
> expression(list(1, 2 * x))
>
>
> >
> > I think these limitations are fairly important.  As it stands, it's rather
> > difficult to automatically differentiate a likelihood function.  Ideally, I
> > would like to be able to write
> >
> >        ll <- function(mean, sd)
> >                -sum(log(dnorm(x, mean, sd)))
> >
> >        ll.deriv <- Deriv.function(ll)
> >
> > I can't get this to work with my code since:
> >  * since sum can't add a list of vectors (although I could easily write a sum
> > replacement.)
> >  * "x" is assumed to be a scalar in this contect.  I'm not sure if there's a
> > good way to generalize.
> >
> > The above code would work right now if there were one parameter (so
> > sum doesn't screw it up) and one scalar data point "x".
> >
> > Is there an existing way of doing this that is close to being this convenient?
> > Is it really much easier to solve the limitations I listed with a fresh
> > R implementation?
> >
> > Cheers,
> > Andrew
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>


From ggrothendieck at gmail.com  Mon May 14 01:02:37 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Sun, 13 May 2007 19:02:37 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070513172911.GP6923@econ.upenn.edu>
References: <20070513172911.GP6923@econ.upenn.edu>
Message-ID: <971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>

I suggest you define a "relist" class and then define an unlist
method for it which stores the skeleton as an attribute.  Then
one would not have to specify skeleton in the relist command
so

relist(unlist(relist(x))) === x

1. relist(x) is the same as x except it gets an additional class "relist".
2. unlist(relist(x)) invokes the relist method of unlist on relist(x)
returning another relist object
3. relist(unlist(relist(x))) then recreates relist(x)


On 5/13/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> Hi all,
>
> I wrote a function called relist, which is an inverse to the existing
> unlist function:
>
>        http://www.econ.upenn.edu/~clausen/computing/relist.R
>
> Some functions need many parameters, which are most easily represented in
> complex structures.  Unfortunately, many mathematical functions in R,
> including optim, nlm, and grad can only operate on functions whose domain is
> a vector.  R has a function to convert complex objects into a vector
> representation.  This file provides an inverse operation called "unlist" to
> convert vectors back to the convenient structural representation.  Together,
> these functions allow structured functions to have simple mathematical
> interfaces.
>
> For example, a likelihood function for a multivariate normal model needs a
> variance-covariance matrix and a mean vector.  It would be most convenient to
> represent it as a list containing a vector and a matrix.  A typical parameter
> might look like
>
>        list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
>
> However, optim can't operate on functions that take lists as input; it
> only likes vectors.  The solution is conversion:
>
>         initial.param <- list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
>
>         ll <- function(param.vector)
>         {
>                param <- relist(initial.param, param.vector)
>                -sum(dnorm(x, mean=param$mean, vcov=param$vcov, log=TRUE))
>                # note: dnorm doesn't do vcov... but I hope you get the point
>         }
>
>         optim(unlist(initial.param), ll)
>
> "relist" takes two parameters: skeleton and flesh.  Skeleton is a sample
> object that has the right "shape" but the wrong content.  "flesh" is a vector
> with the right content but the wrong shape.  Invoking
>
>        relist(skeleton, flesh)
>
> will put the content of flesh on the skeleton.
>
> As long as "skeleton" has the right shape, it should be a precise inverse
> of unlist.  These equalities hold:
>
>        relist(skeleton, unlist(x)) == x
>        unlist(relist(skeleton, y)) == y
>
> Is there any easy way to do this without my new relist function?  Is there any
> interest in including this in R's base package?  (Or anywhere else?)  Any
> comments on the implementation?
>
> Cheers,
> Andrew
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From hb at stat.berkeley.edu  Mon May 14 05:30:17 2007
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Sun, 13 May 2007 20:30:17 -0700
Subject: [Rd] select.list() not on front of other windows
Message-ID: <59d7961d0705132030l3d8ca777q750f1985a0c5c5cd@mail.gmail.com>

When calling

  select.list(letters[1:3])

in a fresh R session (R v2.4.1, v2.5.0, v2.6.0 devel) on WinXP using
*Rterm*, the dialog does *not* come up on front of other windows the
first time you call it.  Under Rgui it works just fine.

If you do:

 1) select.list(letters[1:3])
 2) bring the window to front manually
 3) select an option and press OK
 4) select.list(letters[1:3])

it the (second) dialog comes up in front of all other windows.

/Henrik


From mtmorgan at fhcrc.org  Mon May 14 05:34:53 2007
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Sun, 13 May 2007 20:34:53 -0700
Subject: [Rd] Help understanding LAPACK symbol resolution
In-Reply-To: <Pine.LNX.4.64.0705132040280.27271@auk.stats> (Brian Ripley's
	message of "Sun, 13 May 2007 20:58:44 +0100 (BST)")
References: <6phtzuga5n9.fsf@gopher4.fhcrc.org>
	<Pine.LNX.4.64.0705132040280.27271@auk.stats>
Message-ID: <6phhcqg9ixu.fsf@gopher4.fhcrc.org>

Prof. Ripley,

Thank you for the very helpful guidance and pointer to fastICA. 

Martin

Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:

> On Sun, 13 May 2007, Martin Morgan wrote:
>
>> R developers,
>>
>> I am trying to understand how symbols are resolved, so that I can
>> configure a package that I contributed to, and so that I can provide
>> guidance to (linux / OSX) users of the package. To be concrete, my
>> package uses the LAPACK Fortran symbol zsysv. This is not in
>> libRlapack, but is defined on my system in the library
>> /usr/lib64/liblapack.so.
>>
>> * I suspect that the reason the symbol is not in libRlapack is just
>>  one of economy, i.e., no use for the symbol in R routines, rather
>>  than for other nefarious reasons (?? some fundamental incompatibility
>>  with R?)
>
> Space saving.  'Writing R Extensions' covers this.
>
>> I guess that most of my package users will have an R built without
>> special attention to their lapack library, so will start with
>> something like
>>
>> mtmorgan at gopher4:~> R CMD config LAPACK_LIBS
>> -L/home/mtmorgan/arch/x86_64/R-devel/lib -lRlapack
>>
>> My R is built with --enable-R-shlib, so predictably enough
>>
>> R CMD INSTALL --clean <pkg>
>>
>> is 'successful' (zsysv_ is marked as unresolved in the <pkg>.so, but
>> this doesn't stop compiling and linking). Also predictably enough,
>> loading the package in R indicates 'undefined symbol: zsysv_'. Inside
>> R, LD_LIBRARY_PATH starts with he R_HOME/lib, and includes /usr/lib64,
>> so I surmise that the libraries defined at compile / link are the ones
>> where symbols are searched (rather than all libraries in
>> LD_LIBRARY_PATH).
>
> Not the way R is usually built.  Library dirs specified by -L during
> configure are added to R_LIBRARY_PATH, but not those specified by the
> environment LD_LIBRARY_PATH at build time.  Most loaders have a
> -R/-rpath option, but R does not (by default) make use of it.  (I
> personally think it should: ELF originates on Solaris and that makes
> very effective use of -R.)
>
> At run time ld.so searches its cache as well as LD_LIBRARY_PATH.  The
> order is system-specific: Linux says
>
>     o (ELF only) Using the DT_RPATH dynamic section attribute  of  the
>       binary  if present and DT_RUNPATH attribute does not exist.  Use
>       of DT_RPATH is deprecated.
>
>     o Using the environment variable LD_LIBRARY_PATH.  Except  if  the
>       executable  is  a set-user-ID/set-group-ID binary, in which case
>       it is ignored.
>
>     o (ELF only) Using the DT_RUNPATH dynamic section attribute of the
>         binary if present.
>
>     o From  the  cache file /etc/ld.so.cache which contains a compiled
>       list of candidate libraries previously found  in  the  augmented
>       library  path.  If, however, the binary was linked with -z node-
>       flib linker option, libraries in the default library  paths  are
>       skipped.
>
>     o In  the default path /lib, and then /usr/lib.  If the binary was
>       linked with -z nodeflib linker option, this step is skipped.
>
> (and for a 64-bit system, read lib64 for lib).
>
>
>> To allow the user to provide a specific LAPACK, I added lines to a
>> configure.in file that allow for a --with-lapack
>>
>> LAPACK_LIBS=`"${R_HOME}/bin/R" CMD config LAPACK_LIBS`
>> AC_ARG_WITH([lapack],
>> 	AC_HELP_STRING([--with-lapack=LIB_PATH],
>> 		[LAPACK library location with complex routines]),
>> 		[LAPACK_LIBS=$withval])
>>
>> added a check to see that zsysv_ is actually available
>>
>> AC_CHECK_FUNC(zsysv_,,
>> 	AC_MSG_ERROR([lapack needs zsysv_ in ${LAPACK_LIBS}]))
>>
>> and substituted LAPACK_LIBS into a Makevars.in file
>>
>> AC_SUBST(LAPACK_LIBS)
>> AC_OUTPUT(src/Makevars)
>>
>> Makevars.in:
>> PKG_LIBS=@LAPACK_LIBS@
>>
>> I then install my package with
>>
>> R CMD INSTALL --clean --configure-args=--with-lapack=-llapack <pkg>
>>
>> or more generally
>>
>> R CMD INSTALL --clean \
>>   --configure-args="--with-lapack='-L/usr/lib64 -llapack'" <pkg>
>>
>> This 'works', in the sense that the package compiles, loads, and
>> apparently runs as expected. I'm concerned though about how lapack is
>> being found, and how symbols are actually being resolved.
>>
>> When I
>>
>> mtmorgan at gopehr4:~> ldd <pkg>.so
>>
>> I see an entry
>>
>>        liblapack.so.3 => /usr/lib64/liblapack.so.3 (0x00002b0928a1c000)
>>
>> and I do NOT see an entry pointing to libRlapack .Am I right in
>> interpreting this to mean:
>>
>> * All LAPACK symbols in my package, including those that
>>  coincidentally have a definition in libRlapack, resolve to
>>  /usr/lib64/liblapack.so?
>
> Yes.  libRlapack.so will not be in the search path.
>
>> * liblapack.so will be found without any need to specify
>>  LD_LIBRARY_PATH, or other configuration variables? Or is the library
>>  being found because my LD_LIBRARY_PATH already includes /usr/lib64?
>
> Both ld (used for linking) and ld.so (used a runtime) look in that
> path by default.
>
>>  If the latter, how can the user 'best' configure their system to
>>  find the required library (I think I'm looking for something between
>>  'get the system administrator to install lapack in a findable place'
>>  and 'set LD_LIBRARY_PATH before starting R').
>
> Better to set it in the ld.so cache (via a file in /etc/ld.so.conf.d
> on a modern system), and set -L at build time.
>
>> * Resolving symbols to libraries will occur in a way consistent with
>>  the last two points (as opposed to the implementation details)
>>  across platforms, compilers, and static vs. shared libraries?
>>
>> Thanks for any reassurance or corrective guidance.
>
> The standard advice would be to supply the LAPACK routines in the
> package, and compile them if they are not found in $LAPACK_LIBS.
> Remember that there are quite a few buggy LAPACKs out there so it is
> better to use your own than a system one that might be faster but
> inaccurate.
>
> As I recall, fastICA is an example of the latter strategy.
>
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595

-- 
Martin Morgan
Bioconductor / Computational Biology
http://bioconductor.org


From hb at stat.berkeley.edu  Mon May 14 06:14:24 2007
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Sun, 13 May 2007 21:14:24 -0700
Subject: [Rd] Native implementation of rowMedians()
Message-ID: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>

Hi,

I've got a version of rowMedians(x, na.rm=FALSE) for matrices that
handles missing values implemented in C.  It has been optimized for
memory and speed.  To avoid coercing integers to doubles, and hence
allocate an additional 200% memory, there is one C function for
integers and one for doubles.

The rowMedians() implementation is currently sitting in my non-CRAN
package R.native available by:

source("http://www.braju.com/R/hbLite.R")
hbLite("R.native")
library(R.native)
example(rowMedians)

The source code package is available at:

 http://www.braju.com/R/repos/R.native_0.1.2.tar.gz

Before I submit a package to CRAN consisting of pretty much just
rowMedians(), would it make more sense for it to go into one of the
core packages?  If so, how should I proceed?

/Henrik


From clausen at econ.upenn.edu  Mon May 14 06:32:55 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Mon, 14 May 2007 00:32:55 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
Message-ID: <20070514043240.GL28199@econ.upenn.edu>

Hi Gabor,

Thanks for the interesting suggestion.  I must confess I got lost -- is
it something like this?
 * unlist() could attach skeleton to every vector it returns.
 * relist() could then use the skeleton attached to the vector to reconstruct
the object.  The interface might be

	relist <- function(flesh, skeleton=attributes(flesh)$skeleton)

For example:

        par <- list(mean=c(0, 0), vcov(rbind(c(1, 1), c(1, 1))))
        vector.for.optim <- unlist(par)
        print(attributes(vector.optim)$skeleton)    # the skeleton is stored!
        converted.back.again <- relist(par)

Some concerns:
 * the metadata might get lost in some applications -- although it seems
to work fine with optim().  But, if we provide both interfaces (where
skeleton=flesh$skeleton is the default), then there should be no problem.
 * would there be any bad side-effects of changing the existing unlist
interface?  I suppose an option like "save.skeleton" could be added to unlist.
I expect there would be some objections to enabling this as default behaviour,
as it would significantly increase the storage requirements of the output.

Cheers,
Andrew

On Sun, May 13, 2007 at 07:02:37PM -0400, Gabor Grothendieck wrote:
> I suggest you define a "relist" class and then define an unlist
> method for it which stores the skeleton as an attribute.  Then
> one would not have to specify skeleton in the relist command
> so
> 
> relist(unlist(relist(x))) === x
> 
> 1. relist(x) is the same as x except it gets an additional class "relist".
> 2. unlist(relist(x)) invokes the relist method of unlist on relist(x)
> returning another relist object
> 3. relist(unlist(relist(x))) then recreates relist(x)
> 
> 
> On 5/13/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> >Hi all,
> >
> >I wrote a function called relist, which is an inverse to the existing
> >unlist function:
> >
> >       http://www.econ.upenn.edu/~clausen/computing/relist.R
> >
> >Some functions need many parameters, which are most easily represented in
> >complex structures.  Unfortunately, many mathematical functions in R,
> >including optim, nlm, and grad can only operate on functions whose domain 
> >is
> >a vector.  R has a function to convert complex objects into a vector
> >representation.  This file provides an inverse operation called "unlist" to
> >convert vectors back to the convenient structural representation.  
> >Together,
> >these functions allow structured functions to have simple mathematical
> >interfaces.
> >
> >For example, a likelihood function for a multivariate normal model needs a
> >variance-covariance matrix and a mean vector.  It would be most convenient 
> >to
> >represent it as a list containing a vector and a matrix.  A typical 
> >parameter
> >might look like
> >
> >       list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
> >
> >However, optim can't operate on functions that take lists as input; it
> >only likes vectors.  The solution is conversion:
> >
> >        initial.param <- list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
> >
> >        ll <- function(param.vector)
> >        {
> >               param <- relist(initial.param, param.vector)
> >               -sum(dnorm(x, mean=param$mean, vcov=param$vcov, log=TRUE))
> >               # note: dnorm doesn't do vcov... but I hope you get the 
> >               point
> >        }
> >
> >        optim(unlist(initial.param), ll)
> >
> >"relist" takes two parameters: skeleton and flesh.  Skeleton is a sample
> >object that has the right "shape" but the wrong content.  "flesh" is a 
> >vector
> >with the right content but the wrong shape.  Invoking
> >
> >       relist(skeleton, flesh)
> >
> >will put the content of flesh on the skeleton.
> >
> >As long as "skeleton" has the right shape, it should be a precise inverse
> >of unlist.  These equalities hold:
> >
> >       relist(skeleton, unlist(x)) == x
> >       unlist(relist(skeleton, y)) == y
> >
> >Is there any easy way to do this without my new relist function?  Is there 
> >any
> >interest in including this in R's base package?  (Or anywhere else?)  Any
> >comments on the implementation?
> >
> >Cheers,
> >Andrew
> >
> >______________________________________________
> >R-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-devel
> >


From ggrothendieck at gmail.com  Mon May 14 08:54:22 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Mon, 14 May 2007 02:54:22 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070514043240.GL28199@econ.upenn.edu>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
Message-ID: <971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>

unlist would not attach a skeleton to every vector it returns, only
the relist method of unlist would.   That way just that method needs
to be added and no changes to unlist itself are needed.

Before applying unlist to an object you would coerce the object to
class "relist" to force the relist method of unlist to be invoked.

Here is an outline of the code:

as.relist <- function(x) {
   if (!inherits(x, "relist")) class(x) <- c("relist", class(x))
   x
}

unlist.relist <- function(x, ...) {
   y <- x
   cl <- class(y)
   class(y) <- cl[- grep("relist", cl)]
   z <- unlist(y)
   attr(z, "relist") <- y
   as.relist(z)
}

relist <- function(x, skeleton = attr(x, "relist")) {
   # simpler version of relist so test can be executed
   skeleton
}

# test
x <- list(a = 1:2, b = 3)
class(as.relist(x))
unlist(as.relist(x))
relist(unlist(as.relist(x)))


On 5/14/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> Hi Gabor,
>
> Thanks for the interesting suggestion.  I must confess I got lost -- is
> it something like this?
>  * unlist() could attach skeleton to every vector it returns.
>  * relist() could then use the skeleton attached to the vector to reconstruct
> the object.  The interface might be
>
>        relist <- function(flesh, skeleton=attributes(flesh)$skeleton)
>
> For example:
>
>        par <- list(mean=c(0, 0), vcov(rbind(c(1, 1), c(1, 1))))
>        vector.for.optim <- unlist(par)
>        print(attributes(vector.optim)$skeleton)    # the skeleton is stored!
>        converted.back.again <- relist(par)
>
> Some concerns:
>  * the metadata might get lost in some applications -- although it seems
> to work fine with optim().  But, if we provide both interfaces (where
> skeleton=flesh$skeleton is the default), then there should be no problem.
>  * would there be any bad side-effects of changing the existing unlist
> interface?  I suppose an option like "save.skeleton" could be added to unlist.
> I expect there would be some objections to enabling this as default behaviour,
> as it would significantly increase the storage requirements of the output.
>
> Cheers,
> Andrew
>
> On Sun, May 13, 2007 at 07:02:37PM -0400, Gabor Grothendieck wrote:
> > I suggest you define a "relist" class and then define an unlist
> > method for it which stores the skeleton as an attribute.  Then
> > one would not have to specify skeleton in the relist command
> > so
> >
> > relist(unlist(relist(x))) === x
> >
> > 1. relist(x) is the same as x except it gets an additional class "relist".
> > 2. unlist(relist(x)) invokes the relist method of unlist on relist(x)
> > returning another relist object
> > 3. relist(unlist(relist(x))) then recreates relist(x)
> >
> >
> > On 5/13/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> > >Hi all,
> > >
> > >I wrote a function called relist, which is an inverse to the existing
> > >unlist function:
> > >
> > >       http://www.econ.upenn.edu/~clausen/computing/relist.R
> > >
> > >Some functions need many parameters, which are most easily represented in
> > >complex structures.  Unfortunately, many mathematical functions in R,
> > >including optim, nlm, and grad can only operate on functions whose domain
> > >is
> > >a vector.  R has a function to convert complex objects into a vector
> > >representation.  This file provides an inverse operation called "unlist" to
> > >convert vectors back to the convenient structural representation.
> > >Together,
> > >these functions allow structured functions to have simple mathematical
> > >interfaces.
> > >
> > >For example, a likelihood function for a multivariate normal model needs a
> > >variance-covariance matrix and a mean vector.  It would be most convenient
> > >to
> > >represent it as a list containing a vector and a matrix.  A typical
> > >parameter
> > >might look like
> > >
> > >       list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
> > >
> > >However, optim can't operate on functions that take lists as input; it
> > >only likes vectors.  The solution is conversion:
> > >
> > >        initial.param <- list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
> > >
> > >        ll <- function(param.vector)
> > >        {
> > >               param <- relist(initial.param, param.vector)
> > >               -sum(dnorm(x, mean=param$mean, vcov=param$vcov, log=TRUE))
> > >               # note: dnorm doesn't do vcov... but I hope you get the
> > >               point
> > >        }
> > >
> > >        optim(unlist(initial.param), ll)
> > >
> > >"relist" takes two parameters: skeleton and flesh.  Skeleton is a sample
> > >object that has the right "shape" but the wrong content.  "flesh" is a
> > >vector
> > >with the right content but the wrong shape.  Invoking
> > >
> > >       relist(skeleton, flesh)
> > >
> > >will put the content of flesh on the skeleton.
> > >
> > >As long as "skeleton" has the right shape, it should be a precise inverse
> > >of unlist.  These equalities hold:
> > >
> > >       relist(skeleton, unlist(x)) == x
> > >       unlist(relist(skeleton, y)) == y
> > >
> > >Is there any easy way to do this without my new relist function?  Is there
> > >any
> > >interest in including this in R's base package?  (Or anywhere else?)  Any
> > >comments on the implementation?
> > >
> > >Cheers,
> > >Andrew
> > >
> > >______________________________________________
> > >R-devel at r-project.org mailing list
> > >https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
>


On 5/14/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> Hi Gabor,
>
> Thanks for the interesting suggestion.  I must confess I got lost -- is
> it something like this?
>  * unlist() could attach skeleton to every vector it returns.
>  * relist() could then use the skeleton attached to the vector to reconstruct
> the object.  The interface might be
>
>        relist <- function(flesh, skeleton=attributes(flesh)$skeleton)
>
> For example:
>
>        par <- list(mean=c(0, 0), vcov(rbind(c(1, 1), c(1, 1))))
>        vector.for.optim <- unlist(par)
>        print(attributes(vector.optim)$skeleton)    # the skeleton is stored!
>        converted.back.again <- relist(par)
>
> Some concerns:
>  * the metadata might get lost in some applications -- although it seems
> to work fine with optim().  But, if we provide both interfaces (where
> skeleton=flesh$skeleton is the default), then there should be no problem.
>  * would there be any bad side-effects of changing the existing unlist
> interface?  I suppose an option like "save.skeleton" could be added to unlist.
> I expect there would be some objections to enabling this as default behaviour,
> as it would significantly increase the storage requirements of the output.
>
> Cheers,
> Andrew
>
> On Sun, May 13, 2007 at 07:02:37PM -0400, Gabor Grothendieck wrote:
> > I suggest you define a "relist" class and then define an unlist
> > method for it which stores the skeleton as an attribute.  Then
> > one would not have to specify skeleton in the relist command
> > so
> >
> > relist(unlist(relist(x))) === x
> >
> > 1. relist(x) is the same as x except it gets an additional class "relist".
> > 2. unlist(relist(x)) invokes the relist method of unlist on relist(x)
> > returning another relist object
> > 3. relist(unlist(relist(x))) then recreates relist(x)
> >
> >
> > On 5/13/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> > >Hi all,
> > >
> > >I wrote a function called relist, which is an inverse to the existing
> > >unlist function:
> > >
> > >       http://www.econ.upenn.edu/~clausen/computing/relist.R
> > >
> > >Some functions need many parameters, which are most easily represented in
> > >complex structures.  Unfortunately, many mathematical functions in R,
> > >including optim, nlm, and grad can only operate on functions whose domain
> > >is
> > >a vector.  R has a function to convert complex objects into a vector
> > >representation.  This file provides an inverse operation called "unlist" to
> > >convert vectors back to the convenient structural representation.
> > >Together,
> > >these functions allow structured functions to have simple mathematical
> > >interfaces.
> > >
> > >For example, a likelihood function for a multivariate normal model needs a
> > >variance-covariance matrix and a mean vector.  It would be most convenient
> > >to
> > >represent it as a list containing a vector and a matrix.  A typical
> > >parameter
> > >might look like
> > >
> > >       list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
> > >
> > >However, optim can't operate on functions that take lists as input; it
> > >only likes vectors.  The solution is conversion:
> > >
> > >        initial.param <- list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
> > >
> > >        ll <- function(param.vector)
> > >        {
> > >               param <- relist(initial.param, param.vector)
> > >               -sum(dnorm(x, mean=param$mean, vcov=param$vcov, log=TRUE))
> > >               # note: dnorm doesn't do vcov... but I hope you get the
> > >               point
> > >        }
> > >
> > >        optim(unlist(initial.param), ll)
> > >
> > >"relist" takes two parameters: skeleton and flesh.  Skeleton is a sample
> > >object that has the right "shape" but the wrong content.  "flesh" is a
> > >vector
> > >with the right content but the wrong shape.  Invoking
> > >
> > >       relist(skeleton, flesh)
> > >
> > >will put the content of flesh on the skeleton.
> > >
> > >As long as "skeleton" has the right shape, it should be a precise inverse
> > >of unlist.  These equalities hold:
> > >
> > >       relist(skeleton, unlist(x)) == x
> > >       unlist(relist(skeleton, y)) == y
> > >
> > >Is there any easy way to do this without my new relist function?  Is there
> > >any
> > >interest in including this in R's base package?  (Or anywhere else?)  Any
> > >comments on the implementation?
> > >
> > >Cheers,
> > >Andrew
> > >
> > >______________________________________________
> > >R-devel at r-project.org mailing list
> > >https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
>


From ripley at stats.ox.ac.uk  Mon May 14 09:35:38 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 14 May 2007 08:35:38 +0100 (BST)
Subject: [Rd] select.list() not on front of other windows
In-Reply-To: <59d7961d0705132030l3d8ca777q750f1985a0c5c5cd@mail.gmail.com>
References: <59d7961d0705132030l3d8ca777q750f1985a0c5c5cd@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705140831580.9874@gannet.stats.ox.ac.uk>

That's a known problem with Windows: I think such widgets are not 
intended to be used in non-GUI applications.  I've committed a workaround 
that seems to alleviate it.


On Sun, 13 May 2007, Henrik Bengtsson wrote:

> When calling
>
>  select.list(letters[1:3])
>
> in a fresh R session (R v2.4.1, v2.5.0, v2.6.0 devel) on WinXP using
> *Rterm*, the dialog does *not* come up on front of other windows the
> first time you call it.  Under Rgui it works just fine.
>
> If you do:
>
> 1) select.list(letters[1:3])
> 2) bring the window to front manually
> 3) select an option and press OK
> 4) select.list(letters[1:3])
>
> it the (second) dialog comes up in front of all other windows.
>
> /Henrik
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From maechler at stat.math.ethz.ch  Mon May 14 09:53:31 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 14 May 2007 09:53:31 +0200
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
Message-ID: <17992.5499.383704.358418@stat.math.ethz.ch>

Nice ideas, Gabor and Andrew.

While I agree with Andrew that such a utility makes for nicer
and considerably better maintainable code in examples like his,
and I do like to provide "inverse operator functions" in R
whenever sensible,
OTOH, we have strived to keep R's "base" package as lean and
clean as possible, so I think this had to go to "utils".

One further small proposal: I'd use class name  "relistable"
since that's what the object of this class are
and hence as.relistable().

What do other R-develers think?
Martin

>>>>> "GaGr" == Gabor Grothendieck <ggrothendieck at gmail.com>
>>>>>     on Mon, 14 May 2007 02:54:22 -0400 writes:

    GaGr> unlist would not attach a skeleton to every vector it
    GaGr> returns, only the relist method of unlist would.
    GaGr> That way just that method needs to be added and no
    GaGr> changes to unlist itself are needed.

    GaGr> Before applying unlist to an object you would coerce
    GaGr> the object to class "relist" to force the relist
    GaGr> method of unlist to be invoked.

    GaGr> Here is an outline of the code:

    GaGr> as.relist <- function(x) {
    GaGr>  if (!inherits(x, "relist")) class(x) <- c("relist", class(x))
    GaGr>  x
    GaGr> }

    GaGr> unlist.relist <- function(x, ...) {
    GaGr>  y <- x
    GaGr>  cl <- class(y)
    GaGr>  class(y) <- cl[- grep("relist", cl)]
    GaGr>  z <- unlist(y)
    GaGr>  attr(z, "relist") <- y
    GaGr>  as.relist(z)
    GaGr> }

    GaGr> relist <- function(x, skeleton = attr(x, "relist")) {
    GaGr>  # simpler version of relist so test can be executed
    GaGr>  skeleton
    GaGr> }

    GaGr> # test
    GaGr> x <- list(a = 1:2, b = 3)
    GaGr> class(as.relist(x))
    GaGr> unlist(as.relist(x))
    GaGr> relist(unlist(as.relist(x)))


    GaGr> On 5/14/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
    >> Hi GaGr,
    >> 
    >> Thanks for the interesting suggestion.  I must confess I got lost -- is
    >> it something like this?
    >> * unlist() could attach skeleton to every vector it returns.
    >> * relist() could then use the skeleton attached to the vector to reconstruct
    >> the object.  The interface might be
    >> 
    >> relist <- function(flesh, skeleton=attributes(flesh)$skeleton)
    >> 
    >> For example:
    >> 
    >> par <- list(mean=c(0, 0), vcov(rbind(c(1, 1), c(1, 1))))
    >> vector.for.optim <- unlist(par)
    >> print(attributes(vector.optim)$skeleton)    # the skeleton is stored!
    >> converted.back.again <- relist(par)
    >> 
    >> Some concerns:
    >> * the metadata might get lost in some applications -- although it seems
    >> to work fine with optim().  But, if we provide both interfaces (where
    >> skeleton=flesh$skeleton is the default), then there should be no problem.
    >> * would there be any bad side-effects of changing the existing unlist
    >> interface?  I suppose an option like "save.skeleton" could be added to unlist.
    >> I expect there would be some objections to enabling this as default behaviour,
    >> as it would significantly increase the storage requirements of the output.
    >> 
    >> Cheers,
    >> Andrew
    >> 
    >> On Sun, May 13, 2007 at 07:02:37PM -0400, GaGr Grothendieck wrote:
    >> > I suggest you define a "relist" class and then define an unlist
    >> > method for it which stores the skeleton as an attribute.  Then
    >> > one would not have to specify skeleton in the relist command
    >> > so
    >> >
    >> > relist(unlist(relist(x))) === x
    >> >
    >> > 1. relist(x) is the same as x except it gets an additional class "relist".
    >> > 2. unlist(relist(x)) invokes the relist method of unlist on relist(x)
    >> > returning another relist object
    >> > 3. relist(unlist(relist(x))) then recreates relist(x)
    >> >
    >> >
    >> > On 5/13/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
    >> > >Hi all,
    >> > >
    >> > >I wrote a function called relist, which is an inverse to the existing
    >> > >unlist function:
    >> > >
    >> > >       http://www.econ.upenn.edu/~clausen/computing/relist.R
    >> > >
    >> > >Some functions need many parameters, which are most easily represented in
    >> > >complex structures.  Unfortunately, many mathematical functions in R,
    >> > >including optim, nlm, and grad can only operate on functions whose domain
    >> > >is
    >> > >a vector.  R has a function to convert complex objects into a vector
    >> > >representation.  This file provides an inverse operation called "unlist" to
    >> > >convert vectors back to the convenient structural representation.
    >> > >Together,
    >> > >these functions allow structured functions to have simple mathematical
    >> > >interfaces.
    >> > >
    >> > >For example, a likelihood function for a multivariate normal model needs a
    >> > >variance-covariance matrix and a mean vector.  It would be most convenient
    >> > >to
    >> > >represent it as a list containing a vector and a matrix.  A typical
    >> > >parameter
    >> > >might look like
    >> > >
    >> > >       list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
    >> > >
    >> > >However, optim can't operate on functions that take lists as input; it
    >> > >only likes vectors.  The solution is conversion:
    >> > >
    >> > >        initial.param <- list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
    >> > >
    >> > >        ll <- function(param.vector)
    >> > >        {
    >> > >               param <- relist(initial.param, param.vector)
    >> > >               -sum(dnorm(x, mean=param$mean, vcov=param$vcov, log=TRUE))
    >> > >               # note: dnorm doesn't do vcov... but I hope you get the
    >> > >               point
    >> > >        }
    >> > >
    >> > >        optim(unlist(initial.param), ll)
    >> > >
    >> > >"relist" takes two parameters: skeleton and flesh.  Skeleton is a sample
    >> > >object that has the right "shape" but the wrong content.  "flesh" is a
    >> > >vector
    >> > >with the right content but the wrong shape.  Invoking
    >> > >
    >> > >       relist(skeleton, flesh)
    >> > >
    >> > >will put the content of flesh on the skeleton.
    >> > >
    >> > >As long as "skeleton" has the right shape, it should be a precise inverse
    >> > >of unlist.  These equalities hold:
    >> > >
    >> > >       relist(skeleton, unlist(x)) == x
    >> > >       unlist(relist(skeleton, y)) == y
    >> > >
    >> > >Is there any easy way to do this without my new relist function?  Is there
    >> > >any
    >> > >interest in including this in R's base package?  (Or anywhere else?)  Any
    >> > >comments on the implementation?
    >> > >
    >> > >Cheers,
    >> > >Andrew


From maechler at stat.math.ethz.ch  Mon May 14 10:20:27 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 14 May 2007 10:20:27 +0200
Subject: [Rd] Native implementation of rowMedians()
In-Reply-To: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>
References: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>
Message-ID: <17992.7115.324752.778339@stat.math.ethz.ch>

Hi Henrik,
>>>>> "HenrikB" == Henrik Bengtsson <hb at stat.berkeley.edu>
>>>>>     on Sun, 13 May 2007 21:14:24 -0700 writes:

    HenrikB> Hi,
    HenrikB> I've got a version of rowMedians(x, na.rm=FALSE) for matrices that
    HenrikB> handles missing values implemented in C.  It has been optimized for
    HenrikB> memory and speed.  To avoid coercing integers to doubles, and hence
    HenrikB> allocate an additional 200% memory, there is one C function for
    HenrikB> integers and one for doubles.

    HenrikB> The rowMedians() implementation is currently sitting in my non-CRAN
    HenrikB> package R.native available by:

    HenrikB> source("http://www.braju.com/R/hbLite.R")
    HenrikB> hbLite("R.native")
    HenrikB> library(R.native)
    HenrikB> example(rowMedians)

    HenrikB> The source code package is available at:

    HenrikB> http://www.braju.com/R/repos/R.native_0.1.2.tar.gz

    HenrikB> Before I submit a package to CRAN consisting of pretty much just
    HenrikB> rowMedians(), would it make more sense for it to go into one of the
    HenrikB> core packages?  If so, how should I proceed?

As they say: You have to convince at least one member of R-core
that ``it's worth it''.  {Then he may have to bear the battle
with dissenting core members  ;- }

I'm quite interested, but really you have to do the work of unbundling
it from all the R.oo stuff before I have another longer look.

Martin


From termcc at googlemail.com  Mon May 14 10:23:02 2007
From: termcc at googlemail.com (Tom McCallum)
Date: Mon, 14 May 2007 09:23:02 +0100
Subject: [Rd] Best Practise
Message-ID: <op.tsa5koddcsmg07@localhost.localdomain>

Hello,


Just a quick question on best practise.  I am converting quite a bit of  
legacy C code into R packages and have the following situation:

(1) Legacy object with a double* array in, all over code so don't want to  
change any more than I have to.

(2) Do something like:
	SEXP arrayToPassToR;
	PROTECT( arrayToPassToR = allocVector( REALSXP, n ) );
	for(i=0; i < n; i++) {
		REAL(arrayToPassToR)[i] = oldCarray[i];   <----  very slow way to copy  
data, can I use memcpy/pointer assignment here to remove the loop without  
running into garbage collector?
	}
	UNPROTECT( arrayToPassToR );
	SEXP returnValueFromR;
(3) Have made it to call back to an R function which returns a new /  
different SEXP double array.
	returnValueFromR = Test_tryEval(...);
(4) Copy back to oldCArray
	for(i=0; i < n; i++) {
		oldCarray[i] = REAL(returnValueFromR)[i]; <--- can I use memcpy/pointer  
assignment here to remove loop?
	}
	UNPROTECT(1);

I have done the long winded copy as I am a bit paranoid about the garbage  
collection.  My question is is it legitimate to do the following

	double* oldCArray = REAL(arrayToPassToR);
	UNPROTECT(1); // where the 1 would remove protection from arrayToPassToR  
and potential garbage collection
	-- assume arrayToPassToR was garbage collected by R --
	Rprintf("%f", oldCArray[0]);

because if arrayToPassToR is garbage collected then oldCArray will cause a  
SEGFAULT when it is accessed afterwards, won't it?

Many thanks

Tom



-- 
PS Note this is the new email address - delete term at blueyonder.co.uk as it  
won't work soon!


From ripley at stats.ox.ac.uk  Mon May 14 10:33:51 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 14 May 2007 09:33:51 +0100 (BST)
Subject: [Rd] Native implementation of rowMedians()
In-Reply-To: <17992.7115.324752.778339@stat.math.ethz.ch>
References: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>
	<17992.7115.324752.778339@stat.math.ethz.ch>
Message-ID: <Pine.LNX.4.64.0705140924420.31269@auk.stats>

On Mon, 14 May 2007, Martin Maechler wrote:

> Hi Henrik,
>>>>>> "HenrikB" == Henrik Bengtsson <hb at stat.berkeley.edu>
>>>>>>     on Sun, 13 May 2007 21:14:24 -0700 writes:
>
>    HenrikB> Hi,
>    HenrikB> I've got a version of rowMedians(x, na.rm=FALSE) for matrices that
>    HenrikB> handles missing values implemented in C.  It has been optimized for
>    HenrikB> memory and speed.  To avoid coercing integers to doubles, and hence
>    HenrikB> allocate an additional 200% memory, there is one C function for
>    HenrikB> integers and one for doubles.
>
>    HenrikB> The rowMedians() implementation is currently sitting in my non-CRAN
>    HenrikB> package R.native available by:
>
>    HenrikB> source("http://www.braju.com/R/hbLite.R")
>    HenrikB> hbLite("R.native")
>    HenrikB> library(R.native)
>    HenrikB> example(rowMedians)
>
>    HenrikB> The source code package is available at:
>
>    HenrikB> http://www.braju.com/R/repos/R.native_0.1.2.tar.gz
>
>    HenrikB> Before I submit a package to CRAN consisting of pretty much just
>    HenrikB> rowMedians(), would it make more sense for it to go into one of the
>    HenrikB> core packages?  If so, how should I proceed?
>
> As they say: You have to convince at least one member of R-core
> that ``it's worth it''.  {Then he may have to bear the battle
> with dissenting core members  ;- }
>
> I'm quite interested, but really you have to do the work of unbundling
> it from all the R.oo stuff before I have another longer look.

Also, the 'a version of rowMedians' made me wonder what other version 
there was, and it seems there is one in Biobase which looks a more 
natural home.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Mon May 14 10:42:44 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 14 May 2007 09:42:44 +0100 (BST)
Subject: [Rd] grep with fixed=TRUE and ignore.case=TRUE
In-Reply-To: <20070511153337.GB6300@cs.cas.cz>
References: <20070428114959.GA25723@cs.cas.cz>
	<46337DE1.5030607@statistik.uni-dortmund.de>
	<20070429135347.GA4690@cs.cas.cz> <20070507142012.GF31253@cs.cas.cz>
	<Pine.LNX.4.64.0705090628200.6312@gannet.stats.ox.ac.uk>
	<20070511153337.GB6300@cs.cas.cz>
Message-ID: <Pine.LNX.4.64.0705111652421.11868@auk.stats>

On Fri, 11 May 2007, Petr Savicky wrote:

> On Wed, May 09, 2007 at 06:41:23AM +0100, Prof Brian Ripley wrote:
>> I suggest you collaborate with the person who replied that he thought this
>> was a good idea to supply patches against the R-devel sources for
>> scrutiny.
>
> A possible solution is to use strncasecmp instead of strncmp
> in function fgrep_one in R-devel/src/main/character.c.
>
> Corresponding modification of character.c is at
>  http://www.cs.cas.cz/~savicky/ignore_case/character.c
> and diff file w.r.t. the original character.c (downloaded today) is at
>  http://www.cs.cas.cz/~savicky/ignore_case/diff.txt
>
> This seems to work in my installation of R-devel:
>
>  > x <- c("D.G cat", "d.g cat", "dog cat")
>  > z <- "d.g"
>  > grep(z, x, ignore.case = F, fixed = T)
>  [1] 2
>  > grep(z, x, ignore.case = T, fixed = T)  # this is the new behavior
>  [1] 1 2
>  > grep(z, x, ignore.case = T, fixed = F)
>  [1] 1 2 3
>  >
>
> Since fgrep_one is used many times in character.c, adding igcase_opt as
> an additional argument would imply extensive changes to the file.
> So, I introduced a new function fgrep_one_igcase called only once in
> the file. Another solution is possible.
>
> I do not understand well handling multibyte chars, so I did not test
> the function with real multibyte chars, although the code for
> this option is used.

Thanks for looking into this.

strncasecmp is not standard C (not even C99), but R does have a substitute 
for it.  Unfortunately strncasecmp is not usable with multibyte charsets: 
Linux systems have wcsncasecmp but that is not portable.  In these days of 
widespread use of UTF-8 that is a blocking issue, I am afraid.

In the case of grep I think all you need is

grep(tolower(pattern), tolower(x), fixed = TRUE)

and similarly for regexpr.

> Ignore case option is not meaningfull in gsub.

sub("abc", "123", c("ABCD", "abcd"), ignore.case=TRUE)

is different from 'ignore.case=FALSE', and I see the meaning as clear.
So what did you mean?  (Unfortunately the tolower trick does not work for 
[g]sub.)

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Mon May 14 11:04:48 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Mon, 14 May 2007 11:04:48 +0200 (CEST)
Subject: [Rd] (PR#9666) 'aggregate' should preserve level ordering of
Message-ID: <20070514090448.288852A3DA@slim.kubism.ku.dk>

On Tue, 8 May 2007, prechelt at inf.fu-berlin.de wrote:

> Full_Name: Lutz Prechelt
> Version: 2.4.1
> OS: Windows XP
> Submission from: (NULL) (160.45.111.67)
>
>
> aggregate (from package stats) should preserve the
> ordering of levels of factors it works on and also their
> 'ordered' attribute if present.
> But it does not.

In fact it treats all grouping variables consistently, reducing them to 
their levels and then data.frame does as.factor on the resulting column.

It is not at all clear this is desirable.  Take the example on the help 
page: 'Cold' is reported as a factor even though it is logical. It seems 
better not to coerce any of the grouping factors when putting into the 
data frame but rather to index the original variable, and I have 
implemented that for R-devel: as a side effect your example works as you 
would like.  This does mean that grouping variables that are not factors 
and cannot be inserted into a data frame will no longer work.

> Here is an example:
>
> ff = factor(c("a","b","a","b"),levels=c("b","a"),ordered=T)
> agg = aggregate(1:4, list(groups=ff), sum)
> print(levels(agg$groups))  # should be: "b" "a"
> [1] "a" "b"
> print(is.ordered(agg$groups))  # should be: TRUE
> [1] FALSE
>
> -----
>
> ?aggregate ignores the issue completely:
> - the terms 'order' or 'level' do not occur in the
>  text at all
> - the term 'factor' is mentioned only once:
>  "The elements of the list will be coerced to
>   factors (if they are not already factors)."
>
> -----
>
> This issue made me write the following code used
> for preparing the data for a barchart:
>
>  df.a = aggregate(df[,value.var],
>                   list(grouping=dfgrouping, other=dfsubbar.var),
>                   FUN=FUN)
>  if (is.factor(dfsubbar.var)) {  # R 2.4: this should be done by 'aggregate'
>    df.a$other = factor(df.a$other,
>                        levels=levels(dfsubbar.var),
>                        ordered=is.ordered(dfsubbar.var))
>  }
>
> Cumbersome.
>
> R is great anyway. Thanks for your service building it!
>
>  Lutz Prechelt
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From scott.wilkinson at csiro.au  Mon May 14 02:46:45 2007
From: scott.wilkinson at csiro.au (scott.wilkinson at csiro.au)
Date: Mon, 14 May 2007 02:46:45 +0200 (CEST)
Subject: [Rd] round(#, digits=x) unreliable for x=2 (PR#9682)
Message-ID: <20070514004645.808F42A3F9@slim.kubism.ku.dk>

Full_Name: Scott Wilkinson
Version: 2.3.1
OS: WinXP Pro
Submission from: (NULL) (140.253.203.4)


In the example below round() does not report to the specified number of digits
when the last digit to be reported is zero: Compare behaviour for 0.897575 and
0.946251. Ditto for signif(). The number of sigfigs is ambiguous unless the
reader knows this behaviour. Is this a bug or intended behaviour? Is there a
work-around?

#Example code:
number <- 0.897575 # this one isn't reported to 2 decimal places 0.90 as
expected
#number <- 0.946251 # when the last reported digit is non-zero it gives expected
behaviour
Round3 <- round(number, digits=3)
Round2 <- round(number, digits=2)       #why 0.9 and not 0.90 for 0.897575?
Round1 <- round(number, digits=1)

Signif3 <- signif(number, digits=3)
Signif2 <- signif(number, digits=2)    #why 0.9 and not 0.90 0.897575?
Signif1 <- signif(number, digits=1)

Results <- data.frame(Round3, Round2, Round1, Signif3, Signif2, Signif1)


From hb at stat.berkeley.edu  Mon May 14 11:35:15 2007
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Mon, 14 May 2007 02:35:15 -0700
Subject: [Rd] Native implementation of rowMedians()
In-Reply-To: <17992.7115.324752.778339@stat.math.ethz.ch>
References: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>
	<17992.7115.324752.778339@stat.math.ethz.ch>
Message-ID: <59d7961d0705140235m5ac98fd1qd8403812326c71d6@mail.gmail.com>

On 5/14/07, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> Hi Henrik,
> >>>>> "HenrikB" == Henrik Bengtsson <hb at stat.berkeley.edu>
> >>>>>     on Sun, 13 May 2007 21:14:24 -0700 writes:
>
>     HenrikB> Hi,
>     HenrikB> I've got a version of rowMedians(x, na.rm=FALSE) for matrices that
>     HenrikB> handles missing values implemented in C.  It has been optimized for
>     HenrikB> memory and speed.  To avoid coercing integers to doubles, and hence
>     HenrikB> allocate an additional 200% memory, there is one C function for
>     HenrikB> integers and one for doubles.
>
>     HenrikB> The rowMedians() implementation is currently sitting in my non-CRAN
>     HenrikB> package R.native available by:
>
>     HenrikB> source("http://www.braju.com/R/hbLite.R")
>     HenrikB> hbLite("R.native")
>     HenrikB> library(R.native)
>     HenrikB> example(rowMedians)
>
>     HenrikB> The source code package is available at:
>
>     HenrikB> http://www.braju.com/R/repos/R.native_0.1.2.tar.gz
>
>     HenrikB> Before I submit a package to CRAN consisting of pretty much just
>     HenrikB> rowMedians(), would it make more sense for it to go into one of the
>     HenrikB> core packages?  If so, how should I proceed?
>
> As they say: You have to convince at least one member of R-core
> that ``it's worth it''.  {Then he may have to bear the battle
> with dissenting core members  ;- }
>
> I'm quite interested, but really you have to do the work of unbundling
> it from all the R.oo stuff before I have another longer look.

Great.  The R code without R.oo (that's what it does), will be

rowMedians.matrix <- function(x, na.rm=FALSE, ...) {
  .Call("rowMedians", x, as.logical(na.rm), PACKAGE="R.native");
}

rowMedians <- function(...) UseMethod("rowMedians", ...)

and the C code is in src/rowMedians.c, and the doc in
man/rowMedians.matrix.R (all in
http://www.braju.com/R/repos/R.native_0.1.2.tar.gz).

Thanks

Henrik

PS. I'll be off email until Friday (US time). DS.


>
> Martin
>


From hb at stat.berkeley.edu  Mon May 14 11:43:45 2007
From: hb at stat.berkeley.edu (Henrik Bengtsson)
Date: Mon, 14 May 2007 02:43:45 -0700
Subject: [Rd] Native implementation of rowMedians()
In-Reply-To: <Pine.LNX.4.64.0705140924420.31269@auk.stats>
References: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>
	<17992.7115.324752.778339@stat.math.ethz.ch>
	<Pine.LNX.4.64.0705140924420.31269@auk.stats>
Message-ID: <59d7961d0705140243qca73bdbr14234febed9ebc5d@mail.gmail.com>

On 5/14/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> On Mon, 14 May 2007, Martin Maechler wrote:
>
> > Hi Henrik,
> >>>>>> "HenrikB" == Henrik Bengtsson <hb at stat.berkeley.edu>
> >>>>>>     on Sun, 13 May 2007 21:14:24 -0700 writes:
> >
> >    HenrikB> Hi,
> >    HenrikB> I've got a version of rowMedians(x, na.rm=FALSE) for matrices that
> >    HenrikB> handles missing values implemented in C.  It has been optimized for
> >    HenrikB> memory and speed.  To avoid coercing integers to doubles, and hence
> >    HenrikB> allocate an additional 200% memory, there is one C function for
> >    HenrikB> integers and one for doubles.
> >
> >    HenrikB> The rowMedians() implementation is currently sitting in my non-CRAN
> >    HenrikB> package R.native available by:
> >
> >    HenrikB> source("http://www.braju.com/R/hbLite.R")
> >    HenrikB> hbLite("R.native")
> >    HenrikB> library(R.native)
> >    HenrikB> example(rowMedians)
> >
> >    HenrikB> The source code package is available at:
> >
> >    HenrikB> http://www.braju.com/R/repos/R.native_0.1.2.tar.gz
> >
> >    HenrikB> Before I submit a package to CRAN consisting of pretty much just
> >    HenrikB> rowMedians(), would it make more sense for it to go into one of the
> >    HenrikB> core packages?  If so, how should I proceed?
> >
> > As they say: You have to convince at least one member of R-core
> > that ``it's worth it''.  {Then he may have to bear the battle
> > with dissenting core members  ;- }
> >
> > I'm quite interested, but really you have to do the work of unbundling
> > it from all the R.oo stuff before I have another longer look.
>
> Also, the 'a version of rowMedians' made me wonder what other version
> there was, and it seems there is one in Biobase which looks a more
> natural home.

The rowMedians() in Biobase utilizes rowQ() in ditto.  I actually
started of by adding support for missing values to rowQ() resulting in
the method rowQuantiles(), for which there are also internal functions
for both integer and double matrices.  rowQuantiles() is in R.native
too, but since it has much less CPU milage I wanted to wait with that.
 The rowMedians() is developed from my rowQuantiles() optimized for
the 50% quantile.

Why do you think it is more natural to host rowMedians() in Biobase
than in one of the core R packages?  Biobase comes with a lot of
overhead for people not in the Bio-world.

/Henrik

>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>


From ripley at stats.ox.ac.uk  Mon May 14 12:39:18 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 14 May 2007 11:39:18 +0100 (BST)
Subject: [Rd] Native implementation of rowMedians()
In-Reply-To: <59d7961d0705140243qca73bdbr14234febed9ebc5d@mail.gmail.com>
References: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com> 
	<17992.7115.324752.778339@stat.math.ethz.ch>
	<Pine.LNX.4.64.0705140924420.31269@auk.stats>
	<59d7961d0705140243qca73bdbr14234febed9ebc5d@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705141053240.5157@auk.stats>

On Mon, 14 May 2007, Henrik Bengtsson wrote:

> On 5/14/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>> 
>> > Hi Henrik,
>> >>>>>> "HenrikB" == Henrik Bengtsson <hb at stat.berkeley.edu>
>> >>>>>>     on Sun, 13 May 2007 21:14:24 -0700 writes:
>> >
>> >    HenrikB> Hi,
>> >    HenrikB> I've got a version of rowMedians(x, na.rm=FALSE) for 
>> matrices that
>> >    HenrikB> handles missing values implemented in C.  It has been

[...]

>> Also, the 'a version of rowMedians' made me wonder what other version
>> there was, and it seems there is one in Biobase which looks a more
>> natural home.
>
> The rowMedians() in Biobase utilizes rowQ() in ditto.  I actually
> started of by adding support for missing values to rowQ() resulting in
> the method rowQuantiles(), for which there are also internal functions
> for both integer and double matrices.  rowQuantiles() is in R.native
> too, but since it has much less CPU milage I wanted to wait with that.
> The rowMedians() is developed from my rowQuantiles() optimized for
> the 50% quantile.
>
> Why do you think it is more natural to host rowMedians() in Biobase
> than in one of the core R packages?  Biobase comes with a lot of
> overhead for people not in the Bio-world.

Because that is where there seems to be a need for it, and having multiple 
functions of the same name in different packages is not ideal (and even 
with namespaces can cause confusion).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From murdoch at stats.uwo.ca  Mon May 14 12:44:45 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Mon, 14 May 2007 06:44:45 -0400
Subject: [Rd] round(#, digits=x) unreliable for x=2 (PR#9682)
In-Reply-To: <20070514004645.808F42A3F9@slim.kubism.ku.dk>
References: <20070514004645.808F42A3F9@slim.kubism.ku.dk>
Message-ID: <46483D9D.1030504@stats.uwo.ca>

On 13/05/2007 8:46 PM, scott.wilkinson at csiro.au wrote:
> Full_Name: Scott Wilkinson
> Version: 2.3.1
> OS: WinXP Pro
> Submission from: (NULL) (140.253.203.4)
> 
> 
> In the example below round() does not report to the specified number of digits
> when the last digit to be reported is zero: Compare behaviour for 0.897575 and
> 0.946251. Ditto for signif(). The number of sigfigs is ambiguous unless the
> reader knows this behaviour. Is this a bug or intended behaviour? Is there a
> work-around?

It's not a bug.  It has nothing to do with round(), it is the way R 
prints numbers by default.  If you ask to print 0.90, you'll get

[1] 0.9

because 0.9 and 0.90 are the same number.  If you want trailing zeros to 
print, you need to specify a format to do that, e.g.

 > noquote(format(0.9, nsmall=2))
[1] 0.90

The noquote stops the "" from printing.  You could also use sprintf() or 
formatC() for more C-like format specifications.

Duncan Murdoch


From ripley at stats.ox.ac.uk  Mon May 14 13:13:45 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Mon, 14 May 2007 13:13:45 +0200 (CEST)
Subject: [Rd] (PR#9676) dump function and compatibility of .RData files
Message-ID: <20070514111345.DF7FF2069F@slim.kubism.ku.dk>

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.

--27464147-1671525898-1179141186=:28940
Content-Type: TEXT/PLAIN; charset=iso-8859-1; format=flowed
Content-Transfer-Encoding: 8BIT

On Fri, 11 May 2007, frederic.gosselin at cemagref.fr wrote:

> Full_Name: fr?d?ric Gosselin
> Version: 2.5 & 2.2.1
> OS: windows XP pro
> Submission from: (NULL) (195.221.118.52)
>
>
> (i) I cannot read .Rdata saved with R2.5 with R2.2.1. I think it was the same
> with R2.4 vs R2.2.1.

If you use new features in 2.5.0 (sic) then that is not a bug.  We do not 
claim forwards compatibility of formats (that is that R 2.2.1 can read 
files written in later versions of R).  Without a reproducible example 
there is nothing more to add.

> (ii) I have found the strange following problem, using the dump function:
> dump(ls(),"text.txt")
>
> in the text.txt file, there are a lot of "L" added at the end of 
> numbers, particularly in the .Dim attributes. This makes the file 
> undreadable (at least in R2.2.1 but alos probably in S-Plus...)

Please do read the help page: it points you to ?.deparseOpts for options 
for backwards and S-PLUS compatibility.  The file is readable in R >= 
2.5.0 and moreover is a more accurate representation than before.

> I do not know in which respect both potential bugs are related.

Only in that the same user misunderstood both.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595
--27464147-1671525898-1179141186=:28940--


From ripley at stats.ox.ac.uk  Mon May 14 13:37:02 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Mon, 14 May 2007 13:37:02 +0200 (CEST)
Subject: [Rd] changing the mode of a factor (PR#9675)
Message-ID: <20070514113702.2555A2A3D6@slim.kubism.ku.dk>

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.

--27464147-942662499-1179141762=:28940
Content-Type: TEXT/PLAIN; CHARSET=ISO-8859-1; FORMAT=flowed
Content-Transfer-Encoding: 8BIT
Content-ID: <Pine.LNX.4.64.0705141227241.28940 at gannet.stats.ox.ac.uk>

How about the following NEWS item (a bug fix)

     o	Assigning class "factor" to an object now requires it has
 	integer (and not say double) codes.

?  (Changing the mode to double amounted to creating a new double vector 
and then assigning the attributes of the old object including the class.
We gave a more specific error message in this case in an attempt to be 
helpful ....)

>From ?factor

      'factor' returns an object of class '"factor"' which has a set of
      integer codes the length of 'x' with a '"levels"' attribute of
      mode 'character'.  If 'ordered' is true (or 'ordered' is used) the
      result has class 'c("ordered", "factor")'.

So a factor necessarily has integer codes.  That you were able to change 
the mode in earlier versions of R was a bug that has been fixed.

You may well want one of the answers to FAQ 7.10.


Please take note of the 'BUGS' section in the FAQ and the posting guide: 
three incorrect bug items in one day is unhelpful.


On Fri, 11 May 2007, frederic.gosselin at cemagref.fr wrote:

> Full_Name: Fr?d?ric Gosselin
> Version: 2.5 vs 2.4 and 2.2.1
> OS: windows XP
> Submission from: (NULL) (195.221.118.52)
>
>
> #############
> L3 <- LETTERS[1:3]
> (d <- data.frame(cbind(x=1, y=1:10), fac=as.factor(sample(L3, 10,
> repl=TRUE))))
> mode(d[,3])<-"numeric"
> ###############
>
> when trying to change the mode of a column in a data.frame that is a factor to
> numeric(cf. preceding code), the following error occurs (in French) in R 2.5:
>
> Erreur dans `storage.mode<-`(`*tmp*`, value = "double") :
>        le mode de stockage d'un objet "factor" ne peut ?tre modifi?
>
> The same thing works fine in R2.4 and 2.2.1.
>
> It does not seem to correspond to new things announced in the NEWS file for the
> 2.5 version...
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595
--27464147-942662499-1179141762=:28940--


From ernest.turro at ic.ac.uk  Mon May 14 13:50:59 2007
From: ernest.turro at ic.ac.uk (Ernest Turro)
Date: Mon, 14 May 2007 12:50:59 +0100
Subject: [Rd] file separator inconsistencies on windows?
Message-ID: <4D68C58E-A646-4954-9829-EC8A51959D2A@ic.ac.uk>

tempdir() on windows returns the path using "\\" as file separator.  
But .Platform$file.sep returns "/". As a result, you get  
inconsistencies like:

 > file.path(tempdir(), "foo")

[1] "C:\\WINDOWS\\Temp\\RtmpYEIXrb/foo" # Mix of \\ and /

I'm not sure if this can cause problems but I thought I'd let you  
know just in case.


From maechler at stat.math.ethz.ch  Mon May 14 14:31:14 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 14 May 2007 14:31:14 +0200
Subject: [Rd] Native implementation of rowMedians()
In-Reply-To: <Pine.LNX.4.64.0705141053240.5157@auk.stats>
References: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>
	<17992.7115.324752.778339@stat.math.ethz.ch>
	<Pine.LNX.4.64.0705140924420.31269@auk.stats>
	<59d7961d0705140243qca73bdbr14234febed9ebc5d@mail.gmail.com>
	<Pine.LNX.4.64.0705141053240.5157@auk.stats>
Message-ID: <17992.22162.422720.580881@stat.math.ethz.ch>

>>>>> "BDR" == Prof Brian Ripley <ripley at stats.ox.ac.uk>
>>>>>     on Mon, 14 May 2007 11:39:18 +0100 (BST) writes:

    BDR> On Mon, 14 May 2007, Henrik Bengtsson wrote:
    >> On 5/14/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
    >>> 
    >>> > Hi Henrik,
    >>> >>>>>> "HenrikB" == Henrik Bengtsson <hb at stat.berkeley.edu>
    >>> >>>>>>     on Sun, 13 May 2007 21:14:24 -0700 writes:
    >>> >
    >>> >    HenrikB> Hi,
    >>> >    HenrikB> I've got a version of rowMedians(x, na.rm=FALSE) for 
    >>> matrices that
    >>> >    HenrikB> handles missing values implemented in C.  It has been

    BDR> [...]

    >>> Also, the 'a version of rowMedians' made me wonder what other version
    >>> there was, and it seems there is one in Biobase which looks a more
    >>> natural home.
    >> 
    >> The rowMedians() in Biobase utilizes rowQ() in ditto.  I actually
    >> started of by adding support for missing values to rowQ() resulting in
    >> the method rowQuantiles(), for which there are also internal functions
    >> for both integer and double matrices.  rowQuantiles() is in R.native
    >> too, but since it has much less CPU milage I wanted to wait with that.
    >> The rowMedians() is developed from my rowQuantiles() optimized for
    >> the 50% quantile.
    >> 
    >> Why do you think it is more natural to host rowMedians() in Biobase
    >> than in one of the core R packages?  Biobase comes with a lot of
    >> overhead for people not in the Bio-world.

    BDR> Because that is where there seems to be a need for it, and having multiple 
    BDR> functions of the same name in different packages is not ideal (and even 
    BDR> with namespaces can cause confusion).

That's correct, of course.
However, I still think that quantiles (and statistics derived
from them) in general and medians in particular are under-used
by many user groups. For some useRs, speed can be an important
reason and for that I had made a big effort to provide runmed()
in R, and I think it would be worthwhile to provide fast rowwise
medians and quantiles, here as well.

Also, BTW, I think it will be worthwhile to provide (R<->C) API
versions of median() and quantile() {with less options than the
R functions, most probably!!}, 
such that we'd hopefully see less re-invention of the wheel
happening in every package that needs such quantiles in its C code.

Biobase is in quite active maintenance, and I'd assume its
maintainers will remove rowMedians() from there (or first
replace it with a wrapper in order to deal with the namespace
issue you mentioned) as soon as R has its own function
with the same (or better) functionality.  
In order to facilitate the transition, we'd have to make sure
that such a 'stats' function does behave " >= " to the bioBase
one. 

Martin


From rgentlem at fhcrc.org  Mon May 14 16:17:19 2007
From: rgentlem at fhcrc.org (Robert Gentleman)
Date: Mon, 14 May 2007 07:17:19 -0700
Subject: [Rd] Native implementation of rowMedians()
In-Reply-To: <17992.22162.422720.580881@stat.math.ethz.ch>
References: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>	<17992.7115.324752.778339@stat.math.ethz.ch>	<Pine.LNX.4.64.0705140924420.31269@auk.stats>	<59d7961d0705140243qca73bdbr14234febed9ebc5d@mail.gmail.com>	<Pine.LNX.4.64.0705141053240.5157@auk.stats>
	<17992.22162.422720.580881@stat.math.ethz.ch>
Message-ID: <46486F6F.5040905@fhcrc.org>

We did think about this a lot, and decided it was better to have 
something like rowQ, which really returns requested order statistics, 
letting the user manipulate them on the return for their own version of 
median, or other quantiles, was a better approach. I would be happy to 
have this in R itself, if there is sufficient interest and we can remove 
the one in Biobase (without the need for deprecation/defunct as long  as 
the args are compatible). But, if the decision is to return a particular 
estimate of a quantile, then we would probably want to keep our function 
around, with its current name.

best wishes
   Robert


Martin Maechler wrote:
>>>>>> "BDR" == Prof Brian Ripley <ripley at stats.ox.ac.uk>
>>>>>>     on Mon, 14 May 2007 11:39:18 +0100 (BST) writes:
> 
>     BDR> On Mon, 14 May 2007, Henrik Bengtsson wrote:
>     >> On 5/14/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>     >>> 
>     >>> > Hi Henrik,
>     >>> >>>>>> "HenrikB" == Henrik Bengtsson <hb at stat.berkeley.edu>
>     >>> >>>>>>     on Sun, 13 May 2007 21:14:24 -0700 writes:
>     >>> >
>     >>> >    HenrikB> Hi,
>     >>> >    HenrikB> I've got a version of rowMedians(x, na.rm=FALSE) for 
>     >>> matrices that
>     >>> >    HenrikB> handles missing values implemented in C.  It has been
> 
>     BDR> [...]
> 
>     >>> Also, the 'a version of rowMedians' made me wonder what other version
>     >>> there was, and it seems there is one in Biobase which looks a more
>     >>> natural home.
>     >> 
>     >> The rowMedians() in Biobase utilizes rowQ() in ditto.  I actually
>     >> started of by adding support for missing values to rowQ() resulting in
>     >> the method rowQuantiles(), for which there are also internal functions
>     >> for both integer and double matrices.  rowQuantiles() is in R.native
>     >> too, but since it has much less CPU milage I wanted to wait with that.
>     >> The rowMedians() is developed from my rowQuantiles() optimized for
>     >> the 50% quantile.
>     >> 
>     >> Why do you think it is more natural to host rowMedians() in Biobase
>     >> than in one of the core R packages?  Biobase comes with a lot of
>     >> overhead for people not in the Bio-world.
> 
>     BDR> Because that is where there seems to be a need for it, and having multiple 
>     BDR> functions of the same name in different packages is not ideal (and even 
>     BDR> with namespaces can cause confusion).
> 
> That's correct, of course.
> However, I still think that quantiles (and statistics derived
> from them) in general and medians in particular are under-used
> by many user groups. For some useRs, speed can be an important
> reason and for that I had made a big effort to provide runmed()
> in R, and I think it would be worthwhile to provide fast rowwise
> medians and quantiles, here as well.
> 
> Also, BTW, I think it will be worthwhile to provide (R<->C) API
> versions of median() and quantile() {with less options than the
> R functions, most probably!!}, 
> such that we'd hopefully see less re-invention of the wheel
> happening in every package that needs such quantiles in its C code.
> 
> Biobase is in quite active maintenance, and I'd assume its
> maintainers will remove rowMedians() from there (or first
> replace it with a wrapper in order to deal with the namespace
> issue you mentioned) as soon as R has its own function
> with the same (or better) functionality.  
> In order to facilitate the transition, we'd have to make sure
> that such a 'stats' function does behave " >= " to the bioBase
> one. 
> 
> Martin
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Robert Gentleman, PhD
Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M2-B876
PO Box 19024
Seattle, Washington 98109-1024
206-667-7700
rgentlem at fhcrc.org


From edd at debian.org  Mon May 14 16:58:07 2007
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 14 May 2007 09:58:07 -0500
Subject: [Rd] Native implementation of rowMedians()
In-Reply-To: <17992.22162.422720.580881@stat.math.ethz.ch>
References: <59d7961d0705132114j7f8261e0oc25cfe7379cbb0e7@mail.gmail.com>
	<17992.7115.324752.778339@stat.math.ethz.ch>
	<Pine.LNX.4.64.0705140924420.31269@auk.stats>
	<59d7961d0705140243qca73bdbr14234febed9ebc5d@mail.gmail.com>
	<Pine.LNX.4.64.0705141053240.5157@auk.stats>
	<17992.22162.422720.580881@stat.math.ethz.ch>
Message-ID: <17992.30975.697196.990886@basebud.nulle.part>


On 14 May 2007 at 14:31, Martin Maechler wrote:
| However, I still think that quantiles (and statistics derived
| from them) in general and medians in particular are under-used
| by many user groups. For some useRs, speed can be an important
| reason and for that I had made a big effort to provide runmed()
| in R, and I think it would be worthwhile to provide fast rowwise
| medians and quantiles, here as well.

Seconded.  I don't see anything particular 'bio' about that.  

Dirk

-- 
Hell, there are no rules here - we're trying to accomplish something. 
                                                  -- Thomas A. Edison


From ripley at stats.ox.ac.uk  Mon May 14 18:20:33 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 14 May 2007 17:20:33 +0100 (BST)
Subject: [Rd] file separator inconsistencies on windows?
In-Reply-To: <4D68C58E-A646-4954-9829-EC8A51959D2A@ic.ac.uk>
References: <4D68C58E-A646-4954-9829-EC8A51959D2A@ic.ac.uk>
Message-ID: <Pine.LNX.4.64.0705141355270.30205@gannet.stats.ox.ac.uk>

On Mon, 14 May 2007, Ernest Turro wrote:

> tempdir() on windows returns the path using "\\" as file separator.

Yes, it is explicitly documented to.

> But .Platform$file.sep returns "/". As a result, you get
> inconsistencies like:
>
> > file.path(tempdir(), "foo")
>
> [1] "C:\\WINDOWS\\Temp\\RtmpYEIXrb/foo" # Mix of \\ and /
>
> I'm not sure if this can cause problems but I thought I'd let you
> know just in case.

It doesn't cause problems AFAIK.  The main place you need \ is when 
passing filepaths to a Windows shell, a few Windows executables and a very 
few API functions (where we convert in the wrappers).  OTOH, / is needed 
when passing to a Unix-like shell, make ....

Note that e.g. shell() on Windows has an argument to translate / to \ if 
necessary.

There is a problem with network shares like \\machine\path\to\file.  Those 
are essentially incompatible with POSIX and a lot of the tools we use for 
R, but I've started to make them work as far as is practicable.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From sfalcon at fhcrc.org  Tue May 15 01:01:32 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 14 May 2007 16:01:32 -0700
Subject: [Rd] Best Practise
In-Reply-To: <op.tsa5koddcsmg07@localhost.localdomain> (Tom McCallum's message
	of "Mon, 14 May 2007 09:23:02 +0100")
References: <op.tsa5koddcsmg07@localhost.localdomain>
Message-ID: <m2646v2enn.fsf@ziti.local>

Tom McCallum <termcc at googlemail.com> writes:

> Hello,
>
>
> Just a quick question on best practise.  I am converting quite a bit of  
> legacy C code into R packages and have the following situation:
>
> (1) Legacy object with a double* array in, all over code so don't want to  
> change any more than I have to.
>
> (2) Do something like:
> 	SEXP arrayToPassToR;
> 	PROTECT( arrayToPassToR = allocVector( REALSXP, n ) );
> 	for(i=0; i < n; i++) {
> 		REAL(arrayToPassToR)[i] = oldCarray[i];   <----  very slow way to copy  
> data, can I use memcpy/pointer assignment here to remove the loop without  
> running into garbage collector?

You can use memcpy and that should be no different semantically from
the loop.  You cannot reassign the pointer.

Perhaps it is possible to refactor the part of your legacy code that
allocates the vector to begin with?  Then you can use R's allocVector
and send the pointer to the alloc'd vector off to your code.

> (3) Have made it to call back to an R function which returns a new /  
> different SEXP double array.
> 	returnValueFromR = Test_tryEval(...);
> (4) Copy back to oldCArray
> 	for(i=0; i < n; i++) {
> 		oldCarray[i] = REAL(returnValueFromR)[i]; <--- can I use memcpy/pointer  
> assignment here to remove loop?
> 	}
> 	UNPROTECT(1);

Depending on how you will use oldCarray, you may not need a copy at
all.  If you have a function that takes a double* then you can pass in
REAL(returnValueFromR).

> I have done the long winded copy as I am a bit paranoid about the garbage  
> collection.  My question is is it legitimate to do the following
>
> 	double* oldCArray = REAL(arrayToPassToR);
> 	UNPROTECT(1); // where the 1 would remove protection from arrayToPassToR  
> and potential garbage collection
> 	-- assume arrayToPassToR was garbage collected by R --
> 	Rprintf("%f", oldCArray[0]);
>
> because if arrayToPassToR is garbage collected then oldCArray will cause a  
> SEGFAULT when it is accessed afterwards, won't it?

If you UNPROTECT arrayToPassToR, then the next time R's gc runs
oldCArray will be invalid.

It isn't clear to me from your post what exactly you are trying to do
(and your subject line is confusing, this isn't a best practice
question IMO, but a how do I use R objects in C question).

Perhaps the above hints will get you going.  I would recommend reading
over the relevant sections of the Writing R Extensions manual and the
R internals manual.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From sfalcon at fhcrc.org  Tue May 15 01:15:31 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 14 May 2007 16:15:31 -0700
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
Message-ID: <m21whj2e0c.fsf@ziti.local>

Hello,

The vignette concept, which started in Bioconductor, seems to be
catching on.  They are supported by R CMD build/check and documented
in the Writing R Extensions manual.  I think vignettes are a fantastic
way to introduce new users to a package.  However, getting new users
to realize that a vignette is available can be challenging.

For some time now, we have had a function in Biobase that creates a
"Vignettes" menu item in the R Windows GUI and gives packages a
mechanism to register their vignettes so that they appear on this
menu.  I would like to see this functionality included in R so that
there can be a standard mechanism that doesn't depend on Biobase of
registering a package's vignettes with one of the R GUIs (currently
only Windows is supported, but I imagine the OS X GUI could also
implement this).

Below is the implementation we have been using.  Is there an R-core
member I can interest in pushing this along?  I'm willing to submit a
patch with documentation, etc.

+ seth

addVigs2WinMenu <- function(pkgName) {
    if ((.Platform$OS.type == "windows") && (.Platform$GUI == "Rgui")
        && interactive()) {
        vigFile <- system.file("Meta", "vignette.rds", package=pkgName)
        if (!file.exists(vigFile)) {
            warning(sprintf("%s contains no vignette, nothing is added to the menu bar", pkgName))
        } else {
            vigMtrx <- .readRDS(vigFile)
            vigs <- file.path(.find.package(pkgName), "doc", vigMtrx[,"PDF"])
            names(vigs) <- vigMtrx[,"Title"]

            if (!"Vignettes" %in% winMenuNames())
              winMenuAdd("Vignettes")
            pkgMenu <- paste("Vignettes", pkgName, sep="/")
            winMenuAdd(pkgMenu)
            for (i in vigs) {
                item <- sub(".pdf", "", basename(i))
                winMenuAddItem(pkgMenu, item, paste("shell.exec(\"", as.character(i), "\")", sep = ""))
            }
        } ## else
        ans <- TRUE
    } else {
        ans <- FALSE
    }
    ans
}




-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From wangtong at usc.edu  Tue May 15 02:04:40 2007
From: wangtong at usc.edu (Tong Wang)
Date: Mon, 14 May 2007 17:04:40 -0700
Subject: [Rd] set_seed
Message-ID: <dd68e78f3a1d.464896a8@usc.edu>

Hi, All: 
   It seemed set_seed is usable only when Rmath is used as a standalone library,  then what should I use when I need to link to R.dll.  

Thanks . 

tong


From murdoch at stats.uwo.ca  Tue May 15 02:58:11 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Mon, 14 May 2007 20:58:11 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <m21whj2e0c.fsf@ziti.local>
References: <m21whj2e0c.fsf@ziti.local>
Message-ID: <464905A3.1010305@stats.uwo.ca>

On 14/05/2007 7:15 PM, Seth Falcon wrote:
> Hello,
> 
> The vignette concept, which started in Bioconductor, seems to be
> catching on.  They are supported by R CMD build/check and documented
> in the Writing R Extensions manual.  I think vignettes are a fantastic
> way to introduce new users to a package.  However, getting new users
> to realize that a vignette is available can be challenging.
> 
> For some time now, we have had a function in Biobase that creates a
> "Vignettes" menu item in the R Windows GUI and gives packages a
> mechanism to register their vignettes so that they appear on this
> menu.  I would like to see this functionality included in R so that
> there can be a standard mechanism that doesn't depend on Biobase of
> registering a package's vignettes with one of the R GUIs (currently
> only Windows is supported, but I imagine the OS X GUI could also
> implement this).
> 
> Below is the implementation we have been using.  Is there an R-core
> member I can interest in pushing this along?  I'm willing to submit a
> patch with documentation, etc.

I'm interested in making vignettes more visible.  Putting them on the 
menu is not the only way, but since you're offering to do the work, I 
think it's a good idea :-).

A few questions:

  - Should packages need to take any action to register their vignettes, 
or should this happen automatically for anything that the vignette() 
function would recognize as a vignette?

My recommendation would be for automatic installation.

  - Should it happen when the package is installed or when it is attached?

This is harder.  vignette() detects installed vignettes, which is fine 
if not many packages have them.  But I think the hope is that most 
packages will eventually, and then I think you wouldn't want the menu to 
list every package.  Maybe default to attached packages, but expose the 
function below for people who want more?

  - Should they appear in a top level Vignettes menu, or as a submenu of 
the Help menu?

I'd lean towards keeping the top level placement, since you've already 
got an audience who are used to that.

By the way, another way to expose vignettes is to have them 
automatically added to the package help topic, with links in formats 
that support them.  I think we should do that too, but I don't know if 
it'll happen soon.

Duncan Murdoch

> 
> + seth
> 
> addVigs2WinMenu <- function(pkgName) {
>     if ((.Platform$OS.type == "windows") && (.Platform$GUI == "Rgui")
>         && interactive()) {
>         vigFile <- system.file("Meta", "vignette.rds", package=pkgName)
>         if (!file.exists(vigFile)) {
>             warning(sprintf("%s contains no vignette, nothing is added to the menu bar", pkgName))
>         } else {
>             vigMtrx <- .readRDS(vigFile)
>             vigs <- file.path(.find.package(pkgName), "doc", vigMtrx[,"PDF"])
>             names(vigs) <- vigMtrx[,"Title"]
> 
>             if (!"Vignettes" %in% winMenuNames())
>               winMenuAdd("Vignettes")
>             pkgMenu <- paste("Vignettes", pkgName, sep="/")
>             winMenuAdd(pkgMenu)
>             for (i in vigs) {
>                 item <- sub(".pdf", "", basename(i))
>                 winMenuAddItem(pkgMenu, item, paste("shell.exec(\"", as.character(i), "\")", sep = ""))
>             }
>         } ## else
>         ans <- TRUE
>     } else {
>         ans <- FALSE
>     }
>     ans
> }
> 
> 
> 
>


From sfalcon at fhcrc.org  Tue May 15 03:30:10 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 14 May 2007 18:30:10 -0700
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <464905A3.1010305@stats.uwo.ca> (Duncan Murdoch's message of "Mon,
	14 May 2007 20:58:11 -0400")
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
Message-ID: <m2fy5y27rx.fsf@ziti.local>

Duncan Murdoch <murdoch at stats.uwo.ca> writes:
> I'm interested in making vignettes more visible.  Putting them on the
> menu is not the only way, but since you're offering to do the work, I
> think it's a good idea :-).

Excellent :-)

> A few questions:
>
>  - Should packages need to take any action to register their
> vignettes, or should this happen automatically for anything that the
> vignette() function would recognize as a vignette?
>
> My recommendation would be for automatic installation.

That seems ok to me.  Currently, we have a system that requires
package authors to register their vignette in .onAttach (more on that
below).  I can't really think of a case where a package provides
vignettes and doesn't want them easily accessible to new users in a
GUI environment.

>  - Should it happen when the package is installed or when it is
>    attached?
>
> This is harder.  vignette() detects installed vignettes, which is fine
> if not many packages have them.  But I think the hope is that most
> packages will eventually, and then I think you wouldn't want the menu
> to list every package.  Maybe default to attached packages, but expose
> the function below for people who want more?

My feeling is that this is only appropriate for attached packages.  As
you point out, adding an entry for every installed package could
create a cluttered menu (and present implementation challenges to
avoid slowness).  I also think that packages that get loaded via other
packages name spaces should remain in stealth mode.  

There is another reason to only list vignettes for attached packages.
One of the primary uses of a vignette is to allow the user to work
through an example use case interactively.  This requires the package
to be attached in almost all cases.

>  - Should they appear in a top level Vignettes menu, or as a submenu
> of the Help menu?
>
> I'd lean towards keeping the top level placement, since you've already
> got an audience who are used to that.

Sounds good.

> By the way, another way to expose vignettes is to have them
> automatically added to the package help topic, with links in formats
> that support them.  I think we should do that too, but I don't know if
> it'll happen soon.

Also sounds good, but one thing at a time, I guess.

If there is some agreement about vignettes being automatically added
and that this only happens when a package is attached, then I can look
into modifying the existing function to handle this.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From ripley at stats.ox.ac.uk  Tue May 15 06:40:02 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 15 May 2007 05:40:02 +0100 (BST)
Subject: [Rd] set_seed
In-Reply-To: <dd68e78f3a1d.464896a8@usc.edu>
References: <dd68e78f3a1d.464896a8@usc.edu>
Message-ID: <Pine.LNX.4.64.0705150534260.13138@gannet.stats.ox.ac.uk>

On Mon, 14 May 2007, Tong Wang wrote:

> Hi, All:

>   It seemed set_seed is usable only when Rmath is used as a standalone 
> library, then what should I use when I need to link to R.dll.

When you link to R.dll you are running R, so you can call set.seed() via 
eval or via do_setseed.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From wangtong at usc.edu  Tue May 15 08:01:34 2007
From: wangtong at usc.edu (Tong Wang)
Date: Mon, 14 May 2007 23:01:34 -0700
Subject: [Rd] set_seed
In-Reply-To: <Pine.LNX.4.64.0705150534260.13138@gannet.stats.ox.ac.uk>
References: <dd68e78f3a1d.464896a8@usc.edu>
	<Pine.LNX.4.64.0705150534260.13138@gannet.stats.ox.ac.uk>
Message-ID: <f681cb5d7658.4648ea4e@usc.edu>

  In this case,  how do I choose numbers to make sure  set_seed(n1,n2)  and set.seed(n) produce the same result ?
I am asking because my C code worked correctly if I compile it to produce .exe file and ran it ,  but it gave strange results if it is compiled to .dll file and dynamically loaded into R and call with .C( ). 
   To debug,  I need to let them produce the same random number under two different situation so I can tell what is wrong in R. 

   Thanks a lot.

----- Original Message -----
From: Prof Brian Ripley <ripley at stats.ox.ac.uk>
Date: Monday, May 14, 2007 9:40 pm
Subject: Re: [Rd] set_seed
To: Tong Wang <wangtong at usc.edu>
Cc: R-devel <r-devel at r-project.org>

> On Mon, 14 May 2007, Tong Wang wrote:
> 
> > Hi, All:
> 
> >   It seemed set_seed is usable only when Rmath is used as a 
> standalone 
> > library, then what should I use when I need to link to R.dll.
> 
> When you link to R.dll you are running R, so you can call 
> set.seed() via 
> eval or via do_setseed.
> 
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>


From christina.merz at gmx.de  Mon May 14 20:11:24 2007
From: christina.merz at gmx.de (christina.merz at gmx.de)
Date: Mon, 14 May 2007 20:11:24 +0200 (CEST)
Subject: [Rd] optim bug (PR#9684)
Message-ID: <20070514181124.4D9602A36F@slim.kubism.ku.dk>

Full_Name: Christina Merz
Version: R version 2.5.0 (2007-04-23)
OS: mingw32
Submission from: (NULL) (213.70.209.132)



R> version
               _                           
platform       i386-pc-mingw32             
arch           i386                        
os             mingw32                     
system         i386, mingw32               
status                                     
major          2                           
minor          5.0                         
year           2007                        
month          04                          
day            23                          
svn rev        41293                       
language       R                           
version.string R version 2.5.0 (2007-04-23)

-----------------------------------------------------------------------------

R> sessionInfo()
R version 2.5.0 (2007-04-23) 
i386-pc-mingw32 

locale:
LC_COLLATE=German_Germany.1252;LC_CTYPE=German_Germany.1252;LC_MONETARY=German_Germany.1252;LC_NUMERIC=C;LC_TIME=German_Germany.1252

attached base packages:
[1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"  
[7] "base"     

-------------------------------------------------------------------------------

'optim' does not accept arguments called 'u'. Here is an example:

R> fun<-function(x,u) (x-u)^2
R> optim(7,fn=fun,u=9)

Fehler in fn(par, ...) : Argument "u" fehlt (ohne Standardwert)
Zus?tzlich: Warning message:
bounds can only be used with method L-BFGS-B in: optim(7, fn = fun, u = 9)

while

R> fun<-function(x,y) (x-y)^2
R> optim(7,fn=fun,y=9)
$par
[1] 8.999854

$value
[1] 2.145767e-08

$counts
function gradient 
      28       NA 

$convergence
[1] 0

$message
NULL

Warning message:
one-diml optimization by Nelder-Mead is unreliable: use optimize in: optim(7, fn
= fun, y = 9) 


-Christina


From benjamin.leblanc at igh.cnrs.fr  Mon May 14 14:35:25 2007
From: benjamin.leblanc at igh.cnrs.fr (benjamin.leblanc at igh.cnrs.fr)
Date: Mon, 14 May 2007 14:35:25 +0200 (CEST)
Subject: [Rd] Calling erf function in package NORMT3 produce a R crash on
	Linux/AMD opteron (PR#9683)
Message-ID: <20070514123525.BDB1047CB7@slim.kubism.ku.dk>

Full_Name: Benjamin Leblanc
Version: 2.4.1 and 2.5.0
OS: Ubuntu Linux 7.04 AMD64
Submission from: (NULL) (195.83.84.213)


Here is an example script that may crash under R with Linux AMD 64 bit
platforms

library('NORMT3')
a <- 1:1000/1000
erf(a)

I did several tests:
- opensuse 10.2 x86_64 with R 2.4.1 and R 2.5.0, produce systematically a frozen
R session
- ubuntu 7.04 AMD64, R 2.4.1 and R version 2.5.0 (2007-04-23), produce a memory
corruption

Here is an example with core dump on ubuntu 7.04 AMD64, R version 2.5.0
(2007-04-23):

> a <- 1:100/200
> erf(a)


*** glibc detected *** /usr/lib/R/bin/exec/R: malloc(): memory corruption:
0x0000000001308500 ***
======= Backtrace: =========
/lib/libc.so.6[0x2b0cc3b9f1d1]
/lib/libc.so.6(__libc_malloc+0x7d)[0x2b0cc3ba098d]
/usr/lib/R/lib/libR.so(Rf_allocVector+0x4cc)[0x2b0cc36e9c3c]
/usr/lib/R/lib/libR.so[0x2b0cc368d42b]
/usr/lib/R/lib/libR.so(Rf_eval+0x6ea)[0x2b0cc36bfb6a]
/usr/lib/R/lib/libR.so[0x2b0cc36c2370]
/usr/lib/R/lib/libR.so(Rf_eval+0x48b)[0x2b0cc36bf90b]
/usr/lib/R/lib/libR.so[0x2b0cc36c0ca2]
/usr/lib/R/lib/libR.so(Rf_eval+0x48b)[0x2b0cc36bf90b]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x286)[0x2b0cc36c2be6]
/usr/lib/R/lib/libR.so(Rf_eval+0x2f4)[0x2b0cc36bf774]
/usr/lib/R/lib/libR.so[0x2b0cc36c0618]
/usr/lib/R/lib/libR.so(Rf_eval+0x552)[0x2b0cc36bf9d2]
/usr/lib/R/lib/libR.so(Rf_applyClosure+0x286)[0x2b0cc36c2be6]
/usr/lib/R/lib/libR.so(Rf_eval+0x2f4)[0x2b0cc36bf774]
/usr/lib/R/lib/libR.so(Rf_ReplIteration+0x2de)[0x2b0cc36e2f4e]
/usr/lib/R/lib/libR.so(run_Rmainloop+0xc2)[0x2b0cc36e3112]
/usr/lib/R/bin/exec/R(main+0x1b)[0x40088b]
/lib/libc.so.6(__libc_start_main+0xf4)[0x2b0cc3b4c8e4]
/usr/lib/R/bin/exec/R[0x4007aa]
======= Memory map: ========
00400000-00401000 r-xp 00000000 08:02 8669401                           
/usr/lib/R/bin/exec/R
00500000-00501000 rw-p 00000000 08:02 8669401                           
/usr/lib/R/bin/exec/R
00501000-01b4b000 rw-p 00501000 00:00 0                                  [heap]
2b0cc33e2000-2b0cc33fe000 r-xp 00000000 08:02 14549011                  
/lib/ld-2.5.so
2b0cc33fe000-2b0cc3401000 rw-p 2b0cc33fe000 00:00 0 
2b0cc35fd000-2b0cc35ff000 rw-p 0001b000 08:02 14549011                  
/lib/ld-2.5.so
2b0cc35ff000-2b0cc384b000 r-xp 00000000 08:02 8669405                   
/usr/lib/R/lib/libR.so
2b0cc384b000-2b0cc394b000 ---p 0024c000 08:02 8669405                   
/usr/lib/R/lib/libR.so
2b0cc394b000-2b0cc395e000 rw-p 0024c000 08:02 8669405                   
/usr/lib/R/lib/libR.so
2b0cc395e000-2b0cc39f8000 rw-p 2b0cc395e000 00:00 0 
2b0cc39f8000-2b0cc3a23000 r-xp 00000000 08:02 8669404                   
/usr/lib/R/lib/libRblas.so
2b0cc3a23000-2b0cc3b22000 ---p 0002b000 08:02 8669404                   
/usr/lib/R/lib/libRblas.so
2b0cc3b22000-2b0cc3b23000 rw-p 0002a000 08:02 8669404                   
/usr/lib/R/lib/libRblas.so
2b0cc3b23000-2b0cc3b24000 r--p 00000000 08:02 8028234                   
/usr/lib/locale/fr_FR.utf8/LC_MESSAGES/SYS_LC_MESSAGES
2b0cc3b24000-2b0cc3b2b000 r--s 00000000 08:02 9273579                   
/usr/lib/gconv/gconv-modules.cache
2b0cc3b2f000-2b0cc3c76000 r-xp 00000000 08:02 14549029                  
/lib/libc-2.5.so
2b0cc3c76000-2b0cc3e76000 ---p 00147000 08:02 14549029                  
/lib/libc-2.5.so
2b0cc3e76000-2b0cc3e79000 r--p 00147000 08:02 14549029                  
/lib/libc-2.5.so
2b0cc3e79000-2b0cc3e7b000 rw-p 0014a000 08:02 14549029                  
/lib/libc-2.5.so
2b0cc3e7b000-2b0cc3e80000 rw-p 2b0cc3e7b000 00:00 0 
2b0cc3e80000-2b0cc3f19000 r-xp 00000000 08:02 11288626                  
/usr/lib/libgfortran.so.1.0.0
2b0cc3f19000-2b0cc4118000 ---p 00099000 08:02 11288626                  
/usr/lib/libgfortran.so.1.0.0
2b0cc4118000-2b0cc411a000 rw-p 00098000 08:02 11288626                  
/usr/lib/libgfortran.so.1.0.0
2b0cc411a000-2b0cc411b000 rw-p 2b0cc411a000 00:00 0 
2b0cc411b000-2b0cc419c000 r-xp 00000000 08:02 14549060                  
/lib/libm-2.5.so
2b0cc419c000-2b0cc439b000 ---p 00081000 08:02 14549060                  
/lib/libm-2.5.so
2b0cc439b000-2b0cc439d000 rw-p 00080000 08:02 14549060                  
/lib/libm-2.5.so
2b0cc439d000-2b0cc43aa000 r-xp 00000000 08:02 14549054                  
/lib/libgcc_s.so.1
2b0cc43aa000-2b0cc45aa000 ---p 0000d000 08:02 14549054                  
/lib/libgcc_s.so.1
2b0cc45aa000-2b0cc45ab000 rw-p 0000d000 08:02 14549054                  
/lib/libgcc_s.so.1
2b0cc45ab000-2b0cc45e1000 r-xp 00000000 08:02 14549102                  
/lib/libreadline.so.5.2
2b0cc45e1000-2b0cc47e1000 ---p 00036000 08:02 14549102                  
/lib/libreadline.soAbandon (core dumped)


From abdelhakimz at gmail.com  Mon May 14 20:40:18 2007
From: abdelhakimz at gmail.com (Abdelhakim z)
Date: Mon, 14 May 2007 19:40:18 +0100
Subject: [Rd] =?windows-1252?q?XML_parsing_under_R_/_Extracting_nodes=92_v?=
	=?windows-1252?q?alues?=
Message-ID: <3d5cc13f0705141140j9739a17n9d405b607506600d@mail.gmail.com>

Hi,
I have an XML file which contains among other nodes :

===myXMLfile.xml===
(?)
<nbRelations>2</nbRelations>
<nbActors>2</nbActors>
(...)
<nbRuns>5</nbRuns>
<nbStep>2000</nbStep>
(?)
===End file===
I need to extract those values and to make them R variables such as:
nbRelations = 2
nbActors = 2

nbRuns = 5
nbSteps = 2000

I read the help and have seen the examples of the xml package, it
seems that I need to use xmlTreeParse() function but I don't know how
exactly as I'm not an R advanced programmer, please can anyone show me
how to do that explicitly ?

Any help would be much appreciated

Thanks,

Abdel
University of Boumerd?s
Algeria


From vax9000 at gmail.com  Mon May 14 23:41:01 2007
From: vax9000 at gmail.com (vax9000 at gmail.com)
Date: Mon, 14 May 2007 23:41:01 +0200 (CEST)
Subject: [Rd] read.table() can't read in this table (But Splus can) (PR#9685)
Message-ID: <20070514214101.DD765486F5@slim.kubism.ku.dk>

Full_Name: vax, 9000
Version: 2.4.0, 2.2.1
OS: 2.4.0: Mac OS X; 2.2.1: Linux
Submission from: (NULL) (192.35.79.70)


To reproduce this bug, first go to the website "http://llmpp.nih.gov/DLBCL/" and
download the 14.8M data set "Web Figure 1 Data file". The direct link is
"http://llmpp.nih.gov/DLBCL/NEJM_Web_Fig1data". Save it as "datafile.txt"

Then, start R, type in command "x <- read.table("datafile.txt", header=TRUE,
sep="\t")". The data has 7400 lines, but not all lines could be read in by R.

Easier test data set:
Use the command "head -n 100 datafile.txt > shortdatafile.txt" to extract the
first 100 lines. The R command "x <- read.table("datafile.txt", header=TRUE,
sep="\t")" could not read in even this 100 lines of data. 

But Splus can, with the same command. What is wrong?


From conyike1 at jhmi.edu  Tue May 15 07:23:59 2007
From: conyike1 at jhmi.edu (conyike1 at jhmi.edu)
Date: Tue, 15 May 2007 07:23:59 +0200 (CEST)
Subject: [Rd] R (PR#9686)
Message-ID: <20070515052359.A64D8485BF@slim.kubism.ku.dk>

Full_Name: Chiadi Onyike
Version: 2.5
OS: Mac OS 10.4.9
Submission from: (NULL) (71.248.49.27)


Every time I launch the program, I get the following message:

2007-05-15 01:10:00.959 Installer[2410] *** -[NSBundle load]: Error loading code
/Users/chiadionyike/Library/InputManagers/SIMBL/SIMBL.bundle/Contents/MacOS/SIMBL
for bundle /Users/chiadionyike/Library/InputManagers/SIMBL/SIMBL.bundle, error
code 2 (link edit error code 0, error number 0 ())



I would like to completely erase R and re-install it, but I cannot find
instructions anywhere on how to do this.  Can you tell me how to fix this bug or
how to uninstall the program and then reinstall it?


From ripley at stats.ox.ac.uk  Tue May 15 08:50:08 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 15 May 2007 07:50:08 +0100 (BST)
Subject: [Rd] optim bug (PR#9684)
In-Reply-To: <20070514181124.4D9602A36F@slim.kubism.ku.dk>
References: <20070514181124.4D9602A36F@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0705150748380.12894@auk.stats>

This is not a bug, but as documented on the help page:

      ...: Further arguments to be passed to 'fn' and 'gr'. Beware of
           partial matching to earlier arguments.

You have partial matching to 'upper'.


On Mon, 14 May 2007, christina.merz at gmx.de wrote:

> Full_Name: Christina Merz
> Version: R version 2.5.0 (2007-04-23)
> OS: mingw32
> Submission from: (NULL) (213.70.209.132)
>
>
>
> R> version
>               _
> platform       i386-pc-mingw32
> arch           i386
> os             mingw32
> system         i386, mingw32
> status
> major          2
> minor          5.0
> year           2007
> month          04
> day            23
> svn rev        41293
> language       R
> version.string R version 2.5.0 (2007-04-23)
>
> -----------------------------------------------------------------------------
>
> R> sessionInfo()
> R version 2.5.0 (2007-04-23)
> i386-pc-mingw32
>
> locale:
> LC_COLLATE=German_Germany.1252;LC_CTYPE=German_Germany.1252;LC_MONETARY=German_Germany.1252;LC_NUMERIC=C;LC_TIME=German_Germany.1252
>
> attached base packages:
> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
> [7] "base"
>
> -------------------------------------------------------------------------------
>
> 'optim' does not accept arguments called 'u'. Here is an example:
>
> R> fun<-function(x,u) (x-u)^2
> R> optim(7,fn=fun,u=9)
>
> Fehler in fn(par, ...) : Argument "u" fehlt (ohne Standardwert)
> Zus?tzlich: Warning message:
> bounds can only be used with method L-BFGS-B in: optim(7, fn = fun, u = 9)
>
> while
>
> R> fun<-function(x,y) (x-y)^2
> R> optim(7,fn=fun,y=9)
> $par
> [1] 8.999854
>
> $value
> [1] 2.145767e-08
>
> $counts
> function gradient
>      28       NA
>
> $convergence
> [1] 0
>
> $message
> NULL
>
> Warning message:
> one-diml optimization by Nelder-Mead is unreliable: use optimize in: optim(7, fn
> = fun, y = 9)
>
>
> -Christina
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

From ripley at stats.ox.ac.uk  Tue May 15 08:53:14 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 15 May 2007 07:53:14 +0100 (BST)
Subject: [Rd] Calling erf function in package NORMT3 produce a R crash
 on Linux/AMD opteron (PR#9683)
In-Reply-To: <20070514123525.BDB1047CB7@slim.kubism.ku.dk>
References: <20070514123525.BDB1047CB7@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0705150751381.12894@auk.stats>

This is a known problem, reported to the package maintainer (the use of 
R-bugs is inappropriate for contributed packages) over two years ago.

On Mon, 14 May 2007, benjamin.leblanc at igh.cnrs.fr wrote:

> Full_Name: Benjamin Leblanc
> Version: 2.4.1 and 2.5.0
> OS: Ubuntu Linux 7.04 AMD64
> Submission from: (NULL) (195.83.84.213)
>
>
> Here is an example script that may crash under R with Linux AMD 64 bit
> platforms
>
> library('NORMT3')
> a <- 1:1000/1000
> erf(a)
>
> I did several tests:
> - opensuse 10.2 x86_64 with R 2.4.1 and R 2.5.0, produce systematically a frozen
> R session
> - ubuntu 7.04 AMD64, R 2.4.1 and R version 2.5.0 (2007-04-23), produce a memory
> corruption
>
> Here is an example with core dump on ubuntu 7.04 AMD64, R version 2.5.0
> (2007-04-23):
>
>> a <- 1:100/200
>> erf(a)
>
>
> *** glibc detected *** /usr/lib/R/bin/exec/R: malloc(): memory corruption:
> 0x0000000001308500 ***
> ======= Backtrace: =========
> /lib/libc.so.6[0x2b0cc3b9f1d1]
> /lib/libc.so.6(__libc_malloc+0x7d)[0x2b0cc3ba098d]
> /usr/lib/R/lib/libR.so(Rf_allocVector+0x4cc)[0x2b0cc36e9c3c]
> /usr/lib/R/lib/libR.so[0x2b0cc368d42b]
> /usr/lib/R/lib/libR.so(Rf_eval+0x6ea)[0x2b0cc36bfb6a]
> /usr/lib/R/lib/libR.so[0x2b0cc36c2370]
> /usr/lib/R/lib/libR.so(Rf_eval+0x48b)[0x2b0cc36bf90b]
> /usr/lib/R/lib/libR.so[0x2b0cc36c0ca2]
> /usr/lib/R/lib/libR.so(Rf_eval+0x48b)[0x2b0cc36bf90b]
> /usr/lib/R/lib/libR.so(Rf_applyClosure+0x286)[0x2b0cc36c2be6]
> /usr/lib/R/lib/libR.so(Rf_eval+0x2f4)[0x2b0cc36bf774]
> /usr/lib/R/lib/libR.so[0x2b0cc36c0618]
> /usr/lib/R/lib/libR.so(Rf_eval+0x552)[0x2b0cc36bf9d2]
> /usr/lib/R/lib/libR.so(Rf_applyClosure+0x286)[0x2b0cc36c2be6]
> /usr/lib/R/lib/libR.so(Rf_eval+0x2f4)[0x2b0cc36bf774]
> /usr/lib/R/lib/libR.so(Rf_ReplIteration+0x2de)[0x2b0cc36e2f4e]
> /usr/lib/R/lib/libR.so(run_Rmainloop+0xc2)[0x2b0cc36e3112]
> /usr/lib/R/bin/exec/R(main+0x1b)[0x40088b]
> /lib/libc.so.6(__libc_start_main+0xf4)[0x2b0cc3b4c8e4]
> /usr/lib/R/bin/exec/R[0x4007aa]
> ======= Memory map: ========
> 00400000-00401000 r-xp 00000000 08:02 8669401
> /usr/lib/R/bin/exec/R
> 00500000-00501000 rw-p 00000000 08:02 8669401
> /usr/lib/R/bin/exec/R
> 00501000-01b4b000 rw-p 00501000 00:00 0                                  [heap]
> 2b0cc33e2000-2b0cc33fe000 r-xp 00000000 08:02 14549011
> /lib/ld-2.5.so
> 2b0cc33fe000-2b0cc3401000 rw-p 2b0cc33fe000 00:00 0
> 2b0cc35fd000-2b0cc35ff000 rw-p 0001b000 08:02 14549011
> /lib/ld-2.5.so
> 2b0cc35ff000-2b0cc384b000 r-xp 00000000 08:02 8669405
> /usr/lib/R/lib/libR.so
> 2b0cc384b000-2b0cc394b000 ---p 0024c000 08:02 8669405
> /usr/lib/R/lib/libR.so
> 2b0cc394b000-2b0cc395e000 rw-p 0024c000 08:02 8669405
> /usr/lib/R/lib/libR.so
> 2b0cc395e000-2b0cc39f8000 rw-p 2b0cc395e000 00:00 0
> 2b0cc39f8000-2b0cc3a23000 r-xp 00000000 08:02 8669404
> /usr/lib/R/lib/libRblas.so
> 2b0cc3a23000-2b0cc3b22000 ---p 0002b000 08:02 8669404
> /usr/lib/R/lib/libRblas.so
> 2b0cc3b22000-2b0cc3b23000 rw-p 0002a000 08:02 8669404
> /usr/lib/R/lib/libRblas.so
> 2b0cc3b23000-2b0cc3b24000 r--p 00000000 08:02 8028234
> /usr/lib/locale/fr_FR.utf8/LC_MESSAGES/SYS_LC_MESSAGES
> 2b0cc3b24000-2b0cc3b2b000 r--s 00000000 08:02 9273579
> /usr/lib/gconv/gconv-modules.cache
> 2b0cc3b2f000-2b0cc3c76000 r-xp 00000000 08:02 14549029
> /lib/libc-2.5.so
> 2b0cc3c76000-2b0cc3e76000 ---p 00147000 08:02 14549029
> /lib/libc-2.5.so
> 2b0cc3e76000-2b0cc3e79000 r--p 00147000 08:02 14549029
> /lib/libc-2.5.so
> 2b0cc3e79000-2b0cc3e7b000 rw-p 0014a000 08:02 14549029
> /lib/libc-2.5.so
> 2b0cc3e7b000-2b0cc3e80000 rw-p 2b0cc3e7b000 00:00 0
> 2b0cc3e80000-2b0cc3f19000 r-xp 00000000 08:02 11288626
> /usr/lib/libgfortran.so.1.0.0
> 2b0cc3f19000-2b0cc4118000 ---p 00099000 08:02 11288626
> /usr/lib/libgfortran.so.1.0.0
> 2b0cc4118000-2b0cc411a000 rw-p 00098000 08:02 11288626
> /usr/lib/libgfortran.so.1.0.0
> 2b0cc411a000-2b0cc411b000 rw-p 2b0cc411a000 00:00 0
> 2b0cc411b000-2b0cc419c000 r-xp 00000000 08:02 14549060
> /lib/libm-2.5.so
> 2b0cc419c000-2b0cc439b000 ---p 00081000 08:02 14549060
> /lib/libm-2.5.so
> 2b0cc439b000-2b0cc439d000 rw-p 00080000 08:02 14549060
> /lib/libm-2.5.so
> 2b0cc439d000-2b0cc43aa000 r-xp 00000000 08:02 14549054
> /lib/libgcc_s.so.1
> 2b0cc43aa000-2b0cc45aa000 ---p 0000d000 08:02 14549054
> /lib/libgcc_s.so.1
> 2b0cc45aa000-2b0cc45ab000 rw-p 0000d000 08:02 14549054
> /lib/libgcc_s.so.1
> 2b0cc45ab000-2b0cc45e1000 r-xp 00000000 08:02 14549102
> /lib/libreadline.so.5.2
> 2b0cc45e1000-2b0cc47e1000 ---p 00036000 08:02 14549102
> /lib/libreadline.soAbandon (core dumped)
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From hpages at fhcrc.org  Tue May 15 08:59:28 2007
From: hpages at fhcrc.org (Herve Pages)
Date: Mon, 14 May 2007 23:59:28 -0700
Subject: [Rd] Unexpected alteration of data frame column names
Message-ID: <46495A50.6050701@fhcrc.org>

Hi,

I'm using data.frame(..., check.names=FALSE), because I want to create
a data frame with duplicated column names (in the real life you can get such
data frame as the result of an SQL query):

  > df <- data.frame(aa=1:5, aa=9:5, check.names=FALSE)
  > df
    aa aa
  1  1  9
  2  2  8
  3  3  7
  4  4  6
  5  5  5

Why is [.data.frame changing my column names?

  > df[1:3, ]
    aa aa.1
  1  1    9
  2  2    8
  3  3    7

How can this be avoided? Thanks!

H.


From friedrich.leisch at stat.uni-muenchen.de  Tue May 15 09:10:57 2007
From: friedrich.leisch at stat.uni-muenchen.de (Friedrich Leisch)
Date: Tue, 15 May 2007 09:10:57 +0200
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <464905A3.1010305@stats.uwo.ca>
References: <m21whj2e0c.fsf@ziti.local>
	<464905A3.1010305@stats.uwo.ca>
Message-ID: <17993.23809.814547.976000@celebrian.ci.tuwien.ac.at>

>>>>> On Mon, 14 May 2007 20:58:11 -0400,
>>>>> Duncan Murdoch (DM) wrote:

  > [ ... GUI stuff deleted .... ]

I'm of course very much in favor of adding vignettes automatically to
the GUI.

  > By the way, another way to expose vignettes is to have them 
  > automatically added to the package help topic, with links in formats 
  > that support them.  I think we should do that too, but I don't know if 
  > it'll happen soon.

Umm, but there is already information in the package help, e.g., if I
do

	help(package="flexmix")

then the end of the page I get is

**********************************************************
Further information is available in the following vignettes in
directory '/home/Leisch/lib/R/flexmix/doc':

flexmix-intro: FlexMix: A General Framework for Finite Mixture Models
        and Latent Class Regression in R} (source, pdf)
regression-examples: Applications of finite mixtures of regression
        models (source, pdf)
**********************************************************


They are also linked into the HTML page for the package I get after
help.start().

Obviously one can do more (and the GUI thing is a very good idea,
because Windows users will look there first), but it's not like there
is nothing at all ...

Best,
Fritz


From thomas.friedrichsmeier at ruhr-uni-bochum.de  Tue May 15 12:52:27 2007
From: thomas.friedrichsmeier at ruhr-uni-bochum.de (Thomas Friedrichsmeier)
Date: Tue, 15 May 2007 12:52:27 +0200
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <464905A3.1010305@stats.uwo.ca>
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
Message-ID: <200705151252.32084.thomas.friedrichsmeier@ruhr-uni-bochum.de>

On Tuesday 15 May 2007, Duncan Murdoch wrote:
> I'm interested in making vignettes more visible. ?Putting them on the 
> menu is not the only way, but since you're offering to do the work, I 
> think it's a good idea :-).

[...]

>   - Should they appear in a top level Vignettes menu, or as a submenu of
> the Help menu?
>
> I'd lean towards keeping the top level placement, since you've already
> got an audience who are used to that.

I'd vote to try to leave this up to the GUI as much as possible. For example, 
in RKWard, I'd probably not want to create a top level "Vignettes" menu, as 
there is already a considerable number of top level menus present. Also, I'd 
like to add it to the context menu of the respective package environment item 
in our object browser. Further, I would not want to launch a pdf-viewer as a 
separate application, but rather display this info in an MDI-managed window.

So it looks like there is a number of decisions involved, which probably can't 
be answered uniformly across all GUIs (and plaforms!).

What I'd suggest is to make it easy for GUIs to override the default behavior, 
if they want to. For instance, from addVigs2Menu(), you could call a function 
like
	registerVignette(packagename, title, filename)
the default implementation of this function might well be just as you suggest 
(and empty on linux/when there is no GUI), but this way it would be easy for 
GUIs to override the behavior. Also, all platform specific code would be 
contained inside registerVignette(), only.

Regards
Thomas Friedrichsmeier
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20070515/0a21d00f/attachment.bin 

From ml-it-r-devel at epigenomics.com  Tue May 15 13:51:40 2007
From: ml-it-r-devel at epigenomics.com (ml-it-r-devel at epigenomics.com)
Date: Tue, 15 May 2007 13:51:40 +0200
Subject: [Rd] getNamespaceExports("base") error
Message-ID: <f2c6sc$np8$1@perl.epigenomics.epi>


Hi!

 >getNamespaceExports("base")
Error in ls(NULL, all = TRUE) : using 'as.environment(NULL)' is defunct

getNamespaceExports
function (ns)
{
     ns <- asNamespace(ns)
     if (isBaseNamespace(ns))
         ls(NULL, all = TRUE)
     else ls(getNamespaceInfo(ns, "exports"), all = TRUE)
}
<environment: namespace:base>

One possible way to fix this could be to changed to e.g.

if (isBaseNamespace(ns))
   ls(envir=baseenv(), all = TRUE)

Observed with
R 2.5.0  &  R 2.6.0 devel (2007-05-12 r41546)
(one has to go back to R 2.3.1 to see it working)


Regards,

   Matthias


-- 
Matthias Burger                     Project Manager/ Biostatistician
Epigenomics AG    Kleine Praesidentenstr. 1    10178 Berlin, Germany
phone:+49-30-24345-371                          fax:+49-30-24345-555
http://www.epigenomics.com           matthias.burger at epigenomics.com
--
Epigenomics AG Berlin           Amtsgericht Charlottenburg HRB 75861
Vorstand:   Geert Nygaard (CEO/Vorsitzender),  Dr. Kurt Berlin (CSO)
               Oliver Schacht PhD (CFO),  Christian Piepenbrock (COO)
Aufsichtsrat:   Prof. Dr. Dr. hc. Rolf Krebs (Chairman/Vorsitzender)


From ripley at stats.ox.ac.uk  Tue May 15 14:09:44 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 15 May 2007 13:09:44 +0100 (BST)
Subject: [Rd] getNamespaceExports("base") error
In-Reply-To: <f2c6sc$np8$1@perl.epigenomics.epi>
References: <f2c6sc$np8$1@perl.epigenomics.epi>
Message-ID: <Pine.LNX.4.64.0705151305550.25495@auk.stats>

It would seem more logical to use .BaseNamespaceEnv.  Today it has the 
same contents as baseenv() (but a different enclosing env), but that may 
change.

I do wonder why you are using this: the R code clearly doesn't.  For base 
is not a normal namespace and is automatically imported into every other 
namespace (or similar words, as 'import' is used in a couple of senses in 
the documentation).

On Tue, 15 May 2007, ml-it-r-devel at epigenomics.com wrote:

>
> Hi!
>
> >getNamespaceExports("base")
> Error in ls(NULL, all = TRUE) : using 'as.environment(NULL)' is defunct
>
> getNamespaceExports
> function (ns)
> {
>     ns <- asNamespace(ns)
>     if (isBaseNamespace(ns))
>         ls(NULL, all = TRUE)
>     else ls(getNamespaceInfo(ns, "exports"), all = TRUE)
> }
> <environment: namespace:base>
>
> One possible way to fix this could be to changed to e.g.
>
> if (isBaseNamespace(ns))
>   ls(envir=baseenv(), all = TRUE)
>
> Observed with
> R 2.5.0  &  R 2.6.0 devel (2007-05-12 r41546)
> (one has to go back to R 2.3.1 to see it working)
>
>
> Regards,
>
>   Matthias
>
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From hin-tak.leung at cimr.cam.ac.uk  Tue May 15 14:36:31 2007
From: hin-tak.leung at cimr.cam.ac.uk (Hin-Tak Leung)
Date: Tue, 15 May 2007 13:36:31 +0100
Subject: [Rd]
 =?windows-1252?q?XML_parsing_under_R_/_Extracting_nodes=92_v?=
 =?windows-1252?q?alues?=
In-Reply-To: <3d5cc13f0705141140j9739a17n9d405b607506600d@mail.gmail.com>
References: <3d5cc13f0705141140j9739a17n9d405b607506600d@mail.gmail.com>
Message-ID: <4649A94F.7010809@cimr.cam.ac.uk>

- you should have posted to either R-help or (more appropriately) to
the omega-help list.

That said, you need something like this:

root.node <- xmlTreeParse(x, useInternalNodes = TRUE)
nbrelation.set <- getNodeSet(root.node, "//nbRelations")
nbrelation.list <- sapply(nbrelation.set, function(x) { xmlValue(x) } )

and nbrelation.list now contains the "2" in
nbRelations as text - you may want to do as.numeric() on it as well.

Abdelhakim z wrote:
> Hi,
> I have an XML file which contains among other nodes :
> 
> ===myXMLfile.xml===
> (?)
> <nbRelations>2</nbRelations>
> <nbActors>2</nbActors>
> (...)
> <nbRuns>5</nbRuns>
> <nbStep>2000</nbStep>
> (?)
> ===End file===
> I need to extract those values and to make them R variables such as:
> nbRelations = 2
> nbActors = 2
> 
> nbRuns = 5
> nbSteps = 2000
> 
> I read the help and have seen the examples of the xml package, it
> seems that I need to use xmlTreeParse() function but I don't know how
> exactly as I'm not an R advanced programmer, please can anyone show me
> how to do that explicitly ?
> 
> Any help would be much appreciated
> 
> Thanks,
> 
> Abdel
> University of Boumerd?s
> Algeria
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From marc_schwartz at comcast.net  Tue May 15 09:06:51 2007
From: marc_schwartz at comcast.net (marc_schwartz at comcast.net)
Date: Tue, 15 May 2007 09:06:51 +0200 (CEST)
Subject: [Rd] read.table() can't read in this table (But Splus can)
	(PR#9687)
Message-ID: <20070515070651.0A60C485BF@slim.kubism.ku.dk>

On Mon, 2007-05-14 at 23:41 +0200, vax9000 at gmail.com wrote:
> Full_Name: vax, 9000
> Version: 2.4.0, 2.2.1
> OS: 2.4.0: Mac OS X; 2.2.1: Linux
> Submission from: (NULL) (192.35.79.70)
> 
> 
> To reproduce this bug, first go to the website "http://llmpp.nih.gov/DLBCL/" and
> download the 14.8M data set "Web Figure 1 Data file". The direct link is
> "http://llmpp.nih.gov/DLBCL/NEJM_Web_Fig1data". Save it as "datafile.txt"
> 
> Then, start R, type in command "x <- read.table("datafile.txt", header=TRUE,
> sep="\t")". The data has 7400 lines, but not all lines could be read in by R.
> 
> Easier test data set:
> Use the command "head -n 100 datafile.txt > shortdatafile.txt" to extract the
> first 100 lines. The R command "x <- read.table("datafile.txt", header=TRUE,
> sep="\t")" could not read in even this 100 lines of data. 
> 
> But Splus can, with the same command. What is wrong?

Using R version 2.5.0 Patched:

> DF <- read.table("http://llmpp.nih.gov/DLBCL/NEJM_Web_Fig1data", header = TRUE, sep = "\t")
Warning message:
number of items read is not a multiple of the number of columns 


So I tried it with 'fill = TRUE' and that seems to work, which suggests
that perhaps something is going on with the data file structure:

DF <- read.table("http://llmpp.nih.gov/DLBCL/NEJM_Web_Fig1data", 
                 header = TRUE, sep = "\t", fill = TRUE)

> str(DF)
'data.frame':   4734 obs. of  295 variables:
 $ UNIQID                                     : int  27481 17013 24751 27498 27486 30984 17293 28329 27459 27482 ...
 $ NAME                                       : Factor w/ 4040 levels "||*AA037178|Hs.179661|FK506 binding protein 1A (12kD)",..: 3444 3445 3446 3444 3445 657 1788 3121 3119 3119 ...
 $ MLC94.46_LYM009_de.novo.untreated          : num  0.234 0.452 0.405 0.115 0.249 ...
 $ MLC96.45_LYM186_de.novo.untreated          : num  -0.1725 -0.0387 -0.0413 -0.0242 -0.1028 ...
 $ MLC91.27_LYM427_de.novo.untreated          : num  0.200 0.175 0.195 0.223 0.179 ...
 $ MLC96.84_LYM225_transformed                : num  -0.213 -0.325 -0.200 -0.199 -0.155 ...
 $ MLC95.43_LYM095_de.novo.untreated          : num  -0.1197  0.0038 -0.0213 -0.0705 -0.0755 ...
 $ MLC91.28_LYM428_de.novo.untreated          : num  -0.3729  0.0047 -0.2220 -0.3373 -0.2808 ...
 $ MLC94.50_LYM004_de.novo.untreated          : num  -0.195 -0.224 -0.126 -0.161 -0.199 ...
 $ MLC95.46_LYM098_de.novo.untreated          : num  0.489 0.611 0.577 0.661 0.519 ...
 $ MLC95.62_LYM114_de.novo.untreated          : num  0.390 0.657 0.747 0.723 0.731 ...
 $ MLC95.85_LYM137_de.novo.untreated          : num  -0.277 -0.564 -0.297 -0.140 -0.513 ...
..


I would update your version of R and then re-try this.

HTH,

Marc Schwartz


From andy_liaw at merck.com  Tue May 15 15:11:58 2007
From: andy_liaw at merck.com (Liaw, Andy)
Date: Tue, 15 May 2007 09:11:58 -0400
Subject: [Rd] read.table() can't read in this table (But Splus can)
In-Reply-To: <20070515070651.0A60C485BF@slim.kubism.ku.dk>
References: <20070515070651.0A60C485BF@slim.kubism.ku.dk>
Message-ID: <39B6DDB9048D0F4DAD42CB26AAFF0AFA04293A5A@usctmx1106.merck.com>

It's the quoting character(s).  This following seems to read the file in
correctly:

R> DF <- read.table("http://llmpp.nih.gov/DLBCL/NEJM_Web_Fig1data", 
+                   header = TRUE, sep = "\t", quote="")
R> str(DF)
'data.frame':   7399 obs. of  295 variables:
[...]

If I have to guess, it's the "3-prime" or "5-prime" that occurs commonly
in biology...

I don't think Mr. 9000 Vax can blame R for this.

Best,
Andy
 

From: marc_schwartz at comcast.net
> 
> On Mon, 2007-05-14 at 23:41 +0200, vax9000 at gmail.com wrote:
> > Full_Name: vax, 9000
> > Version: 2.4.0, 2.2.1
> > OS: 2.4.0: Mac OS X; 2.2.1: Linux
> > Submission from: (NULL) (192.35.79.70)
> > 
> > 
> > To reproduce this bug, first go to the website 
> "http://llmpp.nih.gov/DLBCL/" and
> > download the 14.8M data set "Web Figure 1 Data file". The 
> direct link is
> > "http://llmpp.nih.gov/DLBCL/NEJM_Web_Fig1data". Save it as 
> "datafile.txt"
> > 
> > Then, start R, type in command "x <- 
> read.table("datafile.txt", header=TRUE,
> > sep="\t")". The data has 7400 lines, but not all lines 
> could be read in by R.
> > 
> > Easier test data set:
> > Use the command "head -n 100 datafile.txt > 
> shortdatafile.txt" to extract the
> > first 100 lines. The R command "x <- 
> read.table("datafile.txt", header=TRUE,
> > sep="\t")" could not read in even this 100 lines of data. 
> > 
> > But Splus can, with the same command. What is wrong?
> 
> Using R version 2.5.0 Patched:
> 
> > DF <- 
> read.table("http://llmpp.nih.gov/DLBCL/NEJM_Web_Fig1data", 
> header = TRUE, sep = "\t")
> Warning message:
> number of items read is not a multiple of the number of columns 
> 
> 
> So I tried it with 'fill = TRUE' and that seems to work, 
> which suggests
> that perhaps something is going on with the data file structure:
> 
> DF <- read.table("http://llmpp.nih.gov/DLBCL/NEJM_Web_Fig1data", 
>                  header = TRUE, sep = "\t", fill = TRUE)
> 
> > str(DF)
> 'data.frame':   4734 obs. of  295 variables:
>  $ UNIQID                                     : int  27481 
> 17013 24751 27498 27486 30984 17293 28329 27459 27482 ...
>  $ NAME                                       : Factor w/ 
> 4040 levels "||*AA037178|Hs.179661|FK506 binding protein 1A 
> (12kD)",..: 3444 3445 3446 3444 3445 657 1788 3121 3119 3119 ...
>  $ MLC94.46_LYM009_de.novo.untreated          : num  0.234 
> 0.452 0.405 0.115 0.249 ...
>  $ MLC96.45_LYM186_de.novo.untreated          : num  -0.1725 
> -0.0387 -0.0413 -0.0242 -0.1028 ...
>  $ MLC91.27_LYM427_de.novo.untreated          : num  0.200 
> 0.175 0.195 0.223 0.179 ...
>  $ MLC96.84_LYM225_transformed                : num  -0.213 
> -0.325 -0.200 -0.199 -0.155 ...
>  $ MLC95.43_LYM095_de.novo.untreated          : num  -0.1197  
> 0.0038 -0.0213 -0.0705 -0.0755 ...
>  $ MLC91.28_LYM428_de.novo.untreated          : num  -0.3729  
> 0.0047 -0.2220 -0.3373 -0.2808 ...
>  $ MLC94.50_LYM004_de.novo.untreated          : num  -0.195 
> -0.224 -0.126 -0.161 -0.199 ...
>  $ MLC95.46_LYM098_de.novo.untreated          : num  0.489 
> 0.611 0.577 0.661 0.519 ...
>  $ MLC95.62_LYM114_de.novo.untreated          : num  0.390 
> 0.657 0.747 0.723 0.731 ...
>  $ MLC95.85_LYM137_de.novo.untreated          : num  -0.277 
> -0.564 -0.297 -0.140 -0.513 ...
> ..
> 
> 
> I would update your version of R and then re-try this.
> 
> HTH,
> 
> Marc Schwartz
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 
> 


------------------------------------------------------------------------------
Notice:  This e-mail message, together with any attachments,...{{dropped}}


From D.A.Cairns at leeds.ac.uk  Tue May 15 15:38:18 2007
From: D.A.Cairns at leeds.ac.uk (D.A.Cairns at leeds.ac.uk)
Date: Tue, 15 May 2007 15:38:18 +0200 (CEST)
Subject: [Rd] error in help file for bartlett.test() (PR#9688)
Message-ID: <20070515133818.504A347A1C@slim.kubism.ku.dk>

Hi,

=20

I'm not sure if this is appropriate as this is not really a bug but
rather an error in a help file, I could find no address to report
documentation errors to though.

=20

In the help file in R2.4.1 and R2.5.0 on Windows XP pro the reference in
bartlett.test() is incorrectly detailed as:

=20

Bartlett, M. S. (1937). Properties of sufficiency and statistical tests.
Proceedings of the Royal Statistical Society Series A 160, 268-282.

=20

when it should actually read

=20

Bartlett, M. S. (1937). Properties of sufficiency and statistical tests.
Proceedings of the Royal Society of London. Series A, Mathematical and
Physical Sciences, 160, 268-282.

=20

Best wishes,

=20

David

=20

=20

--

Dr David Cairns

Section of Oncology

Leeds Institute of Molecular Medicine

Wellcome Trust Brenner Building

St James's University Hospital

Leeds

LS9 7TF

=20

Telephone: (0113) 34 38507

=20


	[[alternative HTML version deleted]]


From duncan at wald.ucdavis.edu  Tue May 15 16:08:30 2007
From: duncan at wald.ucdavis.edu (Duncan Temple Lang)
Date: Tue, 15 May 2007 07:08:30 -0700
Subject: [Rd]
 =?utf-8?q?XML_parsing_under_R_/_Extracting_nodes=E2=80=99_va?=
 =?utf-8?q?lues?=
In-Reply-To: <4649A94F.7010809@cimr.cam.ac.uk>
References: <3d5cc13f0705141140j9739a17n9d405b607506600d@mail.gmail.com>
	<4649A94F.7010809@cimr.cam.ac.uk>
Message-ID: <4649BEDE.3080704@wald.ucdavis.edu>


You can use getNodeSet() as Hin-Tak suggests.
But you will need to do it for each of the target nodes.
So you can use sapply() to loop over these.

However, if these nodes are all children of the same XML node,
you can get the values as

  # This is the document content.
z = "<doc><nbRelations>2</nbRelations>
<nbActors>2</nbActors>
<nbRuns>5</nbRuns>
<nbStep>2000</nbStep></doc>"


 # parse the document
 d = xmlRoot(xmlTreeParse(z, isURL = FALSE))

 as.numeric(xmlSAppy(d, xmlValue))

and now you have a vector with named elements
corresponding to nbRelations, etc.

If these are children of a sub-node in the tree, then
you have to fetch that node first. Hopefully you can
get at that easily using subsetting of the document.
(Otherwise, you can do that with getNodeSet().
But getNodeSet() only works with internal documents
so you need useInternaNodes = TRUE in the call to xmlTreeParse().)

I suggest that you don't assign these to regular,
top-level variables but access the values from the vector.
But if you really need to assign them to individual variables,

xmlSAppy(d, function(node)
                assign(xmlName(node), xmlValue(node), globalenv()))

will do the trick.

Hin-Tak Leung wrote:
> - you should have posted to either R-help or (more appropriately) to
> the omega-help list.
> 
> That said, you need something like this:
> 
> root.node <- xmlTreeParse(x, useInternalNodes = TRUE)
> nbrelation.set <- getNodeSet(root.node, "//nbRelations")
> nbrelation.list <- sapply(nbrelation.set, function(x) { xmlValue(x) } )
> 
> and nbrelation.list now contains the "2" in
> nbRelations as text - you may want to do as.numeric() on it as well.
> 
> Abdelhakim z wrote:
>> Hi,
>> I have an XML file which contains among other nodes :
>>
>> ===myXMLfile.xml===
>> (?)
>> <nbRelations>2</nbRelations>
>> <nbActors>2</nbActors>
>> (...)
>> <nbRuns>5</nbRuns>
>> <nbStep>2000</nbStep>
>> (?)
>> ===End file===
>> I need to extract those values and to make them R variables such as:
>> nbRelations = 2
>> nbActors = 2
>>
>> nbRuns = 5
>> nbSteps = 2000
>>
>> I read the help and have seen the examples of the xml package, it
>> seems that I need to use xmlTreeParse() function but I don't know how
>> exactly as I'm not an R advanced programmer, please can anyone show me
>> how to do that explicitly ?
>>
>> Any help would be much appreciated
>>
>> Thanks,
>>
>> Abdel
>> University of Boumerd?s
>> Algeria
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ml-it-r-devel at epigenomics.com  Tue May 15 16:09:46 2007
From: ml-it-r-devel at epigenomics.com (ml-it-r-devel at epigenomics.com)
Date: Tue, 15 May 2007 16:09:46 +0200
Subject: [Rd] getNamespaceExports("base") error
In-Reply-To: <Pine.LNX.4.64.0705151305550.25495@auk.stats>
References: <f2c6sc$np8$1@perl.epigenomics.epi>
	<Pine.LNX.4.64.0705151305550.25495@auk.stats>
Message-ID: <f2cevb$6ku$1@perl.epigenomics.epi>

Prof Brian Ripley wrote:
> It would seem more logical to use x.  Today it has the 
> same contents as baseenv() (but a different enclosing env), but that may 
> change.
>
> I do wonder why you are using this: the R code clearly doesn't.  For 
> base is not a normal namespace and is automatically imported into every 
> other namespace (or similar words, as 'import' is used in a couple of 
> senses in the documentation).
I came across this programmatically applying getNamespaceExports to a 
vector of namespaces
where 'base' happend to be a member.

I will use  ls(.BaseNamespaceEnv, all=TRUE) instead .

Thank you!

   Matthias

> On Tue, 15 May 2007, ml-it-r-devel at epigenomics.com wrote:
> 
>>
>> Hi!
>>
>> >getNamespaceExports("base")
>> Error in ls(NULL, all = TRUE) : using 'as.environment(NULL)' is defunct
>>
>> getNamespaceExports
>> function (ns)
>> {
>>     ns <- asNamespace(ns)
>>     if (isBaseNamespace(ns))
>>         ls(NULL, all = TRUE)
>>     else ls(getNamespaceInfo(ns, "exports"), all = TRUE)
>> }
>> <environment: namespace:base>
>>
>> One possible way to fix this could be to changed to e.g.
>>
>> if (isBaseNamespace(ns))
>>   ls(envir=baseenv(), all = TRUE)
>>
>> Observed with
>> R 2.5.0  &  R 2.6.0 devel (2007-05-12 r41546)
>> (one has to go back to R 2.3.1 to see it working)
>>
>>
>> Regards,
>>
>>   Matthias
>>
>>
>>
> 


-- 
Matthias Burger                     Project Manager/ Biostatistician
Epigenomics AG    Kleine Praesidentenstr. 1    10178 Berlin, Germany
phone:+49-30-24345-371                          fax:+49-30-24345-555
http://www.epigenomics.com           matthias.burger at epigenomics.com
--
Epigenomics AG Berlin           Amtsgericht Charlottenburg HRB 75861
Vorstand:   Geert Nygaard (CEO/Vorsitzender),  Dr. Kurt Berlin (CSO)
               Oliver Schacht PhD (CFO),  Christian Piepenbrock (COO)
Aufsichtsrat:   Prof. Dr. Dr. hc. Rolf Krebs (Chairman/Vorsitzender)


From jonathan.swinton at astrazeneca.com  Tue May 15 17:12:13 2007
From: jonathan.swinton at astrazeneca.com (Jonathan Swinton)
Date: Tue, 15 May 2007 15:12:13 +0000 (UTC)
Subject: [Rd] Rgui open script file selection filter wish
Message-ID: <loom.20070515T170147-345@post.gmane.org>


When using the File/Open Script.. dialogue on Windows, the list of filters 
offered is

 R files (*.R)
 S files (*.q,*.ssc,*.S)
 All files (*.*)

I wish that an additional filter be offered as
 Sweave files (*.Rnw,*.Snw)

I find that the Rgui script editor is adequate for most of my R development
and tend to edit *.Rnw files there. 

               _                           
platform       i386-pc-mingw32             
arch           i386                        
os             mingw32                     
system         i386, mingw32               
status                                     
major          2                           
minor          5.0                         
year           2007                        
month          04                          
day            23                          
svn rev        41293                       
language       R                           
version.string R version 2.5.0 (2007-04-23)


From ripley at stats.ox.ac.uk  Tue May 15 17:42:09 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 15 May 2007 16:42:09 +0100 (BST)
Subject: [Rd] Rgui open script file selection filter wish
In-Reply-To: <loom.20070515T170147-345@post.gmane.org>
References: <loom.20070515T170147-345@post.gmane.org>
Message-ID: <Pine.LNX.4.64.0705151639440.27312@gannet.stats.ox.ac.uk>

This should be quite easy to change in src/gnuwin32/editor.c, but are you 
able to submit a tested patch?   Much easier for you to test than people 
who don't use the in-built editor much.

If so, R-windows is the appropriate list.

On Tue, 15 May 2007, Jonathan Swinton wrote:

>
> When using the File/Open Script.. dialogue on Windows, the list of filters
> offered is
>
> R files (*.R)
> S files (*.q,*.ssc,*.S)
> All files (*.*)
>
> I wish that an additional filter be offered as
> Sweave files (*.Rnw,*.Snw)
>
> I find that the Rgui script editor is adequate for most of my R development
> and tend to edit *.Rnw files there.
>
>               _
> platform       i386-pc-mingw32
> arch           i386
> os             mingw32
> system         i386, mingw32
> status
> major          2
> minor          5.0
> year           2007
> month          04
> day            23
> svn rev        41293
> language       R
> version.string R version 2.5.0 (2007-04-23)
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From bill at insightful.com  Tue May 15 18:09:42 2007
From: bill at insightful.com (Bill Dunlap)
Date: Tue, 15 May 2007 09:09:42 -0700 (PDT)
Subject: [Rd] optim bug (PR#9684)
In-Reply-To: <Pine.LNX.4.64.0705150748380.12894@auk.stats>
References: <20070514181124.4D9602A36F@slim.kubism.ku.dk>
	<Pine.LNX.4.64.0705150748380.12894@auk.stats>
Message-ID: <Pine.GSO.4.56.0705150857280.20562@durian.statsci.com>

On Tue, 15 May 2007, Prof Brian Ripley wrote:

> This is not a bug, but as documented on the help page:
>
>       ...: Further arguments to be passed to 'fn' and 'gr'. Beware of
>            partial matching to earlier arguments.
>
> You have partial matching to 'upper'.

We have this problem in optim(), integrate(),
and probably other functions.  These functions
have a lot of arguments before the ..., using
up a lot of partial matching space.  Would you consider
adding another argument to the tail end of
their argument lists that would include the
auxillary arguments?

E.g.,
   optim <- function(par, fn, gr = NULL,
           method = c("Nelder-Mead", "BFGS", "CG", "L-BFGS-B", "SANN"),
           lower = -Inf, upper = Inf,
           control = list(), hessian = FALSE,
           ..., aux.args = list(...))
If the user did not supply aux.args this would
act like the old version.  If the user did supply
aux.args then the function could check that no
unrecognized arguments were given to optim.

optim might require 2 such arguments,
    aux.args.fn = list(...),  aux.args.gr=aux.args.fn
(The forces you to know that the objective function
is called 'fn', not integrate's 'f' or apply's 'FUN'.)
I don't know what the best name for such an argument
would be.  If we added it, it would nice to make it
the same in R and Splus.

> On Mon, 14 May 2007, christina.merz at gmx.de wrote:
>
> 'optim' does not accept arguments called 'u'. Here is an example:
>
> > R> fun<-function(x,u) (x-u)^2
> > R> optim(7,fn=fun,u=9)
> >
> > Fehler in fn(par, ...) : Argument "u" fehlt (ohne Standardwert)
> > Zus?tzlich: Warning message:
> > bounds can only be used with method L-BFGS-B in: optim(7, fn = fun, u = 9)

----------------------------------------------------------------------------
Bill Dunlap
Insightful Corporation
bill at insightful dot com
360-428-8146

 "All statements in this message represent the opinions of the author and do
 not necessarily reflect Insightful Corporation policy or position."


From simon.urbanek at r-project.org  Tue May 15 18:36:53 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 15 May 2007 12:36:53 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <m21whj2e0c.fsf@ziti.local>
References: <m21whj2e0c.fsf@ziti.local>
Message-ID: <BA138978-60D0-4097-8AAC-A7E4CEC0C118@r-project.org>


On May 14, 2007, at 7:15 PM, Seth Falcon wrote:

> Hello,
>
> The vignette concept, which started in Bioconductor, seems to be  
> catching on.  They are supported by R CMD build/check and  
> documented in the Writing R Extensions manual.  I think vignettes  
> are a fantastic way to introduce new users to a package.  However,  
> getting new users to realize that a vignette is available can be  
> challenging.
>
> For some time now, we have had a function in Biobase that creates a  
> "Vignettes" menu item in the R Windows GUI and gives packages a  
> mechanism to register their vignettes so that they appear on this  
> menu.  I would like to see this functionality included in R so that  
> there can be a standard mechanism that doesn't depend on Biobase of  
> registering a package's vignettes with one of the R GUIs (currently  
> only Windows is supported, but I imagine the OS X GUI could also  
> implement this).
>

The Mac OS X GUI already has a Vignettes-browser - just click on  
"Help" -> "Vignettes"

I don't think using a menu list is a good idea as it substantially  
limits the UI. Also as the number of packages grows, you'll end up  
which dozens of entries in the menu which will render it useless.

Cheers,
Simon


From simon.urbanek at r-project.org  Tue May 15 18:42:28 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 15 May 2007 12:42:28 -0400
Subject: [Rd] R (PR#9686)
In-Reply-To: <20070515052359.A64D8485BF@slim.kubism.ku.dk>
References: <20070515052359.A64D8485BF@slim.kubism.ku.dk>
Message-ID: <C6C48369-FE26-4820-93B3-7C80ED17E9E4@r-project.org>

Please read the R for Mac FAQ (and in fact the posting guide as well!).
This is not a bug is R, you a have a broken 3rd-party plugin as the  
message tells you.

Cheers,m
Simon


On May 15, 2007, at 1:23 AM, conyike1 at jhmi.edu wrote:

> Full_Name: Chiadi Onyike
> Version: 2.5
> OS: Mac OS 10.4.9
> Submission from: (NULL) (71.248.49.27)
>
>
> Every time I launch the program, I get the following message:
>
> 2007-05-15 01:10:00.959 Installer[2410] *** -[NSBundle load]: Error  
> loading code
> /Users/chiadionyike/Library/InputManagers/SIMBL/SIMBL.bundle/ 
> Contents/MacOS/SIMBL
> for bundle /Users/chiadionyike/Library/InputManagers/SIMBL/ 
> SIMBL.bundle, error
> code 2 (link edit error code 0, error number 0 ())
>
>
>
> I would like to completely erase R and re-install it, but I cannot  
> find
> instructions anywhere on how to do this.  Can you tell me how to  
> fix this bug or
> how to uninstall the program and then reinstall it?
>

rm -rf /Users/chiadionyike/Library/InputManagers/SIMBL

will fix the problem - it has nothing to do with R.


From ripley at stats.ox.ac.uk  Tue May 15 19:57:17 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 15 May 2007 18:57:17 +0100 (BST)
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <m2fy5y27rx.fsf@ziti.local>
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
	<m2fy5y27rx.fsf@ziti.local>
Message-ID: <Pine.LNX.4.64.0705150745430.12894@auk.stats>

On Mon, 14 May 2007, Seth Falcon wrote:

> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>> I'm interested in making vignettes more visible.  Putting them on the
>> menu is not the only way, but since you're offering to do the work, I
>> think it's a good idea :-).
>
> Excellent :-)
>
>> A few questions:
>>
>>  - Should packages need to take any action to register their
>> vignettes, or should this happen automatically for anything that the
>> vignette() function would recognize as a vignette?

I do think this should be optional, and preferably an option that people 
have to opt in for.

Some sort of vignette browser that packages can register with would in my 
view be better, and that could have a single menu entry.  Menus can easily 
get swamped.

>> My recommendation would be for automatic installation.
>
> That seems ok to me.  Currently, we have a system that requires
> package authors to register their vignette in .onAttach (more on that
> below).  I can't really think of a case where a package provides
> vignettes and doesn't want them easily accessible to new users in a
> GUI environment.
>
>>  - Should it happen when the package is installed or when it is
>>    attached?
>>
>> This is harder.  vignette() detects installed vignettes, which is fine
>> if not many packages have them.  But I think the hope is that most
>> packages will eventually, and then I think you wouldn't want the menu
>> to list every package.  Maybe default to attached packages, but expose
>> the function below for people who want more?
>
> My feeling is that this is only appropriate for attached packages.  As
> you point out, adding an entry for every installed package could
> create a cluttered menu (and present implementation challenges to
> avoid slowness).  I also think that packages that get loaded via other
> packages name spaces should remain in stealth mode.
>
> There is another reason to only list vignettes for attached packages.
> One of the primary uses of a vignette is to allow the user to work
> through an example use case interactively.  This requires the package
> to be attached in almost all cases.
>
>>  - Should they appear in a top level Vignettes menu, or as a submenu
>> of the Help menu?
>>
>> I'd lean towards keeping the top level placement, since you've already
>> got an audience who are used to that.
>
> Sounds good.
>
>> By the way, another way to expose vignettes is to have them
>> automatically added to the package help topic, with links in formats
>> that support them.  I think we should do that too, but I don't know if
>> it'll happen soon.
>
> Also sounds good, but one thing at a time, I guess.
>
> If there is some agreement about vignettes being automatically added
> and that this only happens when a package is attached, then I can look
> into modifying the existing function to handle this.
>
> + seth
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Tue May 15 20:02:56 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 15 May 2007 19:02:56 +0100 (BST)
Subject: [Rd] optim bug (PR#9684)
In-Reply-To: <Pine.GSO.4.56.0705150857280.20562@durian.statsci.com>
References: <20070514181124.4D9602A36F@slim.kubism.ku.dk>
	<Pine.LNX.4.64.0705150748380.12894@auk.stats>
	<Pine.GSO.4.56.0705150857280.20562@durian.statsci.com>
Message-ID: <Pine.LNX.4.64.0705151821490.909@gannet.stats.ox.ac.uk>

There quite a lot of these: optimize, uniroot, nlm for example.

I don't think the problem is large enough to merit another argument.
It is tempting to move '...' up the argument list so that partial matching 
will not occur.  I am not sure how far you can go: ?optim has positional 
matching for 'method', and ?optimize has abbreviations for lower and 
upper.

In R you rarely need to pass additional arguments in programming as 
lexical scoping can be used to capture them.

I'll do some experimenting.


On Tue, 15 May 2007, Bill Dunlap wrote:

> On Tue, 15 May 2007, Prof Brian Ripley wrote:
>
>> This is not a bug, but as documented on the help page:
>>
>>       ...: Further arguments to be passed to 'fn' and 'gr'. Beware of
>>            partial matching to earlier arguments.
>>
>> You have partial matching to 'upper'.
>
> We have this problem in optim(), integrate(),
> and probably other functions.  These functions
> have a lot of arguments before the ..., using
> up a lot of partial matching space.  Would you consider
> adding another argument to the tail end of
> their argument lists that would include the
> auxillary arguments?
>
> E.g.,
>   optim <- function(par, fn, gr = NULL,
>           method = c("Nelder-Mead", "BFGS", "CG", "L-BFGS-B", "SANN"),
>           lower = -Inf, upper = Inf,
>           control = list(), hessian = FALSE,
>           ..., aux.args = list(...))
> If the user did not supply aux.args this would
> act like the old version.  If the user did supply
> aux.args then the function could check that no
> unrecognized arguments were given to optim.
>
> optim might require 2 such arguments,
>    aux.args.fn = list(...),  aux.args.gr=aux.args.fn
> (The forces you to know that the objective function
> is called 'fn', not integrate's 'f' or apply's 'FUN'.)
> I don't know what the best name for such an argument
> would be.  If we added it, it would nice to make it
> the same in R and Splus.
>
>> On Mon, 14 May 2007, christina.merz at gmx.de wrote:
>>
>> 'optim' does not accept arguments called 'u'. Here is an example:
>>
>>> R> fun<-function(x,u) (x-u)^2
>>> R> optim(7,fn=fun,u=9)
>>>
>>> Fehler in fn(par, ...) : Argument "u" fehlt (ohne Standardwert)
>>> Zus?tzlich: Warning message:
>>> bounds can only be used with method L-BFGS-B in: optim(7, fn = fun, u = 9)
>
> ----------------------------------------------------------------------------
> Bill Dunlap
> Insightful Corporation
> bill at insightful dot com
> 360-428-8146
>
> "All statements in this message represent the opinions of the author and do
> not necessarily reflect Insightful Corporation policy or position."
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

From simon.urbanek at r-project.org  Tue May 15 20:12:25 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 15 May 2007 14:12:25 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <Pine.LNX.4.64.0705150745430.12894@auk.stats>
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
	<m2fy5y27rx.fsf@ziti.local>
	<Pine.LNX.4.64.0705150745430.12894@auk.stats>
Message-ID: <D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>


On May 15, 2007, at 1:57 PM, Prof Brian Ripley wrote:

> On Mon, 14 May 2007, Seth Falcon wrote:
>
>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>> I'm interested in making vignettes more visible.  Putting them on  
>>> the
>>> menu is not the only way, but since you're offering to do the  
>>> work, I
>>> think it's a good idea :-).
>>
>> Excellent :-)
>>
>>> A few questions:
>>>
>>>  - Should packages need to take any action to register their
>>> vignettes, or should this happen automatically for anything that the
>>> vignette() function would recognize as a vignette?
>
> I do think this should be optional, and preferably an option that  
> people have to opt in for.
>
> Some sort of vignette browser that packages can register with would  
> in my view be better, and that could have a single menu entry.   
> Menus can easily get swamped.
>

I agree entirely.

What puzzles me: why do we need yet another way to register  
vignettes? What is wrong with vignette()?

Cheers,
Simon


>>> My recommendation would be for automatic installation.
>>
>> That seems ok to me.  Currently, we have a system that requires
>> package authors to register their vignette in .onAttach (more on that
>> below).  I can't really think of a case where a package provides
>> vignettes and doesn't want them easily accessible to new users in a
>> GUI environment.
>>
>>>  - Should it happen when the package is installed or when it is
>>>    attached?
>>>
>>> This is harder.  vignette() detects installed vignettes, which is  
>>> fine
>>> if not many packages have them.  But I think the hope is that most
>>> packages will eventually, and then I think you wouldn't want the  
>>> menu
>>> to list every package.  Maybe default to attached packages, but  
>>> expose
>>> the function below for people who want more?
>>
>> My feeling is that this is only appropriate for attached  
>> packages.  As
>> you point out, adding an entry for every installed package could
>> create a cluttered menu (and present implementation challenges to
>> avoid slowness).  I also think that packages that get loaded via  
>> other
>> packages name spaces should remain in stealth mode.
>>
>> There is another reason to only list vignettes for attached packages.
>> One of the primary uses of a vignette is to allow the user to work
>> through an example use case interactively.  This requires the package
>> to be attached in almost all cases.
>>
>>>  - Should they appear in a top level Vignettes menu, or as a submenu
>>> of the Help menu?
>>>
>>> I'd lean towards keeping the top level placement, since you've  
>>> already
>>> got an audience who are used to that.
>>
>> Sounds good.
>>
>>> By the way, another way to expose vignettes is to have them
>>> automatically added to the package help topic, with links in formats
>>> that support them.  I think we should do that too, but I don't  
>>> know if
>>> it'll happen soon.
>>
>> Also sounds good, but one thing at a time, I guess.
>>
>> If there is some agreement about vignettes being automatically added
>> and that this only happens when a package is attached, then I can  
>> look
>> into modifying the existing function to handle this.
>>
>> + seth
>>
>>
>
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>


From clausen at econ.upenn.edu  Tue May 15 20:13:25 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Tue, 15 May 2007 14:13:25 -0400
Subject: [Rd] optim bug (PR#9684)
In-Reply-To: <Pine.LNX.4.64.0705151821490.909@gannet.stats.ox.ac.uk>
References: <20070514181124.4D9602A36F@slim.kubism.ku.dk>
	<Pine.LNX.4.64.0705150748380.12894@auk.stats>
	<Pine.GSO.4.56.0705150857280.20562@durian.statsci.com>
	<Pine.LNX.4.64.0705151821490.909@gannet.stats.ox.ac.uk>
Message-ID: <20070515181325.GD21178@econ.upenn.edu>

On Tue, May 15, 2007 at 07:02:56PM +0100, Prof Brian Ripley wrote:
> In R you rarely need to pass additional arguments in programming as 
> lexical scoping can be used to capture them.

You can also use currying, like this:

	ll <- function(data) function(params)
	{
		# compute whatever you want with data and params.
	}

Then you can call optim like this:

	optim(initial.param, ll(some.data))

Cheers,
Andrew


From marc_schwartz at comcast.net  Tue May 15 20:25:39 2007
From: marc_schwartz at comcast.net (Marc Schwartz)
Date: Tue, 15 May 2007 13:25:39 -0500
Subject: [Rd] Unexpected alteration of data frame column names
In-Reply-To: <46495A50.6050701@fhcrc.org>
References: <46495A50.6050701@fhcrc.org>
Message-ID: <1179253539.5183.39.camel@localhost.localdomain>

On Mon, 2007-05-14 at 23:59 -0700, Herve Pages wrote:
> Hi,
> 
> I'm using data.frame(..., check.names=FALSE), because I want to create
> a data frame with duplicated column names (in the real life you can get such
> data frame as the result of an SQL query):
> 
>   > df <- data.frame(aa=1:5, aa=9:5, check.names=FALSE)
>   > df
>     aa aa
>   1  1  9
>   2  2  8
>   3  3  7
>   4  4  6
>   5  5  5
> 
> Why is [.data.frame changing my column names?
> 
>   > df[1:3, ]
>     aa aa.1
>   1  1    9
>   2  2    8
>   3  3    7
> 
> How can this be avoided? Thanks!
> 
> H.

Herve,

I had not seen a reply to your post, but you can review the code for
"[.data.frame" by using:

  getAnywhere("[.data.frame")

and see where there are checks for duplicate column names in the
function.

That is going to be the default behavior for data frame
subsetting/extraction and in fact is noted in the 'ONEWS' file for R
version 1.8.0:

 - Subsetting a data frame can no longer produce duplicate
   column names.

So it has been around for some time (October of 2003).

In terms of avoiding it, I suspect that you would have to create your
own version of the function, perhaps with an additional argument that
enables/disables that duplicate column name checks.

I have not however considered the broader functional implications of
doing so however, so be vewwy vewwy careful here.

HTH,

Marc Schwartz


From sfalcon at fhcrc.org  Wed May 16 00:59:37 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 15 May 2007 15:59:37 -0700
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org> (Simon
	Urbanek's message of "Tue, 15 May 2007 14:12:25 -0400")
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
	<m2fy5y27rx.fsf@ziti.local>
	<Pine.LNX.4.64.0705150745430.12894@auk.stats>
	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>
Message-ID: <m2wsz9ofqe.fsf@ziti.fhcrc.org>

Simon Urbanek <simon.urbanek at r-project.org> writes:

> On May 15, 2007, at 1:57 PM, Prof Brian Ripley wrote:
>
>> On Mon, 14 May 2007, Seth Falcon wrote:
>>
>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>> I'm interested in making vignettes more visible.  Putting them on
>>>> the
>>>> menu is not the only way, but since you're offering to do the
>>>> work, I
>>>> think it's a good idea :-).
>>>
>>> Excellent :-)
>>>
>>>> A few questions:
>>>>
>>>>  - Should packages need to take any action to register their
>>>> vignettes, or should this happen automatically for anything that the
>>>> vignette() function would recognize as a vignette?
>>
>> I do think this should be optional, and preferably an option that
>> people have to opt in for.

Just to make sure we are on the same page: you are advocating for an
option that would be used by package developers to opt-in for their
vignette to be registered.

>> Some sort of vignette browser that packages can register with would
>> in my view be better, and that could have a single menu entry.
>> Menus can easily get swamped.
>>
>
> I agree entirely.
>
> What puzzles me: why do we need yet another way to register
> vignettes? What is wrong with vignette()?

Vignettes are a great form of documentation for new users.  These
users are more likely to be most comfortable in the GUI environment
and providing access to the vignettes via the GUI(s) seems like it
adds a lot of value.

I don't disagree with the assessment that a menu list isn't the worlds
best vignette browser interface.  But this approach has been
reasonably successful for the Bioconductor project to make things
easier for our Windows users.  Perhaps most importantly, we have code
that would require little modification to allow package authors to
register vignettes in a Vignettes menu on Windows.  I think this would
be an improvement over what is available now.

It would be great if this discussion generates interest in a more
robust solution; my offer of help may be limited to polishing what
we've been using in BioC.

Cheers,

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From ggrothendieck at gmail.com  Wed May 16 07:10:07 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 16 May 2007 01:10:07 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <m2wsz9ofqe.fsf@ziti.fhcrc.org>
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
	<m2fy5y27rx.fsf@ziti.local>
	<Pine.LNX.4.64.0705150745430.12894@auk.stats>
	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>
	<m2wsz9ofqe.fsf@ziti.fhcrc.org>
Message-ID: <971536df0705152210y641bc7f1qedeaf4a587f0be14@mail.gmail.com>

Just a few other points:

- vignettes are potentially of interest even before you download the package
in order to decide whether the package is of interest.  The discussion so far
here does not address that.  If I am interested in mypackage I will typically
google for
  CRAN mypackage
and then look at the vignette from that page prior to downloading the
package.  Alternately I might click the package name in the contributed
package list on the R Web site.

- probably in most cases one identifies a package first and only then
requests its vignette.  I guess one could try to locate packages based
on whether or not they have vignettes but I think that that would be
less likely.

- one can currently get to vignettes via the Windows menu and subsequent
HTML via:
1. From the R Help menu choose the "Html help" entry on it
    [ or issue the R command: help.start() ]
2. click on Packages
3. click on the package of interest
4. click on "overview"
5. click on the vignette.

This sequence is a bit long.  Perhaps there just needs to be a menu entry
that goes directly to the package list from the menu. Also the word
"overview" is not very descriptive of what a vignette is and in any case
another step could be eliminated if the vignettes were listed right on the
HTML help page near the top.  These two items would reduce the number
of steps from 5 to 3.

- perhaps help(package = mypackage), which currently lists the DESCRIPTION,
help files and vignettes should allow each of these to be clickable rather than
just read only.

On 5/15/07, Seth Falcon <sfalcon at fhcrc.org> wrote:
> Simon Urbanek <simon.urbanek at r-project.org> writes:
>
> > On May 15, 2007, at 1:57 PM, Prof Brian Ripley wrote:
> >
> >> On Mon, 14 May 2007, Seth Falcon wrote:
> >>
> >>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
> >>>> I'm interested in making vignettes more visible.  Putting them on
> >>>> the
> >>>> menu is not the only way, but since you're offering to do the
> >>>> work, I
> >>>> think it's a good idea :-).
> >>>
> >>> Excellent :-)
> >>>
> >>>> A few questions:
> >>>>
> >>>>  - Should packages need to take any action to register their
> >>>> vignettes, or should this happen automatically for anything that the
> >>>> vignette() function would recognize as a vignette?
> >>
> >> I do think this should be optional, and preferably an option that
> >> people have to opt in for.
>
> Just to make sure we are on the same page: you are advocating for an
> option that would be used by package developers to opt-in for their
> vignette to be registered.
>
> >> Some sort of vignette browser that packages can register with would
> >> in my view be better, and that could have a single menu entry.
> >> Menus can easily get swamped.
> >>
> >
> > I agree entirely.
> >
> > What puzzles me: why do we need yet another way to register
> > vignettes? What is wrong with vignette()?
>
> Vignettes are a great form of documentation for new users.  These
> users are more likely to be most comfortable in the GUI environment
> and providing access to the vignettes via the GUI(s) seems like it
> adds a lot of value.
>
> I don't disagree with the assessment that a menu list isn't the worlds
> best vignette browser interface.  But this approach has been
> reasonably successful for the Bioconductor project to make things
> easier for our Windows users.  Perhaps most importantly, we have code
> that would require little modification to allow package authors to
> register vignettes in a Vignettes menu on Windows.  I think this would
> be an improvement over what is available now.
>
> It would be great if this discussion generates interest in a more
> robust solution; my offer of help may be limited to polishing what
> we've been using in BioC.
>
> Cheers,
>
> + seth
>
> --
> Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
> http://bioconductor.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From murdoch at stats.uwo.ca  Wed May 16 13:38:05 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 16 May 2007 07:38:05 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <m2wsz9ofqe.fsf@ziti.fhcrc.org>
References: <m21whj2e0c.fsf@ziti.local>
	<464905A3.1010305@stats.uwo.ca>	<m2fy5y27rx.fsf@ziti.local>	<Pine.LNX.4.64.0705150745430.12894@auk.stats>	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>
	<m2wsz9ofqe.fsf@ziti.fhcrc.org>
Message-ID: <464AED1D.2070705@stats.uwo.ca>

On 15/05/2007 6:59 PM, Seth Falcon wrote:
> Simon Urbanek <simon.urbanek at r-project.org> writes:
> 
>> On May 15, 2007, at 1:57 PM, Prof Brian Ripley wrote:
>>
>>> On Mon, 14 May 2007, Seth Falcon wrote:
>>>
>>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>> I'm interested in making vignettes more visible.  Putting them on
>>>>> the
>>>>> menu is not the only way, but since you're offering to do the
>>>>> work, I
>>>>> think it's a good idea :-).
>>>> Excellent :-)
>>>>
>>>>> A few questions:
>>>>>
>>>>>  - Should packages need to take any action to register their
>>>>> vignettes, or should this happen automatically for anything that the
>>>>> vignette() function would recognize as a vignette?
>>> I do think this should be optional, and preferably an option that
>>> people have to opt in for.
> 
> Just to make sure we are on the same page: you are advocating for an
> option that would be used by package developers to opt-in for their
> vignette to be registered.
> 
>>> Some sort of vignette browser that packages can register with would
>>> in my view be better, and that could have a single menu entry.
>>> Menus can easily get swamped.
>>>
>> I agree entirely.
>>
>> What puzzles me: why do we need yet another way to register
>> vignettes? What is wrong with vignette()?
> 
> Vignettes are a great form of documentation for new users.  These
> users are more likely to be most comfortable in the GUI environment
> and providing access to the vignettes via the GUI(s) seems like it
> adds a lot of value.
> 
> I don't disagree with the assessment that a menu list isn't the worlds
> best vignette browser interface.  But this approach has been
> reasonably successful for the Bioconductor project to make things
> easier for our Windows users.  Perhaps most importantly, we have code
> that would require little modification to allow package authors to
> register vignettes in a Vignettes menu on Windows.  I think this would
> be an improvement over what is available now.
> 
> It would be great if this discussion generates interest in a more
> robust solution; my offer of help may be limited to polishing what
> we've been using in BioC.

I think it's clear that the different GUIs should expose the information 
in different ways.  The OSX Gui shows the list of all vignettes in a 
very nice multi-column display, including descriptions, but as far as I 
can see it will always show all vignettes, not just those in attached 
packages, and it doesn't allow the user to drill down through the 
package list to the list of vignettes in just one package (other than by 
scrolling through the whole list of vignettes, which are sorted 
alphabetically by vignette name within package name).  If a user has all 
of CRAN installed, your design would be easier to use, but I wouldn't 
suggest that OSX should adopt it:  they should just steal the good parts 
of it.

I'd like to have a multi-column selection list in the Windows GUI, but I 
don't think we should wait for me or someone else to program that before 
including this improvement.  It will be easy to change the look of the 
list later if we want to do that.

Duncan Murdoch


From ripley at stats.ox.ac.uk  Wed May 16 15:32:53 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 16 May 2007 14:32:53 +0100 (BST)
Subject: [Rd] optim non-bug
In-Reply-To: <Pine.LNX.4.64.0705151821490.909@gannet.stats.ox.ac.uk>
References: <20070514181124.4D9602A36F@slim.kubism.ku.dk>
	<Pine.LNX.4.64.0705150748380.12894@auk.stats>
	<Pine.GSO.4.56.0705150857280.20562@durian.statsci.com>
	<Pine.LNX.4.64.0705151821490.909@gannet.stats.ox.ac.uk>
Message-ID: <Pine.LNX.4.64.0705161126430.13764@gannet.stats.ox.ac.uk>

On Tue, 15 May 2007, Prof Brian Ripley wrote:

> There quite a lot of these: optimize, uniroot, nlm for example.
>
> I don't think the problem is large enough to merit another argument.
> It is tempting to move '...' up the argument list so that partial matching 
> will not occur.  I am not sure how far you can go: ?optim has positional 
> matching for 'method', and ?optimize has abbreviations for lower and upper.
>
> In R you rarely need to pass additional arguments in programming as lexical 
> scoping can be used to capture them.
>
> I'll do some experimenting.

Overnight runs show that if we do this maximally, only a very few packages 
are affected

optim: SoPhy has 'meth', copula has 'hess', MeasurementError.cor (BioC)
   has unnamed 'method'
uniroot: distrDoc has 'low', 'up' in a vignette
optimize: qtlDesign, sde, waveslim have 'max'
nlm: none
integrate: none

Doubtless there are scripts that will be affected (but with an error and a 
clearcut error message), but unless I hear cogent reasons otherwise
it seems that the balance is well in favour of making the change.

(I have more than once been tempted to knock up a version of R that does 
not allow partial matching of arguments to see what breaks, but a few are 
entrenched like 'length.out' and 'along.with' in seq.default and 'all' in 
ls.  Seems someone is fond of 'env' in get/exists/assign.)


>
>
> On Tue, 15 May 2007, Bill Dunlap wrote:
>
>> On Tue, 15 May 2007, Prof Brian Ripley wrote:
>> 
>>> This is not a bug, but as documented on the help page:
>>>
>>>       ...: Further arguments to be passed to 'fn' and 'gr'. Beware of
>>>            partial matching to earlier arguments.
>>> 
>>> You have partial matching to 'upper'.
>> 
>> We have this problem in optim(), integrate(),
>> and probably other functions.  These functions
>> have a lot of arguments before the ..., using
>> up a lot of partial matching space.  Would you consider
>> adding another argument to the tail end of
>> their argument lists that would include the
>> auxillary arguments?
>> 
>> E.g.,
>>   optim <- function(par, fn, gr = NULL,
>>           method = c("Nelder-Mead", "BFGS", "CG", "L-BFGS-B", "SANN"),
>>           lower = -Inf, upper = Inf,
>>           control = list(), hessian = FALSE,
>>           ..., aux.args = list(...))
>> If the user did not supply aux.args this would
>> act like the old version.  If the user did supply
>> aux.args then the function could check that no
>> unrecognized arguments were given to optim.
>> 
>> optim might require 2 such arguments,
>>    aux.args.fn = list(...),  aux.args.gr=aux.args.fn
>> (The forces you to know that the objective function
>> is called 'fn', not integrate's 'f' or apply's 'FUN'.)
>> I don't know what the best name for such an argument
>> would be.  If we added it, it would nice to make it
>> the same in R and Splus.
>> 
>>> On Mon, 14 May 2007, christina.merz at gmx.de wrote:
>>> 
>>> 'optim' does not accept arguments called 'u'. Here is an example:
>>> 
>>>> R> fun<-function(x,u) (x-u)^2
>>>> R> optim(7,fn=fun,u=9)
>>>> 
>>>> Fehler in fn(par, ...) : Argument "u" fehlt (ohne Standardwert)
>>>> Zus?tzlich: Warning message:
>>>> bounds can only be used with method L-BFGS-B in: optim(7, fn = fun, u = 
>>>> 9)
>>
>> 
>> ----------------------------------------------------------------------------
>> Bill Dunlap
>> Insightful Corporation
>> bill at insightful dot com
>> 360-428-8146
>> 
>> "All statements in this message represent the opinions of the author and do
>> not necessarily reflect Insightful Corporation policy or position."
>> 
>> 
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

From simon.urbanek at r-project.org  Wed May 16 16:32:23 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 16 May 2007 10:32:23 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <m2wsz9ofqe.fsf@ziti.fhcrc.org>
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
	<m2fy5y27rx.fsf@ziti.local>
	<Pine.LNX.4.64.0705150745430.12894@auk.stats>
	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>
	<m2wsz9ofqe.fsf@ziti.fhcrc.org>
Message-ID: <5C178B61-E438-4A98-9987-DB904AC3CE75@r-project.org>

Seth,

we already *have* vignette registration in place [vignette()] and we  
already *have* support in the GUIs (I'm talking e.g. about the Mac  
GUI here which uses vignette() to build a vignettes browser).

What you propose circumvents all the mechanisms already in place and  
adds replicates the same functionality. I'll repeat my question: what  
is wrong with the current approach? Why do you want to add a parallel  
approach?

Cheers,
Simon

On May 15, 2007, at 6:59 PM, Seth Falcon wrote:

> Simon Urbanek <simon.urbanek at r-project.org> writes:
>
>> On May 15, 2007, at 1:57 PM, Prof Brian Ripley wrote:
>>
>>> On Mon, 14 May 2007, Seth Falcon wrote:
>>>
>>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>> I'm interested in making vignettes more visible.  Putting them on
>>>>> the
>>>>> menu is not the only way, but since you're offering to do the
>>>>> work, I
>>>>> think it's a good idea :-).
>>>>
>>>> Excellent :-)
>>>>
>>>>> A few questions:
>>>>>
>>>>>  - Should packages need to take any action to register their
>>>>> vignettes, or should this happen automatically for anything  
>>>>> that the
>>>>> vignette() function would recognize as a vignette?
>>>
>>> I do think this should be optional, and preferably an option that
>>> people have to opt in for.
>
> Just to make sure we are on the same page: you are advocating for an
> option that would be used by package developers to opt-in for their
> vignette to be registered.
>
>>> Some sort of vignette browser that packages can register with would
>>> in my view be better, and that could have a single menu entry.
>>> Menus can easily get swamped.
>>>
>>
>> I agree entirely.
>>
>> What puzzles me: why do we need yet another way to register
>> vignettes? What is wrong with vignette()?
>
> Vignettes are a great form of documentation for new users.  These
> users are more likely to be most comfortable in the GUI environment
> and providing access to the vignettes via the GUI(s) seems like it
> adds a lot of value.
>
> I don't disagree with the assessment that a menu list isn't the worlds
> best vignette browser interface.  But this approach has been
> reasonably successful for the Bioconductor project to make things
> easier for our Windows users.  Perhaps most importantly, we have code
> that would require little modification to allow package authors to
> register vignettes in a Vignettes menu on Windows.  I think this would
> be an improvement over what is available now.
>
> It would be great if this discussion generates interest in a more
> robust solution; my offer of help may be limited to polishing what
> we've been using in BioC.
>
> Cheers,
>
> + seth
>
> -- 
> Seth Falcon | Computational Biology | Fred Hutchinson Cancer  
> Research Center
> http://bioconductor.org
>
>


From simon.urbanek at r-project.org  Wed May 16 16:37:36 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 16 May 2007 10:37:36 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <464AED1D.2070705@stats.uwo.ca>
References: <m21whj2e0c.fsf@ziti.local>
	<464905A3.1010305@stats.uwo.ca>	<m2fy5y27rx.fsf@ziti.local>	<Pine.LNX.4.64.0705150745430.12894@auk.stats>	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>
	<m2wsz9ofqe.fsf@ziti.fhcrc.org> <464AED1D.2070705@stats.uwo.ca>
Message-ID: <CA0AD2FC-DEA1-41CB-8DED-E4DDAFDBB02C@r-project.org>


On May 16, 2007, at 7:38 AM, Duncan Murdoch wrote:

> On 15/05/2007 6:59 PM, Seth Falcon wrote:
>> Simon Urbanek <simon.urbanek at r-project.org> writes:
>>> On May 15, 2007, at 1:57 PM, Prof Brian Ripley wrote:
>>>
>>>> On Mon, 14 May 2007, Seth Falcon wrote:
>>>>
>>>>> Duncan Murdoch <murdoch at stats.uwo.ca> writes:
>>>>>> I'm interested in making vignettes more visible.  Putting them on
>>>>>> the
>>>>>> menu is not the only way, but since you're offering to do the
>>>>>> work, I
>>>>>> think it's a good idea :-).
>>>>> Excellent :-)
>>>>>
>>>>>> A few questions:
>>>>>>
>>>>>>  - Should packages need to take any action to register their
>>>>>> vignettes, or should this happen automatically for anything  
>>>>>> that the
>>>>>> vignette() function would recognize as a vignette?
>>>> I do think this should be optional, and preferably an option that
>>>> people have to opt in for.
>> Just to make sure we are on the same page: you are advocating for an
>> option that would be used by package developers to opt-in for their
>> vignette to be registered.
>>>> Some sort of vignette browser that packages can register with would
>>>> in my view be better, and that could have a single menu entry.
>>>> Menus can easily get swamped.
>>>>
>>> I agree entirely.
>>>
>>> What puzzles me: why do we need yet another way to register
>>> vignettes? What is wrong with vignette()?
>> Vignettes are a great form of documentation for new users.  These
>> users are more likely to be most comfortable in the GUI environment
>> and providing access to the vignettes via the GUI(s) seems like it
>> adds a lot of value.
>> I don't disagree with the assessment that a menu list isn't the  
>> worlds
>> best vignette browser interface.  But this approach has been
>> reasonably successful for the Bioconductor project to make things
>> easier for our Windows users.  Perhaps most importantly, we have code
>> that would require little modification to allow package authors to
>> register vignettes in a Vignettes menu on Windows.  I think this  
>> would
>> be an improvement over what is available now.
>> It would be great if this discussion generates interest in a more
>> robust solution; my offer of help may be limited to polishing what
>> we've been using in BioC.
>
> I think it's clear that the different GUIs should expose the  
> information in different ways.  The OSX Gui shows the list of all  
> vignettes in a very nice multi-column display, including  
> descriptions, but as far as I can see it will always show all  
> vignettes, not just those in attached packages

That is a good idea and a trivial change - I'll add it.


> , and it doesn't allow the user to drill down through the package  
> list to the list of vignettes in just one package

.. just start typing the name of the package in the search field ..

Alternative approach would be some hierarchical view, but I'm not  
very fond of it, especially because it doesn't interact well with  
dynamic searches.


> (other than by scrolling through the whole list of vignettes, which  
> are sorted alphabetically by vignette name within package name).   
> If a user has all of CRAN installed, your design would be easier to  
> use, but I wouldn't suggest that OSX should adopt it:  they should  
> just steal the good parts of it.
>
> I'd like to have a multi-column selection list in the Windows GUI,  
> but I don't think we should wait for me or someone else to program  
> that before including this improvement.  It will be easy to change  
> the look of the list later if we want to do that.
>

Indeed, and I guess you see why I don't like Seth's proposed approach  
- it is forcing a particular limited UI instead of conceptually  
providing information necessary to build a good UI.

Cheers,
Simon


From sfalcon at fhcrc.org  Wed May 16 17:36:12 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 16 May 2007 08:36:12 -0700
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <5C178B61-E438-4A98-9987-DB904AC3CE75@r-project.org> (Simon
	Urbanek's message of "Wed, 16 May 2007 10:32:23 -0400")
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
	<m2fy5y27rx.fsf@ziti.local>
	<Pine.LNX.4.64.0705150745430.12894@auk.stats>
	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>
	<m2wsz9ofqe.fsf@ziti.fhcrc.org>
	<5C178B61-E438-4A98-9987-DB904AC3CE75@r-project.org>
Message-ID: <m2lkfon5lf.fsf@ziti.fhcrc.org>

Simon Urbanek <simon.urbanek at r-project.org> writes:

> Seth,
>
> we already *have* vignette registration in place [vignette()] and we
> already *have* support in the GUIs (I'm talking e.g. about the Mac
> GUI here which uses vignette() to build a vignettes browser).

Yes, fine.  I agree that vignette() provides most of
what is needed in terms of the implementationn details and could
replace most of the code that I posted, but it doesn't
mean there is nothing to do.

> What you propose circumvents all the mechanisms already in place and
> adds replicates the same functionality. I'll repeat my question: what
> is wrong with the current approach? Why do you want to add a parallel
> approach?

What is wrong with the current approach is that, at least on Windows,
vignettes are not as easily accessible they should be.  vignette() is
fine as an implementation detail for GUI developers.  It is a bit
silly for beginning users who will have a much better chance of
getting to such introductory documentation if it is part of the GUI.
Gaah, I feel like a broken record.

What we have had with the code in Biobase is a menu of vignettes for
_attached_ packages.  Given the total number of packages that could be
installed and given the fact that running code in a vignette requires
said package to be attached, I think this makes a lot of sense [And I
think this would improve the usability of the OS X vignette browser
because the list is long, the vignettes for an individual package are
not sensibly ordered, etc].  A menu is not perfect, but limiting to
attached packages makes it a useful solution until more robust
browsers etc get to the top of someones TODO list.  But YMMV and what
I've proposed does not require your OS X GUI to change _anything_.

So, as a small step, I'm trying to get vignettes for attached packages
to be easily accessible via the Windows GUI.  I don't care all that
much about the particulars -- and am certainly not attached to the
code that I posted.

What the vignette() function does not provide for is a hook such that
a GUI can add the vignette info for attached packages.  Comments from
others in this thread suggest that there is a desire that this be an
opt-in feature for package authors [I don't really understand this
desire as it seems to me it should be a feature/decision of the GUI]
and again vignette() doesn't help.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From simon.urbanek at r-project.org  Wed May 16 17:58:16 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Wed, 16 May 2007 11:58:16 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <m2lkfon5lf.fsf@ziti.fhcrc.org>
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
	<m2fy5y27rx.fsf@ziti.local>
	<Pine.LNX.4.64.0705150745430.12894@auk.stats>
	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>
	<m2wsz9ofqe.fsf@ziti.fhcrc.org>
	<5C178B61-E438-4A98-9987-DB904AC3CE75@r-project.org>
	<m2lkfon5lf.fsf@ziti.fhcrc.org>
Message-ID: <93D63BF1-4A0C-4112-A498-2333EEEC9BDB@r-project.org>


On May 16, 2007, at 11:36 AM, Seth Falcon wrote:

> Simon Urbanek <simon.urbanek at r-project.org> writes:
>
>> Seth,
>>
>> we already *have* vignette registration in place [vignette()] and we
>> already *have* support in the GUIs (I'm talking e.g. about the Mac
>> GUI here which uses vignette() to build a vignettes browser).
>
> Yes, fine.  I agree that vignette() provides most of
> what is needed in terms of the implementationn details and could
> replace most of the code that I posted, but it doesn't
> mean there is nothing to do.
>
>> What you propose circumvents all the mechanisms already in place and
>> adds replicates the same functionality. I'll repeat my question: what
>> is wrong with the current approach? Why do you want to add a parallel
>> approach?
>
> What is wrong with the current approach is that, at least on Windows,
> vignettes are not as easily accessible they should be.

Ok, fine, but this is specific to the Windows GUI - it needs to be  
updated to take advantage of vignette, I' fine whit that.


>   vignette() is fine as an implementation detail for GUI  
> developers.  It is a bit silly for beginning users who will have a  
> much better chance of getting to such introductory documentation if  
> it is part of the GUI.

Definitely, so yes, fix the GUI ;). My point is that you were  
proposing vignette registration methods instead of saying 'fix the  
GUI' ;). There's nothing wrong with that if the methods need fixing,  
of course.


> What we have had with the code in Biobase is a menu of vignettes for
> _attached_ packages.

Yes, I know, I did acknowledge that it is a good idea and it's really  
easy in fact.


> [...]  A menu is not perfect, but limiting to attached packages  
> makes it a useful solution until more robust browsers etc get to  
> the top of someones TODO list.  But YMMV and what I've proposed  
> does not require your OS X GUI to change _anything_.
>
> So, as a small step, I'm trying to get vignettes for attached  
> packages to be easily accessible via the Windows GUI.  I don't care  
> all that much about the particulars -- and am certainly not  
> attached to the code that I posted.
>

But why not take the vignette() approach instead? I know, still the  
same question, I'm just trying to find you what's missing ...

> What the vignette() function does not provide for is a hook such  
> that a GUI can add the vignette info for attached packages.

Um .. I'm not quite sure I understand - all you have to do is
v=vignette(); v$results[v$results[,1] %in% search(),]
or am I missing something?

There is one thing that could be addressed I suppose - we don't have  
any hooks for GUIs in the sense that R cannot tell the GUI that  
something changed (e.g. a new package was installed). Right now each  
GUI uses system's facilities (or asynchronous checks) to learn about  
such events. This could be unified (as well as other aspects like  
e.g.  the menu access).

Cheers,
Simon

>   Comments from others in this thread suggest that there is a  
> desire that this be an opt-in feature for package authors [I don't  
> really understand this desire as it seems to me it should be a  
> feature/decision of the GUI] and again vignette() doesn't help.
>



> + seth
>
> -- 
> Seth Falcon | Computational Biology | Fred Hutchinson Cancer  
> Research Center
> http://bioconductor.org
>
>


From murdoch at stats.uwo.ca  Wed May 16 18:51:35 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 16 May 2007 12:51:35 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <93D63BF1-4A0C-4112-A498-2333EEEC9BDB@r-project.org>
References: <m21whj2e0c.fsf@ziti.local>
	<464905A3.1010305@stats.uwo.ca>	<m2fy5y27rx.fsf@ziti.local>	<Pine.LNX.4.64.0705150745430.12894@auk.stats>	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>	<m2wsz9ofqe.fsf@ziti.fhcrc.org>	<5C178B61-E438-4A98-9987-DB904AC3CE75@r-project.org>	<m2lkfon5lf.fsf@ziti.fhcrc.org>
	<93D63BF1-4A0C-4112-A498-2333EEEC9BDB@r-project.org>
Message-ID: <464B3697.4080302@stats.uwo.ca>

On 5/16/2007 11:58 AM, Simon Urbanek wrote:

> Um .. I'm not quite sure I understand - all you have to do is
> v=vignette(); v$results[v$results[,1] %in% search(),]
> or am I missing something?

In the interest of avoiding duplication and speeding up the calculation, 
I'd put this into the vignette() function (e.g. add an attached=FALSE 
argument).  I suspect on a system with several hundred installed 
packages vignette(attached=TRUE) could be quite a bit faster than 
searching all packages and subsetting afterwards.

> There is one thing that could be addressed I suppose - we don't have  
> any hooks for GUIs in the sense that R cannot tell the GUI that  
> something changed (e.g. a new package was installed). Right now each  
> GUI uses system's facilities (or asynchronous checks) to learn about  
> such events. This could be unified (as well as other aspects like  
> e.g.  the menu access).

Both of these things would be really nice, but I wouldn't hold off on 
Seth's suggestion to wait for them.

Duncan Murdoch


From christos at nuverabio.com  Wed May 16 19:11:55 2007
From: christos at nuverabio.com (Christos Hatzis)
Date: Wed, 16 May 2007 13:11:55 -0400
Subject: [Rd] 'attach workspace' on R console File menu
Message-ID: <004001c797dd$4ee49bc0$0e010a0a@headquarters.silicoinsights>

Quite often I save misc functions and data objects as .RData files that I
can use in other sessions.  Although I could 'Load Workspace" these files,
most of the times I prefer attaching them.  It would be really convenient to
have a menu item under the File menu on the Windows R Console to allow
attaching workspaces, e.g.
 
--------------------
Attach Workspace...
Load Workspace...
Save Workspace...
-------------------- 
 
Is this something that could make the wish list for future R Console
features?

Thanks.
-Christos

Christos Hatzis, Ph.D.
Nuvera Biosciences, Inc.
400 West Cummings Park
Suite 5350
Woburn, MA 01801
Tel: 781-938-3830
www.nuverabio.com <http://www.nuverabio.com/>


From maechler at stat.math.ethz.ch  Wed May 16 19:30:03 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 16 May 2007 19:30:03 +0200
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <464B3697.4080302@stats.uwo.ca>
References: <m21whj2e0c.fsf@ziti.local> <464905A3.1010305@stats.uwo.ca>
	<m2fy5y27rx.fsf@ziti.local>
	<Pine.LNX.4.64.0705150745430.12894@auk.stats>
	<D79875C9-6919-4D50-BF15-43EA0F2E6FD1@r-project.org>
	<m2wsz9ofqe.fsf@ziti.fhcrc.org>
	<5C178B61-E438-4A98-9987-DB904AC3CE75@r-project.org>
	<m2lkfon5lf.fsf@ziti.fhcrc.org>
	<93D63BF1-4A0C-4112-A498-2333EEEC9BDB@r-project.org>
	<464B3697.4080302@stats.uwo.ca>
Message-ID: <17995.16283.112884.115133@stat.math.ethz.ch>

>>>>> "Duncan" == Duncan Murdoch <murdoch at stats.uwo.ca>
>>>>>     on Wed, 16 May 2007 12:51:35 -0400 writes:

    Duncan> On 5/16/2007 11:58 AM, Simon Urbanek wrote:
    >> Um .. I'm not quite sure I understand - all you have to do is
    >> v=vignette(); v$results[v$results[,1] %in% search(),]
    >> or am I missing something?

    Duncan> In the interest of avoiding duplication and speeding up the calculation, 
    Duncan> I'd put this into the vignette() function (e.g. add an attached=FALSE 
    Duncan> argument).  I suspect on a system with several hundred installed 
    Duncan> packages vignette(attached=TRUE) could be quite a bit faster than 
    Duncan> searching all packages and subsetting afterwards.

Indeed, a good idea.
For me, with quite a bit in .libPath() but on a quite fast hi-memory machine,

> system.time(v <- vignette())

   user  system elapsed 
  7.349   6.257 145.329 

i.e. elapsed time of 2.5 minutes {with > 1100 installed packages}

    >> There is one thing that could be addressed I suppose - we don't have  
    >> any hooks for GUIs in the sense that R cannot tell the GUI that  
    >> something changed (e.g. a new package was installed). Right now each  
    >> GUI uses system's facilities (or asynchronous checks) to learn about  
    >> such events. This could be unified (as well as other aspects like  
    >> e.g.  the menu access).

    Duncan> Both of these things would be really nice, but I
    Duncan> wouldn't hold off on Seth's suggestion to wait for
    Duncan> them.

I agree.  I also agree with Simon that it makes sense trying to
provide as much as possible GUI-independently (and in way that is
as easily as possible "GUI-pluggable").

Martin


From wwwhsd at gmail.com  Wed May 16 19:33:14 2007
From: wwwhsd at gmail.com (Henrique Dallazuanna)
Date: Wed, 16 May 2007 14:33:14 -0300
Subject: [Rd] 'attach workspace' on R console File menu
In-Reply-To: <004001c797dd$4ee49bc0$0e010a0a@headquarters.silicoinsights>
References: <004001c797dd$4ee49bc0$0e010a0a@headquarters.silicoinsights>
Message-ID: <da79af330705161033i7b4c6124m9cca1320d4a47c3a@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070516/8482b89c/attachment.pl 

From ggrothendieck at gmail.com  Wed May 16 19:33:39 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 16 May 2007 13:33:39 -0400
Subject: [Rd] 'attach workspace' on R console File menu
In-Reply-To: <004001c797dd$4ee49bc0$0e010a0a@headquarters.silicoinsights>
References: <004001c797dd$4ee49bc0$0e010a0a@headquarters.silicoinsights>
Message-ID: <971536df0705161033h777a3b81xc193243211a5ec96@mail.gmail.com>

On 5/16/07, Christos Hatzis <christos at nuverabio.com> wrote:
> Quite often I save misc functions and data objects as .RData files that I
> can use in other sessions.  Although I could 'Load Workspace" these files,
> most of the times I prefer attaching them.  It would be really convenient to
> have a menu item under the File menu on the Windows R Console to allow
> attaching workspaces, e.g.
>
> --------------------
> Attach Workspace...
> Load Workspace...
> Save Workspace...
> --------------------
>
> Is this something that could make the wish list for future R Console
> features?

It is possible for you to set it up yourself in your profile for R under
Windows. See ?winMenuAdd


From christos at nuverabio.com  Wed May 16 20:00:33 2007
From: christos at nuverabio.com (Christos Hatzis)
Date: Wed, 16 May 2007 14:00:33 -0400
Subject: [Rd] 'attach workspace' on R console File menu
In-Reply-To: <971536df0705161033h777a3b81xc193243211a5ec96@mail.gmail.com>
References: <004001c797dd$4ee49bc0$0e010a0a@headquarters.silicoinsights>
	<971536df0705161033h777a3b81xc193243211a5ec96@mail.gmail.com>
Message-ID: <005501c797e4$19e73930$0e010a0a@headquarters.silicoinsights>

Thanks, Gabor.
This does not add a new item to the existing File menu, instead it creates a
new user menu where the new item can be added.  Although not ideal, it is an
acceptable workaround.

Thanks.
-Christos 

> -----Original Message-----
> From: Gabor Grothendieck [mailto:ggrothendieck at gmail.com] 
> Sent: Wednesday, May 16, 2007 1:34 PM
> To: christos at nuverabio.com
> Cc: r-devel at stat.math.ethz.ch
> Subject: Re: [Rd] 'attach workspace' on R console File menu
> 
> On 5/16/07, Christos Hatzis <christos at nuverabio.com> wrote:
> > Quite often I save misc functions and data objects as .RData files 
> > that I can use in other sessions.  Although I could 'Load 
> Workspace" 
> > these files, most of the times I prefer attaching them.  It 
> would be 
> > really convenient to have a menu item under the File menu on the 
> > Windows R Console to allow attaching workspaces, e.g.
> >
> > --------------------
> > Attach Workspace...
> > Load Workspace...
> > Save Workspace...
> > --------------------
> >
> > Is this something that could make the wish list for future 
> R Console 
> > features?
> 
> It is possible for you to set it up yourself in your profile 
> for R under Windows. See ?winMenuAdd
> 
>


From b.rowlingson at lancaster.ac.uk  Wed May 16 20:54:38 2007
From: b.rowlingson at lancaster.ac.uk (Barry Rowlingson)
Date: Wed, 16 May 2007 19:54:38 +0100
Subject: [Rd] attach/detach asymmetry
Message-ID: <464B536E.8040307@lancaster.ac.uk>

Is there a good reason why arguments to 'attach' and 'detach' differ so 
much? Yes, I know this is the documented behaviour, it just seems to 
violate the principle of least surprise.

Examples:

  file = "foo.RData"
  df = data.frame(x=1:10,y=1:10)

  attach(file) # attaches the RData file 'foo.RData'
  attach(df) # attaches the object df

  Not surprising in an OO system that a function operating on different 
things does different things. However:

  detach(df)  - works as expected

  detach(file)
gives:
  Error in detach(file) : invalid name

  That's surprise number 1.

  Oh well, lets type the filename out:

  detach("foo.RData")
gives:
  Error in detach("foo.RData") :
          invalid name

  Surprise number 2.

  Check the search() list, and you see that R has stuck 'file:' on the 
start of your file path. So try that:

  detach("file:foo.RData")

  and that works nicely. No surprise there, except perhaps that nothing 
surprising happened.

  So, maybe you can attach() with a 'file:' prefix?

  attach("file:foo.RData")
gives:
  Error in attach("file:foo.RData") :
         file 'file:foo.RData' not found

  - in this case it took it literally as a file name. Surprise number 3.

This is all documented behaviour (actually, I cant find any 
documentation on the 'file:' prefixing), but am I the only person who 
finds it inelegant? Or even downright ugly that the help page for 
detach() gives this example code for attaching and detaching by name?

attach_and_detach <- function(db, pos=2)
      {
         name <- deparse(substitute(db))
         attach(db, pos=pos, name=name)
         print(search()[pos])
         eval(substitute(detach(n), list(n=name)))
      }

  - and that doesn't work for attached data files because of the 'file:' 
prefix.

  I think this could be solved by changing detach(foo) to do something 
different if foo is a character string, and adding the 'file:' prefix 
internally. Or maybe they need rewriting as proper methods?

  Perhaps I'm just being over-sensitive about a matter of aesthetics...

Barry


From ggrothendieck at gmail.com  Wed May 16 20:55:20 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 16 May 2007 14:55:20 -0400
Subject: [Rd] 'attach workspace' on R console File menu
In-Reply-To: <005501c797e4$19e73930$0e010a0a@headquarters.silicoinsights>
References: <004001c797dd$4ee49bc0$0e010a0a@headquarters.silicoinsights>
	<971536df0705161033h777a3b81xc193243211a5ec96@mail.gmail.com>
	<005501c797e4$19e73930$0e010a0a@headquarters.silicoinsights>
Message-ID: <971536df0705161155i18cd78bcncd861baf34a82076@mail.gmail.com>

I think it would be possible but its a bit of work.  Note that this
deletes the original File menu and adds a new File menu at the end.

   winMenuAdd("File")
   winMenuDel("File")

By deleting all the original menus and replacing them in this way and
then tediously replacing the items on each menu I think you could do it.
I haven't tried it myself to check whether it really is possible to add
all the menu items.

On 5/16/07, Christos Hatzis <christos at nuverabio.com> wrote:
> Thanks, Gabor.
> This does not add a new item to the existing File menu, instead it creates a
> new user menu where the new item can be added.  Although not ideal, it is an
> acceptable workaround.
>
> Thanks.
> -Christos
>
> > -----Original Message-----
> > From: Gabor Grothendieck [mailto:ggrothendieck at gmail.com]
> > Sent: Wednesday, May 16, 2007 1:34 PM
> > To: christos at nuverabio.com
> > Cc: r-devel at stat.math.ethz.ch
> > Subject: Re: [Rd] 'attach workspace' on R console File menu
> >
> > On 5/16/07, Christos Hatzis <christos at nuverabio.com> wrote:
> > > Quite often I save misc functions and data objects as .RData files
> > > that I can use in other sessions.  Although I could 'Load
> > Workspace"
> > > these files, most of the times I prefer attaching them.  It
> > would be
> > > really convenient to have a menu item under the File menu on the
> > > Windows R Console to allow attaching workspaces, e.g.
> > >
> > > --------------------
> > > Attach Workspace...
> > > Load Workspace...
> > > Save Workspace...
> > > --------------------
> > >
> > > Is this something that could make the wish list for future
> > R Console
> > > features?
> >
> > It is possible for you to set it up yourself in your profile
> > for R under Windows. See ?winMenuAdd
> >
> >
>
>
>


From bolker at zoo.ufl.edu  Wed May 16 21:01:31 2007
From: bolker at zoo.ufl.edu (Ben Bolker)
Date: Wed, 16 May 2007 15:01:31 -0400
Subject: [Rd] citation question
Message-ID: <464B550B.8060407@zoo.ufl.edu>


  I want to put the correct information into the "author" field
of the DESCRIPTION file for my bbmle package, which is a modified
and extended version of the mle code in the stats4 package.

  If I put only myself as author I feel like I'm ignoring the
contribution of R-Core (and I think Peter Dalgaard in particular)
in writing the original code.  If I add "R Development Core
Team" to the author list I feel I am suggesting that they
might be responsible for my changes.  Neither seems entirely
appropriate.

  Suggestions?

  Ben Bolker

PS this is my current DESCRIPTION file:

Package: bbmle
Title: Maximum likelihood estimation
Version: 0.7
Date: 2007/05/16
Author: Ben Bolker
Maintainer: Ben Bolker <bolker at zoo.ufl.edu>
Depends: R (>= 2.0.0), methods, stats, graphics
Description: Methods and functions for fitting maximum likelihood models
in R. This package modifies and extends the mle classes in the stats4
library, written by the R Development Core Team.
License: GPL


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 254 bytes
Desc: OpenPGP digital signature
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20070516/4ac0978d/attachment.bin 

From ggrothendieck at gmail.com  Wed May 16 21:13:27 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 16 May 2007 15:13:27 -0400
Subject: [Rd] citation question
In-Reply-To: <464B550B.8060407@zoo.ufl.edu>
References: <464B550B.8060407@zoo.ufl.edu>
Message-ID: <971536df0705161213x27bc83c9o1a3093f0d95dd316@mail.gmail.com>

This is how one package handled it:

> packageDescription("RSVGTipsDevice")$Author
[1] "Tony Plate <tplate at acm.org>, based on RSVGDevice by T
Jake\nLuciani <jakeluciani at yahoo.com>"


On 5/16/07, Ben Bolker <bolker at zoo.ufl.edu> wrote:
>
>  I want to put the correct information into the "author" field
> of the DESCRIPTION file for my bbmle package, which is a modified
> and extended version of the mle code in the stats4 package.
>
>  If I put only myself as author I feel like I'm ignoring the
> contribution of R-Core (and I think Peter Dalgaard in particular)
> in writing the original code.  If I add "R Development Core
> Team" to the author list I feel I am suggesting that they
> might be responsible for my changes.  Neither seems entirely
> appropriate.
>
>  Suggestions?
>
>  Ben Bolker
>
> PS this is my current DESCRIPTION file:
>
> Package: bbmle
> Title: Maximum likelihood estimation
> Version: 0.7
> Date: 2007/05/16
> Author: Ben Bolker
> Maintainer: Ben Bolker <bolker at zoo.ufl.edu>
> Depends: R (>= 2.0.0), methods, stats, graphics
> Description: Methods and functions for fitting maximum likelihood models
> in R. This package modifies and extends the mle classes in the stats4
> library, written by the R Development Core Team.
> License: GPL
>
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>


From christos at nuverabio.com  Wed May 16 21:21:36 2007
From: christos at nuverabio.com (Christos Hatzis)
Date: Wed, 16 May 2007 15:21:36 -0400
Subject: [Rd] 'attach workspace' on R console File menu
In-Reply-To: <971536df0705161155i18cd78bcncd861baf34a82076@mail.gmail.com>
References: <004001c797dd$4ee49bc0$0e010a0a@headquarters.silicoinsights>
	<971536df0705161033h777a3b81xc193243211a5ec96@mail.gmail.com>
	<005501c797e4$19e73930$0e010a0a@headquarters.silicoinsights>
	<971536df0705161155i18cd78bcncd861baf34a82076@mail.gmail.com>
Message-ID: <005f01c797ef$6d241e50$0e010a0a@headquarters.silicoinsights>

Yes, I found that out as well.  
Rebuilding the File menu is probably too much of a hassle and will introduce
dependencies that would be difficult to maintain.  I hope that the core team
would consider this request.

Thanks.
-Christos  

> -----Original Message-----
> From: Gabor Grothendieck [mailto:ggrothendieck at gmail.com] 
> Sent: Wednesday, May 16, 2007 2:55 PM
> To: christos at nuverabio.com
> Cc: r-devel at stat.math.ethz.ch
> Subject: Re: [Rd] 'attach workspace' on R console File menu
> 
> I think it would be possible but its a bit of work.  Note 
> that this deletes the original File menu and adds a new File 
> menu at the end.
> 
>    winMenuAdd("File")
>    winMenuDel("File")
> 
> By deleting all the original menus and replacing them in this 
> way and then tediously replacing the items on each menu I 
> think you could do it.
> I haven't tried it myself to check whether it really is 
> possible to add all the menu items.
> 
> On 5/16/07, Christos Hatzis <christos at nuverabio.com> wrote:
> > Thanks, Gabor.
> > This does not add a new item to the existing File menu, instead it 
> > creates a new user menu where the new item can be added.  
> Although not 
> > ideal, it is an acceptable workaround.
> >
> > Thanks.
> > -Christos
> >
> > > -----Original Message-----
> > > From: Gabor Grothendieck [mailto:ggrothendieck at gmail.com]
> > > Sent: Wednesday, May 16, 2007 1:34 PM
> > > To: christos at nuverabio.com
> > > Cc: r-devel at stat.math.ethz.ch
> > > Subject: Re: [Rd] 'attach workspace' on R console File menu
> > >
> > > On 5/16/07, Christos Hatzis <christos at nuverabio.com> wrote:
> > > > Quite often I save misc functions and data objects as 
> .RData files 
> > > > that I can use in other sessions.  Although I could 'Load
> > > Workspace"
> > > > these files, most of the times I prefer attaching them.  It
> > > would be
> > > > really convenient to have a menu item under the File 
> menu on the 
> > > > Windows R Console to allow attaching workspaces, e.g.
> > > >
> > > > --------------------
> > > > Attach Workspace...
> > > > Load Workspace...
> > > > Save Workspace...
> > > > --------------------
> > > >
> > > > Is this something that could make the wish list for future
> > > R Console
> > > > features?
> > >
> > > It is possible for you to set it up yourself in your 
> profile for R 
> > > under Windows. See ?winMenuAdd
> > >
> > >
> >
> >
> >
> 
>


From maechler at stat.math.ethz.ch  Wed May 16 21:59:07 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 16 May 2007 21:59:07 +0200
Subject: [Rd] citation question
In-Reply-To: <464B550B.8060407@zoo.ufl.edu>
References: <464B550B.8060407@zoo.ufl.edu>
Message-ID: <17995.25227.628140.571532@stat.math.ethz.ch>

>>>>> "Ben" == Ben Bolker <bolker at zoo.ufl.edu>
>>>>>     on Wed, 16 May 2007 15:01:31 -0400 writes:

    Ben>   I want to put the correct information into the
    Ben> "author" field of the DESCRIPTION file for my bbmle
    Ben> package, which is a modified and extended version of
    Ben> the mle code in the stats4 package.

    Ben>   If I put only myself as author I feel like I'm
    Ben> ignoring the contribution of R-Core (and I think Peter
    Ben> Dalgaard in particular) in writing the original code.
    Ben> If I add "R Development Core Team" to the author list I
    Ben> feel I am suggesting that they might be responsible for
    Ben> my changes.  Neither seems entirely appropriate.

    Ben>   Suggestions?

I think Gabor's is fine.
{maybe don't give the e-mail address of the R core team; we
 already get e-mails we should not}.

    Ben>   Ben Bolker

    Ben> PS this is my current DESCRIPTION file:

    Ben> Package: bbmle
    Ben> Title: Maximum likelihood estimation
    Ben> Version: 0.7
    Ben> Date: 2007/05/16
    Ben> Author: Ben Bolker
    Ben> Maintainer: Ben Bolker <bolker at zoo.ufl.edu>
    Ben> Depends: R (>= 2.0.0), methods, stats, graphics
    Ben> Description: Methods and functions for fitting maximum likelihood models
    Ben> in R. This package modifies and extends the mle classes in the stats4
    Ben> library, written by the R Development Core Team.
	 ^^^^^^^
         \\\\\\\\ please! How can I ever get old and wise
		  in quietness when even you ... ;-)
		  --> fortune("library.*Maechler")
Regards,
Martin


From edd at debian.org  Wed May 16 23:16:47 2007
From: edd at debian.org (edd at debian.org)
Date: Wed, 16 May 2007 23:16:47 +0200 (CEST)
Subject: [Rd] Bug#424696: R CMD INSTALL -l <path> does not create path
	(PR#9691)
Message-ID: <20070516211647.76D422A3FA@slim.kubism.ku.dk>


Soeren,

On 16 May 2007 at 23:00, Soeren Sonnenburg wrote:
| Package: r-base-core
| Version: 2.5.1~20070513-1    [ aka R-patched as of 20070513 ]
| Severity: important
| 
| R CMD INSTALL -l /path/to/lib 
| 
| no longer creates /path/to/lib but assumes it does already exist. This
| is a change in behaviour as it has worked with R 2.4.X 

Let me pass that on to R Bugs then as it is in no way related to any Debian
changes.  

Thanks, Dirk

 
| looking at /usr/lib/R/bin/INSTALL, the problem seems to be in the block starting at line 298:
| 
| 
| 
| lib=`tilde_expand "${lib}"`
| if test -z "${lib}"; then
|   lib=`echo "cat('\n~~~', .libPaths()[1], '\n', sep = '')" | \
|     R_DEFAULT_PACKAGES=NULL "${R_EXE}" --no-save --slave | \
|     grep '^~~~' | sed 's/.*~~~//'`
|   message "Installing to library '$lib'"
| else
|   lib0=${lib}
|   cd ${lib}        <-------------- PROBLEM directory must not exist (call MKDIR_P before ?)
|   lib=`${GETWD}`
|   cd ${startdir}
| fi
| 
| 
| -- System Information:
| Debian Release: lenny/sid
|   APT prefers stable
|   APT policy: (700, 'stable'), (650, 'testing'), (600, 'unstable'), (1, 'experimental')
| Architecture: i386 (i686)
| 
| Kernel: Linux 2.6.21.1-sonne (SMP w/2 CPU cores; PREEMPT)
| Locale: LANG=en_US.UTF-8, LC_CTYPE=en_US.UTF-8 (charmap=UTF-8)
| Shell: /bin/sh linked to /bin/dash
| 
| Versions of packages r-base-core depends on:
| ii  atlas3-base [libblas.so.3 3.6.0-20.6     Automatically Tuned Linear Algebra
| ii  atlas3-sse2 [libblas.so.3 3.6.0-20.6     Automatically Tuned Linear Algebra
| ii  libbz2-1.0                1.0.3-6        high-quality block-sorting file co
| ii  libc6                     2.5-7          GNU C Library: Shared libraries
| ii  libgfortran1              4.1.2-7        Runtime library for GNU Fortran ap
| ii  libice6                   1:1.0.3-2      X11 Inter-Client Exchange library
| ii  libjpeg62                 6b-13          The Independent JPEG Group's JPEG 
| ii  libpaper-utils            1.1.21         Library for handling paper charact
| ii  libpcre3                  6.7-1          Perl 5 Compatible Regular Expressi
| ii  libpng12-0                1.2.15~beta5-1 PNG library - runtime
| ii  libreadline5              5.2-2          GNU readline and history libraries
| ii  libsm6                    2:1.0.3-1      X11 Session Management library
| ii  libx11-6                  2:1.0.3-7      X11 client-side library
| ii  libxt6                    1:1.0.5-2      X11 toolkit intrinsics library
| ii  perl                      5.8.8-7        Larry Wall's Practical Extraction 
| ii  refblas3 [libblas.so.3]   1.2-8          Basic Linear Algebra Subroutines 3
| ii  tcl8.4                    8.4.12-1.1     Tcl (the Tool Command Language) v8
| ii  tk8.4                     8.4.12-1       Tk toolkit for Tcl and X11, v8.4 -
| ii  unzip                     5.52-9         De-archiver for .zip files
| ii  zip                       2.32-1         Archiver for .zip files
| ii  zlib1g                    1:1.2.3-14     compression library - runtime
| 
| Versions of packages r-base-core recommends:
| ii  r-base-dev              2.5.1~20070513-1 GNU R installation of auxiliary GN
| ii  r-recommended           2.5.1~20070513-1 GNU R collection of recommended pa
| 
| -- no debconf information
| 

-- 
Hell, there are no rules here - we're trying to accomplish something. 
                                                  -- Thomas A. Edison


From savicky at cs.cas.cz  Thu May 17 11:03:00 2007
From: savicky at cs.cas.cz (Petr Savicky)
Date: Thu, 17 May 2007 11:03:00 +0200
Subject: [Rd] grep with fixed=TRUE and ignore.case=TRUE
In-Reply-To: <Pine.LNX.4.64.0705111652421.11868@auk.stats>
References: <20070428114959.GA25723@cs.cas.cz>
	<46337DE1.5030607@statistik.uni-dortmund.de>
	<20070429135347.GA4690@cs.cas.cz>
	<20070507142012.GF31253@cs.cas.cz>
	<Pine.LNX.4.64.0705090628200.6312@gannet.stats.ox.ac.uk>
	<20070511153337.GB6300@cs.cas.cz>
	<Pine.LNX.4.64.0705111652421.11868@auk.stats>
Message-ID: <20070517090300.GA6175@cs.cas.cz>

> strncasecmp is not standard C (not even C99), but R does have a substitute 
> for it.  Unfortunately strncasecmp is not usable with multibyte charsets: 
> Linux systems have wcsncasecmp but that is not portable.  In these days of 
> widespread use of UTF-8 that is a blocking issue, I am afraid.

What could help are the functions mbrtowc and towctrans and simple
long integer comparison. Are the functions mbrtowc and towctrans
available under Windows? mbrtowc seems to be available as Rmbrtowc
in src/gnuwin32/extra.c.

I did not find towctrans defined in R sources, but it is in gnuwin32/Rdll.hide
and used in do_tolower. Does this mean that tolower is not usable
with utf-8 under Windows?

> In the case of grep I think all you need is
> 
> grep(tolower(pattern), tolower(x), fixed = TRUE)
> 
> and similarly for regexpr.

Yes. this is correct, but it has disadvantages. It needs more
space and, if value=TRUE, we would have to do something like
   x[grep(tolower(pattern), tolower(x), fixed = TRUE, value=FALSE)]
This is hard to implement in src/library/base/R/grep.R,
where the call to .Internal(grep(pattern,...)) is the last command
and I think this should be preserved.

> >Ignore case option is not meaningfull in gsub.
> 
> sub("abc", "123", c("ABCD", "abcd"), ignore.case=TRUE)
> 
> is different from 'ignore.case=FALSE', and I see the meaning as clear.
> So what did you mean?  (Unfortunately the tolower trick does not work for 
> [g]sub.)

The meaning of ignore.case in [g]sub is problematic due to the following.
  sub("abc", "xyz", c("ABCD", "abcd"), ignore.case=TRUE)
produces
  [1] "xyzD" "xyzd"
but the user may in fact need the following
  [1] "XYZD" "xyzd"

It is correct that "xyzD" "xyzd" is produced, but the user
should be aware of the fact that several substitutions like 
  x <- sub("abc", "xyz", c("ABCD", "abcd"))   # ignore.case=FALSE
  sub("ABC", "XYZ", x)  # ignore.case=FALSE
may be more useful.

I have another question concerning the speed of grep. I expected that
fgrep_one function is slower than calling a library routine
for regular expressions. In particular, if the pattern has a lot of
long partial matches in the target string, I expected that it may be much
slower. A short example is
  y <- "aaaaaaaaab"
  x <- "aaaaaaaaaaaaaaaaaaab"
  grep(y,x)
which requires 110 comparisons (10 comparisons for each of 11 possible
beginnings of y in x). In general, the complexity in the worst case is
O(m*n), where m,n are the lengths of y,x resp. I would expect that
the library function for matching regular expressions needs
time O(m+n) and so will be faster. However, the result obtained
on a larger example is

  > x1 <- paste(c(rep("a", times = 1000), "b"), collapse = "")
  > x2 <- paste(c("b", rep("a", times = 1000)), collapse = "")
  > y <- paste(c(rep("a", times = 10000), x2), collapse = "")
  > z <- rep(y, times = 100)

  > system.time(i <- grep(x1, z, fixed = T))
  [1] 1.970 0.000 1.985 0.000 0.000

  > system.time(i <- grep(x1, z, fixed = F))   # reg. expr. surprisingly slow (*)
  [1] 40.374  0.003 40.381  0.000  0.000

  > system.time(i <- grep(x2, z, fixed = T))
  [1] 0.113 0.000 0.113 0.000 0.000

  > system.time(i <- grep(x2, z, fixed = F))  # reg. expr. faster than fgrep_one
  [1] 0.019 0.000 0.019 0.000 0.000

Do you have an explanation of these results, in particular (*)?

Petr.


From ripley at stats.ox.ac.uk  Thu May 17 11:28:55 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 17 May 2007 10:28:55 +0100 (BST)
Subject: [Rd] grep with fixed=TRUE and ignore.case=TRUE
In-Reply-To: <20070517090300.GA6175@cs.cas.cz>
References: <20070428114959.GA25723@cs.cas.cz>
	<46337DE1.5030607@statistik.uni-dortmund.de>
	<20070429135347.GA4690@cs.cas.cz> <20070507142012.GF31253@cs.cas.cz>
	<Pine.LNX.4.64.0705090628200.6312@gannet.stats.ox.ac.uk>
	<20070511153337.GB6300@cs.cas.cz>
	<Pine.LNX.4.64.0705111652421.11868@auk.stats>
	<20070517090300.GA6175@cs.cas.cz>
Message-ID: <Pine.LNX.4.64.0705171010090.5077@gannet.stats.ox.ac.uk>

On Thu, 17 May 2007, Petr Savicky wrote:

>> strncasecmp is not standard C (not even C99), but R does have a substitute
>> for it.  Unfortunately strncasecmp is not usable with multibyte charsets:
>> Linux systems have wcsncasecmp but that is not portable.  In these days of
>> widespread use of UTF-8 that is a blocking issue, I am afraid.
>
> What could help are the functions mbrtowc and towctrans and simple
> long integer comparison. Are the functions mbrtowc and towctrans
> available under Windows? mbrtowc seems to be available as Rmbrtowc
> in src/gnuwin32/extra.c.
>
> I did not find towctrans defined in R sources, but it is in 
> gnuwin32/Rdll.hide

I don't see it in Rdll.hide.  It is a C99 function (see your unix man 
page).

> and used in do_tolower. Does this mean that tolower is not usable
> with utf-8 under Windows?

UTF-8 is not usable under Windows, but tolower works in Windows DBCS (in 
so far as that makes sense: Chinese chars do not have 'case').

Rmbrtowc reflects an attempt to add UTF-8 support on Windows, but that is 
not currently active.

>> In the case of grep I think all you need is
>>
>> grep(tolower(pattern), tolower(x), fixed = TRUE)
>>
>> and similarly for regexpr.
>
> Yes. this is correct, but it has disadvantages. It needs more
> space and, if value=TRUE, we would have to do something like
>   x[grep(tolower(pattern), tolower(x), fixed = TRUE, value=FALSE)]
> This is hard to implement in src/library/base/R/grep.R,
> where the call to .Internal(grep(pattern,...)) is the last command
> and I think this should be preserved.
>
>>> Ignore case option is not meaningfull in gsub.
>>
>> sub("abc", "123", c("ABCD", "abcd"), ignore.case=TRUE)
>>
>> is different from 'ignore.case=FALSE', and I see the meaning as clear.
>> So what did you mean?  (Unfortunately the tolower trick does not work for
>> [g]sub.)
>
> The meaning of ignore.case in [g]sub is problematic due to the following.
>  sub("abc", "xyz", c("ABCD", "abcd"), ignore.case=TRUE)
> produces
>  [1] "xyzD" "xyzd"
> but the user may in fact need the following
>  [1] "XYZD" "xyzd"

He may, but that is not what 'ignore case' means, more like 'case 
honouring'.

> It is correct that "xyzD" "xyzd" is produced, but the user
> should be aware of the fact that several substitutions like
>  x <- sub("abc", "xyz", c("ABCD", "abcd"))   # ignore.case=FALSE
>  sub("ABC", "XYZ", x)  # ignore.case=FALSE
> may be more useful.
>
> I have another question concerning the speed of grep. I expected that
> fgrep_one function is slower than calling a library routine
> for regular expressions. In particular, if the pattern has a lot of
> long partial matches in the target string, I expected that it may be much
> slower. A short example is
>  y <- "aaaaaaaaab"
>  x <- "aaaaaaaaaaaaaaaaaaab"
>  grep(y,x)
> which requires 110 comparisons (10 comparisons for each of 11 possible
> beginnings of y in x). In general, the complexity in the worst case is
> O(m*n), where m,n are the lengths of y,x resp. I would expect that
> the library function for matching regular expressions needs
> time O(m+n) and so will be faster. However, the result obtained
> on a larger example is
>
>  > x1 <- paste(c(rep("a", times = 1000), "b"), collapse = "")
>  > x2 <- paste(c("b", rep("a", times = 1000)), collapse = "")
>  > y <- paste(c(rep("a", times = 10000), x2), collapse = "")
>  > z <- rep(y, times = 100)
>
>  > system.time(i <- grep(x1, z, fixed = T))
>  [1] 1.970 0.000 1.985 0.000 0.000
>
>  > system.time(i <- grep(x1, z, fixed = F))   # reg. expr. surprisingly slow (*)
>  [1] 40.374  0.003 40.381  0.000  0.000
>
>  > system.time(i <- grep(x2, z, fixed = T))
>  [1] 0.113 0.000 0.113 0.000 0.000
>
>  > system.time(i <- grep(x2, z, fixed = F))  # reg. expr. faster than fgrep_one
>  [1] 0.019 0.000 0.019 0.000 0.000
>
> Do you have an explanation of these results, in particular (*)?

Yes, there is a comment on the help page to that effect.  But these are 
highly atypical uses. Try perl=TRUE, and be aware that the locale matters 
a lot in such tests (via the charset).

No one is attempting to make R a fast string-processing language and so 
developers resources are spent on performance where it matters to more 
typical usage.  (E.g. reducing duplication in as.double and friends speeds 
up just about every R session, and speeds up some numerical sessions 
dramatically.)

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From sfalcon at fhcrc.org  Thu May 17 18:10:33 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Thu, 17 May 2007 09:10:33 -0700
Subject: [Rd] RFC: adding an 'exact' argument to [[
Message-ID: <m2irarh1mu.fsf@ziti.fhcrc.org>

Hi all,

One of the things I find most problematic in R is the partial matching
of names in lists.  Robert and I have discussed this and we believe
that having a mechanism that does not do partial matching would be of
significant benefit to R programmers.  To that end, I have written a
patch that modifies the behavior of "[[" as follows:

   1. [[ gains an 'exact' argument with default value NA

   2. Behavior of 'exact' argument:

      exact=NA
          partial matching is performed as usual, however, a warning
          will be issued when a partial match occurs.  This is the
          default.

      exact=TRUE
          no partial matching is performed.

      exact=FALSE
          partial matching is allowed and no warning issued if it
          occurs.

This change has been discussed among R-core members and there appeared
to be a general consensus that this approach was a good way to
proceed.  However, we are interested in other suggestions from the
broader R developer community.

Some additional rationale for our approach:

Lists are used as the underlying data structures in many R programs
and in these cases the named elements are not a fixed set of things
with a fixed set of names.  For these programs, [[ will be used with
an argument that gets evaluated at runtime and partial matching here
is almost always a disaster.  Furthermore, dealing with data that has
common prefixes happens often and is not an exceptional circumstance
(a precondition for partial matching issues).

We have tested a similar patch that simply eliminated partial matching
for [[ on all CRAN and Bioconductor packages and did not see any
obvious failures.

A downside of this approach is that S4 methods on [[ will need to be
modified to accommodate the new signature.  However, by adding an
argument, we are able to move more slowly towards a non-partially
matching [[ (eventually, the default could be exact=TRUE, but that is
a discussion for another day).


+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From smckinney at bccrc.ca  Thu May 17 20:41:02 2007
From: smckinney at bccrc.ca (Steven McKinney)
Date: Thu, 17 May 2007 11:41:02 -0700
Subject: [Rd] model.matrix bug? Nested factor yields singular design matrix.
Message-ID: <0BE438149FF2254DB4199E2682C8DFEB0235FC3C@crcmail1.BCCRC.CA>


Hi all,

I believe this is a bug in the model.matrix function.
I'd like a second opinion before filing a bug report.

If I have a nested covariate B with multiple values for
just one level of A, I can not get a non-singular design
matrix out of model.matrix

> df <- data.frame(A = factor(c("a", "a", "x", "x"), levels = c("x", "a")),
+                  B = factor(c("b", "x", "x", "x"), levels = c("x", "b")))
> 
> df
  A B
1 a b
2 a x
3 x x
4 x x


So of course the full design matrix is singular,
this is expected.

> model.matrix(~ A * B, df)
  (Intercept) Aa Bb Aa:Bb
1           1  1  1     1
2           1  1  0     0
3           1  0  0     0
4           1  0  0     0
attr(,"assign")
[1] 0 1 2 3
attr(,"contrasts")
attr(,"contrasts")$A
[1] "contr.treatment"

attr(,"contrasts")$B
[1] "contr.treatment"

I'd like to drop the B main effect column,
but get the unexpected result of a column of zeroes.

> model.matrix(~ A * B - B, df)
  (Intercept) Aa Ax:Bb Aa:Bb
1           1  1     0     1
2           1  1     0     0
3           1  0     0     0
4           1  0     0     0
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$A
[1] "contr.treatment"

attr(,"contrasts")$B
[1] "contr.treatment"

> 
> 


This does not happen in S-PLUS.
 

> info()
S info file C:\DOCUME~1\kilroy\LOCALS~1\Temp\S0107EB.tmp will be removed at session end
$Sinfo:
Enterprise Developer Version 7.0.6  for Microsoft Windows : 2005
SHOME:                                               C:/PROGRAMFILES/INSIGHTFUL/splus70
prog.name:                               SPLUS.EXE
load.date:                                 Sun Dec 04 23:15:59 2005
date:                                         Thu May 17 07:38:16 PDT 2007
 
> options(contrasts = c("contr.treatment", "contr.poly"))
> df <- data.frame(A = factor(c("a", "a", "x", "x"), levels = c("x", "a")),
+                   B = factor(c("b", "x", "x", "x"), levels = c("x", "b")))
> model.matrix(~ A * B - B, df)
  (Intercept) A A:B
1           1 1   1
2           1 1   0
3           1 0   0
4           1 0   0
> 
 
This is what I was expecting to get in R, but can not.

 
Alternate specifications in R continue to yield a singular
design matrix


> 
> model.matrix(~ A/B, df)
  (Intercept) Aa Ax:Bb Aa:Bb
1           1  1     0     1
2           1  1     0     0
3           1  0     0     0
4           1  0     0     0
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$A
[1] "contr.treatment"

attr(,"contrasts")$B
[1] "contr.treatment"



> model.matrix(~ A + A:B, df)
  (Intercept) Aa Ax:Bb Aa:Bb
1           1  1     0     1
2           1  1     0     0
3           1  0     0     0
4           1  0     0     0
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$A
[1] "contr.treatment"

attr(,"contrasts")$B
[1] "contr.treatment"

Why is the Ax:Bb column being included?


Have I missed a control parameter or some other way
of specifying to model.matrix not to include this
extra column?


Any feedback appreciated.


Best regards

Steven McKinney

Statistician
Molecular Oncology and Breast Cancer Program
British Columbia Cancer Research Centre

email: smckinney at bccrc.ca

tel: 604-675-8000 x7561

BCCRC
Molecular Oncology
675 West 10th Ave, Floor 4
Vancouver B.C. 
V5Z 1L3
Canada


From smckinney at bccrc.ca  Thu May 17 20:42:32 2007
From: smckinney at bccrc.ca (Steven McKinney)
Date: Thu, 17 May 2007 11:42:32 -0700
Subject: [Rd] model.matrix bug? Nested factor yields singular design
	matrix.
References: <0BE438149FF2254DB4199E2682C8DFEB0235FC3C@crcmail1.BCCRC.CA>
Message-ID: <0BE438149FF2254DB4199E2682C8DFEB0235FC3D@crcmail1.BCCRC.CA>


Apologies - I forgot the session info.


> sessionInfo()
R version 2.5.0 (2007-04-23) 
powerpc-apple-darwin8.9.1 

locale:
en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8

attached base packages:
[1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     

other attached packages:
       lme4      Matrix     lattice 
"0.99875-0" "0.99875-1"    "0.15-5" 


-----Original Message-----
From: r-devel-bounces at r-project.org on behalf of Steven McKinney
Sent: Thu 5/17/2007 11:41 AM
To: r-devel at r-project.org
Subject: [Rd] model.matrix bug? Nested factor yields singular design matrix.
 

Hi all,

I believe this is a bug in the model.matrix function.
I'd like a second opinion before filing a bug report.

If I have a nested covariate B with multiple values for
just one level of A, I can not get a non-singular design
matrix out of model.matrix

> df <- data.frame(A = factor(c("a", "a", "x", "x"), levels = c("x", "a")),
+                  B = factor(c("b", "x", "x", "x"), levels = c("x", "b")))
> 
> df
  A B
1 a b
2 a x
3 x x
4 x x


So of course the full design matrix is singular,
this is expected.

> model.matrix(~ A * B, df)
  (Intercept) Aa Bb Aa:Bb
1           1  1  1     1
2           1  1  0     0
3           1  0  0     0
4           1  0  0     0
attr(,"assign")
[1] 0 1 2 3
attr(,"contrasts")
attr(,"contrasts")$A
[1] "contr.treatment"

attr(,"contrasts")$B
[1] "contr.treatment"

I'd like to drop the B main effect column,
but get the unexpected result of a column of zeroes.

> model.matrix(~ A * B - B, df)
  (Intercept) Aa Ax:Bb Aa:Bb
1           1  1     0     1
2           1  1     0     0
3           1  0     0     0
4           1  0     0     0
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$A
[1] "contr.treatment"

attr(,"contrasts")$B
[1] "contr.treatment"

> 
> 


This does not happen in S-PLUS.
 

> info()
S info file C:\DOCUME~1\kilroy\LOCALS~1\Temp\S0107EB.tmp will be removed at session end
$Sinfo:
Enterprise Developer Version 7.0.6  for Microsoft Windows : 2005
SHOME:                                               C:/PROGRAMFILES/INSIGHTFUL/splus70
prog.name:                               SPLUS.EXE
load.date:                                 Sun Dec 04 23:15:59 2005
date:                                         Thu May 17 07:38:16 PDT 2007
 
> options(contrasts = c("contr.treatment", "contr.poly"))
> df <- data.frame(A = factor(c("a", "a", "x", "x"), levels = c("x", "a")),
+                   B = factor(c("b", "x", "x", "x"), levels = c("x", "b")))
> model.matrix(~ A * B - B, df)
  (Intercept) A A:B
1           1 1   1
2           1 1   0
3           1 0   0
4           1 0   0
> 
 
This is what I was expecting to get in R, but can not.

 
Alternate specifications in R continue to yield a singular
design matrix


> 
> model.matrix(~ A/B, df)
  (Intercept) Aa Ax:Bb Aa:Bb
1           1  1     0     1
2           1  1     0     0
3           1  0     0     0
4           1  0     0     0
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$A
[1] "contr.treatment"

attr(,"contrasts")$B
[1] "contr.treatment"



> model.matrix(~ A + A:B, df)
  (Intercept) Aa Ax:Bb Aa:Bb
1           1  1     0     1
2           1  1     0     0
3           1  0     0     0
4           1  0     0     0
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$A
[1] "contr.treatment"

attr(,"contrasts")$B
[1] "contr.treatment"

Why is the Ax:Bb column being included?


Have I missed a control parameter or some other way
of specifying to model.matrix not to include this
extra column?


Any feedback appreciated.


Best regards

Steven McKinney

Statistician
Molecular Oncology and Breast Cancer Program
British Columbia Cancer Research Centre

email: smckinney at bccrc.ca

tel: 604-675-8000 x7561

BCCRC
Molecular Oncology
675 West 10th Ave, Floor 4
Vancouver B.C. 
V5Z 1L3
Canada

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From bill at insightful.com  Thu May 17 20:54:45 2007
From: bill at insightful.com (Bill Dunlap)
Date: Thu, 17 May 2007 11:54:45 -0700 (PDT)
Subject: [Rd] RFC: adding an 'exact' argument to [[
In-Reply-To: <m2irarh1mu.fsf@ziti.fhcrc.org>
References: <m2irarh1mu.fsf@ziti.fhcrc.org>
Message-ID: <Pine.GSO.4.56.0705171150100.25965@durian.statsci.com>

On Thu, 17 May 2007, Seth Falcon wrote:

> One of the things I find most problematic in R is the partial matching
> of names in lists.  Robert and I have discussed this and we believe
> that having a mechanism that does not do partial matching would be of
> significant benefit to R programmers.  To that end, I have written a
> patch that modifies the behavior of "[[" as follows:
>
>    1. [[ gains an 'exact' argument with default value NA
>
>    2. Behavior of 'exact' argument:
>
>       exact=NA
>           partial matching is performed as usual, however, a warning
>           will be issued when a partial match occurs.  This is the
>           default.
>
>       exact=TRUE
>           no partial matching is performed.
>
>       exact=FALSE
>           partial matching is allowed and no warning issued if it
>           occurs.
>
> This change has been discussed among R-core members and there appeared
> to be a general consensus that this approach was a good way to
> proceed.  However, we are interested in other suggestions from the
> broader R developer community.
>
> Some additional rationale for our approach:
>
> Lists are used as the underlying data structures in many R programs
> and in these cases the named elements are not a fixed set of things
> with a fixed set of names.  For these programs, [[ will be used with
> an argument that gets evaluated at runtime and partial matching here
> is almost always a disaster.  Furthermore, dealing with data that has
> common prefixes happens often and is not an exceptional circumstance
> (a precondition for partial matching issues).

This sounds interesting.  Do you intend to leave the $
operator alone, so it will continue to do partial
matching?  I suspect that that is where the majority
of partial matching for list names is done.  It might
be nice to have an option that made x$partial warn so we
would fix code that relied on partial matching, but that
is lower priority.

----------------------------------------------------------------------------
Bill Dunlap
Insightful Corporation
bill at insightful dot com
360-428-8146

 "All statements in this message represent the opinions of the author and do
 not necessarily reflect Insightful Corporation policy or position."


From sfalcon at fhcrc.org  Thu May 17 21:24:02 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Thu, 17 May 2007 12:24:02 -0700
Subject: [Rd] RFC: adding an 'exact' argument to [[
In-Reply-To: <Pine.GSO.4.56.0705171150100.25965@durian.statsci.com> (Bill
	Dunlap's message of "Thu, 17 May 2007 11:54:45 -0700 (PDT)")
References: <m2irarh1mu.fsf@ziti.fhcrc.org>
	<Pine.GSO.4.56.0705171150100.25965@durian.statsci.com>
Message-ID: <m2fy5vfe3x.fsf@ziti.fhcrc.org>

Bill Dunlap <bill at insightful.com> writes:
> This sounds interesting.  Do you intend to leave the $
> operator alone, so it will continue to do partial
> matching?  I suspect that that is where the majority
> of partial matching for list names is done.

The current proposal will not touch $.  I agree that most intentional
partial matching uses $ (hopefully only during interactive sessions).
The main benefit of the our proposed change is more reliable package
code.  For long lists and certain patterns of use, there are also
performance benefits:

    > kk <- paste("abc", 1:(1e6), sep="")
    > vv = as.list(1:(1e6))
    > names(vv) = kk

    > system.time(vv[["fooo", exact=FALSE]])
       user  system elapsed 
      0.074   0.000   0.074 

    > system.time(vv[["fooo", exact=TRUE]])
       user  system elapsed 
      0.042   0.000   0.042 


> It might be nice to have an option that made x$partial warn so we
> would fix code that relied on partial matching, but that is lower
> priority.

I think that could be useful as well.  To digress a bit further in
discussing $... I think the argument that partial matching is
desirable because it saves typing during interactive sessions now has
a lot less weight.  The recent integration of the completion code
gives less typing and complete names.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From ripley at stats.ox.ac.uk  Thu May 17 21:54:27 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 17 May 2007 20:54:27 +0100 (BST)
Subject: [Rd] RFC: adding an 'exact' argument to [[
In-Reply-To: <m2fy5vfe3x.fsf@ziti.fhcrc.org>
References: <m2irarh1mu.fsf@ziti.fhcrc.org>
	<Pine.GSO.4.56.0705171150100.25965@durian.statsci.com>
	<m2fy5vfe3x.fsf@ziti.fhcrc.org>
Message-ID: <Pine.LNX.4.64.0705172039480.10304@gannet.stats.ox.ac.uk>

On Thu, 17 May 2007, Seth Falcon wrote:

> Bill Dunlap <bill at insightful.com> writes:
>> This sounds interesting.  Do you intend to leave the $
>> operator alone, so it will continue to do partial
>> matching?  I suspect that that is where the majority
>> of partial matching for list names is done.
>
> The current proposal will not touch $.  I agree that most intentional
> partial matching uses $ (hopefully only during interactive sessions).
> The main benefit of the our proposed change is more reliable package
> code.  For long lists and certain patterns of use, there are also
> performance benefits:
>
>    > kk <- paste("abc", 1:(1e6), sep="")
>    > vv = as.list(1:(1e6))
>    > names(vv) = kk
>
>    > system.time(vv[["fooo", exact=FALSE]])
>       user  system elapsed
>      0.074   0.000   0.074
>
>    > system.time(vv[["fooo", exact=TRUE]])
>       user  system elapsed
>      0.042   0.000   0.042
>
>
>> It might be nice to have an option that made x$partial warn so we
>> would fix code that relied on partial matching, but that is lower
>> priority.
>
> I think that could be useful as well.  To digress a bit further in
> discussing $... I think the argument that partial matching is
> desirable because it saves typing during interactive sessions now has
> a lot less weight.  The recent integration of the completion code
> gives less typing and complete names.

There is a similar issue with argument partial matching.  Since we have 
the source of R one can pretty easily build a version of R which does not 
have the feature: I have been doing that in conjunction with 'codetools' 
to do some checking.

In both cases there is traditional partial matching: seq(along=) or 
seq(length=), and $fitted vs $fitted.values.  There are not many uses of 
seq(along.with=) about and vastly more of seq(along=) (although in R using 
seq_along() is preferable): even in some packages which do use 
seq(along.with=) there are more instances of seq(along=).

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From murdoch at stats.uwo.ca  Thu May 17 22:40:19 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Thu, 17 May 2007 16:40:19 -0400
Subject: [Rd] RFC: adding an 'exact' argument to [[
In-Reply-To: <Pine.LNX.4.64.0705172039480.10304@gannet.stats.ox.ac.uk>
References: <m2irarh1mu.fsf@ziti.fhcrc.org>	<Pine.GSO.4.56.0705171150100.25965@durian.statsci.com>	<m2fy5vfe3x.fsf@ziti.fhcrc.org>
	<Pine.LNX.4.64.0705172039480.10304@gannet.stats.ox.ac.uk>
Message-ID: <464CBDB3.2060706@stats.uwo.ca>

On 5/17/2007 3:54 PM, Prof Brian Ripley wrote:
> On Thu, 17 May 2007, Seth Falcon wrote:
> 
>> Bill Dunlap <bill at insightful.com> writes:
>>> This sounds interesting.  Do you intend to leave the $
>>> operator alone, so it will continue to do partial
>>> matching?  I suspect that that is where the majority
>>> of partial matching for list names is done.
>>
>> The current proposal will not touch $.  I agree that most intentional
>> partial matching uses $ (hopefully only during interactive sessions).
>> The main benefit of the our proposed change is more reliable package
>> code.  For long lists and certain patterns of use, there are also
>> performance benefits:
>>
>>    > kk <- paste("abc", 1:(1e6), sep="")
>>    > vv = as.list(1:(1e6))
>>    > names(vv) = kk
>>
>>    > system.time(vv[["fooo", exact=FALSE]])
>>       user  system elapsed
>>      0.074   0.000   0.074
>>
>>    > system.time(vv[["fooo", exact=TRUE]])
>>       user  system elapsed
>>      0.042   0.000   0.042
>>
>>
>>> It might be nice to have an option that made x$partial warn so we
>>> would fix code that relied on partial matching, but that is lower
>>> priority.
>>
>> I think that could be useful as well.  To digress a bit further in
>> discussing $... I think the argument that partial matching is
>> desirable because it saves typing during interactive sessions now has
>> a lot less weight.  The recent integration of the completion code
>> gives less typing and complete names.
> 
> There is a similar issue with argument partial matching.  Since we have 
> the source of R one can pretty easily build a version of R which does not 
> have the feature: I have been doing that in conjunction with 'codetools' 
> to do some checking.
> 
> In both cases there is traditional partial matching: seq(along=) or 
> seq(length=), and $fitted vs $fitted.values.  There are not many uses of 
> seq(along.with=) about and vastly more of seq(along=) (although in R using 
> seq_along() is preferable): even in some packages which do use 
> seq(along.with=) there are more instances of seq(along=).

Opinions, please:

In another thread I think we have agreement to add an extra arg to the 
vignette() function to limit it to attached packages.  By analogy with 
other similar functions, the arg would be named all.available.  However, 
I suspect most users would abbreviate that to just "all".

Should I name it "all.available" for consistency, or "all" in 
anticipation of a day when exact argument matching will be required?

Duncan Murdoch


From hpages at fhcrc.org  Fri May 18 04:34:16 2007
From: hpages at fhcrc.org (hpages at fhcrc.org)
Date: Thu, 17 May 2007 19:34:16 -0700
Subject: [Rd] Unexpected alteration of data frame column names
In-Reply-To: <1179413149.5095.18.camel@localhost.localdomain>
References: <46495A50.6050701@fhcrc.org>
	<1179253539.5183.39.camel@localhost.localdomain>
	<Pine.LNX.4.64.0705160815050.25779@gannet.stats.ox.ac.uk>
	<1179413149.5095.18.camel@localhost.localdomain>
Message-ID: <1179455656.464d10a8ab62a@webmail.fhcrc.org>

Hi,

Thanks to both for your answers!

Quoting Marc Schwartz <marc_schwartz at comcast.net>:

> On Thu, 2007-05-17 at 10:54 +0100, Prof Brian Ripley wrote:
> > To add to Marc's detective work. ?"[.data.frame" does say
> > 
> >       If '[' returns a data frame it will have unique (and non-missing)
> >       row names, if necessary transforming the row names using
> >       'make.unique'.  Similarly, column names will be transformed (if
> >       columns are selected more than once).
> > 
> > Now, an 'e.g.' in the parenthetical remark might make this clearer (since 
> > added), but I don't see why this was 'unexpected' (or why this is an issue

It all depends whether you care about consistency or not. Personnally
I do. Yes documenting inconsistencies is better than nothing but is not
always enough to make the language predictable (see below).

So, according to ?"[.data.frame", column names will be transformed (if
columns are selected more than once). OK.

Personnally, I can see ony 2 reasonable semantics for 'df[ ]' or 'df[ , ]':

  (1) either it makes an exact copy of your data frame (and this is not
      only true for data frames: unless documented otherwise one can
      expect x[] to be the same as x),

  (2) either you consider that it is equivalent to 'df[names(df)]' for
      the former and to 'df[ , names(df)]' for the latter.

So it seems that for 'df[ ]', we have semantic (1):
 
> df=data.frame(aa=LETTERS[1:3],bb=3:5,aa=7:5,check.names=FALSE)

> df
  aa bb aa
1  A  3  7
2  B  4  6
3  C  5  5

> df[]
  aa bb aa
1  A  3  7
2  B  4  6
3  C  5  5

Since we have duplicated colnames, 'df[names(df)]' will select
the first column twice and rename it (as documented):

> df[names(df)]
  aa bb aa.1
1  A  3    A
2  B  4    B
3  C  5    C

Good!

Now with 'df[ , ]', I still maintain that this is unexpected:

> df[ , ]
  aa bb aa.1
1  A  3    7
2  B  4    6
3  C  5    5

This is a mix of semantic (1) and semantic (2): 3rd column has been renamed
but its data are the _original_ data. With semantic (2), you would get this:
 
> df[ , names(df)]
  aa bb aa.1
1  A  3    A
2  B  4    B
3  C  5    C

Also the fact that 'df[something]' doesn't behave like 'df[,something]'
is IMHO another inconsistency...

Hope you don't mind if I put this back on R-devel which is probably
the right place to discuss the language semantic.

Cheers,
H.
  
> 
> > for R-devel).
> > 
> > On Tue, 15 May 2007, Marc Schwartz wrote:
> > 
> > > On Mon, 2007-05-14 at 23:59 -0700, Herve Pages wrote:
> > >> Hi,
> > >>
> > >> I'm using data.frame(..., check.names=FALSE), because I want to create
> > >> a data frame with duplicated column names (in the real life you can get
> such
> > >> data frame as the result of an SQL query):
> > 
> > That depends on the interface you are using.
> > 
> > >>  > df <- data.frame(aa=1:5, aa=9:5, check.names=FALSE)
> > >>  > df
> > >>     aa aa
> > >>   1  1  9
> > >>   2  2  8
> > >>   3  3  7
> > >>   4  4  6
> > >>   5  5  5
> > >>
> > >> Why is [.data.frame changing my column names?
> > >>
> > >>  > df[1:3, ]
> > >>     aa aa.1
> > >>   1  1    9
> > >>   2  2    8
> > >>   3  3    7
> > >>
> > >> How can this be avoided? Thanks!
> > >>
> > >> H.
> > >
> > > Herve,
> > >
> > > I had not seen a reply to your post, but you can review the code for
> > > "[.data.frame" by using:
> > >
> > >  getAnywhere("[.data.frame")
> > >
> > > and see where there are checks for duplicate column names in the
> > > function.
> > >
> > > That is going to be the default behavior for data frame
> > > subsetting/extraction and in fact is noted in the 'ONEWS' file for R
> > > version 1.8.0:
> > >
> > > - Subsetting a data frame can no longer produce duplicate
> > >   column names.
> > >
> > > So it has been around for some time (October of 2003).
> > >
> > > In terms of avoiding it, I suspect that you would have to create your
> > > own version of the function, perhaps with an additional argument that
> > > enables/disables that duplicate column name checks.
> > >
> > > I have not however considered the broader functional implications of
> > > doing so however, so be vewwy vewwy careful here.
> > 
> > Namespace issues would mean that your version would hardly ever be used.
> 
> I suspected that namespaces might be an issue here, but had not pursued
> that line of thinking beyond an initial 'gut feel'.
> 
> Thanks,
> 
> Marc
> 
> 
>


From whinev at gmail.com  Fri May 18 10:32:14 2007
From: whinev at gmail.com (Ev Whin)
Date: Fri, 18 May 2007 16:32:14 +0800
Subject: [Rd] R 2.5.0 building problem
Message-ID: <dfed1c180705180132g156ca3daufe96dda26ace3afd@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070518/53b767fd/attachment.pl 

From ripley at stats.ox.ac.uk  Fri May 18 11:11:57 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 18 May 2007 10:11:57 +0100 (BST)
Subject: [Rd] R 2.5.0 building problem
In-Reply-To: <dfed1c180705180132g156ca3daufe96dda26ace3afd@mail.gmail.com>
References: <dfed1c180705180132g156ca3daufe96dda26ace3afd@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705181005200.22355@gannet.stats.ox.ac.uk>

This is a system problem: you are missing the dynamic libg2c.so and so 
cannot build usable Fortran shared libraries.

I no longer have access to such an old system (one using gcc 3.4.x), but 
from memory this was in an RPM named libf2c-* Please consult your 
sysadmins.


On Fri, 18 May 2007, Ev Whin wrote:

> Hi,
> While I was trying to build R 2.5.0 src on
> Red Hat Enterprise Linux ES release 4 (Nahant Update 4)
> Kernel 2.6.9-42.ELsmp on an x86_64
> The following errors occurred:
>
> gcc -std=gnu99 -shared -L/usr/local/lib64 -o lapack.so  Lapack.o
> -L../../../lib -lRlapack -L../../../lib -lRblas -lg2c -lm -lgcc_s
>
> /usr/bin/ld: /usr/lib/gcc/x86_64-redhat-linux/3.4.6/libg2c.a(s_cat.o):
> relocation R_X86_64_32 against `a local symbol' can not be used when making
> a shared object; recompile with -fPIC
>
> /usr/lib/gcc/x86_64-redhat-linux/3.4.6/libg2c.a: could not read symbols: Bad
> value
>
> collect2: ld returned 1 exit status
>
> make[4]: *** [lapack.so] Error 1
>
> make[4]: Leaving directory `/home/ljiao/R-2.5.0/Build/src/modules/lapack'
>
> make[3]: *** [R] Error 2
>
> make[3]: Leaving directory `/home/ljiao/R-2.5.0/Build/src/modules/lapack'
>
> make[2]: *** [R] Error 1
>
> make[2]: Leaving directory `/home/ljiao/R-2.5.0/Build/src/modules'
>
> make[1]: *** [R] Error 1
>
> make[1]: Leaving directory `/home/ljiao/R-2.5.0/Build/src'
>
> make: *** [R] Error 1
> Is this a bug of GCC?
> See also https://rhn.redhat.com/errata/RHBA-2006-0509.html
> What can I do to proceed?
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Fri May 18 11:54:56 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 18 May 2007 10:54:56 +0100 (BST)
Subject: [Rd] RFC: adding an 'exact' argument to [[
In-Reply-To: <464CBDB3.2060706@stats.uwo.ca>
References: <m2irarh1mu.fsf@ziti.fhcrc.org>
	<Pine.GSO.4.56.0705171150100.25965@durian.statsci.com>
	<m2fy5vfe3x.fsf@ziti.fhcrc.org>
	<Pine.LNX.4.64.0705172039480.10304@gannet.stats.ox.ac.uk>
	<464CBDB3.2060706@stats.uwo.ca>
Message-ID: <Pine.LNX.4.64.0705181051550.22924@gannet.stats.ox.ac.uk>

On Thu, 17 May 2007, Duncan Murdoch wrote:

> On 5/17/2007 3:54 PM, Prof Brian Ripley wrote:

>> There is a similar issue with argument partial matching.  Since we have the 
>> source of R one can pretty easily build a version of R which does not have 
>> the feature: I have been doing that in conjunction with 'codetools' to do 
>> some checking.
>> 
>> In both cases there is traditional partial matching: seq(along=) or 
>> seq(length=), and $fitted vs $fitted.values.  There are not many uses of 
>> seq(along.with=) about and vastly more of seq(along=) (although in R using 
>> seq_along() is preferable): even in some packages which do use 
>> seq(along.with=) there are more instances of seq(along=).
>
> Opinions, please:
>
> In another thread I think we have agreement to add an extra arg to the 
> vignette() function to limit it to attached packages.  By analogy with other 
> similar functions, the arg would be named all.available.  However, I suspect 
> most users would abbreviate that to just "all".
>
> Should I name it "all.available" for consistency, or "all" in anticipation of 
> a day when exact argument matching will be required?

I don't think it will be required.

However, the use of all.names etc is historical, from the days when S (and 
R) would warn if you used the name of a local non-function as a function, 
do an arg 'all' got in the way.   I would use the most intuitive form.

Shortly R-devel will have options to warn on partial matching in $ and in 
args.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From murdoch at stats.uwo.ca  Fri May 18 16:38:40 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Fri, 18 May 2007 10:38:40 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <m21whj2e0c.fsf@ziti.local>
References: <m21whj2e0c.fsf@ziti.local>
Message-ID: <464DBA70.7020407@stats.uwo.ca>

I think we've agreed about adding an option to the vignette() function 
to allow the user to choose to see all vignettes in installed packages, 
or only those that are attached.  Adding this is pretty trivial, and 
I'll put it into R-devel soon.

I'd like to set the default to show only attached packages, which would 
be consistent with the behaviour of demo() and data().  Vignettes are 
still less common than demos or data, so if I do this, I'll also change 
the "none found" message to something like

 > vignette()
no vignettes found

Use 'vignette(all = TRUE)'
to list the vignettes in all *available* packages.

Will this change to the default behaviour cause a lot of trouble for anyone?

Duncan Murdoch


From kw.statr at gmail.com  Fri May 18 16:45:07 2007
From: kw.statr at gmail.com (Kevin Wright)
Date: Fri, 18 May 2007 09:45:07 -0500
Subject: [Rd] Is formula(data.frame) documented?
Message-ID: <c968588d0705180745x654e1b28y12ee9ca5c129f55@mail.gmail.com>

The Examples section of 'unstack' includes:

formula(PlantGrowth)         # check the default formula

I wanted to add a formula to my own data.frame (for unstacking), so I
start looking:
?formula  # Nothing here about adding a formula to data
attr(PlantGrowth, "formula") # Nothing here--c.f. groupedData objects
dput(PlantGrowth) # Hmm, no formula here either
?formula.data.frame # Aliased to formula.  Growing more frustrated.

After more experimentation, I guessed that 'formula.data.frame' is
using the first column as the response and other columns as model
terms.  Eventually I had the idea to look in S-Plus:

?formula.data.frame

This is a method for the function formula() for objects inheriting
from class data.frame. If object is a model frame, the formula for the
model frame is returned, otherwise a formula is deduced from the names
of object. The first name is taken to be the response, and all the
remaining names are pasted together additively.

Ah.  Simple, lucid.

Two notes:

1. Would it be possible to add documentation for formula.data.frame?
(I can create a .Rd file--just ask).

2. General comment to the R community: As a user, I sometimes find
that it would be much clearer to have separate help files with links
in the 'See Also' section rather than using 'aliased' help for
multiple functions in a single file.  (I readily admit that separate
help files are more work...)

Thanks,

K Wright


From h.wickham at gmail.com  Fri May 18 17:11:47 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Fri, 18 May 2007 17:11:47 +0200
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <464DBA70.7020407@stats.uwo.ca>
References: <m21whj2e0c.fsf@ziti.local> <464DBA70.7020407@stats.uwo.ca>
Message-ID: <f8e6ff050705180811g5c19a93fv9afe9e9bc2979db0@mail.gmail.com>

On 5/18/07, Duncan Murdoch <murdoch at stats.uwo.ca> wrote:
> I think we've agreed about adding an option to the vignette() function
> to allow the user to choose to see all vignettes in installed packages,
> or only those that are attached.  Adding this is pretty trivial, and
> I'll put it into R-devel soon.
>
> I'd like to set the default to show only attached packages, which would
> be consistent with the behaviour of demo() and data().  Vignettes are
> still less common than demos or data, so if I do this, I'll also change
> the "none found" message to something like
>
>  > vignette()
> no vignettes found
>
> Use 'vignette(all = TRUE)'
> to list the vignettes in all *available* packages.

What will happen if you do vignette("svmdoc") when you haven't already
loaded the e1071 package?  Will the vignette continue to load (useful)
or return an error message (consistent with help, and data, I think)?
Should data and demo also gain "all" arguments to be consistent?

Hadley


From ggrothendieck at gmail.com  Fri May 18 17:23:17 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Fri, 18 May 2007 11:23:17 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <464DBA70.7020407@stats.uwo.ca>
References: <m21whj2e0c.fsf@ziti.local> <464DBA70.7020407@stats.uwo.ca>
Message-ID: <971536df0705180823t4d0e7527vdd5aabab44853d63@mail.gmail.com>

Perhaps all the arguments in demo, data and vignette should be
regularized to be consistent, not just this one.

On 5/18/07, Duncan Murdoch <murdoch at stats.uwo.ca> wrote:
> I think we've agreed about adding an option to the vignette() function
> to allow the user to choose to see all vignettes in installed packages,
> or only those that are attached.  Adding this is pretty trivial, and
> I'll put it into R-devel soon.
>
> I'd like to set the default to show only attached packages, which would
> be consistent with the behaviour of demo() and data().  Vignettes are
> still less common than demos or data, so if I do this, I'll also change
> the "none found" message to something like
>
>  > vignette()
> no vignettes found
>
> Use 'vignette(all = TRUE)'
> to list the vignettes in all *available* packages.
>
> Will this change to the default behaviour cause a lot of trouble for anyone?
>
> Duncan Murdoch
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From murdoch at stats.uwo.ca  Fri May 18 18:27:15 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Fri, 18 May 2007 12:27:15 -0400
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <f8e6ff050705180811g5c19a93fv9afe9e9bc2979db0@mail.gmail.com>
References: <m21whj2e0c.fsf@ziti.local> <464DBA70.7020407@stats.uwo.ca>
	<f8e6ff050705180811g5c19a93fv9afe9e9bc2979db0@mail.gmail.com>
Message-ID: <464DD3E3.1060908@stats.uwo.ca>

On 5/18/2007 11:11 AM, hadley wickham wrote:
> On 5/18/07, Duncan Murdoch <murdoch at stats.uwo.ca> wrote:
>> I think we've agreed about adding an option to the vignette() function
>> to allow the user to choose to see all vignettes in installed packages,
>> or only those that are attached.  Adding this is pretty trivial, and
>> I'll put it into R-devel soon.
>>
>> I'd like to set the default to show only attached packages, which would
>> be consistent with the behaviour of demo() and data().  Vignettes are
>> still less common than demos or data, so if I do this, I'll also change
>> the "none found" message to something like
>>
>>  > vignette()
>> no vignettes found
>>
>> Use 'vignette(all = TRUE)'
>> to list the vignettes in all *available* packages.
> 
> What will happen if you do vignette("svmdoc") when you haven't already
> loaded the e1071 package?  Will the vignette continue to load (useful)
> or return an error message (consistent with help, and data, I think)?

Currently if you don't say which package to look in, then vignette() 
uses the .packages() function to find a list to search through.  I was 
planning to just pass the "all" arg to .packages() as all.available, so 
if all=FALSE (the default I suggested) this case will give the warning 
message

 > vignette("svmdoc")
Warning message:
vignette 'svmdoc' *not* found

consistent with help(), data(), and demo().  I think this behaviour 
makes sense for those because there may well be duplicates of the same 
name in multiple packages, and you'd usually want to see the attached 
version, rather than some other installed one.  This is currently not 
much of a problem for vignettes because they are relatively rare and 
collisions don't happen much, but it would be nice if that changed.

> Should data and demo also gain "all" arguments to be consistent?

Probably, and probably other inconsistencies should be fixed too:  e.g. 
if there are name collisions, help() offers a list of choices, but 
data() and vignette() just pick the first. (I didn't check demo()).

However, I don't have time to fix all the inconsistencies now, so I 
think I'll set the default to vignette(all=TRUE) (i.e. no change from 
current behaviour), and maybe worry later in the summer about some of 
these other issues.

Duncan Murdoch


From jasoncbarnhart at msn.com  Fri May 18 18:33:11 2007
From: jasoncbarnhart at msn.com (Jason Barnhart)
Date: Fri, 18 May 2007 09:33:11 -0700
Subject: [Rd] AIX testers needed
Message-ID: <BAY116-DAV9C25C47DAB32FBD9519F0CF320@phx.gbl>

Per the request to test the latest tarball referenced below, I have
built R on AIX 5.3. There is a memory issue, please see 3) below.

    1) Build with --enable-BLAS-shlib option.  Builds and
    passes "make check".

    2) GNU libiconv was installed; R configured *without* 
the --without-
    iconv option. Builds and passes "make check."

    3) Memory issue:
        a) Although the server possesses 8GB of RAM and
        system("ulimit") returns "unlimited" as its value, R does not
        "have enough memory."

        b) This code works on R-2.4.0 on WinXP with 2GB of RAM, but
        fails on the AIX build.  Example code:

        > xx <- matrix(rep(1e+10,1e7),nrow=1e4,ncol=1e3)
        > tmp.df <- as.data.frame(cbind(xx,xx,xx))
        Error: cannot allocate vector of size 228.9 Mb
        > gc()
                   used (Mb) gc trigger  (Mb) max used  (Mb)
        Ncells   233035  6.3     467875  12.5   350000   9.4
        Vcells 10104141 77.1   31854441 243.1 30104289 229.7

    4) Used gcc-4.1.2; I have not tried the native compiler.

Questions:

    1) Are there suggestions on how to diagnose and resolve the memory
    issue?  I'm still building my tool chain and I am in the midst of
    installing gdb.

    2) Regarding the build process itself, is there more documentation
    or results that I should forward?

Thanks,
-jason


> version               _
platform       powerpc-ibm-aix5.3.0.0
arch           powerpc
os             aix5.3.0.0
system         powerpc, aix5.3.0.0
status         RC
major          2
minor          5.0
year           2007
month          04
day            22
svn rev        41276
language       R
version.string R version 2.5.0 RC (2007-04-22 r41276)


----- Original Message ----- 
From: "Prof Brian Ripley" <ripley at stats.ox.ac.uk>
To: <R-devel at r-project.org>
Cc: "Sheth, Jagat K" <jagat.k.sheth at citigroup.com>; "kamil
Marcinkowski" <kamil at ualberta.ca>; "Tiong Lim" <t.lim at auckland.ac.nz>;
"Eric Harley" <ericctharley at gmail.com>; "Matthew Beason"
<mbeason at harrahs.com>; <watplatt at us.ibm.com>
Sent: Wednesday, March 28, 2007 11:27 PM
Subject: [Rd] AIX testers needed


> With much thanks to Ei-ji Nakama, R 2.5.0 alpha supports building on
> AIX
> (at least AIX 5.2 on one system).
>
> Would anyone able to test this please get the latest tarball from
>
> http://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
>
> and try installing (after reading the AIX notes in R-admin.html
> section
> C.9).
>
> In particular it would be very helpful to know if
>
> 1) --enable-BLAS-shlib works (it is the default everywhere except
> AIX and
> Darwin)
>
> 2) if people succeed in installing GNU libiconv and building without
> needing --without-iconv.
>
> I am Cc:ing all the people I tracked down who reported attempted AIX
> installations in 2006 in the hope that they may still be interested.
>
> Please report success and any hints or problems in the R-devel list.
>
> -- 
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From h.wickham at gmail.com  Fri May 18 21:54:58 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Fri, 18 May 2007 21:54:58 +0200
Subject: [Rd] RFC: allow packages to advertise vignettes on Windows
In-Reply-To: <464DD3E3.1060908@stats.uwo.ca>
References: <m21whj2e0c.fsf@ziti.local> <464DBA70.7020407@stats.uwo.ca>
	<f8e6ff050705180811g5c19a93fv9afe9e9bc2979db0@mail.gmail.com>
	<464DD3E3.1060908@stats.uwo.ca>
Message-ID: <f8e6ff050705181254w1c79abf1xcf07b89aa6658f6d@mail.gmail.com>

> On 5/18/2007 11:11 AM, hadley wickham wrote:
> > On 5/18/07, Duncan Murdoch <murdoch at stats.uwo.ca> wrote:
> >> I think we've agreed about adding an option to the vignette() function
> >> to allow the user to choose to see all vignettes in installed packages,
> >> or only those that are attached.  Adding this is pretty trivial, and
> >> I'll put it into R-devel soon.
> >>
> >> I'd like to set the default to show only attached packages, which would
> >> be consistent with the behaviour of demo() and data().  Vignettes are
> >> still less common than demos or data, so if I do this, I'll also change
> >> the "none found" message to something like
> >>
> >>  > vignette()
> >> no vignettes found
> >>
> >> Use 'vignette(all = TRUE)'
> >> to list the vignettes in all *available* packages.
> >
> > What will happen if you do vignette("svmdoc") when you haven't already
> > loaded the e1071 package?  Will the vignette continue to load (useful)
> > or return an error message (consistent with help, and data, I think)?
>
> Currently if you don't say which package to look in, then vignette()
> uses the .packages() function to find a list to search through.  I was
> planning to just pass the "all" arg to .packages() as all.available, so
> if all=FALSE (the default I suggested) this case will give the warning
> message
>
>  > vignette("svmdoc")
> Warning message:
> vignette 'svmdoc' *not* found
>
> consistent with help(), data(), and demo().  I think this behaviour
> makes sense for those because there may well be duplicates of the same
> name in multiple packages, and you'd usually want to see the attached
> version, rather than some other installed one.  This is currently not

Yes, that's reasonable, although I always trip myself up after looking
at help(package=XXX) by then trying to look at the individual help
files without first loading the package

> much of a problem for vignettes because they are relatively rare and
> collisions don't happen much, but it would be nice if that changed.

Except for my packages where I've named all my introductory vignettes
"introduction"!  But yes, not a big problem in general.

> > Should data and demo also gain "all" arguments to be consistent?
>
> Probably, and probably other inconsistencies should be fixed too:  e.g.
> if there are name collisions, help() offers a list of choices, but
> data() and vignette() just pick the first. (I didn't check demo()).
>
> However, I don't have time to fix all the inconsistencies now, so I
> think I'll set the default to vignette(all=TRUE) (i.e. no change from
> current behaviour), and maybe worry later in the summer about some of
> these other issues.

I think it is a nice change, but anything that can improve the
consistency of R functions really makes it easier to learn the
language.  One could almost imagine making vignette, data and demo
more generic in the sense that they each list, and load, some
supplementary object provided by a package.  I don't think there is
anything else of a similar form, though.

Hadley


From clausen at econ.upenn.edu  Sat May 19 17:36:36 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Sat, 19 May 2007 11:36:36 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <17992.5499.383704.358418@stat.math.ethz.ch>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
Message-ID: <20070519153636.GJ21178@econ.upenn.edu>

Hi all,

I've written a new version of relist that includes the suggestions from Gabor
and Martin:

	http://www.econ.upenn.edu/~clausen/computing/relist.R

The leading example now looks like this:

	initial.param <- list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
	initial.param <- as.relistable(initial.param)

	ll <- function(param.vector)
	{
		param <- relist(initial.param)
		-sum(dnorm(x, mean=param$mean, vcov=param$vcov, log=TRUE))
		# note: dnorm doesn't do vcov... but I hope you get the point
	}

	optim(unlist(initial.param), ll)

One thing that concerns me is that relist() needs to count how many items are
in a structued object.  In this version, it does that by repeatedly calling

	length(unlist(obj))

which is quite inefficient (O(n^2) time, where n is the depth of the
structure).

Is there a clean way of making this faster?  I suppose relist() could
return attach a "length" attribute to the object it returns.

Apart from that, I suppose I should do these things before inclusion:
 * write some documentation (including pointers in unlist's docs)
 * write more relist methods (eg for character)

What's the usual process?  Email a patch to R-core at r-project.org?

Cheers,
Andrew

On Mon, May 14, 2007 at 09:53:31AM +0200, Martin Maechler wrote:
> Nice ideas, Gabor and Andrew.
> 
> While I agree with Andrew that such a utility makes for nicer
> and considerably better maintainable code in examples like his,
> and I do like to provide "inverse operator functions" in R
> whenever sensible,
> OTOH, we have strived to keep R's "base" package as lean and
> clean as possible, so I think this had to go to "utils".
> 
> One further small proposal: I'd use class name  "relistable"
> since that's what the object of this class are
> and hence as.relistable().
> 
> What do other R-develers think?
> Martin
> 
> >>>>> "GaGr" == Gabor Grothendieck <ggrothendieck at gmail.com>
> >>>>>     on Mon, 14 May 2007 02:54:22 -0400 writes:
> 
>     GaGr> unlist would not attach a skeleton to every vector it
>     GaGr> returns, only the relist method of unlist would.
>     GaGr> That way just that method needs to be added and no
>     GaGr> changes to unlist itself are needed.
> 
>     GaGr> Before applying unlist to an object you would coerce
>     GaGr> the object to class "relist" to force the relist
>     GaGr> method of unlist to be invoked.
> 
>     GaGr> Here is an outline of the code:
> 
>     GaGr> as.relist <- function(x) {
>     GaGr>  if (!inherits(x, "relist")) class(x) <- c("relist", class(x))
>     GaGr>  x
>     GaGr> }
> 
>     GaGr> unlist.relist <- function(x, ...) {
>     GaGr>  y <- x
>     GaGr>  cl <- class(y)
>     GaGr>  class(y) <- cl[- grep("relist", cl)]
>     GaGr>  z <- unlist(y)
>     GaGr>  attr(z, "relist") <- y
>     GaGr>  as.relist(z)
>     GaGr> }
> 
>     GaGr> relist <- function(x, skeleton = attr(x, "relist")) {
>     GaGr>  # simpler version of relist so test can be executed
>     GaGr>  skeleton
>     GaGr> }
> 
>     GaGr> # test
>     GaGr> x <- list(a = 1:2, b = 3)
>     GaGr> class(as.relist(x))
>     GaGr> unlist(as.relist(x))
>     GaGr> relist(unlist(as.relist(x)))
> 
> 
>     GaGr> On 5/14/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
>     >> Hi GaGr,
>     >> 
>     >> Thanks for the interesting suggestion.  I must confess I got lost -- is
>     >> it something like this?
>     >> * unlist() could attach skeleton to every vector it returns.
>     >> * relist() could then use the skeleton attached to the vector to reconstruct
>     >> the object.  The interface might be
>     >> 
>     >> relist <- function(flesh, skeleton=attributes(flesh)$skeleton)
>     >> 
>     >> For example:
>     >> 
>     >> par <- list(mean=c(0, 0), vcov(rbind(c(1, 1), c(1, 1))))
>     >> vector.for.optim <- unlist(par)
>     >> print(attributes(vector.optim)$skeleton)    # the skeleton is stored!
>     >> converted.back.again <- relist(par)
>     >> 
>     >> Some concerns:
>     >> * the metadata might get lost in some applications -- although it seems
>     >> to work fine with optim().  But, if we provide both interfaces (where
>     >> skeleton=flesh$skeleton is the default), then there should be no problem.
>     >> * would there be any bad side-effects of changing the existing unlist
>     >> interface?  I suppose an option like "save.skeleton" could be added to unlist.
>     >> I expect there would be some objections to enabling this as default behaviour,
>     >> as it would significantly increase the storage requirements of the output.
>     >> 
>     >> Cheers,
>     >> Andrew
>     >> 
>     >> On Sun, May 13, 2007 at 07:02:37PM -0400, GaGr Grothendieck wrote:
>     >> > I suggest you define a "relist" class and then define an unlist
>     >> > method for it which stores the skeleton as an attribute.  Then
>     >> > one would not have to specify skeleton in the relist command
>     >> > so
>     >> >
>     >> > relist(unlist(relist(x))) === x
>     >> >
>     >> > 1. relist(x) is the same as x except it gets an additional class "relist".
>     >> > 2. unlist(relist(x)) invokes the relist method of unlist on relist(x)
>     >> > returning another relist object
>     >> > 3. relist(unlist(relist(x))) then recreates relist(x)
>     >> >
>     >> >
>     >> > On 5/13/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
>     >> > >Hi all,
>     >> > >
>     >> > >I wrote a function called relist, which is an inverse to the existing
>     >> > >unlist function:
>     >> > >
>     >> > >       http://www.econ.upenn.edu/~clausen/computing/relist.R
>     >> > >
>     >> > >Some functions need many parameters, which are most easily represented in
>     >> > >complex structures.  Unfortunately, many mathematical functions in R,
>     >> > >including optim, nlm, and grad can only operate on functions whose domain
>     >> > >is
>     >> > >a vector.  R has a function to convert complex objects into a vector
>     >> > >representation.  This file provides an inverse operation called "unlist" to
>     >> > >convert vectors back to the convenient structural representation.
>     >> > >Together,
>     >> > >these functions allow structured functions to have simple mathematical
>     >> > >interfaces.
>     >> > >
>     >> > >For example, a likelihood function for a multivariate normal model needs a
>     >> > >variance-covariance matrix and a mean vector.  It would be most convenient
>     >> > >to
>     >> > >represent it as a list containing a vector and a matrix.  A typical
>     >> > >parameter
>     >> > >might look like
>     >> > >
>     >> > >       list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
>     >> > >
>     >> > >However, optim can't operate on functions that take lists as input; it
>     >> > >only likes vectors.  The solution is conversion:
>     >> > >
>     >> > >        initial.param <- list(mean=c(0, 1), vcov=cbind(c(1, 1), c(1, 0)))
>     >> > >
>     >> > >        ll <- function(param.vector)
>     >> > >        {
>     >> > >               param <- relist(initial.param, param.vector)
>     >> > >               -sum(dnorm(x, mean=param$mean, vcov=param$vcov, log=TRUE))
>     >> > >               # note: dnorm doesn't do vcov... but I hope you get the
>     >> > >               point
>     >> > >        }
>     >> > >
>     >> > >        optim(unlist(initial.param), ll)
>     >> > >
>     >> > >"relist" takes two parameters: skeleton and flesh.  Skeleton is a sample
>     >> > >object that has the right "shape" but the wrong content.  "flesh" is a
>     >> > >vector
>     >> > >with the right content but the wrong shape.  Invoking
>     >> > >
>     >> > >       relist(skeleton, flesh)
>     >> > >
>     >> > >will put the content of flesh on the skeleton.
>     >> > >
>     >> > >As long as "skeleton" has the right shape, it should be a precise inverse
>     >> > >of unlist.  These equalities hold:
>     >> > >
>     >> > >       relist(skeleton, unlist(x)) == x
>     >> > >       unlist(relist(skeleton, y)) == y
>     >> > >
>     >> > >Is there any easy way to do this without my new relist function?  Is there
>     >> > >any
>     >> > >interest in including this in R's base package?  (Or anywhere else?)  Any
>     >> > >comments on the implementation?
>     >> > >
>     >> > >Cheers,
>     >> > >Andrew


From clausen at econ.upenn.edu  Sat May 19 18:04:13 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Sat, 19 May 2007 12:04:13 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070519153636.GJ21178@econ.upenn.edu>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
Message-ID: <20070519160413.GK21178@econ.upenn.edu>

Hi all,

For reasons I can't explain, the code I posted worked in my session, but didn't
work when I started a fresh one.  standardGeneric() seems to get confused
by defaults for missing arguments.  It looks for a "missing" method with
this code:

	relist <- function(flesh, skeleton=attr(flesh, "skeleton"))
	{
		standardGeneric("relist")
	}

I uploaded yet another new version that adds a wrapper that seems to
resolve standardGeneric()'s confusion like this:

	relist <- function(flesh, skeleton=attr(flesh, "skeleton"))
	{
		# need a wrapper, since standardGeneric gets confused by
		# default arguments.
		f <- function(flesh, skeleton) standardGeneric("relist")

		f(flesh, skeleton)
	}

Cheers,
Andrew


From fchen at zlanddpsasp.specmarkmet.com  Sat May 19 00:14:05 2007
From: fchen at zlanddpsasp.specmarkmet.com (fchen at zlanddpsasp.specmarkmet.com)
Date: Sat, 19 May 2007 00:14:05 +0200 (CEST)
Subject: [Rd] Cannot install rsprng package (PR#9697)
Message-ID: <20070518221405.612A129D3F@slim.kubism.ku.dk>


<<insert bug report here>>

I cannot install the R package "rsprng" with the following error message:

> install.packages("rsprng")
trying URL 'http://www.stathy.com/cran/src/contrib/rsprng_0.3-4.tar.gz'
Content type 'application/x-tar' length 35934 bytes
opened URL
==================================================
downloaded 35Kb

* Installing *source* package 'rsprng' ...
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
Try to find sprng.h ...
checking how to run the C preprocessor... gcc -E
checking for egrep... grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... no
checking for unistd.h... yes
checking sprng.h usability... no
checking sprng.h presence... no
checking for sprng.h... no
Cannot find sprng 2.0 header file.
ERROR: configuration failed for package 'rsprng'
** Removing '/u22/res/fchen/packages/R-2.4.1/lib/R/library/rsprng'

The downloaded packages are in
	/tmp/Rtmpl3MeWk/downloaded_packages
Warning message:
installation of package 'rsprng' had non-zero exit status in: install.packages("rsprng") 

================================================================================

Thanks for your help! 
Feiming Chen

--please do not edit the information below--

Version:
 platform = sparc-sun-solaris2.9
 arch = sparc
 os = solaris2.9
 system = sparc, solaris2.9
 status = 
 major = 2
 minor = 4.1
 year = 2006
 month = 12
 day = 18
 svn rev = 40228
 language = R
 version.string = R version 2.4.1 (2006-12-18)

Locale:
/en_US.ISO8859-1/C/en_US.ISO8859-1/en_US.ISO8859-1/en_US.ISO8859-1/C

Search Path:
 .GlobalEnv, package:stats, package:graphics, package:grDevices, package:utils, package:datasets, package:methods, Autoloads, package:base


From edd at debian.org  Sat May 19 21:23:45 2007
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 19 May 2007 14:23:45 -0500
Subject: [Rd] Cannot install rsprng package (PR#9697)
In-Reply-To: <20070518221405.612A129D3F@slim.kubism.ku.dk>
References: <20070518221405.612A129D3F@slim.kubism.ku.dk>
Message-ID: <17999.20161.669769.113044@basebud.nulle.part>


Please do NOT report bugs on add-on packages to r-bugs.

On 19 May 2007 at 00:14, fchen at zlanddpsasp.specmarkmet.com wrote:
| I cannot install the R package "rsprng" with the following error message:
| 
| > install.packages("rsprng")
| trying URL 'http://www.stathy.com/cran/src/contrib/rsprng_0.3-4.tar.gz'
| Content type 'application/x-tar' length 35934 bytes
| opened URL
| ==================================================
| downloaded 35Kb
| 
| * Installing *source* package 'rsprng' ...
| checking for gcc... gcc
[...]
| checking for sprng.h... no
| Cannot find sprng 2.0 header file.
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

You need to install the sprng library first, and do it in such a way that
configure for rsprng finds.  There are some daemons lurking there -- if it
helps, I also packaged both sprng and rsprng for Debian and you could look at
the package sources via any Debian mirror.  But then your task is harder
anyway as you are wrestling with a real Unix flavour and its bugs^Hfeatures.

Dirk

-- 
Hell, there are no rules here - we're trying to accomplish something. 
                                                  -- Thomas A. Edison


From nakama at ki.rim.or.jp  Sun May 20 03:53:46 2007
From: nakama at ki.rim.or.jp (Ei-ji Nakama)
Date: Sun, 20 May 2007 10:53:46 +0900
Subject: [Rd] AIX testers needed
In-Reply-To: <BAY116-DAV9C25C47DAB32FBD9519F0CF320@phx.gbl>
References: <BAY116-DAV9C25C47DAB32FBD9519F0CF320@phx.gbl>
Message-ID: <dc41e1260705191853r5e9fed51j2f9d07840d4ad7f5@mail.gmail.com>

Hi.

system("ulimit") of AIX gives back file block size.
A limit of memory is `ulimit -m'.

I made gcc-4.1.2 and made R-2.5.0+patched, but the problem did not happen.

$ gcc-4.1 -v
Using built-in specs.
Target: powerpc-ibm-aix5.2.0.0
Configured with: ../configure --with-as=/usr/bin/as
--with-ld=/usr/bin/ld --disable-nls --prefix=/usr/local1/gcc-4.1.2
--enable-threads --host=powerpc-ibm-aix5.2.0.0 --program-suffix=-4.1
--with-gmp=/usr/local1 --with-mpfr=/usr/local1
--enable-languages=c,c++,f95
Thread model: aix
gcc version 4.1.2

$ gcc-4.1 -print-multi-lib
.;
pthread;@pthread
ppc64;@maix64
pthread/ppc64;@pthread at maix64

$ export OBJECT_MODE=64
$ ./configure CC="gcc-4.1 -maix64" \
                   F77="gfortran-4.1 -maix64" \
                   CXX="g++-4.1 -maix64" \
                   --enable-BLAS-shlib --without-iconv


2007/5/19, Jason Barnhart <jasoncbarnhart at msn.com>:
> Per the request to test the latest tarball referenced below, I have
> built R on AIX 5.3. There is a memory issue, please see 3) below.
>
>     1) Build with --enable-BLAS-shlib option.  Builds and
>     passes "make check".
>
>     2) GNU libiconv was installed; R configured *without*
> the --without-
>     iconv option. Builds and passes "make check."
>
>     3) Memory issue:
>         a) Although the server possesses 8GB of RAM and
>         system("ulimit") returns "unlimited" as its value, R does not
>         "have enough memory."
>
>         b) This code works on R-2.4.0 on WinXP with 2GB of RAM, but
>         fails on the AIX build.  Example code:
>
>         > xx <- matrix(rep(1e+10,1e7),nrow=1e4,ncol=1e3)
>         > tmp.df <- as.data.frame(cbind(xx,xx,xx))
>         Error: cannot allocate vector of size 228.9 Mb
>         > gc()
>                    used (Mb) gc trigger  (Mb) max used  (Mb)
>         Ncells   233035  6.3     467875  12.5   350000   9.4
>         Vcells 10104141 77.1   31854441 243.1 30104289 229.7
>
>     4) Used gcc-4.1.2; I have not tried the native compiler.
>
> Questions:
>
>     1) Are there suggestions on how to diagnose and resolve the memory
>     issue?  I'm still building my tool chain and I am in the midst of
>     installing gdb.
>
>     2) Regarding the build process itself, is there more documentation
>     or results that I should forward?
>
> Thanks,
> -jason
>
>
> > version               _
> platform       powerpc-ibm-aix5.3.0.0
> arch           powerpc
> os             aix5.3.0.0
> system         powerpc, aix5.3.0.0
> status         RC
> major          2
> minor          5.0
> year           2007
> month          04
> day            22
> svn rev        41276
> language       R
> version.string R version 2.5.0 RC (2007-04-22 r41276)
>
>
> ----- Original Message -----
> From: "Prof Brian Ripley" <ripley at stats.ox.ac.uk>
> To: <R-devel at r-project.org>
> Cc: "Sheth, Jagat K" <jagat.k.sheth at citigroup.com>; "kamil
> Marcinkowski" <kamil at ualberta.ca>; "Tiong Lim" <t.lim at auckland.ac.nz>;
> "Eric Harley" <ericctharley at gmail.com>; "Matthew Beason"
> <mbeason at harrahs.com>; <watplatt at us.ibm.com>
> Sent: Wednesday, March 28, 2007 11:27 PM
> Subject: [Rd] AIX testers needed
>
>
> > With much thanks to Ei-ji Nakama, R 2.5.0 alpha supports building on
> > AIX
> > (at least AIX 5.2 on one system).
> >
> > Would anyone able to test this please get the latest tarball from
> >
> > http://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
> >
> > and try installing (after reading the AIX notes in R-admin.html
> > section
> > C.9).
> >
> > In particular it would be very helpful to know if
> >
> > 1) --enable-BLAS-shlib works (it is the default everywhere except
> > AIX and
> > Darwin)
> >
> > 2) if people succeed in installing GNU libiconv and building without
> > needing --without-iconv.
> >
> > I am Cc:ing all the people I tracked down who reported attempted AIX
> > installations in 2006 in the hope that they may still be interested.
> >
> > Please report success and any hints or problems in the R-devel list.
> >
> > --
> > Brian D. Ripley,                  ripley at stats.ox.ac.uk
> > Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> > University of Oxford,             Tel:  +44 1865 272861 (self)
> > 1 South Parks Road,                     +44 1865 272866 (PA)
> > Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>
>
>


-- 
EI-JI Nakama  <nakama at ki.rim.or.jp>
"\u4e2d\u9593\u6804\u6cbb"  <nakama at ki.rim.or.jp>


From bolker at zoo.ufl.edu  Mon May 21 01:19:26 2007
From: bolker at zoo.ufl.edu (Ben Bolker)
Date: Sun, 20 May 2007 19:19:26 -0400
Subject: [Rd] importing a function, generic conflicts
Message-ID: <4650D77E.8090503@zoo.ufl.edu>


  so ... I need to calculate numerical Hessians in some
package code, and fdHess() in the nlme package seems
to work just fine.  However:

  (1) minor issue -- it bugs me a little bit to require
the whole package for the sake of a single function
(on the other hand, nlme is pretty widespread and useful).
Since nlme is GPL'd, I could just copy the fdHess function
(with attribution) into my package code.
Then I would be insulated from future changes (although
also would not get the benefit of any future bug fixes) ...
opinions?

  (2) The other problem with requiring nlme is that
I have a generic conflict with the (S3) BIC generic defined
in nlme -- it asks for BIC(object, ...), assuming that
the number of observations can be extracted from the
object, whereas I have BIC(object, ..., nobs) for those
cases where one can't get the number of observations
 directly and must specify it explicitly instead.

  Does anyone have clever (or elegant) solutions to these two problems?

  Ben Bolker

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 254 bytes
Desc: OpenPGP digital signature
Url : https://stat.ethz.ch/pipermail/r-devel/attachments/20070520/28d6f572/attachment.bin 

From ray at ganymede.org  Sun May 20 03:03:21 2007
From: ray at ganymede.org (ray at ganymede.org)
Date: Sun, 20 May 2007 03:03:21 +0200 (CEST)
Subject: [Rd] section needed in FAQ - Using R (PR#9698)
Message-ID: <20070520010321.7689F23202@slim.kubism.ku.dk>

Full_Name: Ray Kiddy
Version: R 2.5.0 GUI 1.19 (4308)
OS: Mac OS X 10.4.9
Submission from: (NULL) (71.139.33.60)



There is no section in the FAQ equivalent to "Using R". The "R Basics" is too
basic. I would say it addresses "meta-R" questions, such as installing.

I had a FAQ that I would think would be a basic "Using R" question, namely: "How
does one generate random numbers?". It is actually non-trivial to answer this if
one is new to R, as there are too many hits for "Random" and they dive too
deeply.

My answer to this FAQ would be:

In order to generate random numbers, there are "r" methods for every
distribution. Distributions include Uniform (runif), Binomial (rbinom), Normal
(rnorm), Cauchy (rcauchy), Chi Square (rchisq), Exponential (rexp), Gamma
(rgamma), and many more.

By the way, the R program itself is really badly in need of an "appropos()" to
go alongside "help()". Perhaps "help()" can be renamed to "hunt()" or
"huntAndPeck()".


From P.Dalgaard at biostat.ku.dk  Mon May 21 09:14:51 2007
From: P.Dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Mon, 21 May 2007 09:14:51 +0200
Subject: [Rd] section needed in FAQ - Using R (PR#9698)
In-Reply-To: <20070520010321.7689F23202@slim.kubism.ku.dk>
References: <20070520010321.7689F23202@slim.kubism.ku.dk>
Message-ID: <465146EB.3020207@biostat.ku.dk>

ray at ganymede.org wrote:
> By the way, the R program itself is really badly in need of an "appropos()" to
> go alongside "help()". Perhaps "help()" can be renamed to "hunt()" or
> "huntAndPeck()".
>
>   
help.search("appropos")

-- 
   O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
  c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
 (*) \(*) -- University of Copenhagen   Denmark          Ph:  (+45) 35327918
~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)                  FAX: (+45) 35327907


From Peter.Ruckdeschel at uni-bayreuth.de  Mon May 21 08:57:28 2007
From: Peter.Ruckdeschel at uni-bayreuth.de (Peter Ruckdeschel)
Date: Mon, 21 May 2007 08:57:28 +0200
Subject: [Rd] setIs-relation does not entail automatic coercion in S4
 method	dispatch --- should it?
Message-ID: <465142D8.8030109@uni-bayreuth.de>

Hi R-devels,

I am a bit puzzled about when/if "setIs-conditional" coercion is performed
in S4 method dispatch.

Setup: Myclass1 setIs()-conditionally is inheriting from Myclass2.

My first guess would have been:

If the corresponding test clause in setIs() is TRUE and there is
no Myclass1-method foo() but a Myclass2-method foo(), a call to
foo() with a corresponding Myclass1 instance as argument
automatically coerce this instance to Myclass2 using the coerce
function in setIs(). It does not; (consider the example below).

I am pretty sure that there are good reasons for this behaviour, but could you
give me arguments why this automatic coercion should not be a good idea?

###############################################################################
###### Begin of example
###############################################################################

setClass("Myclass1",representation(a="numeric"))
setClass("Myclass2",representation(b="numeric"))

### conditional inheritance by setIs

setIs("Myclass1", "Myclass2", test = function(obj) obj at a>0,
       coerce = function(obj) {cat("setIs coercion used\n")## does not seem to be used for
                               new("Myclass2", b=obj at a)   },  ## automatic coercion

       replace = function(obj, value) {cat("setIs replacement used\n") ## does not seem to be used...
                                       new("Myclass2", b=value at b)
                                      })

### accessor to slot b

if(!isGeneric("b")) setGeneric("b", function(object) standardGeneric("b"))
setMethod("b","Myclass2", function(object) object at b)

### a method for Myclass2
if(!isGeneric("foo")) setGeneric("foo", function(object) standardGeneric("foo"))
setMethod("foo","Myclass2",function(object)cat("Myclass2-fct:",b(object),"\n"))

###############################################################################

selectMethod("foo","Myclass2")  ### does find foo-method for class Myclass2 as expected
selectMethod("foo","Myclass1")  ### does find foo-method for class Myclass2 as expected

## an instance of Myclass1

MyC1   <- new("Myclass1",a=2)
MyC1.0 <- new("Myclass1",a=-2)

### implicit coercion using setIs coerce function does not work as I would have expected:

foo(MyC1)   ### does not coerce MyC1 to Myclass2 although possible
foo(MyC1.0) ### as expected: does not coerce as not possible

### explicit coercion:

foo(as(MyC1,"Myclass2"))   ### works as expected: uses foo-method for class Myclass2
foo(as(MyC1.0,"Myclass2")) ### works as expected: error as not coercable

### way out?

setMethod("b","Myclass1", function(object)
                            if (object at a>0)
                                object at a
                            else
                                stop("not coercable to class Myclass2")
          )
####

foo(MyC1)   ### works as expected: uses foo-method for class Myclass2
foo(MyC1.0) ### works as expected: error as not coercable

###############################################################################
###### End of example
###############################################################################

Any suggestion appreciated
thanks already
Peter


From petr.pikal at precheza.cz  Mon May 21 11:43:07 2007
From: petr.pikal at precheza.cz (Petr PIKAL)
Date: Mon, 21 May 2007 11:43:07 +0200
Subject: [Rd] bug? in first plot
Message-ID: <OFD5A80E13.205A3423-ONC12572E2.0033E1F8-C12572E2.003562A3@precheza.cz>

Started as -vanilla

R version 2.6.0 Under development (unstable) (2007-04-30 r41390)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> search()
[1] ".GlobalEnv"        "package:stats"     "package:graphics" 
"package:grDevices" "package:utils"     "package:datasets" 
"package:methods" 
[8] "Autoloads"         "package:base" 
> plot(1:10, 1:10)

plots only left upper corner of a plot at a first attempt. When I issue a 
second command, the plot is OK. I wonder if it is system or machine 
specific or if it is really a bug in R. No problem but should be fixed 
before it will go out as a new version.

Sys.info()
                      sysname                       release        version 
                     nodename                       machine 
                    "Windows"                      "NT 5.1" "(build 2600) 
Service Pack 2"


Regards

Petr Pikal
petr.pikal at precheza.cz


From ripley at stats.ox.ac.uk  Mon May 21 12:06:34 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 21 May 2007 11:06:34 +0100 (BST)
Subject: [Rd] bug? in first plot
In-Reply-To: <OFD5A80E13.205A3423-ONC12572E2.0033E1F8-C12572E2.003562A3@precheza.cz>
References: <OFD5A80E13.205A3423-ONC12572E2.0033E1F8-C12572E2.003562A3@precheza.cz>
Message-ID: <Pine.LNX.4.64.0705211103360.28870@gannet.stats.ox.ac.uk>

Please, that is a serious old version of R-devel and we are now on r41655.
I don't see it on a recent version (and actually I have never seen it).

On Mon, 21 May 2007, Petr PIKAL wrote:

> Started as -vanilla
>
> R version 2.6.0 Under development (unstable) (2007-04-30 r41390)
> Copyright (C) 2007 The R Foundation for Statistical Computing
> ISBN 3-900051-07-0
>
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
>
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
>
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
>
>> search()
> [1] ".GlobalEnv"        "package:stats"     "package:graphics"
> "package:grDevices" "package:utils"     "package:datasets"
> "package:methods"
> [8] "Autoloads"         "package:base"
>> plot(1:10, 1:10)
>
> plots only left upper corner of a plot at a first attempt. When I issue a
> second command, the plot is OK. I wonder if it is system or machine
> specific or if it is really a bug in R. No problem but should be fixed
> before it will go out as a new version.
>
> Sys.info()
>                      sysname                       release        version
>                     nodename                       machine
>                    "Windows"                      "NT 5.1" "(build 2600)
> Service Pack 2"
>
>
> Regards
>
> Petr Pikal
> petr.pikal at precheza.cz
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From wl2776 at gmail.com  Mon May 21 14:01:39 2007
From: wl2776 at gmail.com (Vladimir Eremeev)
Date: Mon, 21 May 2007 05:01:39 -0700 (PDT)
Subject: [Rd] section needed in FAQ - Using R (PR#9698)
In-Reply-To: <20070520010321.7689F23202@slim.kubism.ku.dk>
References: <20070520010321.7689F23202@slim.kubism.ku.dk>
Message-ID: <10717487.post@talk.nabble.com>


There are also R reference cards and other quick- and kick-starting manuals,
mentioned in the documentation.


Ray Kiddy-2 wrote:
> 
> There is no section in the FAQ equivalent to "Using R". The "R Basics" is
> too
> basic. I would say it addresses "meta-R" questions, such as installing.
> 
> I had a FAQ that I would think would be a basic "Using R" question,
> namely: "How
> does one generate random numbers?". It is actually non-trivial to answer
> this if
> one is new to R, as there are too many hits for "Random" and they dive too
> deeply.
> 
> My answer to this FAQ would be:
> 
> In order to generate random numbers, there are "r" methods for every
> distribution. Distributions include Uniform (runif), Binomial (rbinom),
> Normal
> (rnorm), Cauchy (rcauchy), Chi Square (rchisq), Exponential (rexp), Gamma
> (rgamma), and many more.
> 
> By the way, the R program itself is really badly in need of an
> "appropos()" to
> go alongside "help()". Perhaps "help()" can be renamed to "hunt()" or
> "huntAndPeck()".
> 

-- 
View this message in context: http://www.nabble.com/section-needed-in-FAQ---Using-R-%28PR-9698%29-tf3788564.html#a10717487
Sent from the R devel mailing list archive at Nabble.com.


From jfox at mcmaster.ca  Mon May 21 14:59:25 2007
From: jfox at mcmaster.ca (John Fox)
Date: Mon, 21 May 2007 08:59:25 -0400
Subject: [Rd] section needed in FAQ - Using R (PR#9698)
In-Reply-To: <465146EB.3020207@biostat.ku.dk>
Message-ID: <20070521125923.JDDY1593.tomts13-srv.bellnexxia.net@JohnDesktop8300>

Dear Peter and Ray,

I think that Ray's problem finding apropos is that "apropos" has one "p."
Interestingly, help.search("appropos") (as suggested by Peter) is able to
accommodate the spelling error.

Regards,
 John

--------------------------------
John Fox, Professor
Department of Sociology
McMaster University
Hamilton, Ontario
Canada L8S 4M4
905-525-9140x23604
http://socserv.mcmaster.ca/jfox 
-------------------------------- 

> -----Original Message-----
> From: r-devel-bounces at r-project.org 
> [mailto:r-devel-bounces at r-project.org] On Behalf Of Peter Dalgaard
> Sent: Monday, May 21, 2007 3:15 AM
> To: ray at ganymede.org
> Cc: R-bugs at biostat.ku.dk; r-devel at stat.math.ethz.ch
> Subject: Re: [Rd] section needed in FAQ - Using R (PR#9698)
> 
> ray at ganymede.org wrote:
> > By the way, the R program itself is really badly in need of an 
> > "appropos()" to go alongside "help()". Perhaps "help()" can 
> be renamed 
> > to "hunt()" or "huntAndPeck()".
> >
> >   
> help.search("appropos")
> 
> -- 
>    O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
>   c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
>  (*) \(*) -- University of Copenhagen   Denmark          Ph:  
> (+45) 35327918
> ~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)                  FAX: 
> (+45) 35327907
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From contact at arjunnarayan.com  Mon May 21 16:19:27 2007
From: contact at arjunnarayan.com (Arjun Ravi Narayan)
Date: Mon, 21 May 2007 10:19:27 -0400
Subject: [Rd] Passing R CMD Check without data
Message-ID: <8029eca10705210719t344748a8sdabdd5639b9f2dc4@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070521/f38c127c/attachment.pl 

From hin-tak.leung at cimr.cam.ac.uk  Mon May 21 18:00:30 2007
From: hin-tak.leung at cimr.cam.ac.uk (Hin-Tak Leung)
Date: Mon, 21 May 2007 17:00:30 +0100
Subject: [Rd] readLines needs some extra bit of documentation.
Message-ID: <4651C21E.3070109@cimr.cam.ac.uk>

I have a need to use readLines to read just the first line
of a file and do some processing on that, and read and re-read
?readLines and did not see any mention of whether the actual
end-of-line character (LF, CR/LF or CR) is included as part of
the returned character vector or not.

I just tried it and and it seems that it strips the EOL characters
- so it is obvious as soon as one tries it, but I was hoping that it 
should be mentioned ?readLines (e.g. "The actual EOL character(s) are 
striped and not included as part of the returned character vector").

The reason why I was specifically looking for that information is that,
in perl, the line-input operator, <file> , returns character vectors
with the EOL included, and is opposite to that of R. I know I cannot
compare apple with orange, and R's readLines() behavior is obvious
as soon as one tries it, but an explicit sentence in the help page
would be nice...

HTL


From jasoncbarnhart at msn.com  Mon May 21 19:40:07 2007
From: jasoncbarnhart at msn.com (Jason Barnhart)
Date: Mon, 21 May 2007 10:40:07 -0700
Subject: [Rd] AIX testers needed
References: <BAY116-DAV9C25C47DAB32FBD9519F0CF320@phx.gbl>
	<dc41e1260705191853r5e9fed51j2f9d07840d4ad7f5@mail.gmail.com>
Message-ID: <BAY116-DAV4CB005F0377A682BFCD72CF370@phx.gbl>

Thank you for responding.

I should have added -a on my ulimit command.  Here are its results; 
which I believe are not the limiting factor.

%/ > ulimit -a
core file size        (blocks, -c) 1048575
data seg size         (kbytes, -d) unlimited
file size             (blocks, -f) unlimited
max memory size       (kbytes, -m) 32768
open files                    (-n) 2000
pipe size          (512 bytes, -p) 64
stack size            (kbytes, -s) hard
cpu time             (seconds, -t) unlimited
max user processes            (-u) 128
virtual memory        (kbytes, -v) unlimited

Here are my gcc-v results.  They are very similiar.

%/ > gcc -v
Using built-in specs.
Target: powerpc-ibm-aix5.3.0.0
Configured with: ../gcc-4.1.2/configure
    --prefix=/opt/sas/msd/home/barnharj/usr/local
    --program-suffix=-4.1.2
    --enable-threads=aix
    --enable-languages=c,c++,fortran
    --disable-nls
    --with-mpfr=/opt/sas/msd/home/barnharj/usr/local
    --with-gmp=/opt/sas/msd/home/barnharj/usr/local
Thread model: aix
gcc version 4.1.2

My results for gcc -print-multi-lib are indentical to yours.

It should be noted that I did not attempt a 64 bit build.  My system 
is not configured properly for that just yet.

Via private correspondence someone also suggested the following 
system("ulimit -d unlimited") during an R session.  That failed as did 
issuing the command before launching R.

I'll keep investigating.

My call to configure is listed below.

/configure --prefix=$HOME/usr/local --program-suffix=rc --with-readline=no 
 --with-x=no --enable-memory-profiling


----- Original Message ----- 
From: "Ei-ji Nakama" <nakama at ki.rim.or.jp>
To: "Jason Barnhart" <jasoncbarnhart at msn.com>
Cc: <r-devel at stat.math.ethz.ch>
Sent: Saturday, May 19, 2007 6:53 PM
Subject: Re: [Rd] AIX testers needed


> Hi.
>
> system("ulimit") of AIX gives back file block size.
> A limit of memory is `ulimit -m'.
>
> I made gcc-4.1.2 and made R-2.5.0+patched, but the problem did not 
> happen.
>
> $ gcc-4.1 -v
> Using built-in specs.
> Target: powerpc-ibm-aix5.2.0.0
> Configured with: ../configure --with-as=/usr/bin/as
> --with-ld=/usr/bin/ld --disable-nls --prefix=/usr/local1/gcc-4.1.2
> --enable-threads --host=powerpc-ibm-aix5.2.0.0 --program-suffix=-4.1
> --with-gmp=/usr/local1 --with-mpfr=/usr/local1
> --enable-languages=c,c++,f95
> Thread model: aix
> gcc version 4.1.2
>
> $ gcc-4.1 -print-multi-lib
> .;
> pthread;@pthread
> ppc64;@maix64
> pthread/ppc64;@pthread at maix64
>
> $ export OBJECT_MODE=64
> $ ./configure CC="gcc-4.1 -maix64" \
>                   F77="gfortran-4.1 -maix64" \
>                   CXX="g++-4.1 -maix64" \
>                   --enable-BLAS-shlib --without-iconv
>
>
> 2007/5/19, Jason Barnhart <jasoncbarnhart at msn.com>:
>> Per the request to test the latest tarball referenced below, I have
>> built R on AIX 5.3. There is a memory issue, please see 3) below.
>>
>>     1) Build with --enable-BLAS-shlib option.  Builds and
>>     passes "make check".
>>
>>     2) GNU libiconv was installed; R configured *without*
>> the --without-
>>     iconv option. Builds and passes "make check."
>>
>>     3) Memory issue:
>>         a) Although the server possesses 8GB of RAM and
>>         system("ulimit") returns "unlimited" as its value, R does 
>> not
>>         "have enough memory."
>>
>>         b) This code works on R-2.4.0 on WinXP with 2GB of RAM, but
>>         fails on the AIX build.  Example code:
>>
>>         > xx <- matrix(rep(1e+10,1e7),nrow=1e4,ncol=1e3)
>>         > tmp.df <- as.data.frame(cbind(xx,xx,xx))
>>         Error: cannot allocate vector of size 228.9 Mb
>>         > gc()
>>                    used (Mb) gc trigger  (Mb) max used  (Mb)
>>         Ncells   233035  6.3     467875  12.5   350000   9.4
>>         Vcells 10104141 77.1   31854441 243.1 30104289 229.7
>>
>>     4) Used gcc-4.1.2; I have not tried the native compiler.
>>
>> Questions:
>>
>>     1) Are there suggestions on how to diagnose and resolve the 
>> memory
>>     issue?  I'm still building my tool chain and I am in the midst 
>> of
>>     installing gdb.
>>
>>     2) Regarding the build process itself, is there more 
>> documentation
>>     or results that I should forward?
>>
>> Thanks,
>> -jason
>>
>>
>> > version               _
>> platform       powerpc-ibm-aix5.3.0.0
>> arch           powerpc
>> os             aix5.3.0.0
>> system         powerpc, aix5.3.0.0
>> status         RC
>> major          2
>> minor          5.0
>> year           2007
>> month          04
>> day            22
>> svn rev        41276
>> language       R
>> version.string R version 2.5.0 RC (2007-04-22 r41276)
>>
>>
>> ----- Original Message -----
>> From: "Prof Brian Ripley" <ripley at stats.ox.ac.uk>
>> To: <R-devel at r-project.org>
>> Cc: "Sheth, Jagat K" <jagat.k.sheth at citigroup.com>; "kamil
>> Marcinkowski" <kamil at ualberta.ca>; "Tiong Lim" 
>> <t.lim at auckland.ac.nz>;
>> "Eric Harley" <ericctharley at gmail.com>; "Matthew Beason"
>> <mbeason at harrahs.com>; <watplatt at us.ibm.com>
>> Sent: Wednesday, March 28, 2007 11:27 PM
>> Subject: [Rd] AIX testers needed
>>
>>
>> > With much thanks to Ei-ji Nakama, R 2.5.0 alpha supports building 
>> > on
>> > AIX
>> > (at least AIX 5.2 on one system).
>> >
>> > Would anyone able to test this please get the latest tarball from
>> >
>> > http://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
>> >
>> > and try installing (after reading the AIX notes in R-admin.html
>> > section
>> > C.9).
>> >
>> > In particular it would be very helpful to know if
>> >
>> > 1) --enable-BLAS-shlib works (it is the default everywhere except
>> > AIX and
>> > Darwin)
>> >
>> > 2) if people succeed in installing GNU libiconv and building 
>> > without
>> > needing --without-iconv.
>> >
>> > I am Cc:ing all the people I tracked down who reported attempted 
>> > AIX
>> > installations in 2006 in the hope that they may still be 
>> > interested.
>> >
>> > Please report success and any hints or problems in the R-devel 
>> > list.
>> >
>> > --
>> > Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> > Professor of Applied Statistics, 
>> > http://www.stats.ox.ac.uk/~ripley/
>> > University of Oxford,             Tel:  +44 1865 272861 (self)
>> > 1 South Parks Road,                     +44 1865 272866 (PA)
>> > Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>> >
>> > ______________________________________________
>> > R-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>>
>>
>
>
> -- 
> EI-JI Nakama  <nakama at ki.rim.or.jp>
> "\u4e2d\u9593\u6804\u6cbb"  <nakama at ki.rim.or.jp>
>


From hin-tak.leung at cimr.cam.ac.uk  Mon May 21 20:02:25 2007
From: hin-tak.leung at cimr.cam.ac.uk (Hin-Tak Leung)
Date: Mon, 21 May 2007 19:02:25 +0100
Subject: [Rd] AIX testers needed
In-Reply-To: <BAY116-DAV4CB005F0377A682BFCD72CF370@phx.gbl>
References: <BAY116-DAV9C25C47DAB32FBD9519F0CF320@phx.gbl>	<dc41e1260705191853r5e9fed51j2f9d07840d4ad7f5@mail.gmail.com>
	<BAY116-DAV4CB005F0377A682BFCD72CF370@phx.gbl>
Message-ID: <4651DEB1.6090100@cimr.cam.ac.uk>

Jason Barnhart wrote:
> Thank you for responding.
> 
> I should have added -a on my ulimit command.  Here are its results; 
> which I believe are not the limiting factor.
> 
> %/ > ulimit -a
> core file size        (blocks, -c) 1048575
> data seg size         (kbytes, -d) unlimited
> file size             (blocks, -f) unlimited
> max memory size       (kbytes, -m) 32768
> open files                    (-n) 2000
> pipe size          (512 bytes, -p) 64
> stack size            (kbytes, -s) hard
> cpu time             (seconds, -t) unlimited
> max user processes            (-u) 128
> virtual memory        (kbytes, -v) unlimited

you think max memory = 32768k (or 32MB) is not limiting?
Please think again...

HTL


From jfox at mcmaster.ca  Mon May 21 20:07:10 2007
From: jfox at mcmaster.ca (John Fox)
Date: Mon, 21 May 2007 14:07:10 -0400
Subject: [Rd] section needed in FAQ - Using R (PR#9698)
In-Reply-To: <2D96879A-5B1A-48B2-B2F2-DCE37132B854@ganymede.org>
Message-ID: <20070521180709.RBBY13710.tomts25-srv.bellnexxia.net@JohnDesktop8300>

Dear,

My spelling correction was poorly phrased, since there are actually two p's
in "apropos," but there aren't two adjacent p's.

I agree that a reference to apropos on the help page for help is a good
idea.

Regards,
 John

--------------------------------
John Fox, Professor
Department of Sociology
McMaster University
Hamilton, Ontario
Canada L8S 4M4
905-525-9140x23604
http://socserv.mcmaster.ca/jfox 
-------------------------------- 

> -----Original Message-----
> From: Ray Kiddy [mailto:ray at ganymede.org] 
> Sent: Monday, May 21, 2007 1:57 PM
> To: John Fox
> Cc: 'Peter Dalgaard'; r-devel at stat.math.ethz.ch
> Subject: Re: [Rd] section needed in FAQ - Using R (PR#9698)
> 
> 
> On May 21, 2007, at 5:59 AM, John Fox wrote:
> 
> > Dear Peter and Ray,
> >
> > I think that Ray's problem finding apropos is that 
> "apropos" has one 
> > "p."
> > Interestingly, help.search("appropos") (as suggested by 
> Peter) is able 
> > to accommodate the spelling error.
> >
> > Regards,
> >  John
> >
> > --------------------------------
> > John Fox, Professor
> 
> Thanks for your information. I see I was spelling it wrong.
> 
> Can I make the suggestion that if one does "help(help)", 
> which I tried, that the page should mention "apropos". 
> Perhaps in the "See Also" section.
> 
> This was a mistake on my part, but documentation can be 
> helpful in response to user mistakes, rather than fragile.
> 
> thanx - ray
> 
> >
> >> -----Original Message-----
> >> From: r-devel-bounces at r-project.org
> >> [mailto:r-devel-bounces at r-project.org] On Behalf Of Peter Dalgaard
> >> Sent: Monday, May 21, 2007 3:15 AM
> >> To: ray at ganymede.org
> >> Cc: R-bugs at biostat.ku.dk; r-devel at stat.math.ethz.ch
> >> Subject: Re: [Rd] section needed in FAQ - Using R (PR#9698)
> >>
> >> ray at ganymede.org wrote:
> >>> By the way, the R program itself is really badly in need of an 
> >>> "appropos()" to go alongside "help()". Perhaps "help()" can
> >> be renamed
> >>> to "hunt()" or "huntAndPeck()".
> >>>
> >>>
> >> help.search("appropos")
> >>
> >> -- 
> >>    O__  ---- Peter Dalgaard             ?ster Farimagsgade 
> 5, Entr.B
> >>   c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
> >>  (*) \(*) -- University of Copenhagen   Denmark          Ph:
> >> (+45) 35327918
> >> ~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)                  FAX:
> >> (+45) 35327907
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >
> >
> >
> 
>


From jasoncbarnhart at msn.com  Mon May 21 20:55:52 2007
From: jasoncbarnhart at msn.com (Jason Barnhart)
Date: Mon, 21 May 2007 11:55:52 -0700
Subject: [Rd] AIX testers needed
References: <BAY116-DAV9C25C47DAB32FBD9519F0CF320@phx.gbl>	<dc41e1260705191853r5e9fed51j2f9d07840d4ad7f5@mail.gmail.com>
	<BAY116-DAV4CB005F0377A682BFCD72CF370@phx.gbl>
	<4651DEB1.6090100@cimr.cam.ac.uk>
Message-ID: <BAY116-DAV3B7C0810D677A38B00FE5CF370@phx.gbl>

Thanks for responding.

I don't think it's that simple.  That's a soft limit, the hard limit 
is "unlimited."

The results of gc() in the original post indicated that R could 
utililize more than 32MB of RAM.

My sysadmin had already increased my memory limits prior to my 
posting.

Just to confirm here are the results with ulimit -m set to unlimited 
prior to calling R.

> xx <- matrix(rep(1e+10,1e7),nrow=1e4,ncol=1e3)
> object.size(xx)/1024^2
[1] 76.29405
> system("ulimit -m")
unlimited
> tmp.df <- as.data.frame(cbind(xx,xx,xx))
Error: cannot allocate vector of size 228.9 Mb

----- Original Message ----- 
From: "Hin-Tak Leung" <hin-tak.leung at cimr.cam.ac.uk>
To: "Jason Barnhart" <jasoncbarnhart at msn.com>
Cc: <r-devel at stat.math.ethz.ch>
Sent: Monday, May 21, 2007 11:02 AM
Subject: Re: [Rd] AIX testers needed


> Jason Barnhart wrote:
>> Thank you for responding.
>>
>> I should have added -a on my ulimit command.  Here are its results; 
>> which I believe are not the limiting factor.
>>
>> %/ > ulimit -a
>> core file size        (blocks, -c) 1048575
>> data seg size         (kbytes, -d) unlimited
>> file size             (blocks, -f) unlimited
>> max memory size       (kbytes, -m) 32768
>> open files                    (-n) 2000
>> pipe size          (512 bytes, -p) 64
>> stack size            (kbytes, -s) hard
>> cpu time             (seconds, -t) unlimited
>> max user processes            (-u) 128
>> virtual memory        (kbytes, -v) unlimited
>
> you think max memory = 32768k (or 32MB) is not limiting?
> Please think again...
>
> HTL
>


From p.dalgaard at biostat.ku.dk  Mon May 21 21:10:11 2007
From: p.dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Mon, 21 May 2007 21:10:11 +0200
Subject: [Rd] section needed in FAQ - Using R (PR#9698)
In-Reply-To: <20070521180709.RBBY13710.tomts25-srv.bellnexxia.net@JohnDesktop8300>
References: <20070521180709.RBBY13710.tomts25-srv.bellnexxia.net@JohnDesktop8300>
Message-ID: <4651EE93.3010708@biostat.ku.dk>

John Fox wrote:
> Dear,
>
> My spelling correction was poorly phrased, since there are actually two p's
> in "apropos," but there aren't two adjacent p's.
>
> I agree that a reference to apropos on the help page for help is a good
> idea.
>
>   
Of course, except that it is unclear that the original post wasn't 
actually looking for help.search, which is already in the See Also of 
help(help) (and of help(), for that matter).


From deepayan.sarkar at gmail.com  Mon May 21 23:21:13 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Mon, 21 May 2007 14:21:13 -0700
Subject: [Rd] dev.interactive() changes
Message-ID: <eb555e660705211421i37c82f72ue05ec1b19b8b6bcb@mail.gmail.com>

On 5/5/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:

[...]

> You meam as in
>
>      o  dev.interactive() regards devices with the displaylist enabled
>         as interactive, and packages can register the names of their
>         devices as interactive via deviceIsInteractive().
>
> ?

Quick follow up: the displaylist based detection is working well, but
deviceIsInteractive() gives me an error:

> deviceIsInteractive("QT")
Error in deviceIsInteractive("QT") : cannot change value of locked
binding for '.known_interactive.devices'
> sessionInfo()
R version 2.6.0 Under development (unstable) (2007-05-21 r41658)
i686-pc-linux-gnu

This happens interactively as well as in package loading code.

-Deepayan


From d.scott at auckland.ac.nz  Mon May 21 23:46:25 2007
From: d.scott at auckland.ac.nz (David Scott)
Date: Tue, 22 May 2007 09:46:25 +1200 (NZST)
Subject: [Rd] section needed in FAQ - Using R (PR#9698)
In-Reply-To: <10717487.post@talk.nabble.com>
References: <20070520010321.7689F23202@slim.kubism.ku.dk>
	<10717487.post@talk.nabble.com>
Message-ID: <Pine.LNX.4.64.0705220943510.11865@stat12.stat.auckland.ac.nz>

>>
>> By the way, the R program itself is really badly in need of an
>> "appropos()" to
>>

I don't normally pick on spelling errors and my reply is out of sequence 
because I deleted the Peter's message replying on this.

?appropos

will give a not found reply

?apropos

will give some useful information

David Scott


_________________________________________________________________
David Scott	Department of Statistics, Tamaki Campus
 		The University of Auckland, PB 92019
 		Auckland 1142,    NEW ZEALAND
Phone: +64 9 373 7599 ext 86830		Fax: +64 9 373 7000
Email:	d.scott at auckland.ac.nz

Graduate Officer, Department of Statistics
Director of Consulting, Department of Statistics


From sfalcon at fhcrc.org  Tue May 22 02:10:37 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 21 May 2007 17:10:37 -0700
Subject: [Rd] Passing R CMD Check without data
In-Reply-To: <8029eca10705210719t344748a8sdabdd5639b9f2dc4@mail.gmail.com>
	(Arjun Ravi Narayan's message of "Mon,
	21 May 2007 10:19:27 -0400")
References: <8029eca10705210719t344748a8sdabdd5639b9f2dc4@mail.gmail.com>
Message-ID: <m2veel90qq.fsf@ziti.local>

"Arjun Ravi Narayan" <contact at arjunnarayan.com> writes:

> I have a package which passes R CMD check with the --no-vignettes option.
> However, it does not pass the check without that, as the vignette relies on
> some data files that I cannot distribute. However, I would like the package
> to pass the check so that I can put it on CRAN, so that other people with
> access to the dataset can put the data into the package, and then rebuild
> the vignettes themselves.

I would recommend having a separate vignette that uses toy data, if
that is all that is available, that demonstrates the basic use of
the package.  A consider part of the value of a package vignette,
IMHO, is having something that (i) the user can run interactively on
their own, and (ii) can be automatically checked.

Your current vignette can be included as pdf (the Rnw could live in
another place under inst/).

You might also look at the vsn package in Bioconductor which uses a
Makefile to avoid R CMD check from building its vignette because it is
too time consuming...

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From sfalcon at fhcrc.org  Tue May 22 02:15:10 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Mon, 21 May 2007 17:15:10 -0700
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070519160413.GK21178@econ.upenn.edu> (Andrew Clausen's message
	of "Sat, 19 May 2007 12:04:13 -0400")
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu>
Message-ID: <m2r6p990j5.fsf@ziti.local>

Hi Andrew,

Andrew Clausen <clausen at econ.upenn.edu> writes:
> For reasons I can't explain, the code I posted worked in my session, but didn't
> work when I started a fresh one.  standardGeneric() seems to get confused
> by defaults for missing arguments.  It looks for a "missing" method with
> this code:
>
> 	relist <- function(flesh, skeleton=attr(flesh, "skeleton"))
> 	{
> 		standardGeneric("relist")
> 	}

This looks very odd to me.  If you are creating an S4 generic
function, why are you not calling setGeneric?  Or has that part of the
code simply been omitted from your post?

I will also add that the notion of a default argument on a generic
function seems a bit odd to me.  If an argument is available for
dispatch, I just don't see what sense it makes to have a default.  In
those cases, the default should be handled by the method that has a
signature with said argument matching the "missing" class.

What often does make sense is to define a generic function where some
argument are not available for dispatch.  For example:

setGeneric("foo", signature="flesh",
           function(flesh, skeleton=attr(flesh, "skeleton") 
               standardGeneric("foo")))


+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From nakama at ki.rim.or.jp  Tue May 22 04:32:41 2007
From: nakama at ki.rim.or.jp (Ei-ji Nakama)
Date: Tue, 22 May 2007 11:32:41 +0900
Subject: [Rd] AIX testers needed
In-Reply-To: <BAY116-DAV4CB005F0377A682BFCD72CF370@phx.gbl>
References: <BAY116-DAV9C25C47DAB32FBD9519F0CF320@phx.gbl>
	<dc41e1260705191853r5e9fed51j2f9d07840d4ad7f5@mail.gmail.com>
	<BAY116-DAV4CB005F0377A682BFCD72CF370@phx.gbl>
Message-ID: <dc41e1260705211932u27cc2bf8jc8507b7b6423361c@mail.gmail.com>

Hi.

I was not careful to 32bit very much.
You can expand memory for data to 2G by LDR_CNTRL.
It is as follows.

LDR_CNTRL="MAXDATA=0x10000000" 	1 	  256 MB
LDR_CNTRL="MAXDATA=0x20000000" 	2 	  512 MB
LDR_CNTRL="MAXDATA=0x30000000" 	3 	  768 MB
LDR_CNTRL="MAXDATA=0x40000000" 	4 	1024 MB
LDR_CNTRL="MAXDATA=0x50000000" 	5 	1280 MB
LDR_CNTRL="MAXDATA=0x60000000" 	6 	1536 MB
LDR_CNTRL="MAXDATA=0x70000000" 	7 	1792 MB
LDR_CNTRL="MAXDATA=0x80000000"  8       2048 MB

try.
$ export  LDR_CNTRL="MAXDATA=0x80000000"
$ R -q
> xx <- matrix(rep(1e+10,1e7),nrow=1e4,ncol=1e3)
> tmp.df <- as.data.frame(cbind(xx,xx,xx))
>



2007/5/22, Jason Barnhart <jasoncbarnhart at msn.com>:
> Thank you for responding.
>
> I should have added -a on my ulimit command.  Here are its results;
> which I believe are not the limiting factor.
>
> %/ > ulimit -a
> core file size        (blocks, -c) 1048575
> data seg size         (kbytes, -d) unlimited
> file size             (blocks, -f) unlimited
> max memory size       (kbytes, -m) 32768
> open files                    (-n) 2000
> pipe size          (512 bytes, -p) 64
> stack size            (kbytes, -s) hard
> cpu time             (seconds, -t) unlimited
> max user processes            (-u) 128
> virtual memory        (kbytes, -v) unlimited
>
> Here are my gcc-v results.  They are very similiar.
>
> %/ > gcc -v
> Using built-in specs.
> Target: powerpc-ibm-aix5.3.0.0
> Configured with: ../gcc-4.1.2/configure
>     --prefix=/opt/sas/msd/home/barnharj/usr/local
>     --program-suffix=-4.1.2
>     --enable-threads=aix
>     --enable-languages=c,c++,fortran
>     --disable-nls
>     --with-mpfr=/opt/sas/msd/home/barnharj/usr/local
>     --with-gmp=/opt/sas/msd/home/barnharj/usr/local
> Thread model: aix
> gcc version 4.1.2
>
> My results for gcc -print-multi-lib are indentical to yours.
>
> It should be noted that I did not attempt a 64 bit build.  My system
> is not configured properly for that just yet.
>
> Via private correspondence someone also suggested the following
> system("ulimit -d unlimited") during an R session.  That failed as did
> issuing the command before launching R.
>
> I'll keep investigating.
>
> My call to configure is listed below.
>
> /configure --prefix=$HOME/usr/local --program-suffix=rc --with-readline=no
>  --with-x=no --enable-memory-profiling
>
>
> ----- Original Message -----
> From: "Ei-ji Nakama" <nakama at ki.rim.or.jp>
> To: "Jason Barnhart" <jasoncbarnhart at msn.com>
> Cc: <r-devel at stat.math.ethz.ch>
> Sent: Saturday, May 19, 2007 6:53 PM
> Subject: Re: [Rd] AIX testers needed
>
>
> > Hi.
> >
> > system("ulimit") of AIX gives back file block size.
> > A limit of memory is `ulimit -m'.
> >
> > I made gcc-4.1.2 and made R-2.5.0+patched, but the problem did not
> > happen.
> >
> > $ gcc-4.1 -v
> > Using built-in specs.
> > Target: powerpc-ibm-aix5.2.0.0
> > Configured with: ../configure --with-as=/usr/bin/as
> > --with-ld=/usr/bin/ld --disable-nls --prefix=/usr/local1/gcc-4.1.2
> > --enable-threads --host=powerpc-ibm-aix5.2.0.0 --program-suffix=-4.1
> > --with-gmp=/usr/local1 --with-mpfr=/usr/local1
> > --enable-languages=c,c++,f95
> > Thread model: aix
> > gcc version 4.1.2
> >
> > $ gcc-4.1 -print-multi-lib
> > .;
> > pthread;@pthread
> > ppc64;@maix64
> > pthread/ppc64;@pthread at maix64
> >
> > $ export OBJECT_MODE=64
> > $ ./configure CC="gcc-4.1 -maix64" \
> >                   F77="gfortran-4.1 -maix64" \
> >                   CXX="g++-4.1 -maix64" \
> >                   --enable-BLAS-shlib --without-iconv
> >
> >
> > 2007/5/19, Jason Barnhart <jasoncbarnhart at msn.com>:
> >> Per the request to test the latest tarball referenced below, I have
> >> built R on AIX 5.3. There is a memory issue, please see 3) below.
> >>
> >>     1) Build with --enable-BLAS-shlib option.  Builds and
> >>     passes "make check".
> >>
> >>     2) GNU libiconv was installed; R configured *without*
> >> the --without-
> >>     iconv option. Builds and passes "make check."
> >>
> >>     3) Memory issue:
> >>         a) Although the server possesses 8GB of RAM and
> >>         system("ulimit") returns "unlimited" as its value, R does
> >> not
> >>         "have enough memory."
> >>
> >>         b) This code works on R-2.4.0 on WinXP with 2GB of RAM, but
> >>         fails on the AIX build.  Example code:
> >>
> >>         > xx <- matrix(rep(1e+10,1e7),nrow=1e4,ncol=1e3)
> >>         > tmp.df <- as.data.frame(cbind(xx,xx,xx))
> >>         Error: cannot allocate vector of size 228.9 Mb
> >>         > gc()
> >>                    used (Mb) gc trigger  (Mb) max used  (Mb)
> >>         Ncells   233035  6.3     467875  12.5   350000   9.4
> >>         Vcells 10104141 77.1   31854441 243.1 30104289 229.7
> >>
> >>     4) Used gcc-4.1.2; I have not tried the native compiler.
> >>
> >> Questions:
> >>
> >>     1) Are there suggestions on how to diagnose and resolve the
> >> memory
> >>     issue?  I'm still building my tool chain and I am in the midst
> >> of
> >>     installing gdb.
> >>
> >>     2) Regarding the build process itself, is there more
> >> documentation
> >>     or results that I should forward?
> >>
> >> Thanks,
> >> -jason
> >>
> >>
> >> > version               _
> >> platform       powerpc-ibm-aix5.3.0.0
> >> arch           powerpc
> >> os             aix5.3.0.0
> >> system         powerpc, aix5.3.0.0
> >> status         RC
> >> major          2
> >> minor          5.0
> >> year           2007
> >> month          04
> >> day            22
> >> svn rev        41276
> >> language       R
> >> version.string R version 2.5.0 RC (2007-04-22 r41276)
> >>
> >>
> >> ----- Original Message -----
> >> From: "Prof Brian Ripley" <ripley at stats.ox.ac.uk>
> >> To: <R-devel at r-project.org>
> >> Cc: "Sheth, Jagat K" <jagat.k.sheth at citigroup.com>; "kamil
> >> Marcinkowski" <kamil at ualberta.ca>; "Tiong Lim"
> >> <t.lim at auckland.ac.nz>;
> >> "Eric Harley" <ericctharley at gmail.com>; "Matthew Beason"
> >> <mbeason at harrahs.com>; <watplatt at us.ibm.com>
> >> Sent: Wednesday, March 28, 2007 11:27 PM
> >> Subject: [Rd] AIX testers needed
> >>
> >>
> >> > With much thanks to Ei-ji Nakama, R 2.5.0 alpha supports building
> >> > on
> >> > AIX
> >> > (at least AIX 5.2 on one system).
> >> >
> >> > Would anyone able to test this please get the latest tarball from
> >> >
> >> > http://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
> >> >
> >> > and try installing (after reading the AIX notes in R-admin.html
> >> > section
> >> > C.9).
> >> >
> >> > In particular it would be very helpful to know if
> >> >
> >> > 1) --enable-BLAS-shlib works (it is the default everywhere except
> >> > AIX and
> >> > Darwin)
> >> >
> >> > 2) if people succeed in installing GNU libiconv and building
> >> > without
> >> > needing --without-iconv.
> >> >
> >> > I am Cc:ing all the people I tracked down who reported attempted
> >> > AIX
> >> > installations in 2006 in the hope that they may still be
> >> > interested.
> >> >
> >> > Please report success and any hints or problems in the R-devel
> >> > list.
> >> >
> >> > --
> >> > Brian D. Ripley,                  ripley at stats.ox.ac.uk
> >> > Professor of Applied Statistics,
> >> > http://www.stats.ox.ac.uk/~ripley/
> >> > University of Oxford,             Tel:  +44 1865 272861 (self)
> >> > 1 South Parks Road,                     +44 1865 272866 (PA)
> >> > Oxford OX1 3TG, UK                Fax:  +44 1865 272595
> >> >
> >> > ______________________________________________
> >> > R-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-devel
> >> >
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >>
> >>
> >>
> >
> >
> > --
> > EI-JI Nakama  <nakama at ki.rim.or.jp>
> > "\u4e2d\u9593\u6804\u6cbb"  <nakama at ki.rim.or.jp>
> >
>
>
>
>


-- 
EI-JI Nakama  <nakama at ki.rim.or.jp>
"\u4e2d\u9593\u6804\u6cbb"  <nakama at ki.rim.or.jp>


From ripley at stats.ox.ac.uk  Tue May 22 07:19:40 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 22 May 2007 06:19:40 +0100 (BST)
Subject: [Rd] dev.interactive() changes
In-Reply-To: <eb555e660705211421i37c82f72ue05ec1b19b8b6bcb@mail.gmail.com>
References: <eb555e660705211421i37c82f72ue05ec1b19b8b6bcb@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705220618390.9988@gannet.stats.ox.ac.uk>

Thanks, it should work now.

On Mon, 21 May 2007, Deepayan Sarkar wrote:

> On 5/5/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
>
> [...]
>
>> You meam as in
>>
>>      o  dev.interactive() regards devices with the displaylist enabled
>>         as interactive, and packages can register the names of their
>>         devices as interactive via deviceIsInteractive().
>>
>> ?
>
> Quick follow up: the displaylist based detection is working well, but
> deviceIsInteractive() gives me an error:
>
>> deviceIsInteractive("QT")
> Error in deviceIsInteractive("QT") : cannot change value of locked
> binding for '.known_interactive.devices'
>> sessionInfo()
> R version 2.6.0 Under development (unstable) (2007-05-21 r41658)
> i686-pc-linux-gnu
>
> This happens interactively as well as in package loading code.
>
> -Deepayan
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From stvjc at channing.harvard.edu  Mon May 21 19:12:54 2007
From: stvjc at channing.harvard.edu (Vincent Carey 525-2265)
Date: Mon, 21 May 2007 13:12:54 -0400 (EDT)
Subject: [Rd] list element names in S4 class extending list
Message-ID: <Pine.GSO.4.58.0705211308340.15906@capecod.bwh.harvard.edu>

can list names attributes be preserved through S4
class containment?  seems to be so but only if the containment
relationship is direct ... see below.

> setClass("c1", contains="list")
[1] "c1"
> l1 = list(a=1, b=2)
> o1 = new("c1", l1)
> names(o1)     # pleasant surprise
[1] "a" "b"
> setClass("c2", contains="c1")
[1] "c2"
> o2 = new("c2", l1)
> names(o2)     # sad
NULL
> sessionInfo()
R version 2.6.0 Under development (unstable) (2007-05-11 r41535)
powerpc-apple-darwin8.9.0

locale:
C

attached base packages:
[1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
[7] "base"


From ray at ganymede.org  Mon May 21 19:56:55 2007
From: ray at ganymede.org (Ray Kiddy)
Date: Mon, 21 May 2007 10:56:55 -0700
Subject: [Rd] section needed in FAQ - Using R (PR#9698)
In-Reply-To: <20070521125923.JDDY1593.tomts13-srv.bellnexxia.net@JohnDesktop8300>
References: <20070521125923.JDDY1593.tomts13-srv.bellnexxia.net@JohnDesktop8300>
Message-ID: <2D96879A-5B1A-48B2-B2F2-DCE37132B854@ganymede.org>


On May 21, 2007, at 5:59 AM, John Fox wrote:

> Dear Peter and Ray,
>
> I think that Ray's problem finding apropos is that "apropos" has  
> one "p."
> Interestingly, help.search("appropos") (as suggested by Peter) is  
> able to
> accommodate the spelling error.
>
> Regards,
>  John
>
> --------------------------------
> John Fox, Professor

Thanks for your information. I see I was spelling it wrong.

Can I make the suggestion that if one does "help(help)", which I  
tried, that the page should mention "apropos". Perhaps in the "See  
Also" section.

This was a mistake on my part, but documentation can be helpful in  
response to user mistakes, rather than fragile.

thanx - ray

>
>> -----Original Message-----
>> From: r-devel-bounces at r-project.org
>> [mailto:r-devel-bounces at r-project.org] On Behalf Of Peter Dalgaard
>> Sent: Monday, May 21, 2007 3:15 AM
>> To: ray at ganymede.org
>> Cc: R-bugs at biostat.ku.dk; r-devel at stat.math.ethz.ch
>> Subject: Re: [Rd] section needed in FAQ - Using R (PR#9698)
>>
>> ray at ganymede.org wrote:
>>> By the way, the R program itself is really badly in need of an
>>> "appropos()" to go alongside "help()". Perhaps "help()" can
>> be renamed
>>> to "hunt()" or "huntAndPeck()".
>>>
>>>
>> help.search("appropos")
>>
>> -- 
>>    O__  ---- Peter Dalgaard             ?ster Farimagsgade 5, Entr.B
>>   c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K
>>  (*) \(*) -- University of Copenhagen   Denmark          Ph:
>> (+45) 35327918
>> ~~~~~~~~~~ - (p.dalgaard at biostat.ku.dk)                  FAX:
>> (+45) 35327907
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>
>
>


From zack at cogsci.ucsd.edu  Tue May 22 09:13:38 2007
From: zack at cogsci.ucsd.edu (Zack Weinberg)
Date: Tue, 22 May 2007 00:13:38 -0700
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
	floating point values
Message-ID: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>

I have noticed that in R 2.5.0, no method of textual output will print
a "double" mode quantity with more than 15 digits after the decimal
point.  From the help page (?print.default) it appears that this is
intentional, since digits after the fifteenth may be uncertain.
However, fifteen digits after the decimal point are not enough to
represent all the values that an IEEE-double can take.  (You need one
more.)  This means it is now impossible to write out data in textual
format (e.g. in order to manipulate it with another program) and read
back in exactly the same values.  Some analyses are sensitive to this
sort of extra rounding, especially if it happens repeatedly.

I'd really appreciate some way of forcing R to print enough digits to
represent every possible IEEE double value.  I would also argue that
this should be the default behavior of dump(), write.table() and
friends, and save(...,ascii=TRUE), to prevent data loss.

[Tangentially, support for C99 hexadecimal notation for floating point
values in input and output would also be nice, but wouldn't help much
for interoperability, since very few programs understand it.]

zw


From whinev at gmail.com  Tue May 22 11:33:52 2007
From: whinev at gmail.com (Ev Whin)
Date: Tue, 22 May 2007 17:33:52 +0800
Subject: [Rd] The R.dll problem
Message-ID: <dfed1c180705220233i3a4db135ta6a9cee24f119a02@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070522/cdb9eab6/attachment.pl 

From ligges at statistik.uni-dortmund.de  Tue May 22 12:10:39 2007
From: ligges at statistik.uni-dortmund.de (Uwe Ligges)
Date: Tue, 22 May 2007 12:10:39 +0200
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
 floating point values
In-Reply-To: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
Message-ID: <4652C19F.1040509@statistik.uni-dortmund.de>



Zack Weinberg wrote:
> I have noticed that in R 2.5.0, no method of textual output will print
> a "double" mode quantity with more than 15 digits after the decimal
> point.  From the help page (?print.default) it appears that this is
> intentional, since digits after the fifteenth may be uncertain.
> However, fifteen digits after the decimal point are not enough to
> represent all the values that an IEEE-double can take.  (You need one
> more.)  This means it is now impossible to write out data in textual
> format (e.g. in order to manipulate it with another program) and read
> back in exactly the same values.  Some analyses are sensitive to this
> sort of extra rounding, especially if it happens repeatedly.
> 
> I'd really appreciate some way of forcing R to print enough digits to
> represent every possible IEEE double value.  I would also argue that
> this should be the default behavior of dump(), write.table() and
> friends, and save(...,ascii=TRUE), to prevent data loss.

Example:

formatC(exp(1), digits=100, width=-1)

Uwe Ligges


> [Tangentially, support for C99 hexadecimal notation for floating point
> values in input and output would also be nice, but wouldn't help much
> for interoperability, since very few programs understand it.]
> 
> zw
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From clausen at econ.upenn.edu  Tue May 22 13:51:54 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Tue, 22 May 2007 07:51:54 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <m2r6p990j5.fsf@ziti.local>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
Message-ID: <20070522115154.GS28199@econ.upenn.edu>

Hi Seth,

On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
> I will also add that the notion of a default argument on a generic
> function seems a bit odd to me.  If an argument is available for
> dispatch, I just don't see what sense it makes to have a default.  In
> those cases, the default should be handled by the method that has a
> signature with said argument matching the "missing" class.
> 
> What often does make sense is to define a generic function where some
> argument are not available for dispatch.  For example:
> 
> setGeneric("foo", signature="flesh",
>            function(flesh, skeleton=attr(flesh, "skeleton") 
>                standardGeneric("foo")))

That's an excellent suggestion.  Thanks!  However, I had to set the signature
to c("numeric", "missing") rather than just "numeric".

I have uploaded a new version here:

	http://www.econ.upenn.edu/~clausen/computing/relist.R

Cheers,
Andrew


From simon.urbanek at r-project.org  Tue May 22 18:10:20 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 22 May 2007 12:10:20 -0400
Subject: [Rd] The R.dll problem
In-Reply-To: <dfed1c180705220233i3a4db135ta6a9cee24f119a02@mail.gmail.com>
References: <dfed1c180705220233i3a4db135ta6a9cee24f119a02@mail.gmail.com>
Message-ID: <357691B7-E404-41D0-BBAE-3EECB24C210A@r-project.org>


On May 22, 2007, at 5:33 AM, Ev Whin wrote:

> Hi r-devel,
>
> I've linked my windows application to the R.dll following the  
> instructions
> from the R documents,
> however, my application always encounters C stack limit.

Are you using threads? If so, you have to disable the C stack limit  
(R_CStackLimit=-1), because threads may use a varying stack base. If  
you are not, you better check your code as you may be corrupting the  
stack.

Cheers,
Simon


From ggrothendieck at gmail.com  Tue May 22 19:23:39 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 22 May 2007 13:23:39 -0400
Subject: [Rd] RFC: adding an 'exact' argument to [[
In-Reply-To: <m2irarh1mu.fsf@ziti.fhcrc.org>
References: <m2irarh1mu.fsf@ziti.fhcrc.org>
Message-ID: <971536df0705221023w10c58129hfd3a818b89918d3b@mail.gmail.com>

In addition to $ that was mentioned in this thread there is
also attr, e.g.

> names(attributes(CO2))
[1] "names"     "row.names" "class"     "formula"   "outer"     "labels"
[7] "units"
> attr(CO2, "f")  # matches "formula"
uptake ~ conc | Plant

On 5/17/07, Seth Falcon <sfalcon at fhcrc.org> wrote:
> Hi all,
>
> One of the things I find most problematic in R is the partial matching
> of names in lists.  Robert and I have discussed this and we believe
> that having a mechanism that does not do partial matching would be of
> significant benefit to R programmers.  To that end, I have written a
> patch that modifies the behavior of "[[" as follows:
>
>   1. [[ gains an 'exact' argument with default value NA
>
>   2. Behavior of 'exact' argument:
>
>      exact=NA
>          partial matching is performed as usual, however, a warning
>          will be issued when a partial match occurs.  This is the
>          default.
>
>      exact=TRUE
>          no partial matching is performed.
>
>      exact=FALSE
>          partial matching is allowed and no warning issued if it
>          occurs.
>
> This change has been discussed among R-core members and there appeared
> to be a general consensus that this approach was a good way to
> proceed.  However, we are interested in other suggestions from the
> broader R developer community.
>
> Some additional rationale for our approach:
>
> Lists are used as the underlying data structures in many R programs
> and in these cases the named elements are not a fixed set of things
> with a fixed set of names.  For these programs, [[ will be used with
> an argument that gets evaluated at runtime and partial matching here
> is almost always a disaster.  Furthermore, dealing with data that has
> common prefixes happens often and is not an exceptional circumstance
> (a precondition for partial matching issues).
>
> We have tested a similar patch that simply eliminated partial matching
> for [[ on all CRAN and Bioconductor packages and did not see any
> obvious failures.
>
> A downside of this approach is that S4 methods on [[ will need to be
> modified to accommodate the new signature.  However, by adding an
> argument, we are able to move more slowly towards a non-partially
> matching [[ (eventually, the default could be exact=TRUE, but that is
> a discussion for another day).
>
>
> + seth
>
> --
> Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
> http://bioconductor.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From zack at cogsci.ucsd.edu  Tue May 22 17:49:46 2007
From: zack at cogsci.ucsd.edu (Zack Weinberg)
Date: Tue, 22 May 2007 08:49:46 -0700
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
	floating point values
In-Reply-To: <4652C19F.1040509@statistik.uni-dortmund.de>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
	<4652C19F.1040509@statistik.uni-dortmund.de>
Message-ID: <eb97335b0705220849l624d8cai6e49e37e2565ab81@mail.gmail.com>

On 5/22/07, Uwe Ligges <ligges at statistik.uni-dortmund.de> wrote:
> Zack Weinberg wrote:
> >
> > I'd really appreciate some way of forcing R to print enough digits to
> > represent every possible IEEE double value.  I would also argue that
> > this should be the default behavior of dump(), write.table() and
> > friends, and save(...,ascii=TRUE), to prevent data loss.
>
> Example:
>
> formatC(exp(1), digits=100, width=-1)

Well, okay, now what about dump, write.table, save, etc?

zw


From maechler at stat.math.ethz.ch  Tue May 22 19:41:34 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Tue, 22 May 2007 19:41:34 +0200
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070522115154.GS28199@econ.upenn.edu>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu>
Message-ID: <18003.11086.212085.683279@stat.math.ethz.ch>

>>>>> "AndrewC" == Andrew Clausen <clausen at econ.upenn.edu>
>>>>>     on Tue, 22 May 2007 07:51:54 -0400 writes:

    AndrewC> Hi Seth,
    AndrewC> On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
    >> I will also add that the notion of a default argument on a generic
    >> function seems a bit odd to me.  If an argument is available for
    >> dispatch, I just don't see what sense it makes to have a default.  In
    >> those cases, the default should be handled by the method that has a
    >> signature with said argument matching the "missing" class.
    >> 
    >> What often does make sense is to define a generic function where some
    >> argument are not available for dispatch.  For example:
    >> 
    >> setGeneric("foo", signature="flesh",
    >> function(flesh, skeleton=attr(flesh, "skeleton") 
    >> standardGeneric("foo")))

    AndrewC> That's an excellent suggestion.  Thanks!  However, I had to set the signature
    AndrewC> to c("numeric", "missing") rather than just "numeric".

    AndrewC> I have uploaded a new version here:

    AndrewC> http://www.econ.upenn.edu/~clausen/computing/relist.R

This looks "good from far".

I won't have time to do anything more about it for the next few
days.
Please remind me (in private) about it if you don't hear back
within one week.

Martin

    AndrewC> Cheers,
    AndrewC> Andrew


From osklyar at ebi.ac.uk  Tue May 22 19:59:00 2007
From: osklyar at ebi.ac.uk (Oleg Sklyar)
Date: Tue, 22 May 2007 18:59:00 +0100
Subject: [Rd] inline C/C++ in R: question and suggestion
Message-ID: <46532F64.9030203@ebi.ac.uk>

This is a question and maybe an announcement.

We've been discussing in the group that it would be nice to have a
mechanism for something like "inline" C/C++ function calls in R. I do
not want to reinvent the wheel, therefore, if something like that
already exists, please give me a hint -- I could not find anything. If
not, here is a working solution, please criticise so I could improve it.

Example: I work on images (Bioconductor:EBImage) and just came to a
point where I need to apply certain functions to image data, which are
grey scale intensities in the range [0,1]. Assume I want to transform my
image data from I(x,y,i) to exp(-(d/s)^2)*I(x,y,i), where I is the
original intensity in dependence on coordinates x,y and frame i; s is a
given value and d^2=(x-centre.x)^2+(y-centre.y)^2 for a given centre.
Trying an R loop will run forever already on moderate image sizes as I
do not see how to vectorize it.

Now, below is the solution using the "inline" C code, completely in R
and runs instantly. I created a small package "inline" that simply
encapsulates a quite simple function "cfunction". The package source is
available from http://www.ebi.ac.uk/~osklyar/inline -- please give it a
try and I would be happy to hear your comments, both on already existing
implementations for "inline" calls and on the current one. It is a draft
and I will be happy to improve it (especially comments on how to ensure
that the shared object is unloaded when the function is removed). In the
example below EBImage is not required, I use randomly generated values
instead of images, but the output it quite obvious. After installing
"inline" the example should just work by copy-pasting.

Best and thanks in advance,
Oleg

code <- character(17)
code[1] <- "  SEXP res;"
code[2] <- "  int nprotect = 0, nx, ny, nz, x, y;"
code[3] <- "  PROTECT(res = Rf_duplicate(a)); nprotect++;"
code[4] <- "  nx = INTEGER(GET_DIM(a))[0];"
code[5] <- "  ny = INTEGER(GET_DIM(a))[1];"
code[6] <- "  nz = INTEGER(GET_DIM(a))[2];"
code[7] <- "  double sigma2 = REAL(s)[0] * REAL(s)[0], d2 ;"
code[8] <- "  double cx = REAL(centre)[0], cy = REAL(centre)[1], *data,
*rdata;"
code[9] <- "  for (int im = 0; im < nz; im++) {"
code[10] <- "    data = &(REAL(a)[im*nx*ny]); rdata =
&(REAL(res)[im*nx*ny]);"
code[11] <- "    for (x = 0; x < nx; x++)"
code[12] <- "       for (y = 0; y < ny; y++) {"
code[13] <- "         d2 = (x-cx)*(x-cx) + (y-cy)*(y-cy);"
code[14] <- "         rdata[x + y*nx] = data[x + y*nx] * exp(-d2/sigma2);"
code[15] <- "  }}"
code[16] <- "  UNPROTECT(nprotect);"
code[17] <- "  return res;"

library(inline)

funx <- cfunction(signature(a="array", s="numeric", centre="numeric"), code)

x <- array(runif(50*50), c(50,50,1))

res <- funx(a=x, s=15, centre=c(30,35))
image(res[,,1])
res <- funx(x, 10, c(15,15))
x11(); image(res[,,1])

-- 
Dr Oleg Sklyar * EBI/EMBL, Cambridge CB10 1SD, England * +44-1223-494466


From simon.urbanek at r-project.org  Tue May 22 21:16:32 2007
From: simon.urbanek at r-project.org (Simon Urbanek)
Date: Tue, 22 May 2007 15:16:32 -0400
Subject: [Rd] inline C/C++ in R: question and suggestion
In-Reply-To: <46532F64.9030203@ebi.ac.uk>
References: <46532F64.9030203@ebi.ac.uk>
Message-ID: <81DA0149-0F04-4315-BDFD-D3A9284D200E@r-project.org>

Oleg,

On May 22, 2007, at 1:59 PM, Oleg Sklyar wrote:

> We've been discussing in the group that it would be nice to have a  
> mechanism for something like "inline" C/C++ function calls in R. I  
> do not want to reinvent the wheel, therefore, if something like  
> that already exists, please give me a hint -- I could not find  
> anything. If not, here is a working solution, please criticise so I  
> could improve it.
>
> Example: I work on images (Bioconductor:EBImage) and just came to a  
> point where I need to apply certain functions to image data, which  
> are grey scale intensities in the range [0,1]. Assume I want to  
> transform my image data from I(x,y,i) to exp(-(d/s)^2)*I(x,y,i),  
> where I is the original intensity in dependence on coordinates x,y  
> and frame i; s is a given value and d^2=(x-centre.x)^2+(y-centre.y) 
> ^2 for a given centre. Trying an R loop will run forever already on  
> moderate image sizes as I do not see how to vectorize it.
>

That is actually a (rare) case that can be completely vectorized:

d=(cx-rep(1:dim(I)[1],dim(I)[2]*dim(I)[3]))^2+(cy-rep(1:dim(I) 
[2],each=dim(I)[1],times=dim(I)[3]))^2
I=I*exp(-(d/s^2))

Clearly the drawback is the use of memory, but you could vectorize  
per frame if you wish. At any rate it's not that slow anyway:

 > I=array(runif(100*100*10),c(100,100,10))
 > system.time({d=(cx-rep(1:dim(I)[1],dim(I)[2]*dim(I)[3]))^2+(cy-rep 
(1:dim(I)[2],each=dim(I)[1],times=dim(I)[3]))^2;I=I*exp(-(d/s^2))})
    user  system elapsed
   0.022   0.010   0.032
 > system.time(funx(I,15,c(30,35)))
    user  system elapsed
   0.008   0.001   0.010

Of course C wins, no doubt about that :).


> Now, below is the solution using the "inline" C code, completely in  
> R and runs instantly. I created a small package "inline" that  
> simply encapsulates a quite simple function "cfunction". The  
> package source is available from http://www.ebi.ac.uk/~osklyar/ 
> inline -- please give it a try and I would be happy to hear your  
> comments, both on already existing implementations for "inline"  
> calls and on the current one.

I really like the idea! Except for the fact that it's forcing the use  
of C++ which adds unnecessary overhead :P I'd like a configurable  
extension [including .m] and the ability to prepend functions as  
code. What would be very useful now is a set of tools that would  
allow you to construct the source with R commands, so that you could  
compute on it, edit it etc. That would be really cool ... you could  
even imagine compiling a very restricted set of R into C code ...  
yes, I know I'm dreaming ;)

Thanks for the good idea!

Cheers,
Simon


From murdoch at stats.uwo.ca  Tue May 22 21:52:42 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 22 May 2007 15:52:42 -0400
Subject: [Rd] inline C/C++ in R: question and suggestion
In-Reply-To: <46532F64.9030203@ebi.ac.uk>
References: <46532F64.9030203@ebi.ac.uk>
Message-ID: <46534A0A.6050508@stats.uwo.ca>

On 5/22/2007 1:59 PM, Oleg Sklyar wrote:
> This is a question and maybe an announcement.
> 
> We've been discussing in the group that it would be nice to have a
> mechanism for something like "inline" C/C++ function calls in R. I do
> not want to reinvent the wheel, therefore, if something like that
> already exists, please give me a hint -- I could not find anything. If
> not, here is a working solution, please criticise so I could improve it.

This would be nice.

One suggestion that probably doesn't affect your package:  It would be 
even nicer if R incorporated something that Duncan Temple Lang suggested 
last year, namely a new kind of quoting that didn't need escapes in the 
string.  He suggested borrowing triple quotes from Python; I suggested 
something more like heredocs as in shells or Perl, or like \verb in TeX, 
in case you wanted triple quotes in your C function.  It would be nice 
to settle on something, so that instead of

 > code[1] <- "  SEXP res;"
 > code[2] <- "  int nprotect = 0, nx, ny, nz, x, y;"
 > code[3] <- "  PROTECT(res = Rf_duplicate(a)); nprotect++;"
 > code[4] <- "  nx = INTEGER(GET_DIM(a))[0];"
 > code[5] <- "  ny = INTEGER(GET_DIM(a))[1];"

one could use (for example):

code <- '''
    SEXP res;
    int nprotect = 0, nx, ny, nz, x, y;
    PROTECT(res = Rf_duplicate(a)); nprotect++;
    nx = INTEGER(GET_DIM(a))[0];
    ny = INTEGER(GET_DIM(a))[1];
'''

I think the only way this would affect your package is that you need to 
be able to handle embedded newlines in strings, but I can't see why you 
wouldn't be able to do that automatically.

Another suggestion:

You might want to allow a list of signatures and code chunks to be 
passed to the compiler, producing a list of functions to evaluate them, 
all compiled into one DLL.

Duncan Murdoch


From vdergachev at rcgardis.com  Tue May 22 22:01:25 2007
From: vdergachev at rcgardis.com (Vladimir Dergachev)
Date: Tue, 22 May 2007 16:01:25 -0400
Subject: [Rd] inline C/C++ in R: question and suggestion
In-Reply-To: <46534A0A.6050508@stats.uwo.ca>
References: <46532F64.9030203@ebi.ac.uk> <46534A0A.6050508@stats.uwo.ca>
Message-ID: <200705221601.25573.vdergachev@rcgardis.com>

On Tuesday 22 May 2007 3:52 pm, Duncan Murdoch wrote:
> On 5/22/2007 1:59 PM, Oleg Sklyar wrote:
>
> One suggestion that probably doesn't affect your package:  It would be
> even nicer if R incorporated something that Duncan Temple Lang suggested
> last year, namely a new kind of quoting that didn't need escapes in the
> string.  He suggested borrowing triple quotes from Python; I suggested
> something more like heredocs as in shells or Perl, or like \verb in TeX,
> in case you wanted triple quotes in your C function.  It would be nice
> to settle on something, so that instead of
>

I second that. My favorite implementation of this is in Tcl, where curly 
braces {} mean that the text they enclose is unmodified. Since language 
constructs using them are normally balanced this is not an impediment.

One extremely useful application of this (aside from long strings) is 
specifying inline data frames - I don't know how to do this otherwise.

I.e. something like:

A<- scan.string({#
Id Value Mark
1	a	3
2	b	4
#	})

                          best

                              Vladimir Dergachev


From murdoch at stats.uwo.ca  Tue May 22 22:58:43 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 22 May 2007 16:58:43 -0400
Subject: [Rd] Quoting (was:  inline C/C++ in R: question and suggestion
In-Reply-To: <200705221601.25573.vdergachev@rcgardis.com>
References: <46532F64.9030203@ebi.ac.uk> <46534A0A.6050508@stats.uwo.ca>
	<200705221601.25573.vdergachev@rcgardis.com>
Message-ID: <46535983.9040909@stats.uwo.ca>

On 22/05/2007 4:01 PM, Vladimir Dergachev wrote:
> On Tuesday 22 May 2007 3:52 pm, Duncan Murdoch wrote:
>> On 5/22/2007 1:59 PM, Oleg Sklyar wrote:
>>
>> One suggestion that probably doesn't affect your package:  It would be
>> even nicer if R incorporated something that Duncan Temple Lang suggested
>> last year, namely a new kind of quoting that didn't need escapes in the
>> string.  He suggested borrowing triple quotes from Python; I suggested
>> something more like heredocs as in shells or Perl, or like \verb in TeX,
>> in case you wanted triple quotes in your C function.  It would be nice
>> to settle on something, so that instead of
>>
> 
> I second that. My favorite implementation of this is in Tcl, where curly 
> braces {} mean that the text they enclose is unmodified. Since language 
> constructs using them are normally balanced this is not an impediment.

That wouldn't work in R, because the parser couldn't tell whether

{ a }

was a block of code or a quoted string.


> 
> One extremely useful application of this (aside from long strings) is 
> specifying inline data frames - I don't know how to do this otherwise.
> 
> I.e. something like:
> 
> A<- scan.string({#
> Id Value Mark
> 1	a	3
> 2	b	4
> #	})

When your data doesn't contain quote marks, you can just use regular 
quotes to do that.  I don't know of a scan.string function, but this works:

A <- read.table(textConnection("#
Id Value Mark
1 a 3
2 b 4
#"), head = TRUE)

I think DTL's suggestion would be most useful when putting a lot of code 
in a string, where the escapes make the code harder to read.  For 
example, just about any function using a complicated regular expression.

Duncan Murdoch


From vdergachev at rcgardis.com  Tue May 22 23:42:13 2007
From: vdergachev at rcgardis.com (Vladimir Dergachev)
Date: Tue, 22 May 2007 17:42:13 -0400
Subject: [Rd] Quoting (was:  inline C/C++ in R: question and suggestion
In-Reply-To: <46535983.9040909@stats.uwo.ca>
References: <46532F64.9030203@ebi.ac.uk>
	<200705221601.25573.vdergachev@rcgardis.com>
	<46535983.9040909@stats.uwo.ca>
Message-ID: <200705221742.13361.vdergachev@rcgardis.com>

On Tuesday 22 May 2007 4:58 pm, Duncan Murdoch wrote:
> On 22/05/2007 4:01 PM, Vladimir Dergachev wrote:
> > On Tuesday 22 May 2007 3:52 pm, Duncan Murdoch wrote:
> >> On 5/22/2007 1:59 PM, Oleg Sklyar wrote:
> >
> > I second that. My favorite implementation of this is in Tcl, where curly
> > braces {} mean that the text they enclose is unmodified. Since language
> > constructs using them are normally balanced this is not an impediment.
>
> That wouldn't work in R, because the parser couldn't tell whether
>
> { a }

One easy workaround is to have string{ ... } construct - it should be very 
easy to parse string{ differently from { alone.

>
> was a block of code or a quoted string.
>
> > One extremely useful application of this (aside from long strings) is
> > specifying inline data frames - I don't know how to do this otherwise.
> >
> > I.e. something like:
> >
> > A<- scan.string({#
> > Id Value Mark
> > 1	a	3
> > 2	b	4
> > #	})
>
> When your data doesn't contain quote marks, you can just use regular
> quotes to do that.  I don't know of a scan.string function, but this works:
>
> A <- read.table(textConnection("#
> Id Value Mark
> 1 a 3
> 2 b 4
> #"), head = TRUE)

Cool, thank you !

>
> I think DTL's suggestion would be most useful when putting a lot of code
> in a string, where the escapes make the code harder to read.  For
> example, just about any function using a complicated regular expression.

Also anything using .Tcl(). Quotes in data frame definition are useful because 
they could be employed to delimit text fields with spaces in them.

                     best

                        Vladimir Dergachev


From p.dalgaard at biostat.ku.dk  Wed May 23 01:05:54 2007
From: p.dalgaard at biostat.ku.dk (Peter Dalgaard)
Date: Wed, 23 May 2007 01:05:54 +0200
Subject: [Rd] Quoting
In-Reply-To: <200705221742.13361.vdergachev@rcgardis.com>
References: <46532F64.9030203@ebi.ac.uk>	<200705221601.25573.vdergachev@rcgardis.com>	<46535983.9040909@stats.uwo.ca>
	<200705221742.13361.vdergachev@rcgardis.com>
Message-ID: <46537752.6020003@biostat.ku.dk>

Vladimir Dergachev wrote:
>
>> I think DTL's suggestion would be most useful when putting a lot of code
>> in a string, where the escapes make the code harder to read.  For
>> example, just about any function using a complicated regular expression.
>>     
>
> Also anything using .Tcl(). Quotes in data frame definition are useful because 
> they could be employed to delimit text fields with spaces in them.
.Tcl() is usually the wrong solution anyway, you really should use tcl() 
unless absolutely necessary.

In some contexts (probably not when using source() ), 
read.table(stdin())  does the trick too, as does reading from a pipe() 
connection, at least on Unix/Linux. The latter can be useful to filter 
out prompt characters.


From sfalcon at fhcrc.org  Wed May 23 01:07:42 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Tue, 22 May 2007 16:07:42 -0700
Subject: [Rd] RFC: adding an 'exact' argument to [[
In-Reply-To: <m2irarh1mu.fsf@ziti.fhcrc.org> (Seth Falcon's message of "Thu,
	17 May 2007 09:10:33 -0700")
References: <m2irarh1mu.fsf@ziti.fhcrc.org>
Message-ID: <m2odkc4fup.fsf@ziti.local>

Hi again,

Robert has committed the proposed patch to R-devel.  So [[ now has an
'exact' argument and the behavior is as described:

Seth Falcon <sfalcon at fhcrc.org> writes:
>    1. [[ gains an 'exact' argument with default value NA
>
>    2. Behavior of 'exact' argument:
>
>       exact=NA
>           partial matching is performed as usual, however, a warning
>           will be issued when a partial match occurs.  This is the
>           default.
>
>       exact=TRUE
>           no partial matching is performed.
>
>       exact=FALSE
>           partial matching is allowed and no warning issued if it
>           occurs.
>

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From ggrothendieck at gmail.com  Wed May 23 01:36:56 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Tue, 22 May 2007 19:36:56 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070522115154.GS28199@econ.upenn.edu>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu>
Message-ID: <971536df0705221636r4c67b041mff2796836465ded5@mail.gmail.com>

One additional idea.

I wonder if reshape might be promoted to a generic and relist made
into methods for it.  The unlisted version of an object would be the "long"
version and the original version of the list would be the "wide" version.

This would consolidate the two concepts together and make it
easier to use since the user could leverage his knowledge of
how reshape works to lists where it would work analogously.

Essentially reshape(myList, direction = "long") would be
similar to unlist but would add the attributes need to reverse
the procedure and reshape(myList, direction = "wide")
would perform the inversion.

I am not sure if the reshape package has any bearing here
as well.

On 5/22/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> Hi Seth,
>
> On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
> > I will also add that the notion of a default argument on a generic
> > function seems a bit odd to me.  If an argument is available for
> > dispatch, I just don't see what sense it makes to have a default.  In
> > those cases, the default should be handled by the method that has a
> > signature with said argument matching the "missing" class.
> >
> > What often does make sense is to define a generic function where some
> > argument are not available for dispatch.  For example:
> >
> > setGeneric("foo", signature="flesh",
> >            function(flesh, skeleton=attr(flesh, "skeleton")
> >                standardGeneric("foo")))
>
> That's an excellent suggestion.  Thanks!  However, I had to set the signature
> to c("numeric", "missing") rather than just "numeric".
>
> I have uploaded a new version here:
>
>        http://www.econ.upenn.edu/~clausen/computing/relist.R
>
> Cheers,
> Andrew
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From vdergachev at rcgardis.com  Wed May 23 01:37:40 2007
From: vdergachev at rcgardis.com (Vladimir Dergachev)
Date: Tue, 22 May 2007 19:37:40 -0400
Subject: [Rd] Quoting
In-Reply-To: <46537752.6020003@biostat.ku.dk>
References: <46532F64.9030203@ebi.ac.uk>
	<200705221742.13361.vdergachev@rcgardis.com>
	<46537752.6020003@biostat.ku.dk>
Message-ID: <200705221937.40176.vdergachev@rcgardis.com>

On Tuesday 22 May 2007 7:05 pm, Peter Dalgaard wrote:
> Vladimir Dergachev wrote:
> >> I think DTL's suggestion would be most useful when putting a lot of code
> >> in a string, where the escapes make the code harder to read.  For
> >> example, just about any function using a complicated regular expression.
> >
> > Also anything using .Tcl(). Quotes in data frame definition are useful
> > because they could be employed to delimit text fields with spaces in
> > them.
>
> .Tcl() is usually the wrong solution anyway, you really should use tcl()
> unless absolutely necessary.
>

Actually I could not figure out how to use tcl() - it seems to work only to 
call a single Tcl/Tk command.

I mostly use .Tcl() to create guis along the lines of

foreach {control  desc var value} {
	label "Just a description" title1 0
	entry "Edit some text" text_var {Hello there}
	} {
	switch -exact -- $control {
		label { 
			label .l$var -text $desc
			grid .l$var - -sticky news
			}
		entry {
			label .l$var -text $desc
			entry .e$var -variable $var
			grid .l$var .e$var -sticky news
			global $var
			set $var $value
			}
	# other control types follow
		}
	}

this can get pretty versatile and works for plots and other things..

                          best

                              Vladimir Dergachev


From deepayan.sarkar at gmail.com  Wed May 23 01:43:35 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Tue, 22 May 2007 16:43:35 -0700
Subject: [Rd] regexp bug in very recent r-devel
Message-ID: <eb555e660705221643w1919e3c6g471bfeab544d194@mail.gmail.com>

completion is semi-broken in today's r-devel, and the reason seems to
be some regular expression changes:

> sessionInfo()
R version 2.6.0 Under development (unstable) (2007-05-22 r41673)
i686-pc-linux-gnu

locale:
[...]

attached base packages:
[1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
[7] "base"
> regexpr("o", "foo", fixed = TRUE)
[1] 2
attr(,"match.length")
[1] 1
> gregexpr("o", "foo", fixed = FALSE)
[[1]]
[1] 2 3
attr(,"match.length")
[1] 1 1

> gregexpr("o", "foo", fixed = TRUE)

 *** caught segfault ***
address 0xc022fdab, cause 'memory not mapped'

Traceback:
 1: gregexpr("o", "foo", fixed = TRUE)

Possible actions:
1: abort (with core dump, if enabled)
2: normal R exit
3: exit R without saving workspace
4: exit R saving workspace

On a different machine, this freezes R for a long time, consuming CPU
cycles and a lot of memory, before returning an error:

> gregexpr("o", "foobar", fixed = TRUE)
Error in gregexpr("o", "foobar", fixed = TRUE) :
        negative length vectors are not allowed
> sessionInfo()
R version 2.6.0 Under development (unstable) (2007-05-22 r41675)
x86_64-unknown-linux-gnu

-Deepayan


From ripley at stats.ox.ac.uk  Wed May 23 08:26:30 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 23 May 2007 07:26:30 +0100 (BST)
Subject: [Rd] regexp bug in very recent r-devel
In-Reply-To: <eb555e660705221643w1919e3c6g471bfeab544d194@mail.gmail.com>
References: <eb555e660705221643w1919e3c6g471bfeab544d194@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705230718510.3896@auk.stats>

Deepayan,

Thanks.  One bug fix had tickled another here.  grexexpr() is not much 
used in R and when I wrote a regression suite for grep and friends I was 
suprised to find that both grepexpr(perl=TRUE) and grexepr(fixed=TRUE) 
were giving incorrect results in MBCSs (provided multibyte characters were 
actually involved).

Fixed in r41676.

Brian

On Tue, 22 May 2007, Deepayan Sarkar wrote:

> completion is semi-broken in today's r-devel, and the reason seems to
> be some regular expression changes:
>
>> sessionInfo()
> R version 2.6.0 Under development (unstable) (2007-05-22 r41673)
> i686-pc-linux-gnu
>
> locale:
> [...]
>
> attached base packages:
> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
> [7] "base"
>> regexpr("o", "foo", fixed = TRUE)
> [1] 2
> attr(,"match.length")
> [1] 1
>> gregexpr("o", "foo", fixed = FALSE)
> [[1]]
> [1] 2 3
> attr(,"match.length")
> [1] 1 1
>
>> gregexpr("o", "foo", fixed = TRUE)
>
> *** caught segfault ***
> address 0xc022fdab, cause 'memory not mapped'
>
> Traceback:
> 1: gregexpr("o", "foo", fixed = TRUE)
>
> Possible actions:
> 1: abort (with core dump, if enabled)
> 2: normal R exit
> 3: exit R without saving workspace
> 4: exit R saving workspace
>
> On a different machine, this freezes R for a long time, consuming CPU
> cycles and a lot of memory, before returning an error:
>
>> gregexpr("o", "foobar", fixed = TRUE)
> Error in gregexpr("o", "foobar", fixed = TRUE) :
>        negative length vectors are not allowed
>> sessionInfo()
> R version 2.6.0 Under development (unstable) (2007-05-22 r41675)
> x86_64-unknown-linux-gnu
>
> -Deepayan
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ligges at statistik.uni-dortmund.de  Wed May 23 11:33:42 2007
From: ligges at statistik.uni-dortmund.de (Uwe Ligges)
Date: Wed, 23 May 2007 11:33:42 +0200
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
 floating point values
In-Reply-To: <eb97335b0705220849l624d8cai6e49e37e2565ab81@mail.gmail.com>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>	
	<4652C19F.1040509@statistik.uni-dortmund.de>
	<eb97335b0705220849l624d8cai6e49e37e2565ab81@mail.gmail.com>
Message-ID: <46540A76.2080909@statistik.uni-dortmund.de>



Zack Weinberg wrote:
> On 5/22/07, Uwe Ligges <ligges at statistik.uni-dortmund.de> wrote:
>> Zack Weinberg wrote:
>> >
>> > I'd really appreciate some way of forcing R to print enough digits to
>> > represent every possible IEEE double value.  I would also argue that
>> > this should be the default behavior of dump(), write.table() and
>> > friends, and save(...,ascii=TRUE), to prevent data loss.
>>
>> Example:
>>
>> formatC(exp(1), digits=100, width=-1)
> 
> Well, okay, now what about dump, write.table, save, etc?

save() uses the required precision. For exp(1) it stores 
"2.718281828459045" and you will see that

exp(1) == 2.718281828459045  is TRUE

Uwe Ligges



> zw


From h.wickham at gmail.com  Wed May 23 11:51:14 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Wed, 23 May 2007 11:51:14 +0200
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
	floating point values
In-Reply-To: <4652C19F.1040509@statistik.uni-dortmund.de>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
	<4652C19F.1040509@statistik.uni-dortmund.de>
Message-ID: <f8e6ff050705230251t1170b47enea9ced70a6ca4a1e@mail.gmail.com>

On 5/22/07, Uwe Ligges <ligges at statistik.uni-dortmund.de> wrote:
>
>
> Zack Weinberg wrote:
> > I have noticed that in R 2.5.0, no method of textual output will print
> > a "double" mode quantity with more than 15 digits after the decimal
> > point.  From the help page (?print.default) it appears that this is
> > intentional, since digits after the fifteenth may be uncertain.
> > However, fifteen digits after the decimal point are not enough to
> > represent all the values that an IEEE-double can take.  (You need one
> > more.)  This means it is now impossible to write out data in textual
> > format (e.g. in order to manipulate it with another program) and read
> > back in exactly the same values.  Some analyses are sensitive to this
> > sort of extra rounding, especially if it happens repeatedly.
> >
> > I'd really appreciate some way of forcing R to print enough digits to
> > represent every possible IEEE double value.  I would also argue that
> > this should be the default behavior of dump(), write.table() and
> > friends, and save(...,ascii=TRUE), to prevent data loss.
>
> Example:
>
> formatC(exp(1), digits=100, width=-1)

formatC(exp(1), digits=1000000, width=-1)
 *** caught bus error ***
address 0x2, cause 'non-existent physical address'

R version 2.5.0 (2007-04-23)
i386-apple-darwin8.9.1

Hadley


From h.wickham at gmail.com  Wed May 23 11:57:22 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Wed, 23 May 2007 11:57:22 +0200
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
	floating point values
In-Reply-To: <f8e6ff050705230251t1170b47enea9ced70a6ca4a1e@mail.gmail.com>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
	<4652C19F.1040509@statistik.uni-dortmund.de>
	<f8e6ff050705230251t1170b47enea9ced70a6ca4a1e@mail.gmail.com>
Message-ID: <f8e6ff050705230257q72f3dbd5ua18072424b38386@mail.gmail.com>

On 5/23/07, hadley wickham <h.wickham at gmail.com> wrote:
> On 5/22/07, Uwe Ligges <ligges at statistik.uni-dortmund.de> wrote:
> >
> >
> > Zack Weinberg wrote:
> > > I have noticed that in R 2.5.0, no method of textual output will print
> > > a "double" mode quantity with more than 15 digits after the decimal
> > > point.  From the help page (?print.default) it appears that this is
> > > intentional, since digits after the fifteenth may be uncertain.
> > > However, fifteen digits after the decimal point are not enough to
> > > represent all the values that an IEEE-double can take.  (You need one
> > > more.)  This means it is now impossible to write out data in textual
> > > format (e.g. in order to manipulate it with another program) and read
> > > back in exactly the same values.  Some analyses are sensitive to this
> > > sort of extra rounding, especially if it happens repeatedly.
> > >
> > > I'd really appreciate some way of forcing R to print enough digits to
> > > represent every possible IEEE double value.  I would also argue that
> > > this should be the default behavior of dump(), write.table() and
> > > friends, and save(...,ascii=TRUE), to prevent data loss.
> >
> > Example:
> >
> > formatC(exp(1), digits=100, width=-1)
>
> formatC(exp(1), digits=1000000, width=-1)
>  *** caught bus error ***
> address 0x2, cause 'non-existent physical address'
>
> R version 2.5.0 (2007-04-23)
> i386-apple-darwin8.9.1

Ooops, and the traceback:

Traceback:
 1: .C("str_signif", x = x, n = n, mode = as.character(mode), width =
as.integer(width),     digits = as.integer(digits), format =
as.character(format),     flag = as.character(flag), result =
blank.chars(i.strlen),     PACKAGE = "base")
 2: formatC(exp(1), digits = 1e+06, width = -1)

Hadley


From osklyar at ebi.ac.uk  Wed May 23 12:11:21 2007
From: osklyar at ebi.ac.uk (Oleg Sklyar)
Date: Wed, 23 May 2007 11:11:21 +0100
Subject: [Rd] inline C/C++ in R: question and suggestion
In-Reply-To: <81DA0149-0F04-4315-BDFD-D3A9284D200E@r-project.org>
References: <46532F64.9030203@ebi.ac.uk>
	<81DA0149-0F04-4315-BDFD-D3A9284D200E@r-project.org>
Message-ID: <46541349.6030907@ebi.ac.uk>

> That is actually a (rare) case that can be completely vectorized:
Thanks for the vectorization solution.

> I really like the idea! Except for the fact that it's forcing the use of
> C++ which adds unnecessary overhead :P 
I can make it optional. I was just thinking that C++ would be more
general than C. I was also asked to create a .C interface, which to me
has the only difference that one needs to preallocate the result. But
the same is easy to implement by pre-allocating an R variable and
passing it as an argument with NULL return.

> I'd like a configurable extension
> [including .m] and the ability to prepend functions as code. What would
> be very useful now is a set of tools that would allow you to construct
> the source with R commands, so that you could compute on it, edit it
:) It would be nice, but I doubt it is feasible at all and if yes, the
overhead will be enormous, especially weighted by the number of people
using it.

However, what I would consider reasonable is to have such an inline
interface to more than just C and C++. There is something for Ruby I
think, but one could think of generalizing it somehow.

Best,
Oleg


From osklyar at ebi.ac.uk  Wed May 23 12:17:13 2007
From: osklyar at ebi.ac.uk (Oleg Sklyar)
Date: Wed, 23 May 2007 11:17:13 +0100
Subject: [Rd] inline C/C++ in R: question and suggestion
In-Reply-To: <46534A0A.6050508@stats.uwo.ca>
References: <46532F64.9030203@ebi.ac.uk> <46534A0A.6050508@stats.uwo.ca>
Message-ID: <465414A9.7080201@ebi.ac.uk>

> I think the only way this would affect your package is that you need to
> be able to handle embedded newlines in strings, but I can't see why you
> wouldn't be able to do that automatically.
That would be no problem if there were such a thing. As for now, I think
the Deepayan's solution for multi line string input is quite elegant.

> You might want to allow a list of signatures and code chunks to be
> passed to the compiler, producing a list of functions to evaluate them,
> all compiled into one DLL.
Reasonable and doable. Will do using "setMethod" implementation.

Thanks,

Oleg

-- 
Dr Oleg Sklyar * EBI/EMBL, Cambridge CB10 1SD, England * +44-1223-494466


From clausen at econ.upenn.edu  Wed May 23 13:46:18 2007
From: clausen at econ.upenn.edu (Andrew Clausen)
Date: Wed, 23 May 2007 07:46:18 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <971536df0705221636r4c67b041mff2796836465ded5@mail.gmail.com>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu>
	<971536df0705221636r4c67b041mff2796836465ded5@mail.gmail.com>
Message-ID: <20070523114617.GY28199@econ.upenn.edu>

Hi Gabor,

Can you suggest some examples of how your proposal could be used?
Reshape never returns a vector.

Cheers,
Andrew

On Tue, May 22, 2007 at 07:36:56PM -0400, Gabor Grothendieck wrote:
> One additional idea.
> 
> I wonder if reshape might be promoted to a generic and relist made
> into methods for it.  The unlisted version of an object would be the "long"
> version and the original version of the list would be the "wide" version.
> 
> This would consolidate the two concepts together and make it
> easier to use since the user could leverage his knowledge of
> how reshape works to lists where it would work analogously.
> 
> Essentially reshape(myList, direction = "long") would be
> similar to unlist but would add the attributes need to reverse
> the procedure and reshape(myList, direction = "wide")
> would perform the inversion.
> 
> I am not sure if the reshape package has any bearing here
> as well.
> 
> On 5/22/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> >Hi Seth,
> >
> >On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
> >> I will also add that the notion of a default argument on a generic
> >> function seems a bit odd to me.  If an argument is available for
> >> dispatch, I just don't see what sense it makes to have a default.  In
> >> those cases, the default should be handled by the method that has a
> >> signature with said argument matching the "missing" class.
> >>
> >> What often does make sense is to define a generic function where some
> >> argument are not available for dispatch.  For example:
> >>
> >> setGeneric("foo", signature="flesh",
> >>            function(flesh, skeleton=attr(flesh, "skeleton")
> >>                standardGeneric("foo")))
> >
> >That's an excellent suggestion.  Thanks!  However, I had to set the 
> >signature
> >to c("numeric", "missing") rather than just "numeric".
> >
> >I have uploaded a new version here:
> >
> >       http://www.econ.upenn.edu/~clausen/computing/relist.R
> >
> >Cheers,
> >Andrew
> >
> >______________________________________________
> >R-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-devel
> >


From ggrothendieck at gmail.com  Wed May 23 14:10:56 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 23 May 2007 08:10:56 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070523114617.GY28199@econ.upenn.edu>
References: <20070513172911.GP6923@econ.upenn.edu>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu>
	<971536df0705221636r4c67b041mff2796836465ded5@mail.gmail.com>
	<20070523114617.GY28199@econ.upenn.edu>
Message-ID: <971536df0705230510i33dcdbd5s1d01e91564cc8961@mail.gmail.com>

# returns list(a1 = 1, a2 = 2, b = 3) with an attribute
# "reshapeLong" containing skeleton (existing reshape also uses
# "reshapeWide" and "reshapeLong" attributes)

L <- list(a = 1:2, b = 3)
long <- reshape(L, direction = "long")

# returns original list but with an attribute "reshapeWide"

reshape(long, direction = "wide")

In the last case there a new optional skeleton argument would be added.



On 5/23/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> Hi Gabor,
>
> Can you suggest some examples of how your proposal could be used?
> Reshape never returns a vector.
>
> Cheers,
> Andrew
>
> On Tue, May 22, 2007 at 07:36:56PM -0400, Gabor Grothendieck wrote:
> > One additional idea.
> >
> > I wonder if reshape might be promoted to a generic and relist made
> > into methods for it.  The unlisted version of an object would be the "long"
> > version and the original version of the list would be the "wide" version.
> >
> > This would consolidate the two concepts together and make it
> > easier to use since the user could leverage his knowledge of
> > how reshape works to lists where it would work analogously.
> >
> > Essentially reshape(myList, direction = "long") would be
> > similar to unlist but would add the attributes need to reverse
> > the procedure and reshape(myList, direction = "wide")
> > would perform the inversion.
> >
> > I am not sure if the reshape package has any bearing here
> > as well.
> >
> > On 5/22/07, Andrew Clausen <clausen at econ.upenn.edu> wrote:
> > >Hi Seth,
> > >
> > >On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
> > >> I will also add that the notion of a default argument on a generic
> > >> function seems a bit odd to me.  If an argument is available for
> > >> dispatch, I just don't see what sense it makes to have a default.  In
> > >> those cases, the default should be handled by the method that has a
> > >> signature with said argument matching the "missing" class.
> > >>
> > >> What often does make sense is to define a generic function where some
> > >> argument are not available for dispatch.  For example:
> > >>
> > >> setGeneric("foo", signature="flesh",
> > >>            function(flesh, skeleton=attr(flesh, "skeleton")
> > >>                standardGeneric("foo")))
> > >
> > >That's an excellent suggestion.  Thanks!  However, I had to set the
> > >signature
> > >to c("numeric", "missing") rather than just "numeric".
> > >
> > >I have uploaded a new version here:
> > >
> > >       http://www.econ.upenn.edu/~clausen/computing/relist.R
> > >
> > >Cheers,
> > >Andrew
> > >
> > >______________________________________________
> > >R-devel at r-project.org mailing list
> > >https://stat.ethz.ch/mailman/listinfo/r-devel
> > >
>


From sfalcon at fhcrc.org  Wed May 23 14:45:41 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 23 May 2007 05:45:41 -0700
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <20070522115154.GS28199@econ.upenn.edu> (Andrew Clausen's message
	of "Tue, 22 May 2007 07:51:54 -0400")
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu>
Message-ID: <m2y7jf3dze.fsf@ziti.local>

Andrew Clausen <clausen at econ.upenn.edu> writes:

> Hi Seth,
>
> On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
>> I will also add that the notion of a default argument on a generic
>> function seems a bit odd to me.  If an argument is available for
>> dispatch, I just don't see what sense it makes to have a default.  In
>> those cases, the default should be handled by the method that has a
>> signature with said argument matching the "missing" class.
>> 
>> What often does make sense is to define a generic function where some
>> argument are not available for dispatch.  For example:
>> 
>> setGeneric("foo", signature="flesh",
>>            function(flesh, skeleton=attr(flesh, "skeleton") 
>>                standardGeneric("foo")))
>
> That's an excellent suggestion.  Thanks!  However, I had to set the signature
> to c("numeric", "missing") rather than just "numeric".
>
> I have uploaded a new version here:
>
> 	http://www.econ.upenn.edu/~clausen/computing/relist.R

I misunderstood.  You aren't using S4 classes/methods at all
and so I don't actually see how my comments could have been helpful in
any way.  relist seems like a really odd solution to me, but based on
the discussion I guess it has its use cases.

Best,

+ seth



-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From ggrothendieck at gmail.com  Wed May 23 14:56:50 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 23 May 2007 08:56:50 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <m2y7jf3dze.fsf@ziti.local>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu> <m2y7jf3dze.fsf@ziti.local>
Message-ID: <971536df0705230556l2b91613eib5b8590d04db2946@mail.gmail.com>

On 5/23/07, Seth Falcon <sfalcon at fhcrc.org> wrote:
> Andrew Clausen <clausen at econ.upenn.edu> writes:
>
> > Hi Seth,
> >
> > On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
> >> I will also add that the notion of a default argument on a generic
> >> function seems a bit odd to me.  If an argument is available for
> >> dispatch, I just don't see what sense it makes to have a default.  In
> >> those cases, the default should be handled by the method that has a
> >> signature with said argument matching the "missing" class.
> >>
> >> What often does make sense is to define a generic function where some
> >> argument are not available for dispatch.  For example:
> >>
> >> setGeneric("foo", signature="flesh",
> >>            function(flesh, skeleton=attr(flesh, "skeleton")
> >>                standardGeneric("foo")))
> >
> > That's an excellent suggestion.  Thanks!  However, I had to set the signature
> > to c("numeric", "missing") rather than just "numeric".
> >
> > I have uploaded a new version here:
> >
> >       http://www.econ.upenn.edu/~clausen/computing/relist.R
>
> I misunderstood.  You aren't using S4 classes/methods at all
> and so I don't actually see how my comments could have been helpful in
> any way.  relist seems like a really odd solution to me, but based on
> the discussion I guess it has its use cases.

You didn't misunderstand but there was an offline discussion pointing out
that one primary use is in the inner loop of an optimization so it should be
made as efficient as possible and it was changed with that in mind.


From maechler at stat.math.ethz.ch  Wed May 23 15:07:31 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 23 May 2007 15:07:31 +0200
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <971536df0705230556l2b91613eib5b8590d04db2946@mail.gmail.com>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705131602p2e407fa2sd1d5e6984d2ffa56@mail.gmail.com>
	<20070514043240.GL28199@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu> <m2y7jf3dze.fsf@ziti.local>
	<971536df0705230556l2b91613eib5b8590d04db2946@mail.gmail.com>
Message-ID: <18004.15507.906393.292974@stat.math.ethz.ch>

>>>>> "GaGr" == Gabor Grothendieck <ggrothendieck at gmail.com>
>>>>>     on Wed, 23 May 2007 08:56:50 -0400 writes:

    GaGr> On 5/23/07, Seth Falcon <sfalcon at fhcrc.org> wrote:
    >> Andrew Clausen <clausen at econ.upenn.edu> writes:
    >> 
    >> > Hi Seth,
    >> >
    >> > On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
    >> >> I will also add that the notion of a default argument on a generic
    >> >> function seems a bit odd to me.  If an argument is available for
    >> >> dispatch, I just don't see what sense it makes to have a default.  In
    >> >> those cases, the default should be handled by the method that has a
    >> >> signature with said argument matching the "missing" class.
    >> >>
    >> >> What often does make sense is to define a generic function where some
    >> >> argument are not available for dispatch.  For example:
    >> >>
    >> >> setGeneric("foo", signature="flesh",
    >> >>            function(flesh, skeleton=attr(flesh, "skeleton")
    >> >>                standardGeneric("foo")))
    >> >
    >> > That's an excellent suggestion.  Thanks!  However, I had to set the signature
    >> > to c("numeric", "missing") rather than just "numeric".
    >> >
    >> > I have uploaded a new version here:
    >> >
    >> >       http://www.econ.upenn.edu/~clausen/computing/relist.R
    >> 
    >> I misunderstood.  You aren't using S4 classes/methods at all
    >> and so I don't actually see how my comments could have been helpful in
    >> any way.  relist seems like a really odd solution to me, but based on
    >> the discussion I guess it has its use cases.

    GaGr> You didn't misunderstand but there was an offline
    GaGr> discussion pointing out that one primary use is in the
    GaGr> inner loop of an optimization so it should be made as
    GaGr> efficient as possible and it was changed with that in
    GaGr> mind.

Thank you Gabor for that explanation.
(I had wondered, too, and was glad that Andrew had dropped S4
 generics seemingly "by himself"  ;-))

Re your proposal of mixing this into reshape():

I think it's a nice and didactly helpful idea to point out the
similarity in concepts between reshape() and relist().

However, I wouldn't like to make reshape() generic in this
sense:  As Andrew has mentioned as well, I think the two topics
of data.frame (/matrix) reshaping and list <-> vector transformation
seem too much different...

Martin


From ggrothendieck at gmail.com  Wed May 23 15:16:23 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 23 May 2007 09:16:23 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <18004.15507.906393.292974@stat.math.ethz.ch>
References: <20070513172911.GP6923@econ.upenn.edu>
	<971536df0705132354u6e2ae0cci9b1e42a766dc0ec5@mail.gmail.com>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu> <m2y7jf3dze.fsf@ziti.local>
	<971536df0705230556l2b91613eib5b8590d04db2946@mail.gmail.com>
	<18004.15507.906393.292974@stat.math.ethz.ch>
Message-ID: <971536df0705230616j4ece3182i816b4dd4bc5a339e@mail.gmail.com>

On 5/23/07, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> >>>>> "GaGr" == Gabor Grothendieck <ggrothendieck at gmail.com>
> >>>>>     on Wed, 23 May 2007 08:56:50 -0400 writes:
>
>    GaGr> On 5/23/07, Seth Falcon <sfalcon at fhcrc.org> wrote:
>    >> Andrew Clausen <clausen at econ.upenn.edu> writes:
>    >>
>    >> > Hi Seth,
>    >> >
>    >> > On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
>    >> >> I will also add that the notion of a default argument on a generic
>    >> >> function seems a bit odd to me.  If an argument is available for
>    >> >> dispatch, I just don't see what sense it makes to have a default.  In
>    >> >> those cases, the default should be handled by the method that has a
>    >> >> signature with said argument matching the "missing" class.
>    >> >>
>    >> >> What often does make sense is to define a generic function where some
>    >> >> argument are not available for dispatch.  For example:
>    >> >>
>    >> >> setGeneric("foo", signature="flesh",
>    >> >>            function(flesh, skeleton=attr(flesh, "skeleton")
>    >> >>                standardGeneric("foo")))
>    >> >
>    >> > That's an excellent suggestion.  Thanks!  However, I had to set the signature
>    >> > to c("numeric", "missing") rather than just "numeric".
>    >> >
>    >> > I have uploaded a new version here:
>    >> >
>    >> >       http://www.econ.upenn.edu/~clausen/computing/relist.R
>    >>
>    >> I misunderstood.  You aren't using S4 classes/methods at all
>    >> and so I don't actually see how my comments could have been helpful in
>    >> any way.  relist seems like a really odd solution to me, but based on
>    >> the discussion I guess it has its use cases.
>
>    GaGr> You didn't misunderstand but there was an offline
>    GaGr> discussion pointing out that one primary use is in the
>    GaGr> inner loop of an optimization so it should be made as
>    GaGr> efficient as possible and it was changed with that in
>    GaGr> mind.
>
> Thank you Gabor for that explanation.
> (I had wondered, too, and was glad that Andrew had dropped S4
>  generics seemingly "by himself"  ;-))
>
> Re your proposal of mixing this into reshape():
>
> I think it's a nice and didactly helpful idea to point out the
> similarity in concepts between reshape() and relist().
>
> However, I wouldn't like to make reshape() generic in this
> sense:  As Andrew has mentioned as well, I think the two topics
> of data.frame (/matrix) reshaping and list <-> vector transformation
> seem too much different...
>
> Martin
>

Another possibility is to call it reshapeList instead of relist or reshape and
the argument list made similar to reshape to keep the analogy as to
reshape as close as possible to leverage the R user's knowledge of
reshape.

However, I am not so sure it really is different.  Both reshape and
relist involve flattening of structures and then reconstructing them back
to the original.  This seems very similar to me.


From h.wickham at gmail.com  Wed May 23 15:33:07 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Wed, 23 May 2007 15:33:07 +0200
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <971536df0705230616j4ece3182i816b4dd4bc5a339e@mail.gmail.com>
References: <20070513172911.GP6923@econ.upenn.edu>
	<17992.5499.383704.358418@stat.math.ethz.ch>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu> <m2y7jf3dze.fsf@ziti.local>
	<971536df0705230556l2b91613eib5b8590d04db2946@mail.gmail.com>
	<18004.15507.906393.292974@stat.math.ethz.ch>
	<971536df0705230616j4ece3182i816b4dd4bc5a339e@mail.gmail.com>
Message-ID: <f8e6ff050705230633o63693e64g91b05f3c2f8bb438@mail.gmail.com>

On 5/23/07, Gabor Grothendieck <ggrothendieck at gmail.com> wrote:
> On 5/23/07, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> > >>>>> "GaGr" == Gabor Grothendieck <ggrothendieck at gmail.com>
> > >>>>>     on Wed, 23 May 2007 08:56:50 -0400 writes:
> >
> >    GaGr> On 5/23/07, Seth Falcon <sfalcon at fhcrc.org> wrote:
> >    >> Andrew Clausen <clausen at econ.upenn.edu> writes:
> >    >>
> >    >> > Hi Seth,
> >    >> >
> >    >> > On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
> >    >> >> I will also add that the notion of a default argument on a generic
> >    >> >> function seems a bit odd to me.  If an argument is available for
> >    >> >> dispatch, I just don't see what sense it makes to have a default.  In
> >    >> >> those cases, the default should be handled by the method that has a
> >    >> >> signature with said argument matching the "missing" class.
> >    >> >>
> >    >> >> What often does make sense is to define a generic function where some
> >    >> >> argument are not available for dispatch.  For example:
> >    >> >>
> >    >> >> setGeneric("foo", signature="flesh",
> >    >> >>            function(flesh, skeleton=attr(flesh, "skeleton")
> >    >> >>                standardGeneric("foo")))
> >    >> >
> >    >> > That's an excellent suggestion.  Thanks!  However, I had to set the signature
> >    >> > to c("numeric", "missing") rather than just "numeric".
> >    >> >
> >    >> > I have uploaded a new version here:
> >    >> >
> >    >> >       http://www.econ.upenn.edu/~clausen/computing/relist.R
> >    >>
> >    >> I misunderstood.  You aren't using S4 classes/methods at all
> >    >> and so I don't actually see how my comments could have been helpful in
> >    >> any way.  relist seems like a really odd solution to me, but based on
> >    >> the discussion I guess it has its use cases.
> >
> >    GaGr> You didn't misunderstand but there was an offline
> >    GaGr> discussion pointing out that one primary use is in the
> >    GaGr> inner loop of an optimization so it should be made as
> >    GaGr> efficient as possible and it was changed with that in
> >    GaGr> mind.
> >
> > Thank you Gabor for that explanation.
> > (I had wondered, too, and was glad that Andrew had dropped S4
> >  generics seemingly "by himself"  ;-))
> >
> > Re your proposal of mixing this into reshape():
> >
> > I think it's a nice and didactly helpful idea to point out the
> > similarity in concepts between reshape() and relist().
> >
> > However, I wouldn't like to make reshape() generic in this
> > sense:  As Andrew has mentioned as well, I think the two topics
> > of data.frame (/matrix) reshaping and list <-> vector transformation
> > seem too much different...
> >
> > Martin
> >
>
> Another possibility is to call it reshapeList instead of relist or reshape and
> the argument list made similar to reshape to keep the analogy as to
> reshape as close as possible to leverage the R user's knowledge of
> reshape.
>
> However, I am not so sure it really is different.  Both reshape and
> relist involve flattening of structures and then reconstructing them back
> to the original.  This seems very similar to me.

The cast and melt operators in reshape are already generic, if you
wanted to hook onto those instead.

Hadley


From ggrothendieck at gmail.com  Wed May 23 15:48:06 2007
From: ggrothendieck at gmail.com (Gabor Grothendieck)
Date: Wed, 23 May 2007 09:48:06 -0400
Subject: [Rd] relist, an inverse operator to unlist
In-Reply-To: <f8e6ff050705230633o63693e64g91b05f3c2f8bb438@mail.gmail.com>
References: <20070513172911.GP6923@econ.upenn.edu>
	<20070519153636.GJ21178@econ.upenn.edu>
	<20070519160413.GK21178@econ.upenn.edu> <m2r6p990j5.fsf@ziti.local>
	<20070522115154.GS28199@econ.upenn.edu> <m2y7jf3dze.fsf@ziti.local>
	<971536df0705230556l2b91613eib5b8590d04db2946@mail.gmail.com>
	<18004.15507.906393.292974@stat.math.ethz.ch>
	<971536df0705230616j4ece3182i816b4dd4bc5a339e@mail.gmail.com>
	<f8e6ff050705230633o63693e64g91b05f3c2f8bb438@mail.gmail.com>
Message-ID: <971536df0705230648s3c462c93q9d87632bd986c08a@mail.gmail.com>

On 5/23/07, hadley wickham <h.wickham at gmail.com> wrote:
> On 5/23/07, Gabor Grothendieck <ggrothendieck at gmail.com> wrote:
> > On 5/23/07, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> > > >>>>> "GaGr" == Gabor Grothendieck <ggrothendieck at gmail.com>
> > > >>>>>     on Wed, 23 May 2007 08:56:50 -0400 writes:
> > >
> > >    GaGr> On 5/23/07, Seth Falcon <sfalcon at fhcrc.org> wrote:
> > >    >> Andrew Clausen <clausen at econ.upenn.edu> writes:
> > >    >>
> > >    >> > Hi Seth,
> > >    >> >
> > >    >> > On Mon, May 21, 2007 at 05:15:10PM -0700, Seth Falcon wrote:
> > >    >> >> I will also add that the notion of a default argument on a generic
> > >    >> >> function seems a bit odd to me.  If an argument is available for
> > >    >> >> dispatch, I just don't see what sense it makes to have a default.  In
> > >    >> >> those cases, the default should be handled by the method that has a
> > >    >> >> signature with said argument matching the "missing" class.
> > >    >> >>
> > >    >> >> What often does make sense is to define a generic function where some
> > >    >> >> argument are not available for dispatch.  For example:
> > >    >> >>
> > >    >> >> setGeneric("foo", signature="flesh",
> > >    >> >>            function(flesh, skeleton=attr(flesh, "skeleton")
> > >    >> >>                standardGeneric("foo")))
> > >    >> >
> > >    >> > That's an excellent suggestion.  Thanks!  However, I had to set the signature
> > >    >> > to c("numeric", "missing") rather than just "numeric".
> > >    >> >
> > >    >> > I have uploaded a new version here:
> > >    >> >
> > >    >> >       http://www.econ.upenn.edu/~clausen/computing/relist.R
> > >    >>
> > >    >> I misunderstood.  You aren't using S4 classes/methods at all
> > >    >> and so I don't actually see how my comments could have been helpful in
> > >    >> any way.  relist seems like a really odd solution to me, but based on
> > >    >> the discussion I guess it has its use cases.
> > >
> > >    GaGr> You didn't misunderstand but there was an offline
> > >    GaGr> discussion pointing out that one primary use is in the
> > >    GaGr> inner loop of an optimization so it should be made as
> > >    GaGr> efficient as possible and it was changed with that in
> > >    GaGr> mind.
> > >
> > > Thank you Gabor for that explanation.
> > > (I had wondered, too, and was glad that Andrew had dropped S4
> > >  generics seemingly "by himself"  ;-))
> > >
> > > Re your proposal of mixing this into reshape():
> > >
> > > I think it's a nice and didactly helpful idea to point out the
> > > similarity in concepts between reshape() and relist().
> > >
> > > However, I wouldn't like to make reshape() generic in this
> > > sense:  As Andrew has mentioned as well, I think the two topics
> > > of data.frame (/matrix) reshaping and list <-> vector transformation
> > > seem too much different...
> > >
> > > Martin
> > >
> >
> > Another possibility is to call it reshapeList instead of relist or reshape and
> > the argument list made similar to reshape to keep the analogy as to
> > reshape as close as possible to leverage the R user's knowledge of
> > reshape.
> >
> > However, I am not so sure it really is different.  Both reshape and
> > relist involve flattening of structures and then reconstructing them back
> > to the original.  This seems very similar to me.
>
> The cast and melt operators in reshape are already generic, if you
> wanted to hook onto those instead.
>
> Hadley
>

If that were done then it would probably make more sense to
add it to the reshape package rather than the core of R.


From osklyar at ebi.ac.uk  Wed May 23 17:52:40 2007
From: osklyar at ebi.ac.uk (Oleg Sklyar)
Date: Wed, 23 May 2007 16:52:40 +0100
Subject: [Rd] package: 'inline' to inline C or C++ code in R functions
In-Reply-To: <46534A0A.6050508@stats.uwo.ca>
References: <46532F64.9030203@ebi.ac.uk> <46534A0A.6050508@stats.uwo.ca>
Message-ID: <46546348.5070605@ebi.ac.uk>

Dear all,

following the earlier discussion, I've made a couple of changes to
'inline' (http://www.ebi.ac.uk/~osklyar/inline). As announced before the
idea of the package is to enable inlining C or C++ code in R functions
using only R sources. The changes include:

- it is possible to select between C and C++
- it is possible to declare a standard R function calling a C/C++
  routine or an S4 method with a fixed signature
- setCMethod accepts single of multiple method signatures in a list, all
  put in one shared object
- readline syntax is used in the example for a multiline C++ source :)

Thanks Duncan, Simon and Deepayan for useful comments!

Not tested on Windows, I would be thankful if somebody could do it.

Duncan Murdoch wrote:
> Another suggestion:
> 
> You might want to allow a list of signatures and code chunks to be
> passed to the compiler, producing a list of functions to evaluate them,
> all compiled into one DLL.

Simon Urbanek wrote:
> I really like the idea! Except for the fact that it's forcing the use
> of C++ which adds unnecessary overhead :P I'd like a configurable
> extension [including .m] and the ability to prepend functions as code.

-- 
Dr Oleg Sklyar * EBI/EMBL, Cambridge CB10 1SD, England * +44-1223-494466


From savicky at cs.cas.cz  Wed May 23 18:55:24 2007
From: savicky at cs.cas.cz (Petr Savicky)
Date: Wed, 23 May 2007 18:55:24 +0200
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
	floating point values
In-Reply-To: <46540A76.2080909@statistik.uni-dortmund.de>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
	<4652C19F.1040509@statistik.uni-dortmund.de>
	<eb97335b0705220849l624d8cai6e49e37e2565ab81@mail.gmail.com>
	<46540A76.2080909@statistik.uni-dortmund.de>
Message-ID: <20070523165523.GA23733@cs.cas.cz>

> > Well, okay, now what about dump, write.table, save, etc?
> 
> save() uses the required precision. For exp(1) it stores 
> "2.718281828459045" and you will see that
> 
> exp(1) == 2.718281828459045  is TRUE
> 
save(...,ascii=TRUE) uses 16 digit precision, but this seems
not to be sufficient. In R-2.5.0, I obtained:

  > otab <- data.frame(val=1+1/(1:1000));
  > ntab <- otab;
  > save(otab,file="save.txt",ascii=TRUE);
  > rm(otab);
  > load("save.txt");
  
  > cbind(table(otab[,1]-ntab[,1]))
                        [,1]
  -4.44089209850063e-16  159
  -2.22044604925031e-16  220
  0                      240
  2.22044604925031e-16   213
  4.44089209850063e-16   168

So, most of the numbers are changed. The changes are within the
last two bits. The last bit represents the difference
2^(-52) = 2.220446e-16.

Petr.


From vdergachev at rcgardis.com  Wed May 23 19:18:37 2007
From: vdergachev at rcgardis.com (Vladimir Dergachev)
Date: Wed, 23 May 2007 13:18:37 -0400
Subject: [Rd] is.finite confusion
Message-ID: <200705231318.37662.vdergachev@rcgardis.com>


    I have recently made a silly screwup by applying is.finite() to a 
character vector:

>  is.finite(c("a", "b"))
[1] FALSE FALSE

This does work with factors of course (as they are integer underneath)

I wonder if a fix could be put in so that it either reports an error when 
applied to a character vector - or, perhaps better, act as is.na()

                      thank you

                               Vladimir Dergachev
PS test on R 2.5.0, 2.3.1


From savicky at cs.cas.cz  Wed May 23 19:22:47 2007
From: savicky at cs.cas.cz (Petr Savicky)
Date: Wed, 23 May 2007 19:22:47 +0200
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
	floating point values
In-Reply-To: <20070523165523.GA23733@cs.cas.cz>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
	<4652C19F.1040509@statistik.uni-dortmund.de>
	<eb97335b0705220849l624d8cai6e49e37e2565ab81@mail.gmail.com>
	<46540A76.2080909@statistik.uni-dortmund.de>
	<20070523165523.GA23733@cs.cas.cz>
Message-ID: <20070523172247.GB23733@cs.cas.cz>

This is an addition to my previous message.

16 digits are indeed not sufficient to represent a double
value exactly. The next table is calculated in bc calculator.
It shows that if we restrict (or round) double values
to 16 decadic digits then from 4 to 5 consecutive distinct
double values get the same 16 digit decadic code.

1.234567890123456  a 16-digit number for comparison
1.0000000000000000000000000000     1 + 0*2^(-52)
1.0000000000000002220446049250     1 + 1*2^(-52)
1.0000000000000004440892098500     1 + 2*2^(-52)
1.0000000000000006661338147750     1 + 3*2^(-52)
1.0000000000000008881784197001     1 + 4*2^(-52)
1.0000000000000011102230246251     1 + 5*2^(-52)
1.0000000000000013322676295501     1 + 6*2^(-52)
1.0000000000000015543122344752     1 + 7*2^(-52)
1.0000000000000017763568394002     1 + 8*2^(-52)
1.0000000000000019984014443252     1 + 9*2^(-52)
1.0000000000000022204460492503     1 + 10*2^(-52)
1.0000000000000024424906541753     1 + 11*2^(-52)
1.0000000000000026645352591003     1 + 12*2^(-52)
1.0000000000000028865798640254     1 + 13*2^(-52)
1.0000000000000031086244689504     1 + 14*2^(-52)
1.0000000000000033306690738754     1 + 15*2^(-52)
1.0000000000000035527136788005     1 + 16*2^(-52)
1.0000000000000037747582837255     1 + 17*2^(-52)
1.0000000000000039968028886505     1 + 18*2^(-52)
1.0000000000000042188474935755     1 + 19*2^(-52)

Petr.


From ripley at stats.ox.ac.uk  Wed May 23 19:29:27 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 23 May 2007 18:29:27 +0100 (BST)
Subject: [Rd] is.finite confusion
In-Reply-To: <200705231318.37662.vdergachev@rcgardis.com>
References: <200705231318.37662.vdergachev@rcgardis.com>
Message-ID: <Pine.LNX.4.64.0705231825400.960@gannet.stats.ox.ac.uk>

No, because it is carefully documented to do this, and people rely on it 
working as documented.  (Did you do the homework the posting guide asked 
for?)  What harm came out of learning that the values were not finite?

On Wed, 23 May 2007, Vladimir Dergachev wrote:

>
>    I have recently made a silly screwup by applying is.finite() to a
> character vector:
>
>>  is.finite(c("a", "b"))
> [1] FALSE FALSE
>
> This does work with factors of course (as they are integer underneath)
>
> I wonder if a fix could be put in so that it either reports an error when
> applied to a character vector - or, perhaps better, act as is.na()

What way is that?  It acts in the same way, as I understand the help 
pages.

>
>                      thank you
>
>                               Vladimir Dergachev
> PS test on R 2.5.0, 2.3.1

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From murdoch at stats.uwo.ca  Wed May 23 19:36:12 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Wed, 23 May 2007 13:36:12 -0400
Subject: [Rd] package: 'inline' to inline C or C++ code in R functions
In-Reply-To: <46546348.5070605@ebi.ac.uk>
References: <46532F64.9030203@ebi.ac.uk> <46534A0A.6050508@stats.uwo.ca>
	<46546348.5070605@ebi.ac.uk>
Message-ID: <46547B8C.80508@stats.uwo.ca>

On 5/23/2007 11:52 AM, Oleg Sklyar wrote:
> Dear all,
> 
> following the earlier discussion, I've made a couple of changes to
> 'inline' (http://www.ebi.ac.uk/~osklyar/inline). As announced before the
> idea of the package is to enable inlining C or C++ code in R functions
> using only R sources. The changes include:
> 
> - it is possible to select between C and C++
> - it is possible to declare a standard R function calling a C/C++
>   routine or an S4 method with a fixed signature
> - setCMethod accepts single of multiple method signatures in a list, all
>   put in one shared object
> - readline syntax is used in the example for a multiline C++ source :)
> 
> Thanks Duncan, Simon and Deepayan for useful comments!
> 
> Not tested on Windows, I would be thankful if somebody could do it.

It doesn't quite work there.  There are two problems: the test for 
windows should be based on .Platform$OS.type, and R CMD SHLIB expects 
filenames with Unix-style path separators.  I've attached a patch.

Other suggestions:  instead of relying on the filename for lookup when 
calling the compiled code, you might want to use getNativeSymbolInfo to 
obtain it right after compiling.  This can be used as the name argument 
in .Call, but will avoid doing another lookup in the DLL, possibly 
finding a name clash.

You were asking how to handle automatic unloading:  I haven't done this 
myself, but I think RODBC does something similar to close database 
connections.

Something else you might want to think about:  if someone saves one of 
your cfunction results, you may need to recompile it when they reload.

Thanks for writing this, it's looking really nice.

Duncan Murdoch
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070523/244fa858/attachment.pl 

From ripley at stats.ox.ac.uk  Wed May 23 19:32:36 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 23 May 2007 18:32:36 +0100 (BST)
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
 floating point values
In-Reply-To: <f8e6ff050705230257q72f3dbd5ua18072424b38386@mail.gmail.com>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
	<4652C19F.1040509@statistik.uni-dortmund.de>
	<f8e6ff050705230251t1170b47enea9ced70a6ca4a1e@mail.gmail.com>
	<f8e6ff050705230257q72f3dbd5ua18072424b38386@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705231538310.27405@gannet.stats.ox.ac.uk>

I think this is a bug in the MacOS X runtime.  I've checked the C99 
standard, and can see no limits on the precision that you should be able 
to specify to printf.

Not that some protection against such OSes would come amiss.

However, the C99 standard does make clear that [sf]printf is not required 
(even as 'recommended practice') to be accurate to more than *_DIG places, 
which as ?as.character has pointed out is 15 on the machines R runs on.

It really is the case that writing out a number to > 15 significant digits 
and reading it back in again is not required to give exactly the same 
IEC60559 (sic) number, and furthermore there are R platforms for which 
this does not happen.  What Mr Weinberg claimed is 'now impossible' never 
was possible in general (and he seems to be berating the R developers for 
not striving to do better than the C standard requires of OSes).  In fact, 
I believe this to be impossible unless you have access to extended 
precsion arithmetic, as otherwise printf/scanf have to use the same 
arithmetic as the computations.

This is why R supports transfer of floating-point numbers via readBin and 
friends, and uses a binary format itself for save() (by default).

I should also say that any algorithm that depends on that level of details 
in the numbers will depend on the compiler used and optimization level and 
so on.  Don't expect repeatability to that level even with binary data 
unless you (are allowed to) never apply bugfixes to your system.


On Wed, 23 May 2007, hadley wickham wrote:

> On 5/23/07, hadley wickham <h.wickham at gmail.com> wrote:
>> On 5/22/07, Uwe Ligges <ligges at statistik.uni-dortmund.de> wrote:
>>>
>>>
>>> Zack Weinberg wrote:
>>>> I have noticed that in R 2.5.0, no method of textual output will print
>>>> a "double" mode quantity with more than 15 digits after the decimal
>>>> point.  From the help page (?print.default) it appears that this is
>>>> intentional, since digits after the fifteenth may be uncertain.
>>>> However, fifteen digits after the decimal point are not enough to
>>>> represent all the values that an IEEE-double can take.  (You need one
>>>> more.)  This means it is now impossible to write out data in textual
>>>> format (e.g. in order to manipulate it with another program) and read
>>>> back in exactly the same values.  Some analyses are sensitive to this
>>>> sort of extra rounding, especially if it happens repeatedly.
>>>>
>>>> I'd really appreciate some way of forcing R to print enough digits to
>>>> represent every possible IEEE double value.  I would also argue that
>>>> this should be the default behavior of dump(), write.table() and
>>>> friends, and save(...,ascii=TRUE), to prevent data loss.
>>>
>>> Example:
>>>
>>> formatC(exp(1), digits=100, width=-1)
>>
>> formatC(exp(1), digits=1000000, width=-1)
>>  *** caught bus error ***
>> address 0x2, cause 'non-existent physical address'
>>
>> R version 2.5.0 (2007-04-23)
>> i386-apple-darwin8.9.1
>
> Ooops, and the traceback:
>
> Traceback:
> 1: .C("str_signif", x = x, n = n, mode = as.character(mode), width =
> as.integer(width),     digits = as.integer(digits), format =
> as.character(format),     flag = as.character(flag), result =
> blank.chars(i.strlen),     PACKAGE = "base")
> 2: formatC(exp(1), digits = 1e+06, width = -1)
>
> Hadley
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From mtmorgan at fhcrc.org  Wed May 23 20:00:37 2007
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Wed, 23 May 2007 11:00:37 -0700
Subject: [Rd] list element names in S4 class extending list
In-Reply-To: <Pine.GSO.4.58.0705211308340.15906@capecod.bwh.harvard.edu>
	(Vincent
	Carey's message of "Mon, 21 May 2007 13:12:54 -0400 (EDT)")
References: <Pine.GSO.4.58.0705211308340.15906@capecod.bwh.harvard.edu>
Message-ID: <6phveejzagq.fsf@gopher4.fhcrc.org>

Hi Vince --

Not a solution, but a little understanding and a workaround. With C1,
what happens is that the 'names' attribute of ll gets transfered to
the 'names' attribute of the S4 instance.

> setClass("C1", contains="list")
[1] "C1"
> setClass("C2", contains="C1")
[1] "C2"
> ll <- list(a=1, b=2)
> c1 <- new("C1", ll)
> names(c1)
[1] "a" "b"
> names(c1 at .Data)
NULL

With C2, the action happens in the constructed method coerce<-("C2",
"list") (available after class instantiation from the list):

> setClass("C1", contains="list")
[1] "C1"
> setClass("C2", contains="C1")
[1] "C2"
> ll <- list(a=1, b=2)
> c2 <- new("C2", ll)
> getMethod("coerce<-", c("C2", "list"))
Method Definition:

function (from, to, value) 
{
    .value <- as(from, "C1")
    as(.value, "list") <- value
    value <- .value
    {
        for (what in ".Data") slot(from, what) <- slot(value, 
            what)
        from
    }
}

Signatures:
        from to    
target  "C2" "list"
defined "C2" "list"

C2 gets coerced to its super class, C1. C1 is then assigned the list,
including attributes. The bug enters in the 'for (what in ".Data")',
where the slots of .Data from C1, but not the attributes,  are
copied.

The code chunk above is generated in methods:::.simpleReplaceExpr;
naively copying attributes from 'value' to 'from' does not work, as
attributes on 'from' include it's class.

A workaround would be to define an appropriate setAs

> setClass("C1", contains="list")
[1] "C1"
> setClass("C2", contains="C1")
[1] "C2"
> setAs("C2", "list",
+       def=function(from) stop('your def here'),
+       replace=function(from, to, value) {
+           from at .Data <- value
+           from
+       })
[1] "coerce<-"
> ll <- list(a=1, b=2)
> c2 <- new("C2", ll)
> names(c2)
[1] "a" "b"
> names(c2 at .Data)
NULL

presumably this breaks under more esoteric scenarios.

Martin

Vincent Carey 525-2265 <stvjc at channing.harvard.edu> writes:

> can list names attributes be preserved through S4
> class containment?  seems to be so but only if the containment
> relationship is direct ... see below.
>
>> setClass("c1", contains="list")
> [1] "c1"
>> l1 = list(a=1, b=2)
>> o1 = new("c1", l1)
>> names(o1)     # pleasant surprise
> [1] "a" "b"
>> setClass("c2", contains="c1")
> [1] "c2"
>> o2 = new("c2", l1)
>> names(o2)     # sad
> NULL
>> sessionInfo()
> R version 2.6.0 Under development (unstable) (2007-05-11 r41535)
> powerpc-apple-darwin8.9.0
>
> locale:
> C
>
> attached base packages:
> [1] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"
> [7] "base"
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Martin Morgan
Bioconductor / Computational Biology
http://bioconductor.org


From h.wickham at gmail.com  Wed May 23 20:43:31 2007
From: h.wickham at gmail.com (hadley wickham)
Date: Wed, 23 May 2007 20:43:31 +0200
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
	floating point values
In-Reply-To: <Pine.LNX.4.64.0705231538310.27405@gannet.stats.ox.ac.uk>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
	<4652C19F.1040509@statistik.uni-dortmund.de>
	<f8e6ff050705230251t1170b47enea9ced70a6ca4a1e@mail.gmail.com>
	<f8e6ff050705230257q72f3dbd5ua18072424b38386@mail.gmail.com>
	<Pine.LNX.4.64.0705231538310.27405@gannet.stats.ox.ac.uk>
Message-ID: <f8e6ff050705231143p5ecb6f68h781c783855c4d44d@mail.gmail.com>

> I think this is a bug in the MacOS X runtime.  I've checked the C99
> standard, and can see no limits on the precision that you should be able
> to specify to printf.

That seems quite possible - it's interesting that increasing the
number of digits (ie 1e7 vs 1e6) doesn't crash, but takes up about 1.2
gig of ram.

Hadley


From ripley at stats.ox.ac.uk  Wed May 23 21:08:27 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Wed, 23 May 2007 21:08:27 +0200 (CEST)
Subject: [Rd] (PR#9691) 'Bug'#424696: R CMD INSTALL -l <path> does not
Message-ID: <20070523190827.B1C562A40C@slim.kubism.ku.dk>

I looked for evidence that this is supposed to happen, as it was news to 
me that it did on some versions of R.  Possible sources of documentation 
seem to be

R CMD INSTALL --help
?INSTALL
R-intro.texi, R-exts.texi, R-admin.texi

none of which mention this AFAICS, and all seem to be written assuming an 
existing library tree.

DId you find something to suggest otherwise?  Clearly no alpha/beta 
tester expected this to work.

I am not at all sure this would be desirable.  It seems that specifying a 
non-existent library tree would most likely be a typing error, and 
silently creating it would lead to some puzzling errors.  (In fact, I now 
suspect that this has happened to me in the past.)

I've added some much more specific error messages.


On Wed, 16 May 2007, edd at debian.org wrote:

>
> Soeren,
>
> On 16 May 2007 at 23:00, Soeren Sonnenburg wrote:
> | Package: r-base-core
> | Version: 2.5.1~20070513-1    [ aka R-patched as of 20070513 ]
> | Severity: important
> |
> | R CMD INSTALL -l /path/to/lib
> |
> | no longer creates /path/to/lib but assumes it does already exist. This
> | is a change in behaviour as it has worked with R 2.4.X

Yes, but changes in undocumented behaviour are allowed, especially if no 
one knows about them.

> Let me pass that on to R Bugs then as it is in no way related to any Debian
> changes.
>
> Thanks, Dirk
>
>
> | looking at /usr/lib/R/bin/INSTALL, the problem seems to be in the block starting at line 298:
> |
> |
> |
> | lib=`tilde_expand "${lib}"`
> | if test -z "${lib}"; then
> |   lib=`echo "cat('\n~~~', .libPaths()[1], '\n', sep = '')" | \
> |     R_DEFAULT_PACKAGES=NULL "${R_EXE}" --no-save --slave | \
> |     grep '^~~~' | sed 's/.*~~~//'`
> |   message "Installing to library '$lib'"
> | else
> |   lib0=${lib}
> |   cd ${lib}        <-------------- PROBLEM directory must not exist (call MKDIR_P before ?)
> |   lib=`${GETWD}`
> |   cd ${startdir}
> | fi
> |
> |
> | -- System Information:
> | Debian Release: lenny/sid
> |   APT prefers stable
> |   APT policy: (700, 'stable'), (650, 'testing'), (600, 'unstable'), (1, 'experimental')
> | Architecture: i386 (i686)
> |
> | Kernel: Linux 2.6.21.1-sonne (SMP w/2 CPU cores; PREEMPT)
> | Locale: LANG=en_US.UTF-8, LC_CTYPE=en_US.UTF-8 (charmap=UTF-8)
> | Shell: /bin/sh linked to /bin/dash
> |
> | Versions of packages r-base-core depends on:
> | ii  atlas3-base [libblas.so.3 3.6.0-20.6     Automatically Tuned Linear Algebra
> | ii  atlas3-sse2 [libblas.so.3 3.6.0-20.6     Automatically Tuned Linear Algebra
> | ii  libbz2-1.0                1.0.3-6        high-quality block-sorting file co
> | ii  libc6                     2.5-7          GNU C Library: Shared libraries
> | ii  libgfortran1              4.1.2-7        Runtime library for GNU Fortran ap
> | ii  libice6                   1:1.0.3-2      X11 Inter-Client Exchange library
> | ii  libjpeg62                 6b-13          The Independent JPEG Group's JPEG
> | ii  libpaper-utils            1.1.21         Library for handling paper charact
> | ii  libpcre3                  6.7-1          Perl 5 Compatible Regular Expressi
> | ii  libpng12-0                1.2.15~beta5-1 PNG library - runtime
> | ii  libreadline5              5.2-2          GNU readline and history libraries
> | ii  libsm6                    2:1.0.3-1      X11 Session Management library
> | ii  libx11-6                  2:1.0.3-7      X11 client-side library
> | ii  libxt6                    1:1.0.5-2      X11 toolkit intrinsics library
> | ii  perl                      5.8.8-7        Larry Wall's Practical Extraction
> | ii  refblas3 [libblas.so.3]   1.2-8          Basic Linear Algebra Subroutines 3
> | ii  tcl8.4                    8.4.12-1.1     Tcl (the Tool Command Language) v8
> | ii  tk8.4                     8.4.12-1       Tk toolkit for Tcl and X11, v8.4 -
> | ii  unzip                     5.52-9         De-archiver for .zip files
> | ii  zip                       2.32-1         Archiver for .zip files
> | ii  zlib1g                    1:1.2.3-14     compression library - runtime
> |
> | Versions of packages r-base-core recommends:
> | ii  r-base-dev              2.5.1~20070513-1 GNU R installation of auxiliary GN
> | ii  r-recommended           2.5.1~20070513-1 GNU R collection of recommended pa
> |
> | -- no debconf information
> |
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From edd at debian.org  Wed May 23 21:37:37 2007
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 23 May 2007 14:37:37 -0500
Subject: [Rd] (PR#9691) 'Bug'#424696: R CMD INSTALL -l <path> does not
In-Reply-To: <20070523190827.B1C562A40C@slim.kubism.ku.dk>
References: <20070523190827.B1C562A40C@slim.kubism.ku.dk>
Message-ID: <18004.38913.35087.741054@basebud.nulle.part>


(Added Debian BTS address for this bug report back on CCs  --edd)

Brian,

Thanks for not letting this fall off the wagon.

On 23 May 2007 at 21:08, ripley at stats.ox.ac.uk wrote:
| I looked for evidence that this is supposed to happen, as it was news to 
| me that it did on some versions of R.  Possible sources of documentation 
| seem to be
| 
| R CMD INSTALL --help
| ?INSTALL
| R-intro.texi, R-exts.texi, R-admin.texi
| 
| none of which mention this AFAICS, and all seem to be written assuming an 
| existing library tree.
| 
| DId you find something to suggest otherwise?  Clearly no alpha/beta 
| tester expected this to work.

It was news to me too.  Personally, in the (common) code used for building
all r-cran-* packages, I do create directories explicitly ... simply because
I have to do that for all other Debian packages too. We even have
dh_installdirs for that...

Maybe GNU install is different, I do not know.

| I am not at all sure this would be desirable.  It seems that specifying a 
| non-existent library tree would most likely be a typing error, and 
| silently creating it would lead to some puzzling errors.  (In fact, I now 
| suspect that this has happened to me in the past.)
| 
| I've added some much more specific error messages.

Ok. For Debian, I will close this now as you demonstrated (and Thanks! for
that) that it is/was not documented behaviour.  So I see no bug either.
 
| On Wed, 16 May 2007, edd at debian.org wrote:
| 
| >
| > Soeren,
| >
| > On 16 May 2007 at 23:00, Soeren Sonnenburg wrote:
| > | Package: r-base-core
| > | Version: 2.5.1~20070513-1    [ aka R-patched as of 20070513 ]
| > | Severity: important
| > |
| > | R CMD INSTALL -l /path/to/lib
| > |
| > | no longer creates /path/to/lib but assumes it does already exist. This
| > | is a change in behaviour as it has worked with R 2.4.X
| 
| Yes, but changes in undocumented behaviour are allowed, especially if no 
| one knows about them.

I agree with this.

Best, Dirk


| 
| > Let me pass that on to R Bugs then as it is in no way related to any Debian
| > changes.
| >
| > Thanks, Dirk
| >
| >
| > | looking at /usr/lib/R/bin/INSTALL, the problem seems to be in the block starting at line 298:
| > |
| > |
| > |
| > | lib=`tilde_expand "${lib}"`
| > | if test -z "${lib}"; then
| > |   lib=`echo "cat('\n~~~', .libPaths()[1], '\n', sep = '')" | \
| > |     R_DEFAULT_PACKAGES=NULL "${R_EXE}" --no-save --slave | \
| > |     grep '^~~~' | sed 's/.*~~~//'`
| > |   message "Installing to library '$lib'"
| > | else
| > |   lib0=${lib}
| > |   cd ${lib}        <-------------- PROBLEM directory must not exist (call MKDIR_P before ?)
| > |   lib=`${GETWD}`
| > |   cd ${startdir}
| > | fi
| > |
| > |
| > | -- System Information:
| > | Debian Release: lenny/sid
| > |   APT prefers stable
| > |   APT policy: (700, 'stable'), (650, 'testing'), (600, 'unstable'), (1, 'experimental')
| > | Architecture: i386 (i686)
| > |
| > | Kernel: Linux 2.6.21.1-sonne (SMP w/2 CPU cores; PREEMPT)
| > | Locale: LANG=en_US.UTF-8, LC_CTYPE=en_US.UTF-8 (charmap=UTF-8)
| > | Shell: /bin/sh linked to /bin/dash
| > |
| > | Versions of packages r-base-core depends on:
| > | ii  atlas3-base [libblas.so.3 3.6.0-20.6     Automatically Tuned Linear Algebra
| > | ii  atlas3-sse2 [libblas.so.3 3.6.0-20.6     Automatically Tuned Linear Algebra
| > | ii  libbz2-1.0                1.0.3-6        high-quality block-sorting file co
| > | ii  libc6                     2.5-7          GNU C Library: Shared libraries
| > | ii  libgfortran1              4.1.2-7        Runtime library for GNU Fortran ap
| > | ii  libice6                   1:1.0.3-2      X11 Inter-Client Exchange library
| > | ii  libjpeg62                 6b-13          The Independent JPEG Group's JPEG
| > | ii  libpaper-utils            1.1.21         Library for handling paper charact
| > | ii  libpcre3                  6.7-1          Perl 5 Compatible Regular Expressi
| > | ii  libpng12-0                1.2.15~beta5-1 PNG library - runtime
| > | ii  libreadline5              5.2-2          GNU readline and history libraries
| > | ii  libsm6                    2:1.0.3-1      X11 Session Management library
| > | ii  libx11-6                  2:1.0.3-7      X11 client-side library
| > | ii  libxt6                    1:1.0.5-2      X11 toolkit intrinsics library
| > | ii  perl                      5.8.8-7        Larry Wall's Practical Extraction
| > | ii  refblas3 [libblas.so.3]   1.2-8          Basic Linear Algebra Subroutines 3
| > | ii  tcl8.4                    8.4.12-1.1     Tcl (the Tool Command Language) v8
| > | ii  tk8.4                     8.4.12-1       Tk toolkit for Tcl and X11, v8.4 -
| > | ii  unzip                     5.52-9         De-archiver for .zip files
| > | ii  zip                       2.32-1         Archiver for .zip files
| > | ii  zlib1g                    1:1.2.3-14     compression library - runtime
| > |
| > | Versions of packages r-base-core recommends:
| > | ii  r-base-dev              2.5.1~20070513-1 GNU R installation of auxiliary GN
| > | ii  r-recommended           2.5.1~20070513-1 GNU R collection of recommended pa
| > |
| > | -- no debconf information
| > |
| >
| >
| 
| -- 
| Brian D. Ripley,                  ripley at stats.ox.ac.uk
| Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
| University of Oxford,             Tel:  +44 1865 272861 (self)
| 1 South Parks Road,                     +44 1865 272866 (PA)
| Oxford OX1 3TG, UK                Fax:  +44 1865 272595
| 
| ______________________________________________
| R-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Hell, there are no rules here - we're trying to accomplish something. 
                                                  -- Thomas A. Edison


From vdergachev at rcgardis.com  Wed May 23 22:01:26 2007
From: vdergachev at rcgardis.com (Vladimir Dergachev)
Date: Wed, 23 May 2007 16:01:26 -0400
Subject: [Rd] is.finite confusion
In-Reply-To: <Pine.LNX.4.64.0705231825400.960@gannet.stats.ox.ac.uk>
References: <200705231318.37662.vdergachev@rcgardis.com>
	<Pine.LNX.4.64.0705231825400.960@gannet.stats.ox.ac.uk>
Message-ID: <200705231601.26817.vdergachev@rcgardis.com>

On Wednesday 23 May 2007 1:29 pm, Prof Brian Ripley wrote:
> No, because it is carefully documented to do this, and people rely on it
> working as documented.  (Did you do the homework the posting guide asked
> for?)  What harm came out of learning that the values were not finite?

I read the manpage if that is what you are talking about. 

The particular thing I was attempting to do is to convert all entries that are 
not values to NULL before storing the result in the database. From my point 
of view string value was perfectly finite and my code worked with a 
data.frame I had because it happened to have factors in it.

Yes, I easily concede that since I know about it now I am not likely to make 
the same mistake again. Just was trying (politely) to be of help to other 
users.

                             best

                                 Vladimir Dergachev

>
> On Wed, 23 May 2007, Vladimir Dergachev wrote:
> >    I have recently made a silly screwup by applying is.finite() to a
> >
> > character vector:
> >>  is.finite(c("a", "b"))
> >
> > [1] FALSE FALSE
> >
> > This does work with factors of course (as they are integer underneath)
> >
> > I wonder if a fix could be put in so that it either reports an error when
> > applied to a character vector - or, perhaps better, act as is.na()
>
> What way is that?  It acts in the same way, as I understand the help
> pages.
>
> >                      thank you
> >
> >                               Vladimir Dergachev
> > PS test on R 2.5.0, 2.3.1


From jonathan.kelfer at gmail.com  Thu May 24 05:01:26 2007
From: jonathan.kelfer at gmail.com (Jonathan Kelfer)
Date: Wed, 23 May 2007 23:01:26 -0400
Subject: [Rd] development
Message-ID: <a9eda6a70705232001xea7c967wfbe1e652a408cf8e@mail.gmail.com>

I'm interested in doing a little programming on the R engine.  Can
anyone point me toward a document which details the internals?
Thanks. --Jon


From Bill.Venables at csiro.au  Thu May 24 07:04:12 2007
From: Bill.Venables at csiro.au (Bill.Venables at csiro.au)
Date: Thu, 24 May 2007 15:04:12 +1000
Subject: [Rd] development
References: <a9eda6a70705232001xea7c967wfbe1e652a408cf8e@mail.gmail.com>
Message-ID: <B998A44C8986644EA8029CFE6396A924B67A69@exqld2-bne.nexus.csiro.au>

I know of 2. there is the standard one I presume you already know

http://cran.r-project.org/doc/manuals/R-ints.html 

But there is another, more comprehensive one.  It's written in a few
languages as well.  Mostly C.  :-)


Bill Venables
CSIRO Laboratories
PO Box 120, Cleveland, 4163
AUSTRALIA
Office Phone (email preferred):   +61 7 3826 7251
Fax (if absolutely necessary):      +61 7 3826 7304
Mobile:                                   (I don't have one!)
Home Phone:                            +61 7 3286 7700
mailto:Bill.Venables at csiro.au
http://www.cmis.csiro.au/bill.venables/ 

-----Original Message-----
From: r-devel-bounces at r-project.org
[mailto:r-devel-bounces at r-project.org] On Behalf Of Jonathan Kelfer
Sent: Thursday, 24 May 2007 1:01 PM
To: r-devel at r-project.org
Subject: [Rd] development

I'm interested in doing a little programming on the R engine.  Can
anyone point me toward a document which details the internals?
Thanks. --Jon

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From rene.locher at zhwin.ch  Thu May 24 13:08:41 2007
From: rene.locher at zhwin.ch (rene.locher at zhwin.ch)
Date: Thu, 24 May 2007 13:08:41 +0200 (CEST)
Subject: [Rd] image(): wrong comment in error message (PR#9707)
Message-ID: <20070524110841.EC7D62A3FA@slim.kubism.ku.dk>

Full_Name: Rene Locher
Version: R version 2.5.0 (2007-04-23)
OS: Windows XP
Submission from: (NULL) (160.85.231.54)


image(x = 1:2, y = 1:2,
      z = matrix(c(1,2,3,1,2,3), ncol=2+1),
      col = c("red","blue","green"))

results in: 
Error in image.default(x = 1:2, y = 1:2, z = matrix(c(1, 2, 3, 1, 2, 3),  : 
	dimensions of z are not length(x)(+1) times length(y)(+1)

instead of: 
Error in image.default(x = 1:2, y = 1:2, z = matrix(c(1, 2, 3, 1, 2, 3),  : 
	dimensions of z are not length(x)(-1) times length(y)(-1)
                                          ^                   ^


From fjcaba at teleline.es  Thu May 24 19:40:38 2007
From: fjcaba at teleline.es (fjcaba at teleline.es)
Date: Thu, 24 May 2007 19:40:38 +0200 (CEST)
Subject: [Rd] Problems with R 2.5.0 (PR#9708)
Message-ID: <20070524174038.431DE47437@slim.kubism.ku.dk>

Full_Name: FJ Caballero-Granado
Version: 2.5.0
OS: Windows
Submission from: (NULL) (84.125.163.119)


Hi,
I usually used R version 2.0.0 and ScViews. I have recently installed version
2.5.0, and I updated ScViews. But the latter does not works well. This is the
screen:


R version 2.5.0 Patched (2007-05-21 r41659)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R es un software libre y viene sin GARANTIA ALGUNA.
Usted puede redistribuirlo bajo ciertas circunstancias.
Escriba 'license()' o 'licence()' para detalles de distribucion.

R es un proyecto colaborativo con muchos contribuyentes.
Escriba 'contributors()' para obtener m?s informaci?n y
'citation()' para saber c?mo citar R o paquetes de R en publicaciones.

Escriba 'demo()' para demostraciones, 'help()' para el sistema on-line de
ayuda,
o 'help.start()' para abrir el sistema de ayuda HTML con su navegador.
Escriba 'q()' para salir de R.

[Previously saved workspace restored]

Loading required package: datasets
Loading required package: utils
Loading required package: grDevices
Loading required package: graphics
Loading required package: stats
Loading required package: tcltk
Loading Tcl/Tk interface ... done
Loading required package: R2HTML
Loading required package: svMisc
Loading required package: svIO
Loading required package: svViews
Durante la inicializaci?n - Warning message:
'Sys.putenv' is deprecated.
Use 'Sys.setenv' instead.
See help("Deprecated") 

And when trying to use R Commander Menu:

Error in file.info(fn <- c(...)) : argumento del nombre de archivo inv?lido

What is the problem?


From jfox at mcmaster.ca  Thu May 24 23:50:12 2007
From: jfox at mcmaster.ca (John Fox)
Date: Thu, 24 May 2007 17:50:12 -0400
Subject: [Rd] Problems with R 2.5.0 (PR#9708)
In-Reply-To: <20070524174038.431DE47437@slim.kubism.ku.dk>
Message-ID: <20070524215010.KUPJ1593.tomts13-srv.bellnexxia.net@JohnDesktop8300>

Dear FJ Caballero-Granado,

I don't believe that the current version of SciViews works with the current
version of the Rcmdr, but you could check with Philippe Grosjean
(phgrosjean at sciviews.org) or Eric Lecoutre (lecoutre at stat.ucl.ac.be), the
SciViews developers, for definitive word on that.

This isn't a bug in R and so really shouldn't have been filed as a bug
report.

Regards,
 John

--------------------------------
John Fox, Professor
Department of Sociology
McMaster University
Hamilton, Ontario
Canada L8S 4M4
905-525-9140x23604
http://socserv.mcmaster.ca/jfox 
-------------------------------- 

> -----Original Message-----
> From: r-devel-bounces at r-project.org 
> [mailto:r-devel-bounces at r-project.org] On Behalf Of fjcaba at teleline.es
> Sent: Thursday, May 24, 2007 1:41 PM
> To: r-devel at stat.math.ethz.ch
> Cc: R-bugs at biostat.ku.dk
> Subject: [Rd] Problems with R 2.5.0 (PR#9708)
> 
> Full_Name: FJ Caballero-Granado
> Version: 2.5.0
> OS: Windows
> Submission from: (NULL) (84.125.163.119)
> 
> 
> Hi,
> I usually used R version 2.0.0 and ScViews. I have recently 
> installed version 2.5.0, and I updated ScViews. But the 
> latter does not works well. This is the
> screen:
> 
> 
> R version 2.5.0 Patched (2007-05-21 r41659) Copyright (C) 
> 2007 The R Foundation for Statistical Computing ISBN 3-900051-07-0
> 
> R es un software libre y viene sin GARANTIA ALGUNA.
> Usted puede redistribuirlo bajo ciertas circunstancias.
> Escriba 'license()' o 'licence()' para detalles de distribucion.
> 
> R es un proyecto colaborativo con muchos contribuyentes.
> Escriba 'contributors()' para obtener m?s informaci?n y 
> 'citation()' para saber c?mo citar R o paquetes de R en publicaciones.
> 
> Escriba 'demo()' para demostraciones, 'help()' para el 
> sistema on-line de ayuda, o 'help.start()' para abrir el 
> sistema de ayuda HTML con su navegador.
> Escriba 'q()' para salir de R.
> 
> [Previously saved workspace restored]
> 
> Loading required package: datasets
> Loading required package: utils
> Loading required package: grDevices
> Loading required package: graphics
> Loading required package: stats
> Loading required package: tcltk
> Loading Tcl/Tk interface ... done
> Loading required package: R2HTML
> Loading required package: svMisc
> Loading required package: svIO
> Loading required package: svViews
> Durante la inicializaci?n - Warning message:
> 'Sys.putenv' is deprecated.
> Use 'Sys.setenv' instead.
> See help("Deprecated") 
> 
> And when trying to use R Commander Menu:
> 
> Error in file.info(fn <- c(...)) : argumento del nombre de 
> archivo inv?lido
> 
> What is the problem?
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From wl2776 at gmail.com  Fri May 25 09:33:35 2007
From: wl2776 at gmail.com (Vladimir Eremeev)
Date: Fri, 25 May 2007 00:33:35 -0700 (PDT)
Subject: [Rd] Problem with accessing internal variable in package.
Message-ID: <10798364.post@talk.nabble.com>


I am writing a package, which contains several functions and variables. 
The variables are for internal use by functions. 
Functions are ment to be callable by a user.
However, the function cannot access these variables.

The package contains only R code, and was created using package.skeleton

package.skeleton(name="ac9",
                 list=c(ls(pattern="(AB2)|(ac9)"),
                        "Chl","Pro","LP","SP","syn","unk","Y","Nh",
                        "plot.C","read.AC9.data","EstimC","plot.AC9"),
                  namespace=TRUE,force=TRUE)

Among others, the package contains the functions EstimC, AB2C, AB2C.S, and
AB2C.HK, and variables ac9nw, ac9wl, ac9aw, ...
Functions use these variables for calculations, and I would like to hide
them from users.

The file NAMESPACE contains the single line:
  export(AB2C.HK,AB2C,AB2C.S,EstimC,plot.C,read.AC9.data,plot.AC9)

I am getting the following error:
Error in AB2C(a, b, model.type) : object "ac9nw" not found

> traceback()
2: AB2C(a, b, model.type)
1: EstimC(i, plot.base.name = paste(plt.base.name, "S_", sep = ""), 
       model.type = "S")

> sessionInfo()
R version 2.5.0 Patched (2007-05-13 r41549) 
i386-pc-mingw32 

locale:
LC_COLLATE=Russian_Russia.1251;LC_CTYPE=Russian_Russia.1251;LC_MONETARY=Russian_Russia.1251;LC_NUMERIC=C;LC_TIME=Russian_Russia.1251

attached base packages:
[1] "datasets"  "utils"     "stats"     "graphics"  "grDevices" "methods"  
[7] "base"     

other attached packages:
         ac9 xlsReadWrite       matlab         MASS 
       "0.1"      "1.3.2"      "0.8-1"     "7.2-33" 


-- 
View this message in context: http://www.nabble.com/Problem-with-accessing-internal-variable-in-package.-tf3814649.html#a10798364
Sent from the R devel mailing list archive at Nabble.com.


From wl2776 at gmail.com  Fri May 25 10:06:31 2007
From: wl2776 at gmail.com (Vladimir Eremeev)
Date: Fri, 25 May 2007 01:06:31 -0700 (PDT)
Subject: [Rd] Problem with accessing internal variable in package.
In-Reply-To: <10798364.post@talk.nabble.com>
References: <10798364.post@talk.nabble.com>
Message-ID: <10798787.post@talk.nabble.com>


This is my first package, and clearly, I'm missing something.

After reading again manuals about name spaces and hooks, I have defined the
function .onLoad,
which implicitly assigns all internal variables with <<-
Then I have deleted previous package directory and changed the call to
package.skeleton

package.skeleton(name="ac9",
                 list=c(ls(pattern="(AB2)"),
                       
"plot.C","read.AC9.data","EstimC","plot.AC9",".onLoad"),
                  namespace=TRUE,force=TRUE)

It has created file ac9/R/ac9-internal.R, containing the function .onLoad,
however, its body completely differs from that I have defined before.



Vladimir Eremeev wrote:
> 
> I am writing a package, which contains several functions and variables. 
> The variables are for internal use by functions. 
> Functions are ment to be callable by a user.
> However, the function cannot access these variables.
> 
> The package contains only R code, and was created using package.skeleton
> 
> package.skeleton(name="ac9",
>                  list=c(ls(pattern="(AB2)|(ac9)"),
>                         "Chl","Pro","LP","SP","syn","unk","Y","Nh",
>                         "plot.C","read.AC9.data","EstimC","plot.AC9"),
>                   namespace=TRUE,force=TRUE)
> 
> Among others, the package contains the functions EstimC, AB2C, AB2C.S, and
> AB2C.HK, and variables ac9nw, ac9wl, ac9aw, ...
> Functions use these variables for calculations, and I would like to hide
> them from users.
> 
> The file NAMESPACE contains the single line:
>   export(AB2C.HK,AB2C,AB2C.S,EstimC,plot.C,read.AC9.data,plot.AC9)
> 
> I am getting the following error:
> Error in AB2C(a, b, model.type) : object "ac9nw" not found
> 
>> traceback()
> 2: AB2C(a, b, model.type)
> 1: EstimC(i, plot.base.name = paste(plt.base.name, "S_", sep = ""), 
>        model.type = "S")
> 
>> sessionInfo()
> R version 2.5.0 Patched (2007-05-13 r41549) 
> i386-pc-mingw32 
> 
> locale:
> LC_COLLATE=Russian_Russia.1251;LC_CTYPE=Russian_Russia.1251;LC_MONETARY=Russian_Russia.1251;LC_NUMERIC=C;LC_TIME=Russian_Russia.1251
> 
> attached base packages:
> [1] "datasets"  "utils"     "stats"     "graphics"  "grDevices" "methods"  
> [7] "base"     
> 
> other attached packages:
>          ac9 xlsReadWrite       matlab         MASS 
>        "0.1"      "1.3.2"      "0.8-1"     "7.2-33" 
> 

-- 
View this message in context: http://www.nabble.com/Problem-with-accessing-internal-variable-in-package.-tf3814649.html#a10798787
Sent from the R devel mailing list archive at Nabble.com.


From antonella872000 at yahoo.it  Fri May 25 11:02:07 2007
From: antonella872000 at yahoo.it (Gatsu)
Date: Fri, 25 May 2007 11:02:07 +0200 (CEST)
Subject: [Rd] C code for qbeta
Message-ID: <802900.55656.qm@web26904.mail.ukl.yahoo.com>

Can somebody help me?

I need the C/C++ code for the R's qbeta function.

Can you send it to me a antonella872000 at yahoo.it ?

PS: I'm italian, i can't speak english very well...


      ___________________________________


From sdavis2 at mail.nih.gov  Fri May 25 11:59:08 2007
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri, 25 May 2007 05:59:08 -0400
Subject: [Rd] C code for qbeta
In-Reply-To: <802900.55656.qm@web26904.mail.ukl.yahoo.com>
References: <802900.55656.qm@web26904.mail.ukl.yahoo.com>
Message-ID: <200705250559.08680.sdavis2@mail.nih.gov>

On Friday 25 May 2007 05:02, Gatsu wrote:
> Can somebody help me?
>
> I need the C/C++ code for the R's qbeta function.

R is open-source, so you can simply download the source and look at whatever 
parts you like.

Sean


From wl2776 at gmail.com  Fri May 25 12:21:56 2007
From: wl2776 at gmail.com (Vladimir Eremeev)
Date: Fri, 25 May 2007 03:21:56 -0700 (PDT)
Subject: [Rd] private variables in package.
Message-ID: <10800416.post@talk.nabble.com>


I am sorry, my previous questions about hiding variables from users in a
package were obscure and vague, and would like to clarify them.

This should be a basic question.
I am writing my first package.
It has several functions, which should be callable by users.
These functions use several variables, and I would like to hide these
variables from users.
How can I do it?

For example, the package has a function AB2C, which uses the variable ac9nw.
If I add the file NAMESPACE, exporting only AB2C, then I get the error:
  
   Error in AB2C(a, b, model.type) : object "ac9nw" not found

I also tried to include in the .onLoad function the code, defining these
variables with <<-
However, this code has created all internal variables in the global
environment.


-- 
View this message in context: http://www.nabble.com/private-variables-in-package.-tf3815306.html#a10800416
Sent from the R devel mailing list archive at Nabble.com.


From ripley at stats.ox.ac.uk  Fri May 25 12:56:54 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Fri, 25 May 2007 11:56:54 +0100 (BST)
Subject: [Rd] private variables in package.
In-Reply-To: <10800416.post@talk.nabble.com>
References: <10800416.post@talk.nabble.com>
Message-ID: <Pine.LNX.4.64.0705251155280.14500@gannet.stats.ox.ac.uk>

R has debugging features: see 'Writing R Extensions'.  Please make use of 
them, e.g. options(error=recover) will enable you to explore the 
environments that are visible.

We can only guess at this, not having function AB2C.

On Fri, 25 May 2007, Vladimir Eremeev wrote:

>
> I am sorry, my previous questions about hiding variables from users in a
> package were obscure and vague, and would like to clarify them.
>
> This should be a basic question.
> I am writing my first package.
> It has several functions, which should be callable by users.
> These functions use several variables, and I would like to hide these
> variables from users.
> How can I do it?
>
> For example, the package has a function AB2C, which uses the variable ac9nw.
> If I add the file NAMESPACE, exporting only AB2C, then I get the error:
>
>   Error in AB2C(a, b, model.type) : object "ac9nw" not found
>
> I also tried to include in the .onLoad function the code, defining these
> variables with <<-
> However, this code has created all internal variables in the global
> environment.
>
>
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From wl2776 at gmail.com  Fri May 25 13:27:29 2007
From: wl2776 at gmail.com (Vladimir Eremeev)
Date: Fri, 25 May 2007 04:27:29 -0700 (PDT)
Subject: [Rd] private variables in package.
In-Reply-To: <Pine.LNX.4.64.0705251155280.14500@gannet.stats.ox.ac.uk>
References: <10800416.post@talk.nabble.com>
	<Pine.LNX.4.64.0705251155280.14500@gannet.stats.ox.ac.uk>
Message-ID: <10801165.post@talk.nabble.com>


Thank you for the answer.

Here is everything.

ac9wl<-c(412,440,488,510,532,555,650,676,715)
ac9nw<-length(ac9wl)

AB2C <-function(a,b,model.type="S") {  
  nza<-dim(a)[1]
  nwa<-dim(a)[2]
  nzb<-dim(b)[1]
  nwb<-dim(b)[2]

  if(nza!=nzb || nwa!=ac9nw || nwb!=ac9nw) {
    warning('AB2C: Dimensions of the input matrices are invalid')
    return(NULL);
  }

 [ further calculations, they  do not use ac9nw ]  
}



ripley-3 wrote:
> 
> R has debugging features: see 'Writing R Extensions'.  Please make use of 
> them, e.g. options(error=recover) will enable you to explore the 
> environments that are visible.
> 
> We can only guess at this, not having function AB2C.
> 
> On Fri, 25 May 2007, Vladimir Eremeev wrote:
> 
> 
>> I am sorry, my previous questions about hiding variables from users in a
>> package were obscure and vague, and would like to clarify them.
>>
>> This should be a basic question.
>> I am writing my first package.
>> It has several functions, which should be callable by users.
>> These functions use several variables, and I would like to hide these
>> variables from users.
>> How can I do it?
>>
>> For example, the package has a function AB2C, which uses the variable
>> ac9nw.
>> If I add the file NAMESPACE, exporting only AB2C, then I get the error:
>>
>>   Error in AB2C(a, b, model.type) : object "ac9nw" not found
> 

-- 
View this message in context: http://www.nabble.com/private-variables-in-package.-tf3815306.html#a10801165
Sent from the R devel mailing list archive at Nabble.com.


From murdoch at stats.uwo.ca  Fri May 25 13:57:48 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Fri, 25 May 2007 07:57:48 -0400
Subject: [Rd] private variables in package.
In-Reply-To: <10801165.post@talk.nabble.com>
References: <10800416.post@talk.nabble.com>	<Pine.LNX.4.64.0705251155280.14500@gannet.stats.ox.ac.uk>
	<10801165.post@talk.nabble.com>
Message-ID: <4656CF3C.7070809@stats.uwo.ca>

On 5/25/2007 7:27 AM, Vladimir Eremeev wrote:
> Thank you for the answer.
> 
> Here is everything.
> 
> ac9wl<-c(412,440,488,510,532,555,650,676,715)
> ac9nw<-length(ac9wl)
> 
> AB2C <-function(a,b,model.type="S") {  
>   nza<-dim(a)[1]
>   nwa<-dim(a)[2]
>   nzb<-dim(b)[1]
>   nwb<-dim(b)[2]
> 
>   if(nza!=nzb || nwa!=ac9nw || nwb!=ac9nw) {
>     warning('AB2C: Dimensions of the input matrices are invalid')
>     return(NULL);
>   }
> 
>  [ further calculations, they  do not use ac9nw ]  
> }


That would work, so my guess is that you aren't using that function.  If 
you have a function named AB2C in your global environment, R will find 
it before this one, and it may not be able to see the ac9nw variable.

Duncan Murdoch


From wl2776 at gmail.com  Fri May 25 14:13:27 2007
From: wl2776 at gmail.com (Vladimir Eremeev)
Date: Fri, 25 May 2007 05:13:27 -0700 (PDT)
Subject: [Rd] private variables in package.
In-Reply-To: <4656CF3C.7070809@stats.uwo.ca>
References: <10800416.post@talk.nabble.com>
	<Pine.LNX.4.64.0705251155280.14500@gannet.stats.ox.ac.uk>
	<10801165.post@talk.nabble.com> <4656CF3C.7070809@stats.uwo.ca>
Message-ID: <10801823.post@talk.nabble.com>


I do use this function.
Here is the example session, run from the newly created directory, without
.Rdata and .Rhistory files.

=== begin
R version 2.5.0 Patched (2007-05-13 r41549)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(ac9)
> AB2C(matrix(rnorm(90),ncol=9),matrix(rnorm(90),ncol=9))
Error in AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9)) : 
        object "ac9nw" not found
> options(error=recover)
> AB2C(matrix(rnorm(90),ncol=9),matrix(rnorm(90),ncol=9))
Error in AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9)) : 
        object "ac9nw" not found

Enter a frame number, or 0 to exit   

1: AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))

Selection: 1
Called from: eval(expr, envir, enclos)
Browse[1]> ls()
[1] "a"          "b"          "model.type" "nwa"        "nwb"       
[6] "nza"        "nzb"       
Browse[1]> search()
 [1] ".GlobalEnv"        "package:ac9"       "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
Browse[1]> n

Enter a frame number, or 0 to exit   

1: AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))

Selection: 1
Browse[1]> n

Enter a frame number, or 0 to exit   

1: AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))
Selection: 0


=== Pause of the session, don't quit from R.

The function AB2C tries to work, if I use the data function.
But this data function makes the ac9nw visible in the global environment.

=== Continuing the sample session:

> data(ac9nw)
> ls()
[1] "ac9nw"
> ac9nw
[1] 9

> AB2C(matrix(rnorm(90),ncol=9),matrix(rnorm(90),ncol=9))
Error in eval(expr, envir, enclos) : object "Pro" not found

Enter a frame number, or 0 to exit   

 1: AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))
 2: NextMethod("AB2C")
 3: AB2C.S(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))
 4: lm(t(cbind(a, b)) ~ Pro + syn + unk + Y + Nh + 0, offset = c(ac9aw,
ac9bw))
 5: eval(mf, parent.frame())
 6: eval(expr, envir, enclos)
 7: model.frame(formula = t(cbind(a, b)) ~ Pro + syn + unk + Y + Nh + 0,
offset = c(ac9a
 8: model.frame.default(formula = t(cbind(a, b)) ~ Pro + syn + unk + Y + Nh
+ 0, offset 
 9: eval(predvars, data, env)
10: eval(expr, envir, enclos)

Selection: 0

The function AB2C now sees ac9nw, and gives similar errors, related to other
hidden variables.


Duncan Murdoch-2 wrote:
> 
> On 5/25/2007 7:27 AM, Vladimir Eremeev wrote:
>> Thank you for the answer.
>> 
>> Here is everything.
>> 
>> ac9wl<-c(412,440,488,510,532,555,650,676,715)
>> ac9nw<-length(ac9wl)
>> 
>> AB2C <-function(a,b,model.type="S") {  
>>   nza<-dim(a)[1]
>>   nwa<-dim(a)[2]
>>   nzb<-dim(b)[1]
>>   nwb<-dim(b)[2]
>> 
>>   if(nza!=nzb || nwa!=ac9nw || nwb!=ac9nw) {
>>     warning('AB2C: Dimensions of the input matrices are invalid')
>>     return(NULL);
>>   }
>> 
>>  [ further calculations, they  do not use ac9nw ]  
>> }
> 
> 
> That would work, so my guess is that you aren't using that function.  If 
> you have a function named AB2C in your global environment, R will find 
> it before this one, and it may not be able to see the ac9nw variable.
> 
> Duncan Murdoch
> 
> 

-- 
View this message in context: http://www.nabble.com/private-variables-in-package.-tf3815306.html#a10801823
Sent from the R devel mailing list archive at Nabble.com.


From wl2776 at gmail.com  Fri May 25 14:46:34 2007
From: wl2776 at gmail.com (Vladimir Eremeev)
Date: Fri, 25 May 2007 05:46:34 -0700 (PDT)
Subject: [Rd] solved.
In-Reply-To: <10801823.post@talk.nabble.com>
References: <10800416.post@talk.nabble.com>
	<Pine.LNX.4.64.0705251155280.14500@gannet.stats.ox.ac.uk>
	<10801165.post@talk.nabble.com> <4656CF3C.7070809@stats.uwo.ca>
	<10801823.post@talk.nabble.com>
Message-ID: <10802257.post@talk.nabble.com>


By removing the data directory (which package.skeleton has created, and where
it has put all my variables in files with .rda extension) and adding one
more file to the R directory, containing the variable assignments.


Vladimir Eremeev wrote:
> 
> I do use this function.
> Here is the example session, run from the newly created directory, without
> .Rdata and .Rhistory files.
> 
> === begin
> R version 2.5.0 Patched (2007-05-13 r41549)
> Copyright (C) 2007 The R Foundation for Statistical Computing
> ISBN 3-900051-07-0
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under certain conditions.
> Type 'license()' or 'licence()' for distribution details.
> 
> R is a collaborative project with many contributors.
> Type 'contributors()' for more information and
> 'citation()' on how to cite R or R packages in publications.
> 
> Type 'demo()' for some demos, 'help()' for on-line help, or
> 'help.start()' for an HTML browser interface to help.
> Type 'q()' to quit R.
> 
>> library(ac9)
>> AB2C(matrix(rnorm(90),ncol=9),matrix(rnorm(90),ncol=9))
> Error in AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9)) : 
>         object "ac9nw" not found
>> options(error=recover)
>> AB2C(matrix(rnorm(90),ncol=9),matrix(rnorm(90),ncol=9))
> Error in AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9)) : 
>         object "ac9nw" not found
> 
> Enter a frame number, or 0 to exit   
> 
> 1: AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))
> 
> Selection: 1
> Called from: eval(expr, envir, enclos)
> Browse[1]> ls()
> [1] "a"          "b"          "model.type" "nwa"        "nwb"       
> [6] "nza"        "nzb"       
> Browse[1]> search()
>  [1] ".GlobalEnv"        "package:ac9"       "package:stats"    
>  [4] "package:graphics"  "package:grDevices" "package:utils"    
>  [7] "package:datasets"  "package:methods"   "Autoloads"        
> [10] "package:base"     
> Browse[1]> n
> 
> Enter a frame number, or 0 to exit   
> 
> 1: AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))
> 
> Selection: 1
> Browse[1]> n
> 
> Enter a frame number, or 0 to exit   
> 
> 1: AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))
> Selection: 0
> 
> 
> === Pause of the session, don't quit from R.
> 
> The function AB2C tries to work, if I use the data function.
> But this data function makes the ac9nw visible in the global environment.
> 
> === Continuing the sample session:
> 
>> data(ac9nw)
>> ls()
> [1] "ac9nw"
>> ac9nw
> [1] 9
> 
>> AB2C(matrix(rnorm(90),ncol=9),matrix(rnorm(90),ncol=9))
> Error in eval(expr, envir, enclos) : object "Pro" not found
> 
> Enter a frame number, or 0 to exit   
> 
>  1: AB2C(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))
>  2: NextMethod("AB2C")
>  3: AB2C.S(matrix(rnorm(90), ncol = 9), matrix(rnorm(90), ncol = 9))
>  4: lm(t(cbind(a, b)) ~ Pro + syn + unk + Y + Nh + 0, offset = c(ac9aw,
> ac9bw))
>  5: eval(mf, parent.frame())
>  6: eval(expr, envir, enclos)
>  7: model.frame(formula = t(cbind(a, b)) ~ Pro + syn + unk + Y + Nh + 0,
> offset = c(ac9a
>  8: model.frame.default(formula = t(cbind(a, b)) ~ Pro + syn + unk + Y +
> Nh + 0, offset 
>  9: eval(predvars, data, env)
> 10: eval(expr, envir, enclos)
> 
> Selection: 0
> 
> The function AB2C now sees ac9nw, and gives similar errors, related to
> other hidden variables.
> 
> 
> Duncan Murdoch-2 wrote:
>> 
>> On 5/25/2007 7:27 AM, Vladimir Eremeev wrote:
>>> Thank you for the answer.
>>> 
>>> Here is everything.
>>> 
>>> ac9wl<-c(412,440,488,510,532,555,650,676,715)
>>> ac9nw<-length(ac9wl)
>>> 
>>> AB2C <-function(a,b,model.type="S") {  
>>>   nza<-dim(a)[1]
>>>   nwa<-dim(a)[2]
>>>   nzb<-dim(b)[1]
>>>   nwb<-dim(b)[2]
>>> 
>>>   if(nza!=nzb || nwa!=ac9nw || nwb!=ac9nw) {
>>>     warning('AB2C: Dimensions of the input matrices are invalid')
>>>     return(NULL);
>>>   }
>>> 
>>>  [ further calculations, they  do not use ac9nw ]  
>>> }
>> 
>> 
>> That would work, so my guess is that you aren't using that function.  If 
>> you have a function named AB2C in your global environment, R will find 
>> it before this one, and it may not be able to see the ac9nw variable.
>> 
>> Duncan Murdoch
>> 
>> 
> 
> 

-- 
View this message in context: http://www.nabble.com/private-variables-in-package.-tf3815306.html#a10802257
Sent from the R devel mailing list archive at Nabble.com.


From savicky at cs.cas.cz  Fri May 25 17:21:54 2007
From: savicky at cs.cas.cz (Petr Savicky)
Date: Fri, 25 May 2007 17:21:54 +0200
Subject: [Rd] documented/undocumented behavior of as.double(formatC(x,
	digits=17))
Message-ID: <20070525152153.GA30984@cs.cas.cz>

Some days ago, there was a discussion about the command
   formatC(exp(1),digits=100,width=-1)

Converting a double value to a string, from which the double may be
reconstructed exactly, may be useful. So, I did some experimentation
with it in my linux installation of R-2.5.0.

I generated a vector x of a large number of random doubles (random sign,
random mantissa with 53 significant bits and binary exponent from -1074:1023)
and did the following
     y <- formatC(x,digits=17,width=-1)
     z <- as.double(y)
     all(x == z)  # TRUE

On Wed, May 23, 2007 at 06:32:36PM +0100, Prof Brian Ripley wrote:
> However, the C99 standard does make clear that [sf]printf is not required
> (even as 'recommended practice') to be accurate to more than *_DIG places,
> which as ?as.character has pointed out is 15 on the machines R runs on.
> 
> It really is the case that writing out a number to > 15 significant digits
> and reading it back in again is not required to give exactly the same
> IEC60559 (sic) number, and furthermore there are R platforms for which
> this does not happen.

I think that this implies that preserving the exact double value in formatC
does not follow from C99 standard. Is there some other (e.g. platform specific)
documentation that implies this or it has to be used as an undocumented feature?
(Well, I do know that the R sources or gcc sources are such a documentation,
but I am trying to find some other).

Petr.


From sfalcon at fhcrc.org  Fri May 25 17:36:00 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Fri, 25 May 2007 08:36:00 -0700
Subject: [Rd] Recent changes in R related to CHARSXPs
Message-ID: <m2ejl4kja7.fsf@ziti.local>

Hello all,

I want to highlight a recent change in R-devel to the larger developeR
community.  As of r41495, R maintains a global cache of CHARSXPs such
that each unique string is stored only once in memory.  For many
common use cases, such as dimnames of matrices and keys in
environments, the result is a significant savings in memory (and time
under some circumstances).

A result of these changes is that CHARSXPs must be treated as read
only objects and must never be modified in-place by assigning to the
char* returned by CHAR().  If you maintain a package that manipulates
CHARSXPs, you should check to see if you make such in-place
modifications.  If you do, the general solution is as follows:

   If you need a temp char buffer, you can allocate one with a new
   helper macro like this:

     /* CallocCharBuf takes care of the +1 for the \0,
        so the size argument is the length of your string.
     */
     char *tmp = CallocCharBuf(n);

     /* manipulate tmp */
     SEXP schar = mkChar(tmp);
     Free(tmp);

   You can also use R_alloc which has the advantage of not having to
   free it in a .Call function.

The mkChar function now consults the global CHARSXP cache and will
return an already existing CHARSXP if one with a matching string
exists.  Otherwise, it will create a new one and add it to the cache
before returning it.  

In a discussion with Herve Pages, he suggested that the return type of
CHAR(), at least for package code, be modified from (char *) to (const
char *).  I think this is an excellent suggestion because it will
allow the compiler to alert us to package C code that might be
modifying CHARSXPs in-place.  This hasn't happened yet, but I'm hoping
that a patch for this will be applied soon (unless better suggestions
for improvement arise through this discussion :-)

One other thing is worth mentioning: at present, not all CHARSXPs are
captured by the cache.  I think the goal is to refine things so that
all CHARSXPs _are_ in the cache.  At that point, strcmp calls can be
replaced with pointer comparisons which should provide some nice
speed ups.  So part of the idea is that the way to get CHARSXPs is via
mkChar or mkString and that one should not use allocString, etc.

Finally, here is a comparison of time and memory for loading all the
environments (hash tables) in Bioconductor's GO annotation data
package.

## unpatched

    > gc()
             used (Mb) gc trigger (Mb) max used (Mb)
    Ncells 168891  9.1     350000 18.7   350000 18.7
    Vcells 115731  0.9     786432  6.0   425918  3.3
    > library("GO")
    > system.time(for (e in ls(2)) get(e))
       user  system elapsed
     51.919   1.168  53.228
    > gc()
               used  (Mb) gc trigger   (Mb) max used  (Mb)
    Ncells 17879072 954.9   19658017 1049.9 18683826 997.9
    Vcells 31702823 241.9   75190268  573.7 53912452 411.4


## patched

    > gc()
             used (Mb) gc trigger (Mb) max used (Mb)
    Ncells 154717  8.3     350000 18.7   350000 18.7
    Vcells 133613  1.1     786432  6.0   483138  3.7
    > library("GO")
    > system.time(for (e in ls(2)) get(e))
       user  system elapsed
     31.166   0.736  31.998
    > gc()
               used  (Mb) gc trigger  (Mb) max used  (Mb)
    Ncells  5837253 311.8    6910418 369.1  6193578 330.8
    Vcells 16831859 128.5   45712717 348.8 39456690 301.1

Best Wishes,

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From tlumley at u.washington.edu  Fri May 25 18:36:47 2007
From: tlumley at u.washington.edu (Thomas Lumley)
Date: Fri, 25 May 2007 09:36:47 -0700 (PDT)
Subject: [Rd] C code for qbeta
In-Reply-To: <200705250559.08680.sdavis2@mail.nih.gov>
References: <802900.55656.qm@web26904.mail.ukl.yahoo.com>
	<200705250559.08680.sdavis2@mail.nih.gov>
Message-ID: <Pine.LNX.4.64.0705250935200.14509@homer23.u.washington.edu>

On Fri, 25 May 2007, Sean Davis wrote:

> On Friday 25 May 2007 05:02, Gatsu wrote:
>> Can somebody help me?
>>
>> I need the C/C++ code for the R's qbeta function.
>
> R is open-source, so you can simply download the source and look at whatever
> parts you like.
>

Finding the qbeta function may take a little effort,though.

The qbeta code is at
   https://svn.r-project.org/R/trunk/src/nmath/qbeta.c

 	-thomas


From braunm at MIT.EDU  Sat May 26 01:12:56 2007
From: braunm at MIT.EDU (Michael Braun)
Date: Fri, 25 May 2007 19:12:56 -0400
Subject: [Rd] R scripts slowing down after repeated called to compiled code
Message-ID: <1180134776.6736.15.camel@braunm1>

Thanks in advance to anyone that might be able to help me with this
problem.  I have not been able to find a reference to it in the
documentation on online sources, so I am turning to this group.

I am running R 2.4.1 under Red Hat Enterprise Linux 4, on an x86_64
platform (multi-core Intel Xeon processors, 3.6Ghx, 8GB of RAM).  I have
some rather complicated code (so I won't attach it here), but it is an
iterative algorithm that takes data in the form of an R list, passes the
entire list to some compiled C code, converts list items to GSL matrices
and vectors, performs its various operations, and sends back the result
to R.  That result is then sent back to the compiled code until some
kind of convergence (I won't bore the group with more details).

The problem is that every .Call to the compiled code runs slower (I
print the iteration time using Sys.time() and difftime() ).  There is no
logical reason for this (i.e., it's not a feature of the algorithm
itself).  I am using about 20% of my machine's available RAM (it's a
large dataset and a memory-intensive algorithm), but there does not
appear to be any swapping of memory to disk.  I am sure that I am
UNPROTECTING the SEXP's that I created, and I am freeing all of the GSL
objects at the end of each function.  The total RAM used does seem to
increase, slowly but steadily, but the speed decrease occurs well before
I start coming close to running out of RAM.

Also, it is not just the compiled call that slows down.  EVERYTHING
slows down, even those that consist only of standard R functions.  The
time for each of these function calls is roughly proportional to the
time of the .Call to the C function.

Another observation is that when I terminate the algorithm, do a rm
(list=ls()), and then a gc(), not all of the memory is returned to the
OS.  It is not until I terminate the R session that I get all of the
memory back.  In my C code, I am not doing anything to de-allocate the
SEXP's I create, relying on the PROTECT/UNPROTECT mechanism instead (is
this right?).

I spent most of the day thinking I have a memory leak, but that no
longer appears to be the case.  I tried using Rprof(), but that only
gives me the aggregated relative time spent in each function (more than
80% of the time, it's in the .Call).

So I'm stuck.  Can anyone help?

Thanks,

Michael





-- 
Michael Braun
Assistant Professor of Marketing
MIT Sloan School of Management
One Amherst St., E40-169
Cambridge, MA 02142
(617) 253-3436
braunm at mit.edu


From vdergachev at rcgardis.com  Sat May 26 01:29:55 2007
From: vdergachev at rcgardis.com (Vladimir Dergachev)
Date: Fri, 25 May 2007 19:29:55 -0400
Subject: [Rd] R scripts slowing down after repeated called to compiled
	code
In-Reply-To: <1180134776.6736.15.camel@braunm1>
References: <1180134776.6736.15.camel@braunm1>
Message-ID: <200705251929.56159.vdergachev@rcgardis.com>

On Friday 25 May 2007 7:12 pm, Michael Braun wrote:
> Thanks in advance to anyone that might be able to help me with this
>
> Also, it is not just the compiled call that slows down.  EVERYTHING
> slows down, even those that consist only of standard R functions.  The
> time for each of these function calls is roughly proportional to the
> time of the .Call to the C function.
>
> Another observation is that when I terminate the algorithm, do a rm
> (list=ls()), and then a gc(), not all of the memory is returned to the
> OS.  It is not until I terminate the R session that I get all of the
> memory back.  In my C code, I am not doing anything to de-allocate the
> SEXP's I create, relying on the PROTECT/UNPROTECT mechanism instead (is
> this right?).
>
> I spent most of the day thinking I have a memory leak, but that no
> longer appears to be the case.  I tried using Rprof(), but that only
> gives me the aggregated relative time spent in each function (more than
> 80% of the time, it's in the .Call).

One possibility is that you are somehow creating a lot of R objects (say by 
calling assign() or missing UNPROTECT()) and this slows garbage collector 
down. The garbage collector running time will grow with the number of objects 
you have - their total size does not have to be large.

Could you try printing numbers from gc() call and checking whether the numbers 
of allocated objects grow a lot ?

                          best

                            Vladimir Dergachev

>
> So I'm stuck.  Can anyone help?
>
> Thanks,
>
> Michael


From braunm at MIT.EDU  Sat May 26 03:21:04 2007
From: braunm at MIT.EDU (Michael Braun)
Date: Fri, 25 May 2007 21:21:04 -0400
Subject: [Rd] R scripts slowing down after repeated called to
	compiled	code
In-Reply-To: <200705251929.56159.vdergachev@rcgardis.com>
References: <1180134776.6736.15.camel@braunm1>
	<200705251929.56159.vdergachev@rcgardis.com>
Message-ID: <1180142464.7276.17.camel@braunm1>


Vladimir:

Thanks for your response.  I have done as you requested (with a smaller
dataset--the patterns are still there).  Here is the gc()-laden output.

I don;t fully understand the meaning of all parts of these reports.  But
it does look like the number of objects grows (and it grows faster on
the larger, slower problem).  But how can I use this information to
narrow down the cause?

As far as your other suggestions, my PROTECTs and UNPROTECTs are all
balanced (I'd get a stack imbalance if they weren't).  One thing I am
doing is duplicating the SEXP's that are passed from R, and working with
the copies.  I unprotect the copies at the end of the function.  There
are other, various VECTOR_ELT's in my code.

So where do I go from there?

Michael



Dataset  B06   Iteration:   1
Garbage collection 67 = 33+9+25 (level 2) ...
778324 cons cells free (42%)
32.4 Mbytes of heap free (28%)

Dataset  B06   Iteration:   2
Garbage collection 92 = 52+11+29 (level 2) ...
778303 cons cells free (42%)
43.9 Mbytes of heap free (34%)

Dataset  B06   Iteration:   3
Garbage collection 112 = 69+12+31 (level 2) ...
778303 cons cells free (42%)
43.9 Mbytes of heap free (34%)

Dataset  B06   Iteration:   4
Garbage collection 126 = 79+13+34 (level 2) ...
778303 cons cells free (42%)
50.7 Mbytes of heap free (38%)

Dataset  B06   Iteration:   5
Garbage collection 139 = 89+14+36 (level 2) ...
778303 cons cells free (42%)
50.7 Mbytes of heap free (38%)

Dataset  B06   Iteration:   6
Garbage collection 149 = 95+15+39 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)

Dataset  B06   Iteration:   7
Garbage collection 157 = 101+15+41 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)

Dataset  B06   Iteration:   8
Garbage collection 165 = 107+15+43 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)

Dataset  B06   Iteration:   9
Garbage collection 173 = 112+16+45 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)

Dataset  B06   Iteration:   10
Garbage collection 181 = 118+16+47 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)

Dataset  B06   Iteration:   11
Garbage collection 188 = 123+16+49 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)

Dataset  B06   Iteration:   12
Garbage collection 195 = 128+16+51 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)

Dataset  B06   Iteration:   13\
Garbage collection 202 = 132+17+53 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)

Dataset  B06   Iteration:   14
Garbage collection 209 = 137+17+55 (level 2) ...
778303 cons cells free (42%)
58.0 Mbytes of heap free (41%)





On Fri, 2007-05-25 at 19:29 -0400, Vladimir Dergachev wrote:
> On Friday 25 May 2007 7:12 pm, Michael Braun wrote:
> > Thanks in advance to anyone that might be able to help me with this
> >
> > Also, it is not just the compiled call that slows down.  EVERYTHING
> > slows down, even those that consist only of standard R functions.  The
> > time for each of these function calls is roughly proportional to the
> > time of the .Call to the C function.
> >
> > Another observation is that when I terminate the algorithm, do a rm
> > (list=ls()), and then a gc(), not all of the memory is returned to the
> > OS.  It is not until I terminate the R session that I get all of the
> > memory back.  In my C code, I am not doing anything to de-allocate the
> > SEXP's I create, relying on the PROTECT/UNPROTECT mechanism instead (is
> > this right?).
> >
> > I spent most of the day thinking I have a memory leak, but that no
> > longer appears to be the case.  I tried using Rprof(), but that only
> > gives me the aggregated relative time spent in each function (more than
> > 80% of the time, it's in the .Call).
> 
> One possibility is that you are somehow creating a lot of R objects (say by 
> calling assign() or missing UNPROTECT()) and this slows garbage collector 
> down. The garbage collector running time will grow with the number of objects 
> you have - their total size does not have to be large.
> 
> Could you try printing numbers from gc() call and checking whether the numbers 
> of allocated objects grow a lot ?
> 
>                           best
> 
>                             Vladimir Dergachev
> 
> >
> > So I'm stuck.  Can anyone help?
> >
> > Thanks,
> >
> > Michael
> 
> 
> The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply email and destroy all copies of the original message. 
> 
> 
-- 
Michael Braun
Assistant Professor of Marketing
MIT Sloan School of Management
One Amherst St., E40-169
Cambridge, MA 02142
(617) 253-3436
braunm at mit.edu


From edd at debian.org  Sat May 26 03:40:18 2007
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 25 May 2007 20:40:18 -0500
Subject: [Rd] R scripts slowing down after repeated called to compiled
	code
In-Reply-To: <1180134776.6736.15.camel@braunm1>
References: <1180134776.6736.15.camel@braunm1>
Message-ID: <18007.36866.90420.541219@basebud.nulle.part>


On 25 May 2007 at 19:12, Michael Braun wrote:
| So I'm stuck.  Can anyone help?

It sounds like a memory issue. Your memory may just get fragmented. One tool
that may help you find leaks is valgrind -- see the 'R Extensions' manual. I
can also recommend the visualisers like kcachegrind (part of KDE).

But it may not be a leak. I found that R just doesn't cope well with many
large memory allocations and releases -- I often loop over data request that
I subset and process. This drives my 'peak' memory use to 1.5 or 1.7gb on
32bit/multicore machine with 4gb, 6gb or 8gb (but 32bit leading to the hard
3gb per process limit) .  And I just can't loop over many such task.  So I
now use the littler frontend to script this, dump the processed chunks as
Rdata files and later re-read the pieces. That works reliably.

So one think you could try is to dump your data in 'gsl ready' format from R,
quit R, leave it out of the equation and then see if what happens if you do
the iterations in only GSL and your code.

Hth, Dirk

-- 
Hell, there are no rules here - we're trying to accomplish something. 
                                                  -- Thomas A. Edison


From ronggui.huang at gmail.com  Sat May 26 11:57:16 2007
From: ronggui.huang at gmail.com (ronggui)
Date: Sat, 26 May 2007 17:57:16 +0800
Subject: [Rd] R disapears strangely
Message-ID: <38b9f0350705260257o2dafc64em6f249de801fac8e@mail.gmail.com>

When I use menu to open script, R disapears strangely. On average, It
happens every 2-3 operations of opening script.

Anyone comes across this problem?


> R.version
               _
platform       i386-pc-mingw32
arch           i386
os             mingw32
system         i386, mingw32
status         Patched
major          2
minor          5.0
year           2007
month          04
day            28
svn rev        41376
language       R
version.string R version 2.5.0 Patched (2007-04-28 r41376)


-- 
Ronggui Huang
Department of Sociology
Fudan University, Shanghai, China


From ronggui.huang at gmail.com  Sat May 26 11:58:28 2007
From: ronggui.huang at gmail.com (ronggui)
Date: Sat, 26 May 2007 17:58:28 +0800
Subject: [Rd] R disapears strangely
Message-ID: <38b9f0350705260258i1d90093apffa04ab2fed78fb@mail.gmail.com>

When I use menu to open script, R disapears strangely. On average, It
happens every 2-3 operations of opening script. But actually, R is
still running in the backgroud, I can see the process in the task
manage window of windows XP.

Anyone comes across this problem?


> R.version
               _
platform       i386-pc-mingw32
arch           i386
os             mingw32
system         i386, mingw32
status         Patched
major          2
minor          5.0
year           2007
month          04
day            28
svn rev        41376
language       R
version.string R version 2.5.0 Patched (2007-04-28 r41376)


-- 
Ronggui Huang
Department of Sociology
Fudan University, Shanghai, China


From osklyar at ebi.ac.uk  Sat May 26 13:41:47 2007
From: osklyar at ebi.ac.uk (Oleg Sklyar)
Date: Sat, 26 May 2007 12:41:47 +0100
Subject: [Rd] R scripts slowing down after repeated called to compiled
 code
In-Reply-To: <18007.36866.90420.541219@basebud.nulle.part>
References: <1180134776.6736.15.camel@braunm1>
	<18007.36866.90420.541219@basebud.nulle.part>
Message-ID: <46581CFB.5050401@ebi.ac.uk>

I work with images with a lot of processing done in C code. Quite often 
I allocate memory there up to several gigs in chunks of 10-15 Mb each 
plus hundreds of protected dims, names etc. I had a similar problem only 
once when due to some erroneous use of an external library, internally 
created objects were not freed correctly. Otherwise, after correcting 
this, I never have seen any slow down on large number of objects created 
and manipulated. And then, it was so difficult to track the memory leak 
that I would really suggest to double and triple check all the memory 
allocations. Your code does not use any temp files? This could be a real 
pain. Oleg

Dirk Eddelbuettel wrote:
> On 25 May 2007 at 19:12, Michael Braun wrote:
> | So I'm stuck.  Can anyone help?
> 
> It sounds like a memory issue. Your memory may just get fragmented. One tool
> that may help you find leaks is valgrind -- see the 'R Extensions' manual. I
> can also recommend the visualisers like kcachegrind (part of KDE).
> 
> But it may not be a leak. I found that R just doesn't cope well with many
> large memory allocations and releases -- I often loop over data request that
> I subset and process. This drives my 'peak' memory use to 1.5 or 1.7gb on
> 32bit/multicore machine with 4gb, 6gb or 8gb (but 32bit leading to the hard
> 3gb per process limit) .  And I just can't loop over many such task.  So I
> now use the littler frontend to script this, dump the processed chunks as
> Rdata files and later re-read the pieces. That works reliably.
> 
> So one think you could try is to dump your data in 'gsl ready' format from R,
> quit R, leave it out of the equation and then see if what happens if you do
> the iterations in only GSL and your code.
> 
> Hth, Dirk
> 

-- 
Dr Oleg Sklyar | EBI-EMBL, Cambridge CB10 1SD, UK | +44-1223-494466


From braunm at MIT.EDU  Sat May 26 15:16:22 2007
From: braunm at MIT.EDU (Michael Braun)
Date: Sat, 26 May 2007 09:16:22 -0400
Subject: [Rd] R scripts slowing down after repeated called to compiled
	code
In-Reply-To: <46581CFB.5050401@ebi.ac.uk>
References: <1180134776.6736.15.camel@braunm1>
	<18007.36866.90420.541219@basebud.nulle.part>
	<46581CFB.5050401@ebi.ac.uk>
Message-ID: <000001c79f98$0f863ed0$0202a8c0@michael>

Oleg:

No, I'm not using any temp files.  The only external library I use is the
GSL library, and I have counted, and re-counted, my gsl_matrix(vector)_alloc
and gsl_matrix(vector)_free  statements to be sure that they balance.

I cases when they weren't balanced, memory usage would increase very
rapidly.  That does not seem to be happening here.

What about setting the minimum size of the vector heap very large (say,
4GB?).  Might that help?  I really don't understand how that works, or what
the output of the gc() statement means, to help me diagnose the problem.

Thanks,

Michael

-----Original Message-----
From: Oleg Sklyar [mailto:osklyar at ebi.ac.uk] 
Sent: Saturday, May 26, 2007 7:42 AM
To: braunm at MIT.EDU
Cc: r-devel at r-project.org
Subject: Re: [Rd] R scripts slowing down after repeated called to compiled
code

I work with images with a lot of processing done in C code. Quite often I
allocate memory there up to several gigs in chunks of 10-15 Mb each plus
hundreds of protected dims, names etc. I had a similar problem only once
when due to some erroneous use of an external library, internally created
objects were not freed correctly. Otherwise, after correcting this, I never
have seen any slow down on large number of objects created and manipulated.
And then, it was so difficult to track the memory leak that I would really
suggest to double and triple check all the memory allocations. Your code
does not use any temp files? This could be a real pain. Oleg

Dirk Eddelbuettel wrote:
> On 25 May 2007 at 19:12, Michael Braun wrote:
> | So I'm stuck.  Can anyone help?
> 
> It sounds like a memory issue. Your memory may just get fragmented. 
> One tool that may help you find leaks is valgrind -- see the 'R 
> Extensions' manual. I can also recommend the visualisers like kcachegrind
(part of KDE).
> 
> But it may not be a leak. I found that R just doesn't cope well with 
> many large memory allocations and releases -- I often loop over data 
> request that I subset and process. This drives my 'peak' memory use to 
> 1.5 or 1.7gb on 32bit/multicore machine with 4gb, 6gb or 8gb (but 
> 32bit leading to the hard 3gb per process limit) .  And I just can't 
> loop over many such task.  So I now use the littler frontend to script 
> this, dump the processed chunks as Rdata files and later re-read the
pieces. That works reliably.
> 
> So one think you could try is to dump your data in 'gsl ready' format 
> from R, quit R, leave it out of the equation and then see if what 
> happens if you do the iterations in only GSL and your code.
> 
> Hth, Dirk
> 

--
Dr Oleg Sklyar | EBI-EMBL, Cambridge CB10 1SD, UK | +44-1223-494466


From bla at udec.cl  Sat May 26 16:43:43 2007
From: bla at udec.cl (bla at udec.cl)
Date: Sat, 26 May 2007 16:43:43 +0200 (CEST)
Subject: [Rd] bug from nlm function (PR#9711)
Message-ID: <20070526144343.214FC4889A@slim.kubism.ku.dk>

Full_Name: bernardo moises lagos alvarez
Version: 2.4.0 
OS:  Windows XP professional
Submission from: (NULL) (152.74.219.16)


I need obtained the MLE of weibull parameters using the nlm with exact gradient
an 
hessian. I am doing. bug report :Erro en log(b) : el argumento "b" est? ausente,
sin default

1.Construction to objectiv functin with n=1 data

>fllwform<-formula(~log(a)-log(b)-(a-1)*(log(x)-log(b))- (x^a)/(b^a))

> fllwfuncH <-deriv(fllwform,c("a","b"),function(a,b,x){})

> fllwfuncH
function (a, b, x) 

{

    .expr2 <- log(b)

    .expr4 <- a - 1

    .expr5 <- log(x)

    .expr6 <- .expr5 - .expr2

    .expr9 <- x^a

    .expr10 <- b^a

    .expr19 <- .expr10^2

    .expr23 <- 1/b

    .value <- log(a) - .expr2 - .expr4 * .expr6 - .expr9/.expr10

    .grad <- array(0, c(length(.value), 2), list(NULL, c("a", 

        "b")))

    .grad[, "a"] <- 1/a - .expr6 - (.expr9 * .expr5/.expr10 - 

        .expr9 * (.expr10 * .expr2)/.expr19)

    .grad[, "b"] <- -(.expr23 - .expr4 * .expr23 - .expr9 * (b^.expr4 * 

        a)/.expr19)

    attr(.value, "gradient") <- .grad

    .value

}

2. change the x argument on fllwfuncH function to data with n>1 (on fnlmw file)


fllwfuncHnew <-

function (a, b, x) 

{

    .n<-length(x)

    .expr2 <- log(b)

    .expr4 <- a - 1

    .expr5 <- log(x)

    .expr6 <- .expr5 - .expr2

    .expr9 <- x^a

    .expr10 <- b^a

    .expr19 <- .expr10^2

    .expr23 <- 1/b

    .value <- .n*(log(a) - .expr2) - .expr4 *sum(.expr6) - sum(.expr9)/.expr10

    .grad <- array(0, c(length(.value), 2), list(NULL, c("a", 

        "b")))

    .grad[, "a"] <- .n/a - sum(.expr6) - (sum(.expr9 * .expr5)/.expr10 - 

        sum(.expr9) * (.expr10 * .expr2)/.expr19)

    .grad[, "b"] <- -(.n*.expr23 - .n*.expr4 * .expr23 - sum(.expr9) * (b^.expr4
* 

        a)/.expr19)

    attr(.value, "gradient") <- .grad

    .value

}

> set.seed(99)

> xdat <-rweibull(42,shape=1,scale=20)
> sum(dweibull(xdat,1,20,log=T))

[1] -174.6415


3. Use the fllwfuncHnew function on nlm:

> source("fnlmw")

> fllwfuncHnew(1,20,xdat)

[1] -174.6415

attr(,"gradient")

            a         b

[1,] 30.88661 0.3410358

> nlm(fllwfuncHnew,p=c(1,20),x=xdat)

Erro en log(b) : el argumento "b" est? ausente, sin default


From mtmorgan at fhcrc.org  Sun May 27 06:44:27 2007
From: mtmorgan at fhcrc.org (Martin Morgan)
Date: Sat, 26 May 2007 21:44:27 -0700
Subject: [Rd] [Bioc-devel] promptClass
In-Reply-To: <m2bqg7cbos.fsf@ziti.local> (Seth Falcon's message of "Sat, 26
	May 2007 18:11:47 -0700")
References: <46586BDB.5000700@aon.at> <m2bqg7cbos.fsf@ziti.local>
Message-ID: <6phfy5ivpsk.fsf@gopher4.fhcrc.org>

promptClass fails to identify methods associated with the class. Here
is a fix:

Index: promptClass.R
===================================================================
--- promptClass.R       (revision 41719)
+++ promptClass.R       (working copy)
@@ -165,7 +165,7 @@
     if (nmeths > 0) {
        .meths.body <- "  \\describe{"
        for (i in 1:nmeths) {
-           .sigmat <- sigsList(methnms[i], where)
+           .sigmat <- sigsList(methnms[i], where=whereClass)
            for (j in seq_along(.sigmat)) {
                if (!all(is.na(match(.sigmat[[j]],clName)))) {
                    methn.i <- escape(methnms[i])
Index: RMethodUtils.R
===================================================================
--- RMethodUtils.R      (revision 41719)
+++ RMethodUtils.R      (working copy)
@@ -621,7 +621,7 @@
 getMethodsMetaData <-
   ## get the methods meta-data for function f on database where
   function(f, where = topenv(parent.frame())) {
-        mname <- mlistMetaName(f, where)
+        mname <- mlistMetaName(f, getPackageName(where))
         if(exists(mname, where = where, inherits = missing(where)))
             get(mname, where)
         else

Seth Falcon <sfalcon at fhcrc.org> writes:

> cstrato <cstrato at aon.at> writes:
>
>> Dear all,
>>
>> What is the best way to write the docs for S4 classes?
>>
>> Concretely, is it  possible to include the methods in the class 
>> documentation?
>> For example, the documentation for class "AffyBatch" contains all methods.
>> However, when I do:
>>    promptClass("AffyBatch")
>> the relevant output of file "AffyBatch-class.Rd" is:
>>    \section{Methods}{
>>    No methods defined with class "AffyBatch" in the signature.
>>    }
>
> promptClass used to provide more useful output.  You might want to
> report the issue on one of the R lists.
>
>> Since PromptClass() contains a parameter "where" is it possible to use 
>> it, and how?
>
> I'm not sure that is relevant here.
>
> One thing that can be useful here is showMethods(classes="AffyBatch").
> The problem with static documentation for methods is that what methods
> are available can change based on what packages are attached.
>
> If showMethods or a wrapper for it could be convinced to output a link
> to a help file, then it might actually be a good way to go...
>
> + seth
>
> -- 
> Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
> http://bioconductor.org
>
> _______________________________________________
> Bioc-devel at stat.math.ethz.ch mailing list
> https://stat.ethz.ch/mailman/listinfo/bioc-devel

-- 
Martin Morgan
Bioconductor / Computational Biology
http://bioconductor.org


From cstrato at aon.at  Sun May 27 13:15:52 2007
From: cstrato at aon.at (cstrato)
Date: Sun, 27 May 2007 13:15:52 +0200
Subject: [Rd] [Bioc-devel] promptClass
In-Reply-To: <6phfy5ivpsk.fsf@gopher4.fhcrc.org>
References: <46586BDB.5000700@aon.at> <m2bqg7cbos.fsf@ziti.local>
	<6phfy5ivpsk.fsf@gopher4.fhcrc.org>
Message-ID: <46596868.7030509@aon.at>

Dear Martin

Thank you for sending the fast fix to the problem.

Best regards
Christian

Martin Morgan wrote:
> promptClass fails to identify methods associated with the class. Here
> is a fix:
>
> Index: promptClass.R
> ===================================================================
> --- promptClass.R       (revision 41719)
> +++ promptClass.R       (working copy)
> @@ -165,7 +165,7 @@
>      if (nmeths > 0) {
>         .meths.body <- "  \\describe{"
>         for (i in 1:nmeths) {
> -           .sigmat <- sigsList(methnms[i], where)
> +           .sigmat <- sigsList(methnms[i], where=whereClass)
>             for (j in seq_along(.sigmat)) {
>                 if (!all(is.na(match(.sigmat[[j]],clName)))) {
>                     methn.i <- escape(methnms[i])
> Index: RMethodUtils.R
> ===================================================================
> --- RMethodUtils.R      (revision 41719)
> +++ RMethodUtils.R      (working copy)
> @@ -621,7 +621,7 @@
>  getMethodsMetaData <-
>    ## get the methods meta-data for function f on database where
>    function(f, where = topenv(parent.frame())) {
> -        mname <- mlistMetaName(f, where)
> +        mname <- mlistMetaName(f, getPackageName(where))
>          if(exists(mname, where = where, inherits = missing(where)))
>              get(mname, where)
>          else
>
> Seth Falcon <sfalcon at fhcrc.org> writes:
>
>   
>> cstrato <cstrato at aon.at> writes:
>>
>>     
>>> Dear all,
>>>
>>> What is the best way to write the docs for S4 classes?
>>>
>>> Concretely, is it  possible to include the methods in the class 
>>> documentation?
>>> For example, the documentation for class "AffyBatch" contains all methods.
>>> However, when I do:
>>>    promptClass("AffyBatch")
>>> the relevant output of file "AffyBatch-class.Rd" is:
>>>    \section{Methods}{
>>>    No methods defined with class "AffyBatch" in the signature.
>>>    }
>>>       
>> promptClass used to provide more useful output.  You might want to
>> report the issue on one of the R lists.
>>
>>     
>>> Since PromptClass() contains a parameter "where" is it possible to use 
>>> it, and how?
>>>       
>> I'm not sure that is relevant here.
>>
>> One thing that can be useful here is showMethods(classes="AffyBatch").
>> The problem with static documentation for methods is that what methods
>> are available can change based on what packages are attached.
>>
>> If showMethods or a wrapper for it could be convinced to output a link
>> to a help file, then it might actually be a good way to go...
>>
>> + seth
>>
>> -- 
>> Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
>> http://bioconductor.org
>>
>> _______________________________________________
>> Bioc-devel at stat.math.ethz.ch mailing list
>> https://stat.ethz.ch/mailman/listinfo/bioc-devel
>>     
>
>


From yucel at schoolph.umass.edu  Sun May 27 23:40:13 2007
From: yucel at schoolph.umass.edu (Recai Yucel)
Date: Sun, 27 May 2007 17:40:13 -0400
Subject: [Rd] Problem with installing a package for R 2.5.0
Message-ID: <4659FABD.5040207@schoolph.umass.edu>

Hi All,

I developed a package which did pass all the tests for R 2.4.1. When I 
tried to re-compile it for R 2.5.0 it kept giving me the following message:

*******************
C:\Program Files\R\R-2.5.0\bin>R CMD install mlmmm_0.1-1.tar.gz
installing to 'c:/PROGRA~1/R/R-25~1.0/library'


---------- Making package mlmmm ------------
 adding build stamp to DESCRIPTION
 installing NAMESPACE file and metadata
 making DLL ...
g77 -O3 -Wall   -c mlm.f -o mlm.o
g77 -O3 -Wall   -c mlmmm.f -o mlmmm.o
windres -I c:/PROGRA~1/R/R-25~1.0/include  -i mlmmm_res.rc -o mlmmm_res.o
gcc  -shared -s  -o mlmmm.dll mlmmm.def mlm.o mlmmm.o mlmmm_res.o  
-Lc:/PROGRA~1
/R/R-25~1.0/bin   -lg2c -lR
 ... DLL made
 installing DLL
 installing R files
 installing inst files
FIND: Parameter format not correct
make[2]: *** [c:/PROGRA~1/R/R-25~1.0/library/mlmmm/inst] Error 2
make[1]: *** [all] Error 2
make: *** [pkg-mlmmm] Error 2
*** Installation of mlmmm failed ***

Removing 'c:/PROGRA~1/R/R-25~1.0/library/mlmmm'
Restoring previous 'c:/PROGRA~1/R/R-25~1.0/library/mlmmm'

*************************

Similar failure was seen in Mac as well. Anybody else has similar 
problems? I would greatly appreciate any solution proposals...

Best.

-- 
Recai M. Yucel,Ph.D.
Assistant Professor of Biostatistics
Biostatistics and Epidemiology
School of Public Health and Health Sciences
University of Massachusetts-Amherst


From murdoch at stats.uwo.ca  Sun May 27 23:44:46 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Sun, 27 May 2007 17:44:46 -0400
Subject: [Rd] Problem with installing a package for R 2.5.0
In-Reply-To: <4659FABD.5040207@schoolph.umass.edu>
References: <4659FABD.5040207@schoolph.umass.edu>
Message-ID: <4659FBCE.8080106@stats.uwo.ca>

On 27/05/2007 5:40 PM, Recai Yucel wrote:
> Hi All,
> 
> I developed a package which did pass all the tests for R 2.4.1. When I 
> tried to re-compile it for R 2.5.0 it kept giving me the following message:
> 
> *******************
> C:\Program Files\R\R-2.5.0\bin>R CMD install mlmmm_0.1-1.tar.gz
> installing to 'c:/PROGRA~1/R/R-25~1.0/library'
> 
> 
> ---------- Making package mlmmm ------------
>  adding build stamp to DESCRIPTION
>  installing NAMESPACE file and metadata
>  making DLL ...
> g77 -O3 -Wall   -c mlm.f -o mlm.o
> g77 -O3 -Wall   -c mlmmm.f -o mlmmm.o
> windres -I c:/PROGRA~1/R/R-25~1.0/include  -i mlmmm_res.rc -o mlmmm_res.o
> gcc  -shared -s  -o mlmmm.dll mlmmm.def mlm.o mlmmm.o mlmmm_res.o  
> -Lc:/PROGRA~1
> /R/R-25~1.0/bin   -lg2c -lR
>  ... DLL made
>  installing DLL
>  installing R files
>  installing inst files
> FIND: Parameter format not correct
> make[2]: *** [c:/PROGRA~1/R/R-25~1.0/library/mlmmm/inst] Error 2
> make[1]: *** [all] Error 2
> make: *** [pkg-mlmmm] Error 2
> *** Installation of mlmmm failed ***

That's a pretty clear sign that your PATH isn't set up correctly: you're 
using the FIND that comes with Windows rather than the find that comes 
with the R toolset.

Duncan Murdoch


From zack at cogsci.ucsd.edu  Sun May 27 02:50:43 2007
From: zack at cogsci.ucsd.edu (Zack Weinberg)
Date: Sat, 26 May 2007 17:50:43 -0700
Subject: [Rd] R 2.5.0 refuses to print enough digits to recover exact
	floating point values
In-Reply-To: <Pine.LNX.4.64.0705231538310.27405@gannet.stats.ox.ac.uk>
References: <eb97335b0705220013m6f3e137cp147d429c46717e24@mail.gmail.com>
	<4652C19F.1040509@statistik.uni-dortmund.de>
	<f8e6ff050705230251t1170b47enea9ced70a6ca4a1e@mail.gmail.com>
	<f8e6ff050705230257q72f3dbd5ua18072424b38386@mail.gmail.com>
	<Pine.LNX.4.64.0705231538310.27405@gannet.stats.ox.ac.uk>
Message-ID: <eb97335b0705261750i3a1f69fdia860e6ba4a29df11@mail.gmail.com>

On 5/23/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
[...]
> It really is the case that writing out a number to > 15 significant digits
> and reading it back in again is not required to give exactly the same
> IEC60559 (sic) number, and furthermore there are R platforms for which
> this does not happen.  What Mr Weinberg claimed is 'now impossible' never
> was possible in general (and he seems to be berating the R developers for
> not striving to do better than the C standard requires of OSes).  In fact,
> I believe this to be impossible unless you have access to extended
> precsion arithmetic, as otherwise printf/scanf have to use the same
> arithmetic as the computations.

I did not intend to berate anyone - I may have come across that way
because I was frustrated, in which case I apologize.

 I *do* think it is reasonable to expect a numerical analysis program
to have numerically stable, 100% accurate, perfectly roundtripping
floating-point-to-text conversion, even if the system's runtime
libraries don't get it right, even if the hardware does not provide
extended precision to make it easier.  In the worst case you have to
muck around with software-emulated extended-precision FP, and even
that really isn't that hard.

There is code in GCC that does exactly this, it's only about 5000 LOC,
and it does quite a bit more than R would need.  If there were
interest I could see about porting it across.

zw


From maechler at stat.math.ethz.ch  Mon May 28 12:52:47 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 28 May 2007 12:52:47 +0200
Subject: [Rd] [Bioc-devel] promptClass
In-Reply-To: <6phfy5ivpsk.fsf@gopher4.fhcrc.org>
References: <46586BDB.5000700@aon.at> <m2bqg7cbos.fsf@ziti.local>
	<6phfy5ivpsk.fsf@gopher4.fhcrc.org>
Message-ID: <18010.46207.228083.742034@stat.math.ethz.ch>

>>>>> "MartinMo" == Martin Morgan <mtmorgan at fhcrc.org>
>>>>>     on Sat, 26 May 2007 21:44:27 -0700 writes:

    MartinMo> promptClass fails to identify methods associated
    MartinMo> with the class. Here is a fix:

Thank you, Martin;
I've applied your patch to my working copy of R-devel,
and I can confirm it solves the problem for class "AffyBatch"
(from bioconductor package 'affy').

However it does not seem to fix the problem in my case:

  library(Matrix)
  promptClass("sparseMatrix")

which still produces a  sparseMatrix-class.Rd file which
contains

\section{Methods}{
No methods defined with class "sparseMatrix" in the signature.
}

so there's at least another bug there.
One difference:  "sparseMatrix" is a virtual class, "AffyBatch"
not, but then  showMethods(classes = "..") works for both.

I'd be glad if you have time to find another patch ;-) :-)

Martin Maechler
    

    >> cstrato <cstrato at aon.at> writes:
    >> 
    >>> Dear all,
    >>> 
    >>> What is the best way to write the docs for S4 classes?
    >>> 
    >>> Concretely, is it possible to include the methods in the
    >>> class documentation?  For example, the documentation for
    >>> class "AffyBatch" contains all methods.  However, when I
    >>> do: promptClass("AffyBatch") the relevant output of file
    >>> "AffyBatch-class.Rd" is: \section{Methods}{ No methods
    >>> defined with class "AffyBatch" in the signature.  }
    >>  promptClass used to provide more useful output.  You
    >> might want to report the issue on one of the R lists.
    >> 
    >>> Since PromptClass() contains a parameter "where" is it
    >>> possible to use it, and how?
    >>  I'm not sure that is relevant here.
    >> 
    >> One thing that can be useful here is
    >> showMethods(classes="AffyBatch").  The problem with
    >> static documentation for methods is that what methods are
    >> available can change based on what packages are attached.
    >> 
    >> If showMethods or a wrapper for it could be convinced to
    >> output a link to a help file, then it might actually be a
    >> good way to go...
    >> 
    >> + seth
    >> 
    >> -- 
    >> Seth Falcon | Computational Biology | Fred Hutchinson
    >> Cancer Research Center http://bioconductor.org
    >> 
    >> _______________________________________________
    >> Bioc-devel at stat.math.ethz.ch mailing list
    >> https://stat.ethz.ch/mailman/listinfo/bioc-devel

    MartinMo> -- Martin Morgan Bioconductor / Computational
    MartinMo> Biology http://bioconductor.org

    MartinMo> ______________________________________________
    MartinMo> R-devel at r-project.org mailing list
    MartinMo> https://stat.ethz.ch/mailman/listinfo/r-devel


From edward.m at psu.ac.th  Mon May 21 12:36:25 2007
From: edward.m at psu.ac.th (edward.m at psu.ac.th)
Date: Mon, 21 May 2007 12:36:25 +0200 (CEST)
Subject: [Rd] Merge (PR#9699)
Message-ID: <20070521103625.0CF6E2A3DA@slim.kubism.ku.dk>

Full_Name: Edward McNeil
Version: 2.5.0
OS: Windows XP
Submission from: (NULL) (203.170.234.5)


This is a new bug introduced to R2.5.0. 

Scenario: If one of the data frames to merge contains two variables that have
the same name, then the data in first variable (of the same name) is copied to
the second variable in the resulting merged data frame. 

In R2.4.1, the second variable name is automatically renamed (in the resulting
data frame) by adding ".1" to the end. R2.5.0 doesn't seem to do this anymore.


From r.r.p.vannooyen at tudelft.nl  Wed May 23 15:34:47 2007
From: r.r.p.vannooyen at tudelft.nl (r.r.p.vannooyen at tudelft.nl)
Date: Wed, 23 May 2007 15:34:47 +0200 (CEST)
Subject: [Rd] When loading evir after evd, dgumbel gives an error (PR#9704)
Message-ID: <20070523133447.570A62A40C@slim.kubism.ku.dk>

Full_Name: Ronald van Nooijen
Version: 1.4.1 and 1.5.0, evd 2.2-3
OS: windows xp
Submission from: (NULL) (130.161.12.43)


In an empty workspace first load package evd, then load package evir.
a call to any of the routines dgumberl, qgumbel etcetera will now result in an
error message of the form

Error in qgev(p, loc = loc, scale = scale, shape = 0, lower.tail = lower.tail) :

        unused argument(s) (loc = 0, scale = 1, shape = 0, lower.tail = TRUE)

(It seems that evir::dgev masks evd::dgev and that the different parameter names
create a problem in the implementation of dgumbel)

>From andrew.zachary at yahoo.com Thu May 24 23:44:33 2007
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on hypatia.math.ethz.ch
X-Spam-Level: **
X-Spam-Status: No, score=2.8 required=5.0 tests=FORGED_YAHOO_RCVD,NO_REAL_NAME autolearn=no version=3.1.8
Received: from slim.kubism.ku.dk (slim.kubism.ku.dk [192.38.18.21])
	by hypatia.math.ethz.ch (8.13.6/8.13.6) with ESMTP id l4OLiW8s011180
	for <r-devel at stat.math.ethz.ch>; Thu, 24 May 2007 23:44:32 +0200
Received: from slim (slim.kubism.ku.dk [192.38.18.21])
	by slim.kubism.ku.dk (Postfix) with ESMTP id 02AC4474B1
	for <r-devel at stat.math.ethz.ch>; Thu, 24 May 2007 23:44:31 +0200 (CEST)
From: andrew.zachary at yahoo.com
To: r-devel at stat.math.ethz.ch
Subject: Problem with mtrace(mvbutils) (PR#9709)
Cc: R-bugs at biostat.ku.dk
X-Loop: R-bugs at biostat.ku.dk
Message-Id: <20070524214431.02AC4474B1 at slim.kubism.ku.dk>
Date: Thu, 24 May 2007 23:44:31 +0200 (CEST)
X-Virus-Scanned: by amavisd-new at stat.math.ethz.ch

Full_Name: Andrew Zachary
Version: 2.5.0
OS: XP SP2
Submission from: (NULL) (69.182.9.186)


When using mtrace  under R 2.5.0, I consistently get the error:

Error in all.levs[[jj]]: Subscript out of bounds.

The routine is currently unusable.


From ripley at stats.ox.ac.uk  Mon May 28 13:57:19 2007
From: ripley at stats.ox.ac.uk (ripley at stats.ox.ac.uk)
Date: Mon, 28 May 2007 13:57:19 +0200 (CEST)
Subject: [Rd] Merge (PR#9699)
Message-ID: <20070528115719.80B85489B7@slim.kubism.ku.dk>

On Mon, 21 May 2007, edward.m at psu.ac.th wrote:

> Full_Name: Edward McNeil
> Version: 2.5.0
> OS: Windows XP
> Submission from: (NULL) (203.170.234.5)
>
>
> This is a new bug introduced to R2.5.0.
>
> Scenario: If one of the data frames to merge contains two variables that have
> the same name, then the data in first variable (of the same name) is copied to
> the second variable in the resulting merged data frame.

This is probably

     o	<a data.frame>[i, j] could sometimes select the wrong column
 	when j is numeric if there are duplicate column names.

from NEWS and hence already fixed in R-patched.

> In R2.4.1, the second variable name is automatically renamed (in the resulting
> data frame) by adding ".1" to the end. R2.5.0 doesn't seem to do this anymore.

This is not reproducible:

A <- data.frame(x=1:3, y=4:6, y=7:9, check.names=FALSE)
B <- data.frame(x=1:3, a=3:1)
merge(A, B)

works correctly in R-patched.  You were asked for a reproducible example: 
if you have one in current R-patched, please supply it now (using PR#9699 
early in your subject line).


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Mon May 28 14:00:41 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Mon, 28 May 2007 13:00:41 +0100 (BST)
Subject: [Rd] When loading evir after evd,
	dgumbel gives an error (PR#9704)
In-Reply-To: <20070523133447.570A62A40C@slim.kubism.ku.dk>
References: <20070523133447.570A62A40C@slim.kubism.ku.dk>
Message-ID: <Pine.LNX.4.64.0705281256220.9642@gannet.stats.ox.ac.uk>

Please do not

- report on ancient versions of R.
- use R-bugs for reports on contributed packages.

It is hard to see why you think this is a bug, but you could ask the 
authors of the two packages to work together to avoid this (or add 
namespaces to protect the packages against this).


On Wed, 23 May 2007, r.r.p.vannooyen at tudelft.nl wrote:

> Full_Name: Ronald van Nooijen
> Version: 1.4.1 and 1.5.0, evd 2.2-3
> OS: windows xp
> Submission from: (NULL) (130.161.12.43)
>
>
> In an empty workspace first load package evd, then load package evir.
> a call to any of the routines dgumberl, qgumbel etcetera will now result in an
> error message of the form
>
> Error in qgev(p, loc = loc, scale = scale, shape = 0, lower.tail = lower.tail) :
>
>        unused argument(s) (loc = 0, scale = 1, shape = 0, lower.tail = TRUE)
>
> (It seems that evir::dgev masks evd::dgev and that the different parameter names
> create a problem in the implementation of dgumbel)

[part of another report deleted.]

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From wl2776 at gmail.com  Mon May 28 17:34:27 2007
From: wl2776 at gmail.com (Vladimir Eremeev)
Date: Mon, 28 May 2007 08:34:27 -0700 (PDT)
Subject: [Rd] How to correctly write a package?
Message-ID: <10837938.post@talk.nabble.com>


I am writing a package.

Please, study the sequence of my actions below, and comment, what's
incorrect.
The package contains pure R code.

1. At the one level up from the package directory, from the system command
prompt:
R CMD build --binary ac9

This produces the file ac9_0.1.zip (The package name is ac9, and the
package's DESCRIPTION file says its version is 0.1)

2. Then I run Rgui in the other directory and "Install package(s) from local
zip files"

3. Issue the following commands in the command of Rgui from step 2 :

library(ac9)
 [calls to functions from the package] 

4. If I see errors, I quit Rgui from step 2, then change (hopefully)
properly the source package code, and
go to step 1.

What would happen if I don't quit Rgui from the step 2?
Would it reload the new function definitions?

Is there any other methods to refine a packaged code, which experienced
package writers use in their routine work?

I have created package source using package.skeleton, and have documented
the functions. 
Updating of the function body and re-use of the package.skeleton with
force=TRUE overwrites the documentation files. This disallows often use of
this function, or requires keeping the backup copy of the package sources.
-- 
View this message in context: http://www.nabble.com/How-to-correctly-write-a-package--tf3828586.html#a10837938
Sent from the R devel mailing list archive at Nabble.com.


From ligges at statistik.uni-dortmund.de  Mon May 28 17:42:02 2007
From: ligges at statistik.uni-dortmund.de (Uwe Ligges)
Date: Mon, 28 May 2007 17:42:02 +0200
Subject: [Rd] How to correctly write a package?
In-Reply-To: <10837938.post@talk.nabble.com>
References: <10837938.post@talk.nabble.com>
Message-ID: <465AF84A.4070007@statistik.uni-dortmund.de>



Vladimir Eremeev wrote:
> I am writing a package.
> 
> Please, study the sequence of my actions below, and comment, what's
> incorrect.
> The package contains pure R code.
> 
> 1. At the one level up from the package directory, from the system command
> prompt:
> R CMD build --binary ac9
> 
> This produces the file ac9_0.1.zip (The package name is ac9, and the
> package's DESCRIPTION file says its version is 0.1)
> 
> 2. Then I run Rgui in the other directory and "Install package(s) from local
> zip files"

I'd rather do

a) R CMD build ac9
b) R CMD INSTALL ac9_01.tar.gz
c) If a) and b) worked:
    R CMD check ac9_01.tar.gz


> 3. Issue the following commands in the command of Rgui from step 2 :
> 
> library(ac9)
>  [calls to functions from the package] 
> 
> 4. If I see errors, I quit Rgui from step 2, then change (hopefully)
> properly the source package code, and
> go to step 1.
> 
> What would happen if I don't quit Rgui from the step 2?
> Would it reload the new function definitions?

Depends on some details on the package. In principle, you can detach() 
the package and load it later without closing R in the meantime. Of 
course, when closing R you are on the very safe side.



> Is there any other methods to refine a packaged code, which experienced
> package writers use in their routine work?


Some of the "experienced package writers" probably use svn, cvs or some 
other version control system and so have the sources therein.
They are simply updating the source code directly without using 
package.skeleton() after they once used it for a first skeleton of the 
package.

Uwe Ligges



> I have created package source using package.skeleton, and have documented
> the functions. 
> Updating of the function body and re-use of the package.skeleton with
> force=TRUE overwrites the documentation files. This disallows often use of
> this function, or requires keeping the backup copy of the package sources.


From edward.m at psu.ac.th  Mon May 28 15:30:52 2007
From: edward.m at psu.ac.th (edward.m at psu.ac.th)
Date: Mon, 28 May 2007 15:30:52 +0200 (CEST)
Subject: [Rd] Merge (PR#9699)
Message-ID: <20070528133052.BCDC648A89@slim.kubism.ku.dk>

Yes, it appears to have been resolved in R2.5.0pat, although the 
counter-example provided *does* fail in R2.5.0.

A <- data.frame(x=1:3, y=4:6, y=7:9, check.names=FALSE)
B <- data.frame(x=1:3, a=3:1)
A
  x y y
1 1 4 7
2 2 5 8
3 3 6 9
B
  x a
1 1 3
2 2 2
3 3 1
merge(A, B)
  x y y.1 a
1 1 4   4 3
2 2 5   5 2
3 3 6   6 1
---

Prof Brian Ripley wrote:
> On Mon, 21 May 2007, edward.m at psu.ac.th wrote:
>
>> Full_Name: Edward McNeil
>> Version: 2.5.0
>> OS: Windows XP
>> Submission from: (NULL) (203.170.234.5)
>>
>>
>> This is a new bug introduced to R2.5.0.
>>
>> Scenario: If one of the data frames to merge contains two variables 
>> that have
>> the same name, then the data in first variable (of the same name) is 
>> copied to
>> the second variable in the resulting merged data frame.
>
> This is probably
>
>     o    <a data.frame>[i, j] could sometimes select the wrong column
>     when j is numeric if there are duplicate column names.
>
> from NEWS and hence already fixed in R-patched.
>
>> In R2.4.1, the second variable name is automatically renamed (in the 
>> resulting
>> data frame) by adding ".1" to the end. R2.5.0 doesn't seem to do this 
>> anymore.
>
> This is not reproducible:
>
> A <- data.frame(x=1:3, y=4:6, y=7:9, check.names=FALSE)
> B <- data.frame(x=1:3, a=3:1)
> merge(A, B)
>
> works correctly in R-patched.  You were asked for a reproducible 
> example: if you have one in current R-patched, please supply it now 
> (using PR#9699 early in your subject line).
>
>

-- 
This message has been scanned for viruses and\ dangerous con...{{dropped}}


From whinev at gmail.com  Tue May 29 10:34:12 2007
From: whinev at gmail.com (Ev Whin)
Date: Tue, 29 May 2007 16:34:12 +0800
Subject: [Rd] question about R_ParseVector function
Message-ID: <dfed1c180705290134w554493b8r89ea4037bc9d2eaf@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070529/86507081/attachment.ksh 

From murdoch at stats.uwo.ca  Tue May 29 11:29:51 2007
From: murdoch at stats.uwo.ca (Duncan Murdoch)
Date: Tue, 29 May 2007 05:29:51 -0400
Subject: [Rd] question about R_ParseVector function
In-Reply-To: <dfed1c180705290134w554493b8r89ea4037bc9d2eaf@mail.gmail.com>
References: <dfed1c180705290134w554493b8r89ea4037bc9d2eaf@mail.gmail.com>
Message-ID: <465BF28F.3090706@stats.uwo.ca>

Ev Whin wrote:
> Hi r-devel,
>
> The R_ParseVector has been changed in R-2.5.0, and there is a simple
> description about the 4th argument at
> http://stat.ethz.ch/R-manual/R-patched/NEWS, it says that:
> "R_ParseVector() has a new 4th argument 'SEXP srcfile' allowing source
> references to be attached to the returned expression list. "
> I do not quite understand the purpose of adding the 4th argument. Would some
> experts explain this function in details?

The 4th argument isn't used by the parser, but it is carried along and 
attached to the output as part of the source reference in a srcref 
attribute.  The normal use would be a srcfile() object, or NULL for nothing.

Source references are currently used instead of deparsing when 
available, so that if a user parses something like

x    <-    1 # comment
y    <-    2

the comment and strange formatting aren't lost when displaying the code.

In the long term, I hope to also be able to use the source references in 
a source level debugger:  they allow R to know where the code comes from 
as it is executing it, so the display could allow single stepping 
through the original source file, rather than through a deparsed version 
of the code.  It's also possible that run-time errors could report the 
location of the line of code that triggered them.

Duncan Murdoch


From ripley at stats.ox.ac.uk  Tue May 29 11:39:11 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Tue, 29 May 2007 10:39:11 +0100 (BST)
Subject: [Rd] Correct usage of nchar(): precautionary change for R 2.6.0
Message-ID: <Pine.LNX.4.64.0705290956580.15346@gannet.stats.ox.ac.uk>

Remember that nchar() returns by default the number of *bytes* and not the 
number of characters.   I've recently spotted many cases in which nchar() 
has been used with substr() which works in characters; this can lead to 
incorrect results.  (This seems the commonest use of nchar() in 
packages.)

There were two reasons why nchar() was left defaulting to bytes when we 
allowed MBCSs in R:

1) Many of the uses are of the form if(nchar(x)) or if(nchar(x)==0) or 
even if nchar(x) != 0.  Computing the length of a string is an inefficient 
way to find out if it is non-empty, especially if it has to be converted 
to wchars to do so.

2) Once you allow multibyte characters, not all character strings are 
valid and for those nchar(x, "c") is NA.  Not much code has been written 
to take into account the possibility that nchar() might return an NA.

Despite these reasons, it seems that the dangers of incorrect use outweigh 
them.  So for 2.6.0

- There is a new function nzchar() which provided a quick test of non-zero 
number of characters.

- The default becomes nchar(type="chars").


It seems that nchar() is used quite often to lay out 'printed' or
graphical output.  For that, normally nchar(type="width") is what is 
needed.

None of this is an issue in single-byte locales or for ASCII text in 
UTF-8 or the Windows' CJK locales, but please bear in mind that you cannot 
assume such for a public package.  (The assumption that ASCII code is 
represented in single bytes is pretty widespread, but at some point we may 
want to support Windows' native UCS-2 encoding for which it is not true.)

The best advice is to use the 'type' argument for all uses of nchar() in 
public code unless perhaps you are sure only ASCII data will ever be 
encountered.


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From bolker at zoo.ufl.edu  Tue May 29 14:32:27 2007
From: bolker at zoo.ufl.edu (Ben Bolker)
Date: Tue, 29 May 2007 12:32:27 +0000 (UTC)
Subject: [Rd] bug from nlm function (PR#9711)
References: <20070526144343.214FC4889A@slim.kubism.ku.dk>
Message-ID: <loom.20070529T142937-357@post.gmane.org>

 <bla <at> udec.cl> writes:

> 
> Full_Name: bernardo moises lagos alvarez
> Version: 2.4.0 
> OS:  Windows XP professional
> Submission from: (NULL) (152.74.219.16)
> 
> > nlm(fllwfuncHnew,p=c(1,20),x=xdat)
> 
> Erro en log(b) : el argumento "b" est? ausente, sin default
> 
> ______________________________________________
> R-devel <at> r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

  This is not a bug.  fllwfuncHnew's first argument
should be a VECTOR with elements a and b (rather than
passing a and b as separate arguments.  From ?nlm:

     f: the function to be minimized.  [...]
          This should be a function of a vector of the
          length of 'p' followed by any other arguments specified by
          the '...' argument.

   Please try a little harder to make sure that
a bug is a bug before reporting it as such ...


From braunm at MIT.EDU  Tue May 29 15:31:35 2007
From: braunm at MIT.EDU (Michael Braun)
Date: Tue, 29 May 2007 09:31:35 -0400
Subject: [Rd] Use of Rf_duplicate
Message-ID: <000e01c7a1f5$ae3f1e20$0202a8c0@michael>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070529/ac45325b/attachment.pl 

From osklyar at ebi.ac.uk  Tue May 29 15:52:24 2007
From: osklyar at ebi.ac.uk (Oleg Sklyar)
Date: Tue, 29 May 2007 14:52:24 +0100
Subject: [Rd] Use of Rf_duplicate
In-Reply-To: <000e01c7a1f5$ae3f1e20$0202a8c0@michael>
References: <000e01c7a1f5$ae3f1e20$0202a8c0@michael>
Message-ID: <465C3018.9070901@ebi.ac.uk>

> PROTECT(y=x); and
This has no sense as y is just the same pointer as x. By doing this you 
did not create any new data, if you modify y, x will be modified. y does 
not need protection as x is probably protected.

> PROTECT (y = duplicate(x));   ?
This will allocate new memory for data in x and copy data over there. 
This is correct, modifying y will not modify x. And y needs protection 
as it is newly allocated.

> PROTECT(y = duplicate(x));
> PROTECT(z = duplicate(VECTOR_ELT(y,2)));
It is not clear what you want to achieve by this. z will not be part of 
y any more

> PROTECT(y=duplicate(x));
> PROTECT(z = VECTOR_ELT(y,2));
The correct way would be

PROTECT(y=duplicate(x));
z = VECTOR_ELT(y,2);

as you do not need to protect z, it is done by protecting y

> And if I did create a duplicate, is there a way to destroy it manually
> before the end of the function, rather than rely on on the R garbage
> collector?
Not that I know about.

Best,
Oleg
-- 
Dr Oleg Sklyar | EBI-EMBL, Cambridge CB10 1SD, UK | +44-1223-494466


From jasoncbarnhart at msn.com  Wed May 30 02:13:31 2007
From: jasoncbarnhart at msn.com (Jason Barnhart)
Date: Tue, 29 May 2007 17:13:31 -0700
Subject: [Rd] AIX testers needed
References: <BAY116-DAV9C25C47DAB32FBD9519F0CF320@phx.gbl>
	<dc41e1260705191853r5e9fed51j2f9d07840d4ad7f5@mail.gmail.com>
	<BAY116-DAV4CB005F0377A682BFCD72CF370@phx.gbl>
	<dc41e1260705211932u27cc2bf8jc8507b7b6423361c@mail.gmail.com>
Message-ID: <BAY116-DAV17BB9EF6ADE3DC3A521C4CF2E0@phx.gbl>

Ei-ji,

Thank you very much for your reply; your suggestion resolved the
issue.

Follow up (for others):

    1) In addition to setting the LDR_CNTRL environment variable
    at run-time, R can be compiled by adding '-Wl,-
    bmaxdata:0xn0000000' to LD_FLAGS (where 'n' is the number of
    256MB increments of RAM requested) to engage large program
    support (using GCC). This will support up to 2GB of RAM.

    2) Setting LD_FLAGS set to '-Wl,-bmaxdata:0xD0000000/DSA' I
    was able to compile R and use 3.0+ GB of RAM in a 32-bit
    build.  AIX documentation states this will support 3.5 GB of
    RAM.

    3) Under a 64-bit build, R could use all available RAM on the
    server.     One caveat here: requesting more RAM than the
    system has available forces the OS to kill R without warning.
    This could probably be prevented by using the -bmaxdata
    option, but I have not tested this hypothesis.

    4) AIX system documentation for 'Large Program Support' can
    be found     at
    http://publib.boulder.ibm.com/infocenter/pseries/v5r3/index.jsp
    for AIX 5.3 under 'Programming for AIX', then 'General
    Programming Concepts: Writing and Debugging Programs'


----- Original Message ----- 
From: "Ei-ji Nakama" <nakama at ki.rim.or.jp>
To: "Jason Barnhart" <jasoncbarnhart at msn.com>
Cc: <r-devel at stat.math.ethz.ch>
Sent: Monday, May 21, 2007 7:32 PM
Subject: Re: [Rd] AIX testers needed


> Hi.
>
> I was not careful to 32bit very much.
> You can expand memory for data to 2G by LDR_CNTRL.
> It is as follows.
>
> LDR_CNTRL="MAXDATA=0x10000000" 1   256 MB
> LDR_CNTRL="MAXDATA=0x20000000" 2   512 MB
> LDR_CNTRL="MAXDATA=0x30000000" 3   768 MB
> LDR_CNTRL="MAXDATA=0x40000000" 4 1024 MB
> LDR_CNTRL="MAXDATA=0x50000000" 5 1280 MB
> LDR_CNTRL="MAXDATA=0x60000000" 6 1536 MB
> LDR_CNTRL="MAXDATA=0x70000000" 7 1792 MB
> LDR_CNTRL="MAXDATA=0x80000000"  8       2048 MB
>
> try.
> $ export  LDR_CNTRL="MAXDATA=0x80000000"
> $ R -q
>> xx <- matrix(rep(1e+10,1e7),nrow=1e4,ncol=1e3)
>> tmp.df <- as.data.frame(cbind(xx,xx,xx))
>>
>
>
>
> 2007/5/22, Jason Barnhart <jasoncbarnhart at msn.com>:
>> Thank you for responding.
>>
>> I should have added -a on my ulimit command.  Here are its results;
>> which I believe are not the limiting factor.
>>
>> %/ > ulimit -a
>> core file size        (blocks, -c) 1048575
>> data seg size         (kbytes, -d) unlimited
>> file size             (blocks, -f) unlimited
>> max memory size       (kbytes, -m) 32768
>> open files                    (-n) 2000
>> pipe size          (512 bytes, -p) 64
>> stack size            (kbytes, -s) hard
>> cpu time             (seconds, -t) unlimited
>> max user processes            (-u) 128
>> virtual memory        (kbytes, -v) unlimited
>>
>> Here are my gcc-v results.  They are very similiar.
>>
>> %/ > gcc -v
>> Using built-in specs.
>> Target: powerpc-ibm-aix5.3.0.0
>> Configured with: ../gcc-4.1.2/configure
>>     --prefix=/opt/sas/msd/home/barnharj/usr/local
>>     --program-suffix=-4.1.2
>>     --enable-threads=aix
>>     --enable-languages=c,c++,fortran
>>     --disable-nls
>>     --with-mpfr=/opt/sas/msd/home/barnharj/usr/local
>>     --with-gmp=/opt/sas/msd/home/barnharj/usr/local
>> Thread model: aix
>> gcc version 4.1.2
>>
>> My results for gcc -print-multi-lib are indentical to yours.
>>
>> It should be noted that I did not attempt a 64 bit build.  My 
>> system
>> is not configured properly for that just yet.
>>
>> Via private correspondence someone also suggested the following
>> system("ulimit -d unlimited") during an R session.  That failed as 
>> did
>> issuing the command before launching R.
>>
>> I'll keep investigating.
>>
>> My call to configure is listed below.
>>
>> /configure --prefix=$HOME/usr/local --program-suffix=rc --with-readline=no
>>  --with-x=no --enable-memory-profiling
>>
>>
>> ----- Original Message -----
>> From: "Ei-ji Nakama" <nakama at ki.rim.or.jp>
>> To: "Jason Barnhart" <jasoncbarnhart at msn.com>
>> Cc: <r-devel at stat.math.ethz.ch>
>> Sent: Saturday, May 19, 2007 6:53 PM
>> Subject: Re: [Rd] AIX testers needed
>>
>>
>> > Hi.
>> >
>> > system("ulimit") of AIX gives back file block size.
>> > A limit of memory is `ulimit -m'.
>> >
>> > I made gcc-4.1.2 and made R-2.5.0+patched, but the problem did 
>> > not
>> > happen.
>> >
>> > $ gcc-4.1 -v
>> > Using built-in specs.
>> > Target: powerpc-ibm-aix5.2.0.0
>> > Configured with: ../configure --with-as=/usr/bin/as
>> > --with-ld=/usr/bin/ld --disable-nls --prefix=/usr/local1/gcc-4.1.2
>> > --enable-threads --host=powerpc-ibm-aix5.2.0.0 --program-suffix=-4.1
>> > --with-gmp=/usr/local1 --with-mpfr=/usr/local1
>> > --enable-languages=c,c++,f95
>> > Thread model: aix
>> > gcc version 4.1.2
>> >
>> > $ gcc-4.1 -print-multi-lib
>> > .;
>> > pthread;@pthread
>> > ppc64;@maix64
>> > pthread/ppc64;@pthread at maix64
>> >
>> > $ export OBJECT_MODE=64
>> > $ ./configure CC="gcc-4.1 -maix64" \
>> >                   F77="gfortran-4.1 -maix64" \
>> >                   CXX="g++-4.1 -maix64" \
>> >                   --enable-BLAS-shlib --without-iconv
>> >
>> >
>> > 2007/5/19, Jason Barnhart <jasoncbarnhart at msn.com>:
>> >> Per the request to test the latest tarball referenced below, I 
>> >> have
>> >> built R on AIX 5.3. There is a memory issue, please see 3) 
>> >> below.
>> >>
>> >>     1) Build with --enable-BLAS-shlib option.  Builds and
>> >>     passes "make check".
>> >>
>> >>     2) GNU libiconv was installed; R configured *without*
>> >> the --without-
>> >>     iconv option. Builds and passes "make check."
>> >>
>> >>     3) Memory issue:
>> >>         a) Although the server possesses 8GB of RAM and
>> >>         system("ulimit") returns "unlimited" as its value, R 
>> >> does
>> >> not
>> >>         "have enough memory."
>> >>
>> >>         b) This code works on R-2.4.0 on WinXP with 2GB of RAM, 
>> >> but
>> >>         fails on the AIX build.  Example code:
>> >>
>> >>         > xx <- matrix(rep(1e+10,1e7),nrow=1e4,ncol=1e3)
>> >>         > tmp.df <- as.data.frame(cbind(xx,xx,xx))
>> >>         Error: cannot allocate vector of size 228.9 Mb
>> >>         > gc()
>> >>                    used (Mb) gc trigger  (Mb) max used  (Mb)
>> >>         Ncells   233035  6.3     467875  12.5   350000   9.4
>> >>         Vcells 10104141 77.1   31854441 243.1 30104289 229.7
>> >>
>> >>     4) Used gcc-4.1.2; I have not tried the native compiler.
>> >>
>> >> Questions:
>> >>
>> >>     1) Are there suggestions on how to diagnose and resolve the
>> >> memory
>> >>     issue?  I'm still building my tool chain and I am in the 
>> >> midst
>> >> of
>> >>     installing gdb.
>> >>
>> >>     2) Regarding the build process itself, is there more
>> >> documentation
>> >>     or results that I should forward?
>> >>
>> >> Thanks,
>> >> -jason
>> >>
>> >>
>> >> > version               _
>> >> platform       powerpc-ibm-aix5.3.0.0
>> >> arch           powerpc
>> >> os             aix5.3.0.0
>> >> system         powerpc, aix5.3.0.0
>> >> status         RC
>> >> major          2
>> >> minor          5.0
>> >> year           2007
>> >> month          04
>> >> day            22
>> >> svn rev        41276
>> >> language       R
>> >> version.string R version 2.5.0 RC (2007-04-22 r41276)
>> >>
>> >>
>> >> ----- Original Message -----
>> >> From: "Prof Brian Ripley" <ripley at stats.ox.ac.uk>
>> >> To: <R-devel at r-project.org>
>> >> Cc: "Sheth, Jagat K" <jagat.k.sheth at citigroup.com>; "kamil
>> >> Marcinkowski" <kamil at ualberta.ca>; "Tiong Lim"
>> >> <t.lim at auckland.ac.nz>;
>> >> "Eric Harley" <ericctharley at gmail.com>; "Matthew Beason"
>> >> <mbeason at harrahs.com>; <watplatt at us.ibm.com>
>> >> Sent: Wednesday, March 28, 2007 11:27 PM
>> >> Subject: [Rd] AIX testers needed
>> >>
>> >>
>> >> > With much thanks to Ei-ji Nakama, R 2.5.0 alpha supports 
>> >> > building
>> >> > on
>> >> > AIX
>> >> > (at least AIX 5.2 on one system).
>> >> >
>> >> > Would anyone able to test this please get the latest tarball 
>> >> > from
>> >> >
>> >> > http://cran.r-project.org/src/base-prerelease/R-latest.tar.gz
>> >> >
>> >> > and try installing (after reading the AIX notes in 
>> >> > R-admin.html
>> >> > section
>> >> > C.9).
>> >> >
>> >> > In particular it would be very helpful to know if
>> >> >
>> >> > 1) --enable-BLAS-shlib works (it is the default everywhere 
>> >> > except
>> >> > AIX and
>> >> > Darwin)
>> >> >
>> >> > 2) if people succeed in installing GNU libiconv and building
>> >> > without
>> >> > needing --without-iconv.
>> >> >
>> >> > I am Cc:ing all the people I tracked down who reported 
>> >> > attempted
>> >> > AIX
>> >> > installations in 2006 in the hope that they may still be
>> >> > interested.
>> >> >
>> >> > Please report success and any hints or problems in the R-devel
>> >> > list.
>> >> >
>> >> > --
>> >> > Brian D. Ripley,                  ripley at stats.ox.ac.uk
>> >> > Professor of Applied Statistics,
>> >> > http://www.stats.ox.ac.uk/~ripley/
>> >> > University of Oxford,             Tel:  +44 1865 272861 (self)
>> >> > 1 South Parks Road,                     +44 1865 272866 (PA)
>> >> > Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>> >> >
>> >> > ______________________________________________
>> >> > R-devel at r-project.org mailing list
>> >> > https://stat.ethz.ch/mailman/listinfo/r-devel
>> >> >
>> >>
>> >> ______________________________________________
>> >> R-devel at r-project.org mailing list
>> >> https://stat.ethz.ch/mailman/listinfo/r-devel
>> >>
>> >>
>> >>
>> >
>> >
>> > --
>> > EI-JI Nakama  <nakama at ki.rim.or.jp>
>> > "\u4e2d\u9593\u6804\u6cbb"  <nakama at ki.rim.or.jp>
>> >
>>
>>
>>
>>
>
>
> -- 
> EI-JI Nakama  <nakama at ki.rim.or.jp>
> "\u4e2d\u9593\u6804\u6cbb"  <nakama at ki.rim.or.jp>
>


From tommy101 at gmail.com  Tue May 29 21:21:53 2007
From: tommy101 at gmail.com (Tommy Ouellet)
Date: Tue, 29 May 2007 15:21:53 -0400
Subject: [Rd] LAPACK and BLAS libraries
In-Reply-To: <6c7ddfa50705291132g4586e563m6d8305403e8b6fe6@mail.gmail.com>
References: <6c7ddfa50705291132g4586e563m6d8305403e8b6fe6@mail.gmail.com>
Message-ID: <6c7ddfa50705291221w54c11f5fh9c34b75d5fa71d2d@mail.gmail.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: https://stat.ethz.ch/pipermail/r-devel/attachments/20070529/6a2d3e18/attachment.pl 

From ripley at stats.ox.ac.uk  Wed May 30 09:35:58 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 May 2007 08:35:58 +0100 (BST)
Subject: [Rd] LAPACK and BLAS libraries
In-Reply-To: <6c7ddfa50705291221w54c11f5fh9c34b75d5fa71d2d@mail.gmail.com>
References: <6c7ddfa50705291132g4586e563m6d8305403e8b6fe6@mail.gmail.com>
	<6c7ddfa50705291221w54c11f5fh9c34b75d5fa71d2d@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0705300826550.9633@gannet.stats.ox.ac.uk>

Please don't post to multiple lists.

It seems you are using Windows, but have not told us so: this is one of 
many things in the posting guide you have not followed (and that is why 
you did not get at least one answer on R-help).

There are many packages on CRAN that use LAPACK and work under Windows. 
You should test your setup on one of those.  (DPackage is one of the first 
in C collation.)

On Tue, 29 May 2007, Tommy Ouellet wrote:

> Hi,
>
> I don't know if I'm sending this to the right place but I've looked throught
> tens and tens of topics on http://tolstoy.newcastle.edu.au/ and finally
> found that email address where I can maybe find some help.
>
> Well my main goal is to get to use the lapack library within my R package
> (which can be done using calls from C). But in order to do this I have to
> create a file src/Makevars with the following line : PKG_LIBS=$(LAPACK_LIBS)
> $(BLAS_LIBS) $(FLIBS)
>
> However when I create this file, my package won't build anymore. Actually
> the checking results in the following :

The actual line that failed having been omitted!

> mingw32\bin\ld.exe: cannot find -lg2c
> collect2: ld returned 1 exit status
> make[3]: *** [PACKAGE.dll] Error 1
> make[2]: *** [srcDynlib] Error 2
> make[1]: *** [all] Error 2
> make: *** [pkg-PACKAGE] Error 2
> *** Installation of PACKAGE failed ***
>
> I've installed all the following tools :
>     mingw-runtime-3.12.tar.gz
>     w32api-3.9.tar.gz
>     binutils-2.17.50-20060824-1.tar.gz
>     gcc-core-3.4.5-20060117-1.tar.gz
>     gcc-g++-3.4.5-20060117-1.tar.gz
>     gcc-g77-3.4.5-20060117-1.tar.gz
> So I don't know what to do next for the package to build... Any help would
> be greatly appreciated.
>
> I am using R v. 2.5.0
>
> Thanks!
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From pgilbert at bank-banque-canada.ca  Wed May 30 15:27:14 2007
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Wed, 30 May 2007 09:27:14 -0400
Subject: [Rd] S4 assignment \alias and \usage
Message-ID: <465D7BB2.3050405@bank-banque-canada.ca>

What is the Rd file alias and usage syntax for an S4 assignment method? 
   I have been trying variations on

\alias{TSdoc<-,default-method}

\usage{
     \S4method{TSdoc}{default}(x) <- value

but so far I have not got it right according to various codoc, etc, checks.

Paul Gilbert
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}


From yucel at schoolph.umass.edu  Wed May 30 16:08:13 2007
From: yucel at schoolph.umass.edu (Recai Yucel)
Date: Wed, 30 May 2007 10:08:13 -0400
Subject: [Rd] R 2.5.0 MAC OS X version
Message-ID: <465D854D.6060501@schoolph.umass.edu>

Please accept my apologies if this was addressed before, I could not 
find any solution so I am posting my question here.

I am having a lot of difficulties with installing and developing R 
packages with the latest version of R 2.5.0. I am using a MacBook Pro. I 
never had these problems with the previous versions of R. I think part 
of the problem is caused by the GNU Fortran 4.2.0 or my lack of knowledge...

If anybody else had similar problems and found the solution, please let 
me know.

Best.

-- 
Recai Yucel, Ph.D.
Assistant Professor of Biostatistics
Biostatistics and Epidemiology
UMASS-Amherst


From sfalcon at fhcrc.org  Wed May 30 16:10:26 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 May 2007 07:10:26 -0700
Subject: [Rd] S4 assignment \alias and \usage
In-Reply-To: <465D7BB2.3050405@bank-banque-canada.ca> (Paul Gilbert's message
	of "Wed, 30 May 2007 09:27:14 -0400")
References: <465D7BB2.3050405@bank-banque-canada.ca>
Message-ID: <m2wsyqflm5.fsf@ziti.local>

Paul Gilbert <pgilbert at bank-banque-canada.ca> writes:

> What is the Rd file alias and usage syntax for an S4 assignment method? 
>    I have been trying variations on
>
> \alias{TSdoc<-,default-method}
>
> \usage{
>      \S4method{TSdoc}{default}(x) <- value
>
> but so far I have not got it right according to various codoc, etc,
> checks.

If you have your own generic TSdoc<-, then I think you want:

\alias{TSdoc<-}
\alias{TSdoc<-,someClass,anotherClass-method}

You may not be allowed to specify usage, but I think the issue only
arises when setting methods for a generic documented elsewhere.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From Roy.Mendelssohn at noaa.gov  Wed May 30 16:12:19 2007
From: Roy.Mendelssohn at noaa.gov (Roy Mendelssohn)
Date: Wed, 30 May 2007 07:12:19 -0700
Subject: [Rd] R 2.5.0 MAC OS X version
In-Reply-To: <465D854D.6060501@schoolph.umass.edu>
References: <465D854D.6060501@schoolph.umass.edu>
Message-ID: <E72C4C2A-748F-4ED2-BCB6-51001EF22BC8@noaa.gov>

Hi Recal:

To save you from some possible flames, it would probably help if you  
describe what the problems are, with specific examples and some of  
the relevant error messages. It would be difficult to for someone to  
know if they are seeing similar problems without knowing what the  
problems are.

I believe such information is in the posting guides, which do contain  
good information on how to frame a question to the mail list that  
will elicit useful responses.

-Roy




On May 30, 2007, at 7:08 AM, Recai Yucel wrote:

> Please accept my apologies if this was addressed before, I could not
> find any solution so I am posting my question here.
>
> I am having a lot of difficulties with installing and developing R
> packages with the latest version of R 2.5.0. I am using a MacBook  
> Pro. I
> never had these problems with the previous versions of R. I think part
> of the problem is caused by the GNU Fortran 4.2.0 or my lack of  
> knowledge...
>
> If anybody else had similar problems and found the solution, please  
> let
> me know.
>
> Best.
>
> -- 
> Recai Yucel, Ph.D.
> Assistant Professor of Biostatistics
> Biostatistics and Epidemiology
> UMASS-Amherst
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

**********************
"The contents of this message do not reflect any position of the U.S.  
Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division	
Southwest Fisheries Science Center
1352 Lighthouse Avenue
Pacific Grove, CA 93950-2097

e-mail: Roy.Mendelssohn at noaa.gov (Note new e-mail address)
voice: (831)-648-9029
fax: (831)-648-8440
www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."


From maechler at stat.math.ethz.ch  Wed May 30 16:18:30 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 30 May 2007 16:18:30 +0200
Subject: [Rd] S4 assignment \alias and \usage
In-Reply-To: <465D7BB2.3050405@bank-banque-canada.ca>
References: <465D7BB2.3050405@bank-banque-canada.ca>
Message-ID: <18013.34742.228595.528262@stat.math.ethz.ch>

>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>     on Wed, 30 May 2007 09:27:14 -0400 writes:

    PaulG> What is the Rd file alias and usage syntax for an S4 assignment method? 
    PaulG> I have been trying variations on


    PaulG> \alias{TSdoc<-,default-method}

Do you really have a class called "default" ????

Using "<func>.default" is an S3 concept which in S4 is replaced
by defining methods for "ANY".


In Matrix, we have

\alias{dim<-,Matrix-method}

and that works fine
-- though we don't have a \usage{.} there, since this really is in 
Matrix-class.Rd

Martin Maechler

    PaulG> \usage{
    PaulG> \S4method{TSdoc}{default}(x) <- value

    PaulG> but so far I have not got it right according to various codoc, etc, checks.

    PaulG> Paul Gilbert


From ripley at stats.ox.ac.uk  Wed May 30 16:38:29 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 May 2007 15:38:29 +0100 (BST)
Subject: [Rd] R 2.5.0 MAC OS X version
In-Reply-To: <E72C4C2A-748F-4ED2-BCB6-51001EF22BC8@noaa.gov>
References: <465D854D.6060501@schoolph.umass.edu>
	<E72C4C2A-748F-4ED2-BCB6-51001EF22BC8@noaa.gov>
Message-ID: <Pine.LNX.4.64.0705301535420.25280@gannet.stats.ox.ac.uk>

And beyond that good advice, the mailing list for MacOS issues is 
R-sig-mac.

Are you really using 'GNU Fortran 4.2.0' (which was released well after R 
2.5.0), or some pre-release of it?  Such details do matter.


On Wed, 30 May 2007, Roy Mendelssohn wrote:

> Hi Recal:
>
> To save you from some possible flames, it would probably help if you
> describe what the problems are, with specific examples and some of
> the relevant error messages. It would be difficult to for someone to
> know if they are seeing similar problems without knowing what the
> problems are.
>
> I believe such information is in the posting guides, which do contain
> good information on how to frame a question to the mail list that
> will elicit useful responses.
>
> -Roy
>
>
>
>
> On May 30, 2007, at 7:08 AM, Recai Yucel wrote:
>
>> Please accept my apologies if this was addressed before, I could not
>> find any solution so I am posting my question here.
>>
>> I am having a lot of difficulties with installing and developing R
>> packages with the latest version of R 2.5.0. I am using a MacBook
>> Pro. I
>> never had these problems with the previous versions of R. I think part
>> of the problem is caused by the GNU Fortran 4.2.0 or my lack of
>> knowledge...
>>
>> If anybody else had similar problems and found the solution, please
>> let
>> me know.
>>
>> Best.
>>
>> --
>> Recai Yucel, Ph.D.
>> Assistant Professor of Biostatistics
>> Biostatistics and Epidemiology
>> UMASS-Amherst

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From yucel at schoolph.umass.edu  Wed May 30 16:44:53 2007
From: yucel at schoolph.umass.edu (Recai Yucel)
Date: Wed, 30 May 2007 10:44:53 -0400
Subject: [Rd] R 2.5.0 MAC OS X version
In-Reply-To: <Pine.LNX.4.64.0705301535420.25280@gannet.stats.ox.ac.uk>
References: <465D854D.6060501@schoolph.umass.edu>
	<E72C4C2A-748F-4ED2-BCB6-51001EF22BC8@noaa.gov>
	<Pine.LNX.4.64.0705301535420.25280@gannet.stats.ox.ac.uk>
Message-ID: <465D8DE5.8040104@schoolph.umass.edu>

Right. I thought the problems might be obvious enough for MAC users, 
probably not!
I was mistaken with the GNU Fortran version, it is 4.0 as seen below. A 
specific example where I had problems is given below:

When I try to install a package called lmm (which was installed with no 
problem with the previous versions of R), I get the following messages, 
specifically on the make, chmod, etc.

*************************************
trying URL 'http://cran.us.r-project.org/src/contrib/lmm_0.3-4.tar.gz'
Content type 'application/x-tar' length 31471 bytes
opened URL
==================================================
downloaded 30Kb

WARNING: ignoring environment value of R_HOME
tar: Read 4096 bytes from -
* Installing *source* package 'lmm' ...
** libs
** arch - i386
gfortran-4.0 -arch i386  -isysroot /Developer/SDKs/MacOSX10.4u.sdk   
-fPIC  -g -O2 -march=nocona -c lmm.f -o lmm.o
gcc-4.0 -arch i386 -isysroot /Developer/SDKs/MacOSX10.4u.sdk -dynamiclib 
-Wl,-macosx_version_min -Wl,10.3 -undefined dynamic_lookup 
-single_module -multiply_defined suppress -L/usr/local/lib -o lmm.so 
lmm.o  -L/usr/local/lib/gcc/i686-apple-darwin8/4.2.0 -lgfortran 
-lgcc_s.10.4 -F/Library/Frameworks/R.framework/.. -framework R
/usr/bin/libtool: for architecture cputype (16777223) cpusubtype (3) 
object: /usr/local/lib/libgfortran.dylib malformed object (unknown load 
command 4)
/usr/bin/libtool: for architecture cputype (16777223) cpusubtype (3) 
object: /usr/local/lib/libgcc_s.10.4.dylib malformed object (unknown 
load command 4)
** arch - ppc
gfortran-4.0 -arch ppc  -isysroot /Developer/SDKs/MacOSX10.4u.sdk   
-fPIC  -g -O2 -c lmm.f -o lmm.o
make: *** [lmm.so] Error 1
chmod: 
/Library/Frameworks/R.framework/Versions/2.5/Resources/library/lmm/libs/i386/*: 
No such file or directory
gcc-4.0 -arch ppc -isysroot /Developer/SDKs/MacOSX10.4u.sdk -std=gnu99 
-dynamiclib -Wl,-macosx_version_min -Wl,10.3 -undefined dynamic_lookup 
-single_module -multiply_defined suppress -L/usr/local/lib -o lmm.so 
lmm.o  -L/usr/local/lib/gcc/powerpc-apple-darwin8/4.2.0 -lgfortran 
-lgcc_s.10.4 -lSystemStubs -F/Library/Frameworks/R.framework/.. 
-framework R

The downloaded packages are in
   /private/tmp/Rtmpe4c9Of/downloaded_packages
** Removing 
'/Library/Frameworks/R.framework/Versions/2.5/Resources/library/lmm'
** Restoring previous 
'/Library/Frameworks/R.framework/Versions/2.5/Resources/library/lmm'
/usr/bin/libtool: for architecture cputype (16777223) cpusubtype (3) 
object: /usr/local/lib/libgfortran.dylib malformed object (unknown load 
command 4)
/usr/bin/libtool: for architecture cputype (16777223) cpusubtype (3) 
object: /usr/local/lib/libgcc_s.10.4.dylib malformed object (unknown 
load command 4)
make: *** [lmm.so] Error 1
chmod: 
/Library/Frameworks/R.framework/Versions/2.5/Resources/library/lmm/libs/ppc/*: 
No such file or directory
ERROR: compilation failed for package 'lmm'
*************************************



Prof Brian Ripley wrote:
> And beyond that good advice, the mailing list for MacOS issues is 
> R-sig-mac.
>
> Are you really using 'GNU Fortran 4.2.0' (which was released well 
> after R 2.5.0), or some pre-release of it?  Such details do matter.
>
>
> On Wed, 30 May 2007, Roy Mendelssohn wrote:
>
>> Hi Recal:
>>
>> To save you from some possible flames, it would probably help if you
>> describe what the problems are, with specific examples and some of
>> the relevant error messages. It would be difficult to for someone to
>> know if they are seeing similar problems without knowing what the
>> problems are.
>>
>> I believe such information is in the posting guides, which do contain
>> good information on how to frame a question to the mail list that
>> will elicit useful responses.
>>
>> -Roy
>>
>>
>>
>>
>> On May 30, 2007, at 7:08 AM, Recai Yucel wrote:
>>
>>> Please accept my apologies if this was addressed before, I could not
>>> find any solution so I am posting my question here.
>>>
>>> I am having a lot of difficulties with installing and developing R
>>> packages with the latest version of R 2.5.0. I am using a MacBook
>>> Pro. I
>>> never had these problems with the previous versions of R. I think part
>>> of the problem is caused by the GNU Fortran 4.2.0 or my lack of
>>> knowledge...
>>>
>>> If anybody else had similar problems and found the solution, please
>>> let
>>> me know.
>>>
>>> Best.
>>>
>>> -- 
>>> Recai Yucel, Ph.D.
>>> Assistant Professor of Biostatistics
>>> Biostatistics and Epidemiology
>>> UMASS-Amherst
>

-- 
Recai Yucel, Ph.D.
Assistant Professor of Biostatistics
Biostatistics and Epidemiology
UMASS-Amherst


From mbreuer at ecology.uni-kiel.de  Wed May 30 15:14:10 2007
From: mbreuer at ecology.uni-kiel.de (mbreuer at ecology.uni-kiel.de)
Date: Wed, 30 May 2007 15:14:10 +0200 (CEST)
Subject: [Rd] Anova doesn't work in newer versions (PR#9712)
Message-ID: <20070530131410.B52E048B6E@slim.kubism.ku.dk>

This is a multi-part message in MIME format.
--------------060302070603070400070109
Content-Type: text/plain; charset=ISO-8859-15
Content-Transfer-Encoding: 7bit

Dear Ladies and Sirs,

In the attachment you will find a script (+data) that could be executed
without an error or warning in previous R-versions like  V 2.2 but gives
an error message in newer
versions like 2.4.1 or 2.5.0. (on WINDOWS XP)

"Error in anova.glmmPQL(bu.lme) : 'anova' is not available for PQL fits"

It may be, that former program versions didn't work precise enough and
thus the error message is correct. Perhaps you can help me.

With best regards

M. Breuer


--------------060302070603070400070109
Content-Type: text/plain;
 name="bu1.r"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="bu1.r"

library(nlme)
library(MASS)
bu=read.table("bu.csv",header=T,sep=",")
attach(bu)
sapply(bu,data.class)
bu$PK<-as.factor(bu$PK)
bu$BANR<-as.factor(bu$BANR)
bu$BTYP<-as.factor(bu$BTYP)
bu$MISCH<-as.factor(bu$MISCH)
sapply(bu,data.class)
library(MASS)
library(nlme)
bu.lme<-glmmPQL(id~G1992+MISCH+ih+G1992:MISCH+ih:MISCH+ih:MISCH:G1992,random=~1|PK/BANR,family="gaussian",data=bu)
print(anova(bu.lme))

--------------060302070603070400070109
Content-Type: text/comma-separated-values;
 name="bu.csv"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="bu.csv"

NUTZ,ART,PK,BANR,d1992,id,BTYP,MISCH,G1992,A1992,H1992,A2003,H2003,ih
WW,Bu,8,2,243,138.5,28,2,17.39316239,41,19.50,52,19.50,0.00
WW,Bu,36,7,477.5,33,21,2,28.71794872,103,33.50,114,33.50,0.00
WW,Bu,37,3,423.5,28.5,20,1,41.66666667,103,29.50,114,29.50,0.00
WW,Bu,50,5,409,77.5,20,1,20.55555556,108,32.00,119,32.00,0.00
WW,Bu,65,4,230,39,12,2,21.23931624,43,23.00,54,23.00,0.00
WW,Bu,82,9,326.5,80,13,2,33.29059829,83,25.00,94,25.00,0.00
WW,Bu,105,3,552.5,57.5,21,2,51.32478632,98,26.00,109,26.00,0.00
WW,Bu,123,15,356,75,20,1,25.34188034,63,26.60,74,26.60,0.00
WW,Bu,145,5,377.5,42.5,21,2,35.2991453,103,22.10,114,22.10,0.00
WW,Bu,147,1,303.5,57.5,22,2,15.34188034,78,31.60,89,31.60,0.00
WW,Bu,161,2,497,19.5,20,1,25.21367521,103,29.50,114,29.50,0.00
WW,Bu,162,2,319,5,21,2,24.87179487,78,21.80,89,21.80,0.00
WW,Bu,163,2,401.5,33,20,1,31.96581197,78,30.10,89,30.10,0.00
WW,Bu,165,4,406,43,12,2,33.93162393,98,30.00,109,30.00,0.00
WW,Bu,171,1,319,25.5,29,2,28.8034188,103,30.90,114,30.90,0.00
WW,Bu,171,7,461.5,51,29,2,28.8034188,103,32.80,114,32.80,0.00
WW,Bu,172,2,501.5,53,20,1,29.23076923,103,33.80,114,33.80,0.00
WW,Bu,172,9,491.5,52.5,20,1,29.23076923,103,31.00,114,31.00,0.00
WW,Bu,174,6,245,57,20,1,29.14529915,58,27.40,69,27.40,0.00
WW,Bu,176,14,399,37,20,1,29.48717949,78,30.30,89,30.30,0.00
WW,Bu,177,14,415.5,25,21,2,36.62393162,108,24.30,119,24.30,0.00
WW,Bu,273,1,600,38.5,20,1,24.31623932,118,34.70,129,34.70,0.00
WW,Bu,273,4,462.5,61.5,20,1,24.31623932,118,35.20,129,35.20,0.00
WW,Bu,274,5,484.5,43.5,21,2,36.45299145,118,31.00,129,31.00,0.00
WW,Bu,277,1,493.5,30.5,21,2,26.1965812,128,30.60,139,30.60,0.00
WW,Bu,277,3,615.5,70,21,2,26.1965812,128,32.60,139,32.60,0.00
WW,Bu,277,4,403,72.5,21,2,26.1965812,128,30.20,139,30.20,0.00
WW,Bu,277,6,444.5,20.5,21,2,26.1965812,128,31.80,139,31.80,0.00
WW,Bu,281,1,270,22,20,1,32.90598291,103,25.30,114,25.30,0.00
WW,Bu,281,2,570,35.5,20,1,32.90598291,103,26.20,114,26.20,0.00
WW,Bu,281,3,342.5,27.5,20,1,32.90598291,103,16.40,114,16.40,0.00
WW,Bu,281,4,542.5,60,20,1,32.90598291,103,24.00,114,24.00,0.00
WW,Bu,281,11,535.5,32,20,1,32.90598291,103,29.80,114,29.80,0.00
WW,Bu,285,2,541.5,42.5,20,1,21.4957265,103,37.00,114,37.00,0.00
WW,Bu,285,4,420.5,26.5,20,1,21.4957265,103,32.00,114,32.00,0.00
WW,Bu,285,5,481,45.5,20,1,21.4957265,103,32.40,114,32.40,0.00
WW,Bu,285,6,545,32.5,20,1,21.4957265,103,33.70,114,33.70,0.00
WW,Bu,285,8,447.5,30,20,1,21.4957265,103,33.10,114,33.10,0.00
WW,Bu,287,1,218,15,12,2,46.96581197,103,23.60,114,23.60,0.00
WW,Bu,293,5,276,48,21,2,36.02564103,98,27.20,109,27.20,0.00
WW,Bu,295,1,82,61,20,1,7.692307692,28,11.00,39,11.00,0.00
WW,Bu,295,3,70,28,20,1,7.692307692,28,9.00,39,9.00,0.00
WW,Bu,295,4,100,50,20,1,7.692307692,28,12.00,39,12.00,0.00
WW,Bu,295,5,72,8,20,1,7.692307692,28,9.20,39,9.20,0.00
WW,Bu,295,6,106,39,20,1,7.692307692,28,10.80,39,10.80,0.00
WW,Bu,295,8,92,39,20,1,7.692307692,28,9.10,39,9.10,0.00
WW,Bu,295,9,85,47,20,1,7.692307692,28,10.40,39,10.40,0.00
WW,Bu,295,12,102,78,20,1,7.692307692,28,12.10,39,12.10,0.00
WW,Bu,298,7,510,20.5,20,1,23.24786325,98,34.00,109,34.00,0.00
WW,Bu,299,4,513.5,25.5,23,2,37.77777778,98,32.30,109,32.30,0.00
WW,Bu,299,5,430,20.5,23,2,37.77777778,98,28.80,109,28.80,0.00
WW,Bu,299,6,527.5,56.5,23,2,37.77777778,98,31.80,109,31.80,0.00
WW,Bu,299,7,402.5,30.5,23,2,37.77777778,98,31.80,109,31.80,0.00
WW,Bu,308,6,276,63.5,23,2,40.51282051,56,26.90,67,26.90,0.00
WW,Bu,308,9,238,61,23,2,40.51282051,56,25.50,67,25.50,0.00
WW,Bu,309,2,255,74.5,28,2,23.41880342,56,24.00,67,24.00,0.00
WW,Bu,309,6,337,75,28,2,23.41880342,56,23.50,67,23.50,0.00
WW,Bu,309,8,375,92,28,2,23.41880342,56,22.70,67,22.70,0.00
WW,Bu,309,9,403.5,142.5,28,2,23.41880342,56,24.30,67,24.30,0.00
WW,Bu,324,2,267,47.5,20,1,23.84615385,56,25.50,67,25.50,0.00
WW,Bu,324,4,306,36.5,20,1,23.84615385,56,29.70,67,29.70,0.00
WW,Bu,324,5,405.5,50,20,1,23.84615385,56,29.00,67,29.00,0.00
WW,Bu,324,9,260,20,20,1,23.84615385,56,26.40,67,26.40,0.00
WW,Bu,324,11,287,51,20,1,23.84615385,56,26.30,67,26.30,0.00
WW,Bu,324,15,367.5,53.5,20,1,23.84615385,56,26.70,67,26.70,0.00
WW,Bu,325,3,457.5,21.5,21,2,45.17094017,128,36.20,139,36.20,0.00
WW,Bu,356,1,797.5,47.5,20,1,30.5982906,150,35.00,161,35.00,0.00
WW,Bu,356,2,369,10,20,1,30.5982906,150,28.00,161,28.00,0.00
WW,Bu,358,1,430,95,21,2,43.41880342,118,30.00,129,30.00,0.00
WW,Bu,358,2,456,64,21,2,43.41880342,118,32.40,129,32.40,0.00
WW,Bu,358,3,350.5,79,21,2,43.41880342,118,29.50,129,29.50,0.00
WW,Bu,358,4,476.5,73,21,2,43.41880342,118,31.80,129,31.80,0.00
WW,Bu,373,9,462.5,27.5,22,2,30,83,28.00,94,28.00,0.00
WW,Bu,373,11,293,41,22,2,30,83,22.50,94,22.50,0.00
WW,Bu,373,12,413,42,22,2,30,83,22.70,94,22.70,0.00
WW,Bu,377,6,217,65,20,1,16.92307692,43,20.20,40,20.20,0.00
WW,Bu,377,10,152,48,20,1,16.92307692,43,18.50,40,18.50,0.00
WW,Bu,381,2,79,39,20,1,1.324786325,30,6.50,0,6.50,0.00
WW,Bu,381,3,76,85,20,1,1.324786325,30,6.80,0,6.80,0.00
WW,Bu,381,4,71,62,20,1,1.324786325,30,7.00,0,7.00,0.00
WW,Bu,383,6,357,36.5,20,1,18.8034188,133,28.50,144,28.50,0.00
WW,Bu,393,3,741.5,44,20,1,39.23076923,83,35.00,94,35.00,0.00
WW,Bu,393,4,404,50,20,1,39.23076923,83,35.00,94,35.00,0.00
WW,Bu,393,6,522,14.5,20,1,39.23076923,83,31.20,94,31.20,0.00
WW,Bu,393,7,440,64.5,20,1,39.23076923,83,35.30,94,35.30,0.00
WW,Bu,393,8,408.5,32,20,1,39.23076923,83,31.50,94,31.50,0.00
WW,Bu,393,9,436,35,20,1,39.23076923,83,35.50,94,35.50,0.00
WW,Bu,393,10,474.5,71.5,20,1,39.23076923,83,35.30,94,35.30,0.00
WW,Bu,397,12,123,40,20,1,17.94871795,25,13.10,36,13.10,0.00
WW,Bu,409,7,354.5,43,14,2,25.17094017,103,23.70,114,23.70,0.00
WW,Bu,412,6,431,59.5,21,2,29.44444444,138,33.50,149,33.50,0.00
WW,Bu,412,7,408.5,42,21,2,29.44444444,138,30.40,149,30.40,0.00
WW,Bu,413,1,512.5,42.5,20,1,14.82905983,138,32.00,149,32.00,0.00
WW,Bu,413,3,484.5,41,20,1,14.82905983,138,35.30,149,35.30,0.00
WW,Bu,413,5,312.5,122,20,1,14.82905983,138,30.00,149,30.00,0.00
WW,Bu,440,7,501.5,73,25,2,18.41880342,81,33.00,92,33.00,0.00
WW,Bu,441,4,366,63,22,2,18.41880342,81,27.00,92,27.00,0.00
WW,Bu,452,7,329,81.5,28,2,18.71794872,60,26.00,71,26.00,0.00
WW,Bu,517,1,387.5,70,28,2,20.12820513,100,28.50,111,28.50,0.00
WW,Bu,517,2,234,56,28,2,20.12820513,100,28.00,111,28.00,0.00
WW,Bu,517,3,322,54.5,28,2,20.12820513,100,29.00,111,29.00,0.00
WW,Bu,517,4,317,62,28,2,20.12820513,100,29.40,111,29.40,0.00
WW,Bu,517,7,312,66,28,2,30.64102564,100,29.40,111,29.40,0.00
WW,Bu,541,10,462.5,167,23,2,31.66666667,60,27.50,71,27.50,0.00
WW,Bu,587,6,625.5,43,20,1,29.18803419,168,33.80,179,33.80,0.00
WW,Bu,602,5,353,61.5,21,2,31.1965812,123,30.00,134,30.00,0.00
WW,Bu,616,5,569.5,37,20,1,22.26495726,103,36.00,114,36.00,0.00
WW,Bu,635,4,208,11,20,1,27.13675214,68,28.80,79,28.80,0.00
WW,Bu,667,3,491,37,12,2,39.52991453,140,16.00,151,16.00,0.00
WW,Bu,1739,10,393,103,80,2,21.45299145,40,19.00,51,19.00,0.00
WW,Bu,1788,1,539,33.5,20,1,32.22222222,100,36.80,111,36.80,0.00
WW,Bu,1788,3,558,102.5,20,1,32.22222222,100,36.90,111,36.90,0.00
WW,Bu,1788,4,531,43,20,1,32.22222222,100,33.10,111,33.10,0.00
WW,Bu,1791,4,432.5,52,23,2,33.41880342,100,28.50,111,28.50,0.00
WW,Bu,1791,6,368.5,48.5,23,2,33.41880342,100,25.50,111,25.50,0.00
WW,Bu,1791,7,414,7.5,23,2,33.41880342,100,28.40,111,28.40,0.00
WW,Bu,1791,8,451,120,23,2,33.41880342,100,25.80,111,25.80,0.00
WW,Bu,1806,8,318,45.5,28,2,41.15384615,55,30.50,66,30.50,0.00
WW,Bu,1806,20,242,22,28,2,41.15384615,55,24.40,66,24.40,0.00
WW,Bu,1814,2,185,59,21,2,40.8974359,100,23.00,111,23.00,0.00
WW,Bu,1814,8,253,65,21,2,40.8974359,100,21.10,111,21.10,0.00
WW,Bu,1815,28,108,46,20,1,27.86324786,28,11.00,39,11.00,0.00
WW,Bu,1821,5,407.5,36,22,2,43.41880342,100,32.30,111,32.30,0.00
WW,Bu,1822,2,639,30,20,1,35.25641026,110,33.30,121,33.30,0.00
WW,Bu,1822,3,541,31.5,20,1,35.25641026,110,34.20,121,34.20,0.00
WW,Bu,1822,4,528.5,56,20,1,35.25641026,110,32.60,121,32.60,0.00
WW,Bu,1822,6,626.5,27,20,1,35.25641026,110,33.90,121,33.90,0.00
WW,Bu,1822,7,315,23,20,1,35.25641026,110,31.50,121,31.50,0.00
WW,Bu,1822,8,520,43.5,20,1,35.25641026,110,34.00,121,34.00,0.00
WW,Bu,1831,6,465.5,39,20,1,33.20512821,110,36.50,121,36.50,0.00
WW,Bu,1832,3,341.5,55.5,20,1,42.94871795,75,29.10,86,29.10,0.00
WW,Bu,1832,4,369.5,55,20,1,42.94871795,75,28.40,86,28.40,0.00
WW,Bu,1832,19,359,56,20,1,42.94871795,75,28.80,86,28.80,0.00
WW,Bu,1834,5,500.5,17,20,1,47.47863248,105,31.10,116,31.10,0.00
WW,Bu,1836,5,446.5,59,20,1,46.36752137,100,34.10,111,34.10,0.00
WW,Bu,1836,6,328,20,20,1,46.36752137,100,32.70,111,32.70,0.00
WW,Bu,1836,7,367,36,20,1,46.36752137,100,33.00,111,33.00,0.00
WW,Bu,1836,11,388.5,34.5,20,1,46.36752137,100,33.00,111,33.00,0.00
WW,Bu,1836,15,473,30.5,20,1,46.36752137,100,35.50,111,35.50,0.00
WW,Bu,1836,16,452.5,42.5,20,1,46.36752137,100,34.30,111,34.30,0.00
WW,Bu,1837,1,344.5,28,20,1,37.82051282,100,29.50,111,29.50,0.00
WW,Bu,1837,2,396,56,20,1,37.82051282,100,30.00,111,30.00,0.00
WW,Bu,1837,4,452.5,59,20,1,37.82051282,100,32.50,111,32.50,0.00
WW,Bu,1837,5,364.5,44.5,20,1,37.82051282,100,30.20,111,30.20,0.00
WW,Bu,1837,9,454,50,20,1,37.82051282,100,32.10,111,32.10,0.00
WW,Bu,1837,11,428.5,44.5,20,1,37.82051282,100,29.00,111,29.00,0.00
WW,Bu,1837,12,443.5,51,20,1,37.82051282,100,29.90,111,29.90,0.00
WW,Bu,1837,17,396,51.5,20,1,37.82051282,100,30.30,111,30.30,0.00
WW,Bu,1838,3,422,1,20,1,40.04273504,105,29.00,116,29.00,0.00
WW,Bu,1838,4,459.5,18.5,20,1,40.04273504,105,33.10,116,33.10,0.00
WW,Bu,1838,5,474,25.5,20,1,40.04273504,105,35.10,116,35.10,0.00
WW,Bu,1838,8,530.5,58.5,20,1,40.04273504,105,32.20,116,32.20,0.00
WW,Bu,1838,14,584,81,20,1,40.04273504,105,35.00,116,35.00,0.00
WW,Bu,1839,14,441,28.5,21,2,35.55555556,105,34.00,116,34.00,0.00
WW,Bu,1839,16,556.5,92,21,2,35.55555556,105,34.40,116,34.40,0.00
WW,Bu,1840,3,431.5,39.5,20,1,33.20512821,100,31.50,111,31.50,0.00
WW,Bu,1840,5,334,24.5,20,1,33.20512821,100,32.30,111,32.30,0.00
WW,Bu,1840,6,468,35.5,20,1,33.20512821,100,32.30,111,32.30,0.00
WW,Bu,1840,8,446,42,20,1,33.20512821,100,32.40,111,32.40,0.00
WW,Bu,1840,9,331,25,20,1,33.20512821,100,32.20,111,32.20,0.00
WW,Bu,1841,1,251,45.5,12,2,29.61538462,100,18.50,111,18.50,0.00
WW,Bu,1841,3,229,64,12,2,29.61538462,100,23.00,111,23.00,0.00
WW,Bu,1843,2,612,41,20,1,29.05982906,105,33.80,116,33.80,0.00
WW,Bu,1843,3,429.5,22,20,1,29.05982906,105,31.10,116,31.10,0.00
WW,Bu,1843,4,611.5,41,20,1,29.05982906,105,31.00,116,31.00,0.00
WW,Bu,1843,7,578,68,20,1,29.05982906,105,34.00,116,34.00,0.00
WW,Bu,1843,9,398,43.5,20,1,29.05982906,105,32.90,116,32.90,0.00
WW,Bu,1844,2,539,37.5,20,1,29.65811966,105,33.80,116,33.80,0.00
WW,Bu,1844,3,379.5,67,20,1,29.65811966,105,34.20,116,34.20,0.00
WW,Bu,1844,4,389,21,20,1,29.65811966,105,33.40,116,33.40,0.00
WW,Bu,1844,6,482,31,20,1,29.65811966,105,33.90,116,33.90,0.00
WW,Bu,1844,7,613,35.5,20,1,29.65811966,105,34.10,116,34.10,0.00
WW,Bu,1844,8,397.5,37.5,20,1,29.65811966,105,31.60,116,31.60,0.00
WW,Bu,1859,7,430,20.5,20,1,38.63247863,135,29.40,146,29.40,0.00
WW,Bu,1859,8,615.5,33.5,20,1,38.63247863,135,34.60,146,34.60,0.00
WW,Bu,1859,10,486.5,47,20,1,38.63247863,135,37.50,146,37.50,0.00
WW,Bu,1861,1,412.5,38,23,2,18.11965812,145,27.70,156,27.70,0.00
WW,Bu,1861,4,627.5,50,23,2,18.11965812,145,29.50,156,29.50,0.00
WW,Bu,1862,1,578,66.5,20,1,29.14529915,145,29.70,156,29.70,0.00
WW,Bu,1862,4,465.5,28.5,20,1,29.14529915,145,28.00,156,28.00,0.00
WW,Bu,1862,5,587,32,20,1,29.14529915,145,28.30,156,28.30,0.00
WW,Bu,1862,9,415,4,20,1,29.14529915,145,21.00,156,21.00,0.00
WW,Bu,1862,10,471.5,45.5,20,1,29.14529915,145,26.00,156,26.00,0.00
WW,Bu,1863,1,770,24,20,1,39.23076923,135,28.00,146,28.00,0.00
WW,Bu,1863,2,674.5,9,20,1,39.23076923,135,26.20,146,26.20,0.00
WW,Bu,1863,5,641.5,21,20,1,39.23076923,135,25.90,146,25.90,0.00
WW,Bu,1863,7,500.5,15.5,20,1,39.23076923,135,26.70,146,26.70,0.00
WW,Bu,1863,8,417.5,41,20,1,39.23076923,135,26.30,146,26.30,0.00
WW,Bu,1863,9,456.5,23,20,1,39.23076923,135,29.40,146,29.40,0.00
WW,Bu,1863,10,519.5,12.5,20,1,39.23076923,135,25.50,146,25.50,0.00
WW,Bu,1863,11,367.5,29.5,20,1,39.23076923,135,14.50,146,14.50,0.00
SZ,Bu,2100,2,369,60,28,2,34.74358974,50,27.00,61,27.00,0.00
SZ,Bu,2100,10,382.5,43.5,28,2,34.74358974,50,26.60,61,26.60,0.00
SZ,Bu,2106,1,375,55.5,20,1,41.4957265,100,35.00,111,35.00,0.00
SZ,Bu,2106,5,425,32.5,20,1,41.4957265,100,37.50,111,37.50,0.00
SZ,Bu,2106,14,583,46,20,1,41.4957265,100,38.30,111,38.30,0.00
SZ,Bu,2120,1,414,30,20,1,40.34188034,100,34.10,111,34.10,0.00
SZ,Bu,2120,3,338.5,24,20,1,40.34188034,100,31.90,111,31.90,0.00
SZ,Bu,2120,5,453.5,40.5,20,1,40.34188034,100,31.50,111,31.50,0.00
SZ,Bu,2120,6,297,14.5,20,1,40.34188034,100,29.50,111,29.50,0.00
SZ,Bu,2120,12,551.5,49,20,1,40.34188034,100,30.00,111,30.00,0.00
SZ,Bu,2120,15,476,30,20,1,40.34188034,100,29.90,111,29.90,0.00
SZ,Bu,2120,18,516,17,20,1,40.34188034,100,31.50,111,31.50,0.00
HEV,Bu,10183,1,295.5,39,41,2,25.21367521,88,29.80,99,29.80,0.00
HEV,Bu,10183,3,310,44.5,41,2,25.21367521,88,27.40,99,27.40,0.00
HEV,Bu,10183,5,543.5,35,41,2,25.21367521,88,34.20,99,34.20,0.00
HEV,Bu,10184,8,283,40,20,1,38.07692308,118,26.30,129,26.30,0.00
HEV,Bu,10193,3,271,40.5,22,2,29.91452991,50,27.00,61,27.00,0.00
HEV,Bu,10193,4,332,61.5,22,2,29.91452991,50,28.80,61,28.80,0.00
HEV,Bu,10193,11,216,17,22,2,29.91452991,50,22.70,61,22.70,0.00
HEV,Bu,10196,1,385,80.5,12,2,18.67521368,63,29.00,74,29.00,0.00
HEV,Bu,10196,4,416,79.5,12,2,18.67521368,63,27.70,74,27.70,0.00
HEV,Bu,10203,2,477.5,37,20,1,20.81196581,128,34.00,139,34.00,0.00
HEV,Bu,10203,3,557.5,37.5,20,1,20.81196581,128,34.20,139,34.20,0.00
HEV,Bu,10205,14,307.5,53.5,20,1,22.73504274,63,25.40,74,25.40,0.00
HEV,Bu,10222,5,374.5,44,24,2,33.58974359,123,28.80,134,28.80,0.00
HEV,Bu,10222,9,387.5,37.5,24,2,33.58974359,123,28.50,80,28.50,0.00
HEV,Bu,10223,2,557.5,44,20,1,21.06837607,123,33.00,134,33.00,0.00
HEV,Bu,10223,3,490.5,36.5,20,1,21.06837607,123,35.80,134,35.80,0.00
HEV,Bu,10223,5,302,57,20,1,21.06837607,123,26.80,134,26.80,0.00
HEV,Bu,10223,6,362,46,20,1,21.06837607,123,32.80,134,32.80,0.00
HEV,Bu,10224,1,502,37,20,1,39.01709402,123,38.80,134,38.80,0.00
HEV,Bu,10224,6,318,32,20,1,39.01709402,123,29.30,134,29.30,0.00
HEV,Bu,10224,7,590.5,54.5,20,1,39.01709402,123,35.20,134,35.20,0.00
HEV,Bu,10224,10,529.5,35.5,20,1,39.01709402,123,35.40,134,35.40,0.00
HEV,Bu,10230,6,506.5,24.5,20,1,36.41025641,123,35.20,134,35.20,0.00
HEV,Bu,10230,10,544.5,60.5,20,1,36.41025641,123,37.00,134,37.00,0.00
HEV,Bu,10233,1,519,59.5,20,1,35.55555556,113,34.70,124,34.70,0.00
HEV,Bu,10233,4,615,46,20,1,35.55555556,113,35.10,124,35.10,0.00
HEV,Bu,10233,5,737,31,20,1,35.55555556,113,37.50,124,37.50,0.00
HEV,Bu,10234,2,222,73.5,21,2,25.85470085,113,21.70,124,21.70,0.00
WW,Bu,374,1,253,77,20,1,20.85470085,128,28.00,139,28.01,0.01
WW,Bu,440,4,337.5,46,25,2,22.00854701,81,30.40,92,30.41,0.01
HEV,Bu,10226,5,200,14,20,1,37.13675214,113,24.60,124,24.64,0.04
WW,Bu,299,9,430,42,23,2,37.77777778,98,30.70,109,30.74,0.04
WW,Bu,373,6,225,21,22,2,30,83,21.10,94,21.15,0.05
WW,Bu,177,19,335.5,9,21,2,36.62393162,108,23.10,119,23.18,0.08
WW,Bu,42,2,563.5,95.5,20,1,31.36752137,138,34.90,149,35.00,0.10
WW,Bu,161,3,503.5,57.5,20,1,25.21367521,103,32.90,114,33.00,0.10
WW,Bu,570,8,348.5,19,20,1,34.87179487,98,32.50,109,32.60,0.10
WW,Bu,607,7,502,71.5,21,2,29.87179487,103,35.90,114,36.00,0.10
WW,Bu,1836,9,435.5,48.5,20,1,46.36752137,100,34.00,111,34.10,0.10
WW,Bu,295,14,83,47,20,1,7.692307692,28,10.30,39,10.40,0.10
WW,Bu,37,7,660.5,47,20,1,41.66666667,103,27.40,114,27.50,0.10
WW,Bu,1832,17,357.5,65.5,20,1,42.94871795,75,28.80,86,28.90,0.10
WW,Bu,1836,12,418,43.5,20,1,46.36752137,100,33.60,111,33.70,0.10
HEV,Bu,10221,9,171,31,20,1,35.76923077,113,22.30,124,22.43,0.13
WW,Bu,373,8,244,26,22,2,30,83,21.70,94,21.84,0.14
WW,Bu,523,8,359,42,20,1,26.32478632,100,31.10,111,31.26,0.16
WW,Bu,383,5,409,58.5,20,1,18.8034188,133,29.80,144,29.97,0.17
SZ,Bu,2120,8,301.5,18.5,20,1,40.34188034,100,28.50,111,28.68,0.18
WW,Bu,529,1,437.5,15,20,1,53.88888889,123,33.50,134,33.68,0.18
SZ,Bu,2120,9,405,20,20,1,40.34188034,100,30.90,111,31.10,0.20
HEV,Bu,10195,5,431,38,21,2,35.08547009,123,35.40,134,35.60,0.20
WW,Bu,295,11,76,45,20,1,7.692307692,28,10.00,39,10.20,0.20
WW,Bu,47,1,465.5,28.5,20,1,21.96581197,103,34.80,114,35.00,0.20
WW,Bu,110,15,246,6,21,2,44.1025641,93,18.90,104,19.10,0.20
WW,Bu,126,3,542,38,22,2,17.17948718,103,34.80,114,35.00,0.20
WW,Bu,137,10,369,57.5,20,1,18.07692308,103,27.30,114,27.50,0.20
WW,Bu,162,9,417.5,20,21,2,24.87179487,78,26.80,89,27.00,0.20
WW,Bu,163,4,326,42,20,1,31.96581197,78,29.30,89,29.50,0.20
WW,Bu,296,5,270,74.5,25,2,11.06837607,28,21.80,39,22.00,0.20
WW,Bu,298,4,422.5,37.5,20,1,23.24786325,98,33.80,109,34.00,0.20
WW,Bu,325,8,567.5,48.5,21,2,45.17094017,128,34.80,139,35.00,0.20
WW,Bu,512,2,592,74,20,1,21.79487179,120,37.60,131,37.80,0.20
WW,Bu,527,2,546,27,20,1,22.09401709,120,35.80,131,36.00,0.20
WW,Bu,580,3,424.5,41.5,20,1,46.02564103,96,36.00,107,36.20,0.20
WW,Bu,607,2,336.5,59.5,21,2,29.87179487,103,26.30,114,26.50,0.20
WW,Bu,650,3,325.5,54,20,1,29.7008547,68,26.80,76,27.00,0.20
WW,Bu,650,10,316.5,65,20,1,29.7008547,68,26.80,76,27.00,0.20
HEV,Bu,10234,4,278,102,21,2,25.85470085,113,22.80,124,23.00,0.20
HEV,Bu,10221,4,456.5,26.5,20,1,35.76923077,113,30.50,124,30.70,0.20
HEV,Bu,10204,11,432.5,39.5,23,2,24.05982906,63,27.00,74,27.21,0.21
SZ,Bu,2120,7,388.5,22.5,20,1,40.34188034,100,30.60,111,30.83,0.23
WW,Bu,177,13,355.5,18.5,21,2,36.62393162,108,23.50,119,23.77,0.27
WW,Bu,523,9,436,57.5,20,1,26.32478632,100,32.60,111,32.87,0.27
WW,Bu,580,11,414.5,40.5,20,1,46.02564103,96,34.90,107,35.19,0.29
SZ,Bu,2120,11,402.5,28,20,1,40.34188034,100,30.90,111,31.20,0.30
WW,Bu,398,12,71,4,20,1,10.42735043,25,11.30,35,11.60,0.30
WW,Bu,42,8,402.5,43,20,1,31.36752137,138,31.20,149,31.50,0.30
WW,Bu,137,8,251,39,20,1,18.07692308,103,23.20,114,23.50,0.30
WW,Bu,302,3,384.5,46.5,20,1,13.93162393,98,30.00,109,30.30,0.30
WW,Bu,393,1,301.5,33.5,20,1,39.23076923,83,30.70,94,31.00,0.30
WW,Bu,498,4,512.5,37.5,20,1,25.68376068,88,29.20,99,29.50,0.30
WW,Bu,524,7,396.5,31,20,1,24.91452991,100,32.00,111,32.30,0.30
WW,Bu,528,2,602,63.5,64,2,29.27350427,120,32.00,131,32.30,0.30
WW,Bu,530,3,452.5,32,12,2,50.98290598,123,37.80,134,38.10,0.30
WW,Bu,570,11,478.5,51.5,20,1,34.87179487,98,33.70,109,34.00,0.30
WW,Bu,605,2,431.5,60.5,20,1,31.58119658,78,33.70,89,34.00,0.30
WW,Bu,630,10,252,78,20,1,22.77777778,20,21.70,31,22.00,0.30
WW,Bu,1832,11,228,45,20,1,42.94871795,75,25.50,86,25.80,0.30
WW,Bu,1838,16,416,36,20,1,40.04273504,105,31.70,116,32.00,0.30
HEV,Bu,10254,2,291,61,28,2,21.96581197,58,25.70,69,26.00,0.30
WW,Bu,641,6,200,46,20,1,20.47008547,35,14.70,43,15.00,0.30
WW,Bu,567,1,210,38,25,2,24.57264957,55,28.30,66,28.60,0.30
WW,Bu,1832,13,237,44,20,1,42.94871795,75,25.80,86,26.10,0.30
WW,Bu,524,5,537,56.5,20,1,24.91452991,100,33.60,111,33.90,0.30
WW,Bu,300,4,509,32.5,21,2,23.97435897,98,30.10,109,30.40,0.30
SZ,Bu,2107,11,255,15,12,2,16.56455142,50,24.80,61,25.18,0.38
WW,Bu,129,2,447,34.5,21,2,41.28205128,106,30.10,117,30.50,0.40
WW,Bu,171,3,339,24.5,29,2,28.8034188,103,29.10,114,29.50,0.40
WW,Bu,172,4,318.5,23.5,20,1,29.23076923,103,29.60,114,30.00,0.40
WW,Bu,174,9,271,57,20,1,29.14529915,58,26.60,69,27.00,0.40
WW,Bu,455,1,197,43,28,2,26.75213675,60,27.60,71,28.00,0.40
WW,Bu,581,1,572.5,70,20,1,28.71794872,96,31.00,107,31.40,0.40
WW,Bu,591,5,509.5,58,21,2,33.71794872,168,28.10,179,28.50,0.40
HEV,Bu,10193,1,275,51.5,22,2,29.91452991,50,26.60,61,27.00,0.40
HEV,Bu,10200,3,345.5,106,21,2,28.8034188,122,28.60,133,29.00,0.40
HEV,Bu,10226,9,276,12,20,1,37.13675214,113,27.60,124,28.00,0.40
WW,Bu,141,2,478,54,29,2,9.52991453,103,24.80,114,25.20,0.40
WW,Bu,171,10,498,40.5,29,2,28.8034188,103,33.10,114,33.50,0.40
WW,Bu,298,2,510,51,20,1,23.24786325,98,35.10,109,35.50,0.40
WW,Bu,558,6,429,70.5,21,2,43.5042735,158,31.30,169,31.70,0.40
HEV,Bu,10202,7,595,17,25,2,30.42735043,128,36.60,139,37.00,0.40
SZ,Bu,2120,13,431,36.5,20,1,40.34188034,100,31.40,111,31.82,0.42
WW,Bu,177,11,319.5,27.5,21,2,36.62393162,108,22.80,119,23.24,0.44
WW,Bu,177,6,396,31.5,21,2,36.62393162,108,24.20,119,24.66,0.46
SZ,Bu,2120,17,355,33.5,20,1,40.34188034,100,29.90,111,30.38,0.48
WW,Bu,3,1,287,115.5,21,2,12.82051282,123,24.50,134,25.00,0.50
WW,Bu,62,6,72,18,20,1,20.64102564,40,12.80,51,13.30,0.50
WW,Bu,116,5,218,47,22,2,19.82905983,55,23.50,66,24.00,0.50
WW,Bu,142,8,456.5,26,29,2,24.05982906,103,30.50,114,31.00,0.50
WW,Bu,147,8,465,60.5,22,2,15.34188034,78,33.50,89,34.00,0.50
WW,Bu,170,8,492.5,45,20,1,31.62393162,98,29.50,109,30.00,0.50
WW,Bu,174,3,350,32.5,20,1,29.14529915,58,27.50,69,28.00,0.50
WW,Bu,176,6,374,57,20,1,29.48717949,78,29.00,89,29.50,0.50
WW,Bu,324,10,334,61,20,1,23.84615385,56,27.50,67,28.00,0.50
WW,Bu,377,4,107,8,20,1,16.92307692,43,17.50,40,18.00,0.50
WW,Bu,413,4,492.5,30,20,1,14.82905983,138,31.50,149,32.00,0.50
WW,Bu,567,2,331,57,25,2,24.57264957,55,27.20,66,27.70,0.50
WW,Bu,580,1,630.5,55.5,20,1,46.02564103,96,37.50,107,38.00,0.50
WW,Bu,581,4,445,33,20,1,28.71794872,96,28.50,107,29.00,0.50
WW,Bu,586,8,243,20,22,2,34.23076923,55,25.50,66,26.00,0.50
WW,Bu,635,6,309.5,86.5,20,1,27.13675214,68,36.00,79,36.50,0.50
WW,Bu,645,1,522.5,79.5,20,1,17.94871795,108,31.50,119,32.00,0.50
HEV,Bu,10198,2,907,22.5,20,1,36.02564103,158,38.00,169,38.50,0.50
HEV,Bu,10202,5,719.5,50.5,25,2,30.42735043,128,39.50,139,40.00,0.50
HEV,Bu,10250,1,265,38.5,12,2,32.09401709,83,21.50,94,22.00,0.50
WW,Bu,171,11,395.5,35.5,29,2,28.8034188,103,30.80,114,31.32,0.52
WW,Bu,529,6,454,6.5,20,1,53.88888889,123,33.30,134,33.84,0.54
HEV,Bu,10230,9,515.5,20,20,1,36.41025641,123,35.70,134,36.27,0.57
WW,Bu,580,8,387.5,51,20,1,46.02564103,96,34.30,107,34.88,0.58
WW,Bu,35,1,503.5,35.5,20,1,30.5982906,103,32.90,114,33.50,0.60
WW,Bu,616,10,412,56.5,20,1,22.26495726,103,37.40,114,38.00,0.60
WW,Bu,653,5,371.5,55.5,20,1,33.8034188,113,33.40,124,34.00,0.60
WW,Bu,1821,13,551,28.5,22,2,43.41880342,100,32.90,111,33.50,0.60
HEV,Bu,10188,7,496,51.5,20,1,39.35897436,103,35.90,114,36.50,0.60
HEV,Bu,10230,8,411,26,20,1,36.41025641,123,33.40,134,34.00,0.60
WW,Bu,73,3,440,22,20,1,27.17948718,88,31.40,99,32.00,0.60
WW,Bu,171,2,316,19.5,29,2,28.8034188,103,30.40,114,31.00,0.60
WW,Bu,175,5,330,17.5,21,2,25.94017094,108,21.40,119,22.00,0.60
WW,Bu,175,6,257,46.5,21,2,25.94017094,108,16.90,119,17.50,0.60
WW,Bu,373,14,340,41,22,2,30,83,24.40,94,25.00,0.60
WW,Bu,1798,7,303.5,90,23,2,20.51282051,65,13.90,76,14.50,0.60
WW,Bu,1837,16,293,58.5,20,1,37.82051282,100,27.80,111,28.40,0.60
HEV,Bu,10203,5,477.5,42.5,20,1,20.81196581,128,31.00,139,31.60,0.60
HEV,Bu,10237,1,321,73,28,2,20.68376068,53,27.50,64,28.10,0.60
WW,Bu,569,2,497,73.5,20,1,26.41025641,98,34.30,109,34.90,0.60
WW,Bu,393,11,350,60,20,1,39.23076923,83,30.90,94,31.54,0.64
HEV,Bu,10226,1,460.5,23.5,20,1,37.13675214,113,34.00,124,34.68,0.68
WW,Bu,105,19,558.5,11.5,21,2,51.32478632,98,25.20,110,25.90,0.70
WW,Bu,145,4,227,49,21,2,35.2991453,103,18.70,114,19.40,0.70
HEV,Bu,10204,2,388.5,64.5,23,2,24.05982906,63,27.60,74,28.30,0.70
WW,Bu,61,4,234,61,28,2,23.76068376,43,23.30,54,24.00,0.70
WW,Bu,112,4,405.5,49,43,2,31.62393162,58,21.30,69,22.00,0.70
WW,Bu,144,4,510.5,53.5,21,2,21.4957265,103,34.30,114,35.00,0.70
WW,Bu,177,4,403,21.5,21,2,36.62393162,108,26.80,119,27.50,0.70
WW,Bu,608,3,416,51.5,21,2,23.76068376,103,30.30,114,31.00,0.70
WW,Bu,635,2,315,72.5,20,1,27.13675214,68,34.30,79,35.00,0.70
WW,Bu,635,5,296.5,90,20,1,27.13675214,68,32.30,79,33.00,0.70
HEV,Bu,10184,5,619.5,9.5,20,1,38.07692308,118,35.80,129,36.50,0.70
HEV,Bu,10184,6,495.5,30.5,20,1,38.07692308,118,37.30,128,38.00,0.70
HEV,Bu,10194,1,277,49.5,28,2,27.60683761,50,23.30,61,24.00,0.70
WW,Bu,635,13,353,45.5,20,1,27.13675214,68,33.00,79,33.70,0.70
WW,Bu,393,12,391.5,73.5,20,1,39.23076923,83,31.70,94,32.42,0.72
HEV,Bu,10234,10,176,65,21,2,25.85470085,113,18.90,124,19.63,0.73
HEV,Bu,10230,3,505.5,34.5,20,1,36.41025641,123,35.60,134,36.34,0.74
HEV,Bu,10210,10,71,2,28,2,30.68376068,35,11.40,46,12.14,0.74
HEV,Bu,10213,10,229,26,25,2,24.65811966,63,23.00,74,23.77,0.77
WW,Bu,161,5,536.5,36.5,20,1,25.21367521,103,33.20,114,34.00,0.80
WW,Bu,163,12,500.5,43,20,1,31.96581197,78,31.20,89,32.00,0.80
WW,Bu,171,5,443.5,19.5,29,2,28.8034188,103,29.20,114,30.00,0.80
WW,Bu,300,9,376.5,60,21,2,23.97435897,98,28.20,109,29.00,0.80
WW,Bu,464,10,471.5,80.5,12,2,44.82905983,163,31.20,174,32.00,0.80
WW,Bu,504,3,208,98,20,1,19.78632479,110,20.50,121,21.30,0.80
WW,Bu,523,7,381,61.5,20,1,26.32478632,100,30.20,111,31.00,0.80
WW,Bu,523,10,502.5,75.5,20,1,24.91452991,100,31.80,111,32.60,0.80
WW,Bu,574,2,158,14,21,2,27.60683761,55,22.50,66,23.30,0.80
WW,Bu,605,14,506,101,20,1,31.58119658,78,33.20,89,34.00,0.80
WW,Bu,1814,4,652.5,41,21,2,40.8974359,100,31.70,111,32.50,0.80
HEV,Bu,10230,7,453,26,20,1,36.41025641,123,35.00,134,35.80,0.80
WW,Bu,62,1,80,19,20,1,20.64102564,40,14.20,51,15.00,0.80
WW,Bu,383,7,479.5,52,20,1,18.8034188,133,30.10,144,30.97,0.87
WW,Bu,653,4,675,85,20,1,33.8034188,113,35.40,124,36.30,0.90
HEV,Bu,10230,2,436,33,20,1,36.41025641,123,34.70,134,35.60,0.90
WW,Bu,124,6,415.5,8.5,22,2,27.73504274,98,20.60,109,21.50,0.90
WW,Bu,146,1,428,53.5,28,2,18.97435897,78,28.10,89,29.00,0.90
WW,Bu,170,1,536,51.5,20,1,31.62393162,98,30.10,109,31.00,0.90
WW,Bu,287,15,257,45,12,2,46.96581197,103,25.20,114,26.10,0.90
SZ,Bu,2105,7,262,11,25,2,43.03418803,100,29.90,111,30.80,0.90
WW,Bu,524,3,468,40.5,20,1,24.91452991,100,33.00,111,33.90,0.90
WW,Bu,570,6,562,50,20,1,34.87179487,98,34.00,109,34.90,0.90
WW,Bu,650,2,224,42,20,1,29.7008547,68,26.30,76,27.20,0.90
WW,Bu,529,9,523.5,24,20,1,53.88888889,123,34.40,134,35.30,0.90
HEV,Bu,10226,10,352,27,20,1,37.13675214,113,29.80,124,30.72,0.92
WW,Bu,398,14,92,1,20,1,10.42735043,25,12.30,35,13.28,0.98
WW,Bu,62,10,70,24,20,1,20.64102564,40,12.60,51,13.60,1.00
WW,Bu,142,5,392.5,25.5,29,2,24.05982906,103,32.00,114,33.00,1.00
WW,Bu,162,1,270,10,21,2,24.87179487,78,21.00,89,22.00,1.00
WW,Bu,171,8,524.5,31,29,2,28.8034188,103,33.00,114,34.00,1.00
WW,Bu,176,1,383,62.5,20,1,29.48717949,78,29.00,89,30.00,1.00
WW,Bu,176,12,408,56.5,20,1,29.48717949,78,28.50,89,29.50,1.00
WW,Bu,523,6,365,39,20,1,26.32478632,100,31.50,111,32.50,1.00
WW,Bu,579,1,588,62.5,20,1,31.4957265,98,33.50,109,34.50,1.00
WW,Bu,579,3,520,36,20,1,31.4957265,98,34.00,109,35.00,1.00
WW,Bu,579,4,576.5,46.5,20,1,31.4957265,96,35.00,107,36.00,1.00
WW,Bu,579,5,545,66.5,20,1,31.4957265,96,35.00,107,36.00,1.00
WW,Bu,580,6,533,39.5,20,1,46.02564103,96,34.50,107,35.50,1.00
WW,Bu,587,4,798.5,94.5,20,1,29.18803419,168,34.10,179,35.10,1.00
WW,Bu,602,7,730.5,122.5,21,2,31.1965812,123,36.50,134,37.50,1.00
WW,Bu,605,4,447,53,20,1,31.58119658,78,33.50,89,34.50,1.00
WW,Bu,643,13,244,60,29,2,25.12820513,35,17.50,43,18.50,1.00
WW,Bu,668,4,403,44.5,24,2,25.94017094,110,24.00,121,25.00,1.00
WW,Bu,668,15,485.5,54,24,2,25.94017094,110,24.30,121,25.30,1.00
WW,Bu,1791,5,518.5,80.5,23,2,33.41880342,100,27.40,111,28.40,1.00
WW,Bu,1808,1,205,20,20,1,25.76923077,45,18.50,56,19.50,1.00
WW,Bu,1830,2,266,32.5,20,1,19.65811966,100,22.50,111,23.50,1.00
WW,Bu,1831,5,452,33,20,1,33.20512821,110,31.50,121,32.50,1.00
WW,Bu,1831,9,448.5,27,20,1,33.20512821,110,33.00,121,34.00,1.00
HEV,Bu,10187,7,368,26,25,2,26.79487179,103,29.00,114,30.00,1.00
HEV,Bu,10200,1,340.5,72,21,2,28.8034188,122,28.00,133,29.00,1.00
HEV,Bu,10202,2,350.5,23,25,2,30.42735043,128,30.00,139,31.00,1.00
HEV,Bu,10203,4,397.5,20,20,1,20.81196581,128,27.00,139,28.00,1.00
HEV,Bu,10204,3,407.5,89,23,2,24.05982906,63,27.80,74,28.80,1.00
HEV,Bu,10205,6,262,40,20,1,22.73504274,63,26.00,74,27.00,1.00
HEV,Bu,10213,9,393.5,47.5,25,2,24.65811966,63,26.00,74,27.00,1.00
WW,Bu,1739,1,485.5,133.5,80,2,21.45299145,40,19.40,51,20.40,1.00
WW,Bu,635,14,344,62,20,1,27.13675214,68,32.80,79,33.83,1.03
WW,Bu,1821,9,458.5,43,22,2,43.41880342,100,31.80,111,32.86,1.06
WW,Bu,67,19,220,39,22,2,11.83760684,43,18.40,54,19.50,1.10
WW,Bu,110,19,215,36,21,2,44.1025641,93,18.00,104,19.10,1.10
WW,Bu,134,11,213,26,33,2,30.38461538,83,20.90,94,22.00,1.10
WW,Bu,135,5,443.5,58.5,29,2,25.5982906,83,28.40,94,29.50,1.10
WW,Bu,180,6,770.5,66,23,2,58.37606838,108,29.40,119,30.50,1.10
WW,Bu,617,5,249,36,20,1,25.2991453,103,24.90,114,26.00,1.10
HEV,Bu,10203,1,367,38,20,1,20.81196581,128,30.90,139,32.00,1.10
WW,Bu,566,5,526.5,81.5,21,2,41.32478632,158,31.00,169,32.10,1.10
WW,Bu,630,8,161,46,20,1,22.77777778,20,19.80,31,20.90,1.10
WW,Bu,176,8,360.5,29.5,20,1,29.48717949,78,27.80,89,28.92,1.12
WW,Bu,176,5,331.5,27,20,1,29.48717949,78,27.20,89,28.34,1.14
WW,Bu,451,8,319.5,13.5,21,2,51.88034188,128,25.10,139,26.24,1.14
WW,Bu,630,15,170,53,20,1,22.77777778,20,20.00,31,21.17,1.17
HEV,Bu,10213,8,337,60.5,25,2,24.65811966,63,25.30,74,26.48,1.18
WW,Bu,635,8,318.5,62.5,20,1,27.13675214,68,32.20,79,33.38,1.18
HEV,Bu,10213,7,273,48.5,25,2,24.65811966,63,24.10,74,25.28,1.18
WW,Bu,73,8,402.5,18,20,1,27.17948718,88,30.80,99,32.00,1.20
WW,Bu,73,10,447.5,36.5,20,1,27.17948718,88,31.00,99,32.20,1.20
WW,Bu,73,12,310,28.5,20,1,27.17948718,88,28.30,99,29.50,1.20
WW,Bu,74,12,516.5,60.5,21,2,21.66666667,88,30.30,99,31.50,1.20
WW,Bu,114,2,422.5,83,28,2,33.07692308,58,25.80,69,27.00,1.20
WW,Bu,174,2,389.5,68,20,1,29.14529915,58,27.80,69,29.00,1.20
WW,Bu,384,1,602,179,20,1,5.683760684,133,31.80,140,33.00,1.20
WW,Bu,412,9,481,20.5,21,2,29.44444444,138,31.30,149,32.50,1.20
WW,Bu,578,1,504,53.5,20,1,31.32478632,98,33.80,109,35.00,1.20
WW,Bu,579,7,545,86.5,20,1,31.4957265,96,33.00,107,34.20,1.20
WW,Bu,581,3,381,41,20,1,28.71794872,96,32.80,107,34.00,1.20
WW,Bu,601,1,365.5,39.5,21,2,22.77777778,123,32.80,134,34.00,1.20
WW,Bu,635,10,426,92,20,1,27.13675214,68,32.80,79,34.00,1.20
WW,Bu,650,7,478,85,20,1,29.7008547,68,27.80,76,29.00,1.20
WW,Bu,1736,3,296,162,36,2,23.46153846,45,22.80,56,24.00,1.20
WW,Bu,1790,5,339.5,47,20,1,27.64957265,100,25.80,111,27.00,1.20
WW,Bu,1790,6,373.5,75,20,1,27.64957265,100,23.80,111,25.00,1.20
WW,Bu,1835,8,696.5,87,12,2,26.02564103,100,32.80,111,34.00,1.20
WW,Bu,1836,13,344.5,42.5,20,1,46.36752137,100,32.00,111,33.20,1.20
HEV,Bu,10188,1,493.5,59.5,20,1,39.35897436,103,34.80,114,36.00,1.20
HEV,Bu,10202,3,321.5,32.5,25,2,30.42735043,128,30.80,139,32.00,1.20
HEV,Bu,10235,4,296,54.5,31,2,25.98290598,113,23.80,124,25.00,1.20
WW,Bu,397,13,94,10,20,1,17.94871795,25,11.80,36,13.01,1.21
WW,Bu,567,5,372.5,61.5,25,2,24.57264957,55,28.40,66,29.62,1.22
WW,Bu,176,7,338.5,34.5,20,1,29.48717949,78,27.40,89,28.62,1.22
WW,Bu,397,8,90,10,20,1,17.94871795,25,11.60,36,12.82,1.22
WW,Bu,176,13,345,35,20,1,29.48717949,78,27.50,89,28.74,1.24
WW,Bu,567,9,368,89.5,25,2,24.57264957,55,28.60,66,29.87,1.27
WW,Bu,451,2,352.5,21.5,21,2,51.88034188,128,26.00,139,27.30,1.30
WW,Bu,62,9,102,41,20,1,20.64102564,40,15.00,51,16.30,1.30
WW,Bu,137,9,375.5,38,20,1,18.07692308,103,25.70,114,27.00,1.30
WW,Bu,144,2,534,40.5,21,2,21.4957265,103,34.20,114,35.50,1.30
WW,Bu,177,9,375,26.5,21,2,36.62393162,108,21.70,119,23.00,1.30
WW,Bu,575,5,328.5,89.5,25,2,23.29059829,55,26.50,66,27.80,1.30
WW,Bu,1790,7,309,39,20,1,27.64957265,100,24.20,111,25.50,1.30
WW,Bu,1806,7,317,66,28,2,41.15384615,55,27.70,66,29.00,1.30
WW,Bu,1821,10,518.5,61,22,2,43.41880342,100,32.70,111,34.00,1.30
HEV,Bu,10183,8,528.5,26.5,41,2,25.21367521,88,31.70,99,33.00,1.30
HEV,Bu,10188,2,552,35.5,20,1,39.35897436,103,33.70,114,35.00,1.30
HEV,Bu,10205,1,350.5,81,20,1,22.73504274,63,24.70,74,26.00,1.30
HEV,Bu,10229,5,437,21.5,21,2,64.44444444,113,23.70,124,25.00,1.30
HEV,Bu,10235,9,437.5,36,31,2,25.98290598,113,30.70,124,32.00,1.30
WW,Bu,62,7,131,53,20,1,20.64102564,40,16.40,51,17.70,1.30
WW,Bu,451,3,390,16,21,2,51.88034188,128,26.70,139,28.00,1.30
WW,Bu,630,13,214,75,20,1,22.77777778,20,20.70,31,22.00,1.30
HEV,Bu,10221,7,446,47.5,20,1,35.76923077,113,29.50,124,30.86,1.36
WW,Bu,397,9,83,14,20,1,17.94871795,25,11.30,36,12.68,1.38
HEV,Bu,10226,3,419,38,20,1,37.13675214,113,32.80,124,34.19,1.39
WW,Bu,1821,6,389.5,56.5,22,2,43.41880342,100,30.60,111,31.99,1.39
WW,Bu,73,2,455,46.5,20,1,27.17948718,88,30.60,99,32.00,1.40
WW,Bu,123,12,373,89.5,20,1,25.34188034,63,24.60,74,26.00,1.40
WW,Bu,274,3,428,41,21,2,36.45299145,118,30.60,129,32.00,1.40
WW,Bu,298,3,365.5,57.5,20,1,23.24786325,98,31.90,109,33.30,1.40
WW,Bu,630,1,222,73,20,1,22.77777778,20,22.10,31,23.50,1.40
WW,Bu,643,12,212,100.5,29,2,25.12820513,35,16.60,43,18.00,1.40
WW,Bu,1790,8,359,37.5,20,1,27.64957265,100,24.60,111,26.00,1.40
WW,Bu,1845,4,276,96,23,2,9.615384615,28,23.60,39,25.00,1.40
HEV,Bu,10240,2,351.5,22.5,22,2,29.18803419,113,27.60,124,29.00,1.40
WW,Bu,529,2,541,40.5,20,1,53.88888889,123,36.00,134,37.40,1.40
WW,Bu,1790,12,346,30.5,20,1,27.64957265,100,24.30,111,25.70,1.40
WW,Bu,1821,12,499.5,45.5,22,2,43.41880342,100,32.10,111,33.50,1.40
WW,Bu,635,7,318.5,77,20,1,27.13675214,68,32.20,79,33.65,1.45
WW,Bu,635,12,316,82,20,1,27.13675214,68,32.20,79,33.69,1.49
WW,Bu,37,8,472.5,55.5,20,1,41.66666667,103,23.50,114,25.00,1.50
WW,Bu,112,6,712.5,49.5,43,2,31.62393162,100,20.00,111,21.50,1.50
WW,Bu,121,8,328.5,52.5,22,2,13.20512821,63,23.50,74,25.00,1.50
WW,Bu,126,5,302.5,67.5,22,2,17.17948718,103,30.00,114,31.50,1.50
WW,Bu,134,3,306.5,39.5,33,2,30.38461538,83,24.50,94,26.00,1.50
WW,Bu,135,16,319,95,29,2,25.5982906,83,28.50,94,30.00,1.50
WW,Bu,148,2,311.5,68.5,21,2,10.55555556,78,26.50,89,28.00,1.50
WW,Bu,150,4,250,31,23,2,36.75213675,113,23.00,124,24.50,1.50
WW,Bu,270,8,401,95.5,52,2,39.91452991,57,26.50,68,28.00,1.50
WW,Bu,432,7,392.5,27.5,20,1,11.66666667,98,32.50,109,34.00,1.50
WW,Bu,543,4,355.5,37,24,2,13.71794872,173,24.50,184,26.00,1.50
WW,Bu,552,7,671.5,82,20,1,32.73504274,88,30.20,99,31.70,1.50
WW,Bu,585,10,404.5,41.5,22,2,25.08547009,55,25.40,66,26.90,1.50
WW,Bu,603,4,396,46.5,12,2,49.14529915,118,26.50,129,28.00,1.50
WW,Bu,614,7,384.5,149,23,2,19.87179487,78,26.70,89,28.20,1.50
WW,Bu,630,5,260,66.5,20,1,22.77777778,20,22.00,31,23.50,1.50
WW,Bu,631,10,394,70,21,2,32.64957265,40,27.50,51,29.00,1.50
WW,Bu,650,4,180,19,20,1,29.7008547,68,23.50,76,25.00,1.50
WW,Bu,1821,3,441,52,22,2,43.41880342,100,31.50,111,33.00,1.50
WW,Bu,1823,10,295,84,12,2,27.22222222,110,23.50,121,25.00,1.50
WW,Bu,1831,1,451.5,14.5,20,1,33.20512821,110,31.00,121,32.50,1.50
WW,Bu,449,10,598.5,92.5,20,1,25.68376068,103,31.40,114,32.90,1.50
HEV,Bu,10226,11,573,41.5,20,1,37.13675214,113,35.00,124,36.52,1.52
WW,Bu,42,1,298.5,52,20,1,31.36752137,138,27.50,149,29.02,1.52
WW,Bu,403,5,86,22,20,1,5.726495726,28,11.00,35,12.53,1.53
WW,Bu,61,15,107,5,28,2,23.76068376,43,16.40,54,17.94,1.54
WW,Bu,1861,5,256,94,23,2,18.11965812,145,22.36,156,23.91,1.55
WW,Bu,176,10,332.5,49,20,1,29.48717949,78,27.20,89,28.77,1.57
WW,Bu,451,5,300,31,21,2,51.88034188,128,24.60,139,26.19,1.59
WW,Bu,47,2,571.5,35,20,1,21.96581197,103,32.40,114,34.00,1.60
WW,Bu,50,2,605.5,84,20,1,20.55555556,108,33.40,119,35.00,1.60
HEV,Bu,10184,1,610.5,26,20,1,38.07692308,118,38.40,129,40.00,1.60
WW,Bu,130,6,317,57,25,2,14.1025641,63,25.40,74,27.00,1.60
WW,Bu,177,2,399,31,21,2,36.62393162,108,24.90,119,26.50,1.60
WW,Bu,413,2,325.5,42.5,20,1,14.82905983,138,27.40,149,29.00,1.60
WW,Bu,513,6,430.5,88.5,20,1,8.931623932,90,31.60,101,33.20,1.60
WW,Bu,1821,1,498.5,53.5,22,2,43.41880342,100,31.90,111,33.50,1.60
WW,Bu,1840,4,200,19,20,1,33.20512821,100,20.90,111,22.50,1.60
HEV,Bu,10234,8,166,83,21,2,25.85470085,113,18.30,124,19.91,1.61
HEV,Bu,10200,5,541.5,11,21,2,28.8034188,122,30.80,133,32.41,1.61
WW,Bu,176,15,358,57,20,1,29.48717949,78,27.70,89,29.33,1.63
WW,Bu,34,17,166,104,22,2,16.58119658,43,17.20,54,18.89,1.69
WW,Bu,1806,5,210,12,28,2,41.15384615,55,21.10,66,22.80,1.70
WW,Bu,643,1,115,18,29,2,25.12820513,35,14.30,43,16.00,1.70
HEV,Bu,10242,6,218,140.5,25,2,24.95726496,53,11.30,64,13.00,1.70
WW,Bu,1,6,345.5,45.5,21,2,40.85470085,123,27.30,134,29.00,1.70
WW,Bu,3,3,344,64.5,21,2,12.82051282,123,24.30,134,26.00,1.70
WW,Bu,68,1,307.5,35.5,22,2,16.75213675,43,22.30,54,24.00,1.70
WW,Bu,68,12,230,36,22,2,16.75213675,43,18.30,54,20.00,1.70
WW,Bu,107,3,427.5,101.5,29,2,16.70940171,88,30.30,99,32.00,1.70
WW,Bu,110,8,251,36,21,2,44.1025641,93,20.30,104,22.00,1.70
WW,Bu,150,11,286,22.5,23,2,36.75213675,113,26.80,124,28.50,1.70
WW,Bu,298,6,540,51,20,1,23.24786325,98,34.10,109,35.80,1.70
WW,Bu,578,5,515.5,63,20,1,31.32478632,98,34.00,109,35.70,1.70
WW,Bu,580,2,578.5,71.5,20,1,46.02564103,96,39.30,107,41.00,1.70
WW,Bu,627,4,297.5,129,12,2,29.31623932,123,30.30,134,32.00,1.70
WW,Bu,630,16,272,79,20,1,22.77777778,20,21.80,31,23.50,1.70
WW,Bu,1790,1,585,76,20,1,27.64957265,100,27.30,111,29.00,1.70
WW,Bu,1810,8,291,72,12,2,28.24786325,85,21.80,96,23.50,1.70
WW,Bu,1830,1,210,16,20,1,19.65811966,100,22.30,111,24.00,1.70
WW,Bu,1839,10,558,73.5,21,2,35.55555556,105,33.30,116,35.00,1.70
WW,Bu,1839,15,208,20,21,2,35.55555556,105,19.40,116,21.10,1.70
HEV,Bu,10188,4,480.5,51.5,20,1,39.35897436,103,34.30,114,36.00,1.70
HEV,Bu,10202,4,444,19.5,25,2,30.42735043,128,35.30,139,37.00,1.70
HEV,Bu,10225,1,340,67.5,12,2,8.076923077,123,28.40,134,30.10,1.70
HEV,Bu,10237,7,321.5,37,28,2,20.68376068,53,26.30,64,28.00,1.70
HEV,Bu,10254,9,203,50,28,2,21.96581197,58,22.40,69,24.12,1.72
WW,Bu,180,10,208,70,23,2,58.37606838,108,18.25,119,20.00,1.75
HEV,Bu,10226,6,419.5,43,20,1,37.13675214,113,32.50,124,34.29,1.79
WW,Bu,519,18,340,68.5,71,2,16.53846154,60,23.20,71,25.00,1.80
WW,Bu,147,3,372.5,48.5,22,2,15.34188034,78,30.20,89,32.00,1.80
WW,Bu,160,8,511.5,26.5,20,1,27.73504274,103,30.70,114,32.50,1.80
WW,Bu,165,9,209,51,12,2,33.93162393,98,22.20,109,24.00,1.80
WW,Bu,303,9,203,52,21,2,21.62393162,98,21.50,109,23.30,1.80
WW,Bu,563,9,339.5,67,56,2,38.84615385,55,26.10,66,27.90,1.80
WW,Bu,574,7,360,54.5,21,2,27.60683761,55,26.00,66,27.80,1.80
WW,Bu,667,1,326,65,12,2,39.52991453,70,16.20,81,18.00,1.80
WW,Bu,703,2,308.5,52,20,1,24.01709402,100,30.00,111,31.80,1.80
WW,Bu,1790,9,447,55.5,20,1,27.64957265,100,25.70,111,27.50,1.80
WW,Bu,1808,2,147,11,20,1,25.76923077,45,16.20,56,18.00,1.80
WW,Bu,1810,1,250,41.5,12,2,28.24786325,85,17.70,96,19.50,1.80
WW,Bu,1819,17,192,88,23,2,37.73504274,37,16.20,48,18.00,1.80
HEV,Bu,10210,1,122,37,28,2,30.68376068,35,13.20,46,15.00,1.80
SZ,Bu,2117,14,220,47,12,2,24.14012739,80,18.90,91,20.70,1.80
WW,Bu,529,7,550,34,20,1,53.88888889,123,32.20,134,34.10,1.90
WW,Bu,62,8,111,61,20,1,20.64102564,40,15.50,51,17.40,1.90
WW,Bu,87,8,234,41,29,2,50.81196581,50,20.10,61,22.00,1.90
WW,Bu,138,9,269,54.5,12,2,37.00854701,103,22.10,114,24.00,1.90
WW,Bu,552,2,569.5,52,20,1,32.73504274,88,28.50,99,30.40,1.90
WW,Bu,574,5,257,45,21,2,27.60683761,55,24.40,66,26.30,1.90
WW,Bu,630,2,246,92,20,1,22.77777778,20,21.60,31,23.50,1.90
WW,Bu,691,10,137,125,52,2,23.5042735,25,12.30,36,14.20,1.90
WW,Bu,703,7,321,33.5,20,1,24.01709402,100,30.00,111,31.90,1.90
WW,Bu,643,5,104,24,29,2,25.12820513,35,13.70,43,15.60,1.90
WW,Bu,523,4,435.5,60,20,1,26.32478632,100,34.00,111,35.90,1.90
WW,Bu,605,15,523,71.5,20,1,31.58119658,78,33.10,89,35.00,1.90
WW,Bu,617,6,490,66,20,1,25.2991453,103,35.60,114,37.50,1.90
WW,Bu,648,1,210,40,28,2,30.64102564,50,23.80,58,25.70,1.90
WW,Bu,1836,1,550,72,20,1,46.36752137,100,36.10,111,38.00,1.90
WW,Bu,552,5,220,22,20,1,32.73504274,88,23.10,99,25.05,1.95
HEV,Bu,10199,6,282,5,21,2,37.39316239,122,23.80,133,25.76,1.96
WW,Bu,529,11,467.5,58,20,1,50.98290598,123,33.00,134,34.97,1.97
HEV,Bu,10230,5,503.5,26.5,20,1,36.41025641,123,34.20,134,36.18,1.98
WW,Bu,42,4,450.5,19.5,20,1,31.36752137,138,31.00,149,33.00,2.00
WW,Bu,42,5,395.5,52.5,20,1,31.36752137,138,30.00,149,32.00,2.00
WW,Bu,61,8,207,61,28,2,23.76068376,43,21.00,54,23.00,2.00
WW,Bu,114,13,310.5,52,28,2,33.07692308,58,23.00,69,25.00,2.00
WW,Bu,123,11,345.5,44.5,20,1,25.34188034,63,24.00,74,26.00,2.00
WW,Bu,124,3,314,68.5,22,2,27.73504274,98,23.50,109,25.50,2.00
WW,Bu,130,5,182,51,25,2,14.1025641,63,20.50,74,22.50,2.00
WW,Bu,137,5,611,37.5,20,1,18.07692308,103,31.50,114,33.50,2.00
WW,Bu,138,5,630.5,42,12,2,37.00854701,103,31.00,114,33.00,2.00
WW,Bu,287,9,350,47.5,12,2,46.96581197,103,27.00,114,29.00,2.00
WW,Bu,393,2,607.5,62.5,20,1,39.23076923,83,28.00,94,30.00,2.00
WW,Bu,396,5,106,67,20,1,16.06837607,25,13.00,35,15.00,2.00
WW,Bu,434,1,608,52,20,1,11.66666667,143,36.00,154,38.00,2.00
WW,Bu,585,3,311.5,56,22,2,25.08547009,55,27.00,66,29.00,2.00
WW,Bu,668,3,542,51,24,2,25.94017094,110,25.30,121,27.30,2.00
WW,Bu,703,5,386,67,20,1,24.01709402,100,31.00,111,33.00,2.00
WW,Bu,1806,1,332.5,42.5,28,2,41.15384615,55,27.00,66,29.00,2.00
WW,Bu,1807,8,345.5,87,28,2,36.79487179,65,25.00,76,27.00,2.00
WW,Bu,1813,1,222,1,20,1,40.42735043,110,26.00,121,28.00,2.00
WW,Bu,1830,4,433.5,47,20,1,19.65811966,100,31.00,111,33.00,2.00
WW,Bu,1859,3,657.5,54.5,20,1,38.63247863,135,35.00,146,37.00,2.00
HEV,Bu,10192,2,552.5,18.5,20,1,11.32478632,122,32.50,133,34.50,2.00
HEV,Bu,10205,9,353.5,66.5,20,1,22.73504274,63,25.00,74,27.00,2.00
HEV,Bu,10222,10,423,36.5,24,2,33.58974359,123,28.00,80,30.00,2.00
WW,Bu,432,4,568.5,40.5,20,1,28.5042735,98,34.80,109,36.81,2.01
WW,Bu,605,10,431,65,20,1,31.58119658,78,32.10,89,34.11,2.01
HEV,Bu,10205,11,306,90.5,20,1,22.73504274,63,24.90,74,26.91,2.01
HEV,Bu,10205,13,218,62,20,1,22.73504274,63,22.80,74,24.82,2.02
HEV,Bu,10205,8,202,59,20,1,22.73504274,63,22.30,74,24.34,2.04
WW,Bu,1816,3,77,13,20,1,4.700854701,28,7.20,39,9.28,2.08
WW,Bu,617,4,437.5,29.5,20,1,25.2991453,103,35.40,114,37.50,2.10
WW,Bu,121,4,347,62.5,22,2,13.20512821,63,23.90,74,26.00,2.10
WW,Bu,160,7,443.5,19.5,20,1,27.73504274,103,27.90,114,30.00,2.10
WW,Bu,301,3,407.5,42,20,1,21.62393162,98,28.90,109,31.00,2.10
WW,Bu,542,6,363,54.5,20,1,31.70940171,60,26.50,71,28.60,2.10
WW,Bu,574,10,384,81.5,21,2,27.60683761,55,26.50,66,28.60,2.10
HEV,Bu,10240,7,323,37,22,2,29.18803419,113,23.40,124,25.50,2.10
WW,Bu,398,10,96,27,20,1,10.42735043,25,12.50,35,14.62,2.12
WW,Bu,567,11,355.5,90.5,25,2,24.57264957,55,27.60,66,29.75,2.15
HEV,Bu,10210,5,84,20,28,2,30.68376068,35,12.30,46,14.49,2.19
SZ,Bu,2113,6,256,29,29,2,26.51898734,120,25.10,131,27.30,2.20
WW,Bu,62,4,106,75,20,1,20.64102564,40,15.80,51,18.00,2.20
WW,Bu,33,1,245,50,28,2,23.58974359,46,19.80,57,22.00,2.20
WW,Bu,42,3,576.5,57.5,20,1,31.36752137,138,32.80,149,35.00,2.20
WW,Bu,110,6,253,6,21,2,44.1025641,93,17.80,104,20.00,2.20
WW,Bu,317,2,424.5,89.5,21,2,20.94017094,98,29.80,109,32.00,2.20
WW,Bu,528,3,550,69.5,64,2,29.27350427,120,29.50,131,31.70,2.20
WW,Bu,532,10,495.5,11.5,20,1,75.85470085,123,29.00,134,31.20,2.20
WW,Bu,542,2,405,80.5,20,1,31.70940171,60,24.30,71,26.50,2.20
WW,Bu,581,5,439,37,20,1,28.71794872,96,32.50,107,34.70,2.20
WW,Bu,1804,2,225,91,33,2,21.58119658,40,21.80,51,24.00,2.20
WW,Bu,1824,3,141,35,22,2,29.87179487,41,19.80,52,22.00,2.20
WW,Bu,1859,11,319.5,41,20,1,38.63247863,135,24.30,135,26.50,2.20
WW,Bu,1876,9,143,65,87,2,26.92307692,28,16.80,39,19.00,2.20
HEV,Bu,10195,2,486,29,21,2,35.08547009,123,29.80,134,32.00,2.20
HEV,Bu,10202,8,404,11,25,2,30.42735043,128,32.80,139,35.00,2.20
HEV,Bu,10204,6,305,40.5,23,2,24.05982906,63,23.40,74,25.60,2.20
WW,Bu,398,5,106,17,20,1,10.42735043,25,12.40,35,14.62,2.22
HEV,Bu,10210,13,95,21,28,2,30.68376068,35,12.90,46,15.16,2.26
WW,Bu,62,5,87,56,20,1,20.64102564,40,14.00,51,16.30,2.30
WW,Bu,62,15,193,114,20,1,20.64102564,40,18.20,70,20.50,2.30
WW,Bu,114,12,298.5,64,28,2,33.07692308,58,23.00,69,25.30,2.30
WW,Bu,152,1,156,65,12,2,16.11111111,103,18.70,114,21.00,2.30
WW,Bu,262,5,404,11.5,21,2,21.53846154,103,25.20,114,27.50,2.30
HEV,Bu,10188,5,500.5,29.5,20,1,39.35897436,103,33.70,114,36.00,2.30
WW,Bu,62,3,130,76,20,1,20.64102564,40,15.20,51,17.50,2.30
WW,Bu,398,3,107,27,20,1,10.42735043,25,12.70,35,15.00,2.30
WW,Bu,114,9,260,58,28,2,33.07692308,58,22.30,69,24.60,2.30
WW,Bu,1806,15,342,59,28,2,41.15384615,55,28.30,66,30.60,2.30
WW,Bu,9,5,312,19.5,21,2,43.97435897,108,26.60,119,29.00,2.40
WW,Bu,48,1,210,30,21,2,10.04273504,43,19.60,54,22.00,2.40
WW,Bu,114,7,264,57,28,2,33.07692308,58,22.60,69,25.00,2.40
WW,Bu,114,14,272,62.5,28,2,33.07692308,58,22.50,69,24.90,2.40
WW,Bu,396,9,91,27,20,1,16.06837607,25,10.60,35,13.00,2.40
WW,Bu,1806,11,273,57,28,2,41.15384615,55,27.10,66,29.50,2.40
WW,Bu,1806,14,317.5,57.5,28,2,41.15384615,55,27.90,66,30.30,2.40
WW,Bu,1806,18,328.5,65,28,2,41.15384615,55,28.10,66,30.50,2.40
WW,Bu,1850,1,225,36,23,2,18.11965812,50,23.10,61,25.50,2.40
HEV,Bu,10237,4,250,45.5,28,2,20.68376068,53,23.40,64,25.80,2.40
HEV,Bu,10254,3,256,66.5,28,2,21.96581197,58,21.60,69,24.00,2.40
WW,Bu,114,16,290,68.5,28,2,33.07692308,58,22.80,69,25.20,2.40
WW,Bu,126,4,602,68,22,2,17.17948718,103,35.10,114,37.50,2.40
WW,Bu,303,2,264,55,21,2,21.62393162,98,22.80,109,25.20,2.40
WW,Bu,559,4,460.5,101,21,2,20.08547009,158,32.00,169,34.40,2.40
SZ,Bu,2120,2,425,16,20,1,40.34188034,100,33.50,111,35.90,2.40
WW,Bu,432,5,553,39,20,1,28.5042735,98,34.20,109,36.62,2.42
SZ,Bu,2100,13,299,19,28,2,34.74358974,50,24.62,61,27.09,2.47
WW,Bu,34,1,151,59,22,2,16.58119658,43,16.50,54,19.00,2.50
WW,Bu,50,4,541.5,57.5,20,1,20.55555556,108,32.50,119,35.00,2.50
WW,Bu,67,18,210,61,22,2,11.83760684,43,18.00,54,20.50,2.50
WW,Bu,397,7,183,70,20,1,17.94871795,25,13.50,36,16.00,2.50
WW,Bu,452,5,175,48,28,2,18.71794872,60,17.50,71,20.00,2.50
WW,Bu,571,3,234,58.5,24,2,33.37606838,55,26.70,66,29.20,2.50
WW,Bu,585,11,329,60,22,2,25.08547009,55,24.00,66,26.50,2.50
WW,Bu,657,5,300,90.5,12,2,21.88034188,103,27.00,114,29.50,2.50
WW,Bu,697,5,268,78.5,21,2,30.2991453,100,22.50,111,25.00,2.50
WW,Bu,1876,17,128,72,87,2,26.92307692,28,16.50,39,19.00,2.50
HEV,Bu,10187,6,447,25.5,25,2,26.79487179,103,28.50,114,31.00,2.50
HEV,Bu,10192,1,443.5,75,20,1,11.32478632,122,30.50,133,33.00,2.50
HEV,Bu,10225,2,630.5,27.5,12,2,8.076923077,123,36.50,134,39.00,2.50
HEV,Bu,10235,3,271,18,31,2,25.98290598,113,16.50,124,19.00,2.50
WW,Bu,403,4,86,27,20,1,5.726495726,28,10.20,35,12.72,2.52
WW,Bu,398,2,88,41,20,1,10.42735043,25,12.30,35,14.84,2.54
WW,Bu,455,2,245,67.5,28,2,26.75213675,60,27.50,71,30.07,2.57
HEV,Bu,10191,8,298.5,11,21,2,50.2991453,122,26.20,133,28.78,2.58
WW,Bu,604,8,449.5,63.5,33,2,31.70940171,78,34.40,89,37.00,2.60
WW,Bu,1806,12,279,66,28,2,41.15384615,55,27.20,66,29.80,2.60
WW,Bu,33,3,238,32,28,2,23.58974359,46,22.90,57,25.50,2.60
WW,Bu,116,4,232,85.5,22,2,19.82905983,55,23.40,66,26.00,2.60
WW,Bu,521,5,521,32,23,2,26.32478632,120,22.50,131,25.10,2.60
WW,Bu,548,4,80,14,28,2,41.1965812,20,9.50,25,12.10,2.60
WW,Bu,552,8,447,68.5,20,1,32.73504274,88,25.40,99,28.00,2.60
WW,Bu,648,17,259,46,28,2,30.64102564,50,22.10,58,24.70,2.60
WW,Bu,1824,15,274,43,22,2,29.87179487,65,21.40,76,24.00,2.60
SZ,Bu,2105,6,414.5,48,25,2,43.03418803,100,29.10,111,31.70,2.60
HEV,Bu,10216,9,87,23,22,2,21.96581197,20,14.40,31,17.00,2.60
HEV,Bu,10237,5,240,27,28,2,20.68376068,53,25.30,64,27.90,2.60
WW,Bu,398,7,81,50,20,1,10.42735043,25,12.30,35,14.90,2.60
WW,Bu,150,8,218,29,23,2,36.75213675,113,22.90,124,25.54,2.64
WW,Bu,398,4,93,40,20,1,10.42735043,25,12.30,35,14.97,2.67
WW,Bu,648,15,236,46,28,2,30.64102564,50,21.60,58,24.30,2.70
WW,Bu,648,22,218,42,28,2,30.64102564,50,21.20,58,23.90,2.70
WW,Bu,116,11,296,74,22,2,19.82905983,55,25.30,66,28.00,2.70
WW,Bu,162,7,363,48,21,2,24.87179487,78,24.30,89,27.00,2.70
WW,Bu,272,3,388.5,42,21,2,18.8034188,128,28.00,139,30.70,2.70
WW,Bu,541,9,296,88.5,23,2,31.66666667,60,28.50,71,31.20,2.70
WW,Bu,543,3,392.5,72,24,2,13.71794872,173,25.00,184,27.70,2.70
WW,Bu,574,9,349.5,61.5,21,2,27.60683761,55,25.30,66,28.00,2.70
WW,Bu,605,5,534,54.5,20,1,31.58119658,78,32.30,89,35.00,2.70
HEV,Bu,10185,5,653,33.5,20,1,32.94871795,118,35.30,129,38.00,2.70
HEV,Bu,10205,3,295,80,20,1,22.73504274,63,24.30,74,27.00,2.70
HEV,Bu,10237,8,250,78.5,28,2,20.68376068,53,24.90,64,27.60,2.70
WW,Bu,397,14,103,57,20,1,17.94871795,25,12.10,36,14.80,2.70
WW,Bu,397,10,104,57,20,1,17.94871795,25,12.10,36,14.83,2.73
WW,Bu,116,6,231,77,22,2,19.82905983,55,23.50,66,26.28,2.78
SZ,Bu,2100,14,242,39,28,2,34.74358974,50,23.57,61,26.36,2.80
WW,Bu,48,4,252,49,21,2,10.04273504,43,20.20,54,23.00,2.80
WW,Bu,50,1,500.5,71.5,20,1,20.55555556,108,29.20,119,32.00,2.80
WW,Bu,50,3,482,42,20,1,20.55555556,108,32.20,119,35.00,2.80
WW,Bu,60,9,250,68.5,20,1,16.83760684,43,20.20,54,23.00,2.80
WW,Bu,119,3,555,65,29,2,25.04273504,58,28.70,69,31.50,2.80
WW,Bu,270,7,233,60,52,2,39.91452991,57,25.20,68,28.00,2.80
WW,Bu,308,8,202,97,23,2,40.51282051,56,25.20,67,28.00,2.80
WW,Bu,464,2,296,26,12,2,44.82905983,163,25.20,174,28.00,2.80
WW,Bu,552,9,557,78.5,20,1,20.08547009,88,31.50,99,34.30,2.80
WW,Bu,577,8,314,40.5,28,2,29.4017094,98,26.00,109,28.80,2.80
WW,Bu,604,7,460.5,62.5,33,2,31.70940171,78,34.20,89,37.00,2.80
WW,Bu,616,9,474,51.5,20,1,22.26495726,103,36.20,114,39.00,2.80
WW,Bu,1842,10,348,29,12,2,55.85470085,110,22.20,121,25.00,2.80
HEV,Bu,10195,3,503,45.5,21,2,35.08547009,123,30.20,134,33.00,2.80
HEV,Bu,10240,3,375.5,36,22,2,29.18803419,113,26.20,124,29.00,2.80
HEV,Bu,10249,7,275,67.5,20,1,30.04273504,53,28.20,64,31.00,2.80
HEV,Bu,10254,7,233,80,28,2,21.96581197,58,19.70,69,22.50,2.80
WW,Bu,67,9,155,44,22,2,11.83760684,43,15.70,54,18.50,2.80
WW,Bu,396,2,113,20,20,1,16.06837607,25,12.20,35,15.00,2.80
WW,Bu,291,7,285,62,21,2,35.34188034,98,14.90,109,17.70,2.80
WW,Bu,116,12,213,72,22,2,19.82905983,55,23.00,66,25.81,2.81
WW,Bu,1816,4,83,27,20,1,4.700854701,28,7.20,39,10.02,2.82
WW,Bu,529,10,369,23,20,1,53.88888889,123,29.50,134,32.32,2.82
HEV,Bu,10194,12,210,80,28,2,27.60683761,50,21.30,61,24.16,2.86
WW,Bu,437,10,141,32,28,2,16.45299145,48,17.20,59,20.09,2.89
WW,Bu,398,6,98,61,20,1,10.42735043,25,12.80,35,15.69,2.89
WW,Bu,68,5,375,53.5,22,2,16.75213675,43,22.10,54,25.00,2.90
WW,Bu,122,8,278,94,41,2,14.48717949,55,19.10,66,22.00,2.90
WW,Bu,176,4,317,31,20,1,29.48717949,78,26.10,89,29.00,2.90
WW,Bu,291,8,313,53.5,21,2,35.34188034,98,15.10,109,18.00,2.90
WW,Bu,574,13,332,75.5,21,2,27.60683761,55,25.10,66,28.00,2.90
WW,Bu,631,4,265,42.5,21,2,32.64957265,40,26.60,51,29.50,2.90
WW,Bu,1813,5,245,26,20,1,40.42735043,110,25.10,121,28.00,2.90
WW,Bu,574,15,315,68.5,21,2,27.60683761,55,24.80,66,27.70,2.90
SZ,Bu,2108,3,253,48.5,28,2,15.65891473,50,21.30,61,24.20,2.90
HEV,Bu,10243,14,392,85.5,12,2,24.05982906,83,34.50,94,37.40,2.90
WW,Bu,397,18,90,59,20,1,17.94871795,25,11.60,36,14.54,2.94
WW,Bu,11,18,80,18,20,1,17.77777778,28,10.60,39,13.57,2.97
WW,Bu,64,3,123,42,21,2,6.153846154,20,13.50,31,16.50,3.00
WW,Bu,142,6,460.5,30.5,29,2,24.05982906,103,29.50,114,32.50,3.00
WW,Bu,298,5,311.5,30.5,20,1,23.24786325,98,30.50,109,33.50,3.00
WW,Bu,308,1,132,44,23,2,40.51282051,56,18.00,67,21.00,3.00
WW,Bu,403,3,83,38,20,1,5.726495726,28,10.00,35,13.00,3.00
WW,Bu,525,3,246,54.5,27,2,49.7008547,100,17.00,111,20.00,3.00
WW,Bu,574,6,396.5,55,21,2,27.60683761,55,25.50,66,28.50,3.00
WW,Bu,576,10,283,107.5,20,1,17.00854701,55,25.00,66,28.00,3.00
WW,Bu,602,6,372.5,46.5,21,2,31.1965812,123,29.00,134,32.00,3.00
WW,Bu,608,8,399,39,21,2,23.76068376,103,30.00,114,33.00,3.00
WW,Bu,635,1,382.5,46.5,20,1,27.13675214,68,33.00,79,36.00,3.00
WW,Bu,635,9,400,80.5,20,1,27.13675214,68,30.50,79,33.50,3.00
WW,Bu,648,6,337,73,28,2,30.64102564,50,23.00,58,26.00,3.00
WW,Bu,703,3,313,65.5,20,1,24.01709402,100,29.50,111,32.50,3.00
WW,Bu,1808,12,151,32,20,1,25.76923077,45,19.00,56,22.00,3.00
WW,Bu,1850,2,219,32,23,2,18.11965812,50,22.40,61,25.40,3.00
HEV,Bu,10187,8,297,9,25,2,26.79487179,103,28.00,114,31.00,3.00
HEV,Bu,10195,6,255,32,21,2,35.08547009,123,21.00,134,24.00,3.00
HEV,Bu,10200,7,644.5,69,21,2,28.8034188,122,35.00,133,38.00,3.00
WW,Bu,552,4,612,67,20,1,32.73504274,88,30.40,99,33.40,3.00
WW,Bu,397,15,91,61,20,1,17.94871795,25,11.60,36,14.61,3.01
WW,Bu,397,5,108,72,20,1,17.94871795,25,12.20,36,15.22,3.02
WW,Bu,1871,21,87,20,87,2,34.31623932,28,13.20,39,16.25,3.05
HEV,Bu,10219,3,606.5,36.5,20,1,27.17948718,123,35.00,134,38.09,3.09
WW,Bu,532,13,452.5,58.5,20,1,35.64102564,123,28.20,134,31.30,3.10
WW,Bu,542,7,326,85.5,20,1,31.70940171,60,24.60,71,27.70,3.10
WW,Bu,548,1,78,30,28,2,5.683760684,20,9.50,25,12.60,3.10
WW,Bu,574,8,317,87.5,21,2,27.60683761,55,24.90,66,28.00,3.10
WW,Bu,574,11,326,89.5,21,2,27.60683761,55,25.00,66,28.10,3.10
WW,Bu,574,14,256,77.5,21,2,27.60683761,55,23.80,66,26.90,3.10
WW,Bu,1824,4,249,70,22,2,29.87179487,65,20.90,76,24.00,3.10
SZ,Bu,2100,15,348,60.5,28,2,34.74358974,50,25.28,61,28.39,3.10
WW,Bu,340,11,215,15,14,2,30.2991453,93,21.40,60,24.54,3.14
WW,Bu,398,11,86,56,20,1,10.42735043,25,12.10,35,15.24,3.14
WW,Bu,398,1,101,69,20,1,10.42735043,25,12.80,35,15.95,3.15
HEV,Bu,10219,1,475.5,67,20,1,27.17948718,123,33.60,134,36.75,3.15
WW,Bu,1810,7,202,52,12,2,28.24786325,85,17.90,96,21.08,3.18
HEV,Bu,10192,3,467,41,20,1,11.32478632,122,30.60,133,33.80,3.20
WW,Bu,396,1,90,87,20,1,16.06837607,25,11.80,35,15.00,3.20
WW,Bu,1815,17,94,29,20,1,27.86324786,28,12.60,39,15.80,3.20
WW,Bu,1815,18,91,29,20,1,27.86324786,28,12.50,39,15.70,3.20
WW,Bu,56,8,312.5,77.5,29,2,19.82905983,58,24.80,69,28.00,3.20
WW,Bu,59,1,575,28.5,20,1,9.700854701,103,31.80,114,35.00,3.20
WW,Bu,60,2,120,19,20,1,16.83760684,43,16.80,54,20.00,3.20
WW,Bu,106,9,707,68,21,2,25.21367521,93,31.80,104,35.00,3.20
WW,Bu,180,12,435.5,87,23,2,58.37606838,108,22.80,119,26.00,3.20
WW,Bu,437,4,202,77,28,2,14.44444444,48,19.80,59,23.00,3.20
WW,Bu,449,9,392.5,46,20,1,26.02564103,103,26.80,114,30.00,3.20
WW,Bu,451,9,551.5,56.5,21,2,18.71794872,128,27.80,139,31.00,3.20
WW,Bu,580,7,484.5,34,20,1,46.02564103,96,35.00,107,38.20,3.20
WW,Bu,628,4,223,83,22,2,14.23076923,43,24.80,54,28.00,3.20
HEV,Bu,10185,6,794.5,54,20,1,32.94871795,118,37.80,129,41.00,3.20
HEV,Bu,10237,3,150,35,28,2,20.68376068,53,17.80,64,21.00,3.20
HEV,Bu,10210,6,81,38,28,2,30.68376068,35,12.10,46,15.31,3.21
HEV,Bu,10219,5,481,60.5,20,1,27.17948718,123,33.50,134,36.73,3.23
WW,Bu,449,4,434,32,20,1,26.02564103,103,27.20,114,30.44,3.24
WW,Bu,61,12,219,36,28,2,23.76068376,43,20.40,54,23.68,3.28
WW,Bu,567,4,286,85,25,2,24.57264957,55,25.50,66,28.79,3.29
HEV,Bu,10227,1,480,57,20,1,20.12820513,113,32.40,124,35.70,3.30
WW,Bu,1,2,424,75,21,2,40.85470085,123,29.20,134,32.50,3.30
WW,Bu,48,2,207,23,21,2,10.04273504,43,16.70,54,20.00,3.30
WW,Bu,277,5,253,44.5,21,2,26.1965812,128,25.20,139,28.50,3.30
WW,Bu,380,2,588,29.5,20,1,23.84615385,158,36.20,169,39.50,3.30
WW,Bu,525,7,327.5,65.5,27,2,22.09401709,100,26.00,111,29.30,3.30
WW,Bu,648,3,256,90,28,2,30.64102564,50,22.20,58,25.50,3.30
WW,Bu,700,1,273,10,21,2,33.93162393,100,24.50,111,27.80,3.30
WW,Bu,703,1,356,61,20,1,24.01709402,100,30.00,111,33.30,3.30
HEV,Bu,10188,9,476,42.5,20,1,39.35897436,103,28.70,114,32.00,3.30
WW,Bu,40,5,159,25,22,2,12.56410256,20,13.70,31,17.00,3.30
WW,Bu,398,13,75,54,20,1,10.42735043,25,11.50,35,14.84,3.34
WW,Bu,494,11,141,142,28,2,25.68376068,30,13.80,41,17.16,3.36
WW,Bu,26,3,247,58,28,2,21.15384615,43,18.60,54,22.00,3.40
WW,Bu,176,3,313,29.5,20,1,29.48717949,78,26.60,89,30.00,3.40
WW,Bu,542,13,260,118.5,20,1,13.71794872,60,25.00,71,28.40,3.40
WW,Bu,1815,20,88,33,20,1,27.86324786,28,12.30,39,15.70,3.40
SZ,Bu,2122,7,356.5,85.5,53,2,16.34955752,80,25.10,91,28.50,3.40
HEV,Bu,10194,10,220,40,28,2,27.60683761,50,21.10,61,24.50,3.40
HEV,Bu,10226,2,560.5,25,20,1,37.13675214,113,32.70,124,36.17,3.47
WW,Bu,11,7,81,12,20,1,17.77777778,28,10.70,39,14.18,3.48
HEV,Bu,10183,6,252,38,41,2,25.21367521,88,15.30,99,18.80,3.50
WW,Bu,38,1,121,9,20,1,16.28205128,30,11.50,41,15.00,3.50
WW,Bu,60,1,174,66,20,1,16.83760684,43,19.50,54,23.00,3.50
WW,Bu,62,2,112,48,20,1,20.64102564,40,14.50,51,18.00,3.50
WW,Bu,112,3,365.5,86.5,43,2,31.62393162,58,19.50,69,23.00,3.50
WW,Bu,176,2,324.5,40.5,20,1,29.48717949,78,24.50,89,28.00,3.50
WW,Bu,316,5,230,30,21,2,30.5982906,98,17.50,60,21.00,3.50
WW,Bu,528,1,514,36.5,64,2,29.27350427,120,28.50,131,32.00,3.50
WW,Bu,552,1,544,59,20,1,32.73504274,88,30.80,99,34.30,3.50
WW,Bu,571,15,431.5,79.5,24,2,33.37606838,55,28.50,66,32.00,3.50
WW,Bu,585,8,300,61.5,22,2,25.08547009,55,22.00,66,25.50,3.50
WW,Bu,604,5,442.5,75.5,33,2,31.70940171,78,33.50,89,37.00,3.50
WW,Bu,617,8,464.5,58.5,20,1,25.2991453,103,34.00,114,37.50,3.50
WW,Bu,627,3,375,94,12,2,29.31623932,123,30.50,134,34.00,3.50
WW,Bu,628,2,223,84.5,22,2,14.23076923,43,23.50,54,27.00,3.50
WW,Bu,1808,10,125,18,20,1,25.76923077,45,17.50,56,21.00,3.50
WW,Bu,1811,9,297,57,12,2,30.34188034,85,20.50,96,24.00,3.50
SZ,Bu,2106,15,311.5,11,20,1,41.4957265,100,33.30,111,36.80,3.50
HEV,Bu,10187,5,295,46.5,25,2,26.79487179,103,23.50,114,27.00,3.50
HEV,Bu,10195,7,265,56.5,21,2,35.08547009,123,28.50,134,32.00,3.50
HEV,Bu,10205,2,223,47,20,1,22.73504274,63,23.50,74,27.00,3.50
HEV,Bu,10249,2,149,4,20,1,30.04273504,53,21.50,64,25.00,3.50
HEV,Bu,10249,8,269,57,20,1,30.04273504,53,27.50,64,31.00,3.50
WW,Bu,340,6,183,17,14,2,30.2991453,93,20.00,60,23.55,3.55
WW,Bu,1871,7,116,31,87,2,34.31623932,28,14.50,39,18.06,3.56
WW,Bu,344,4,103,69,26,2,20.42735043,28,13.80,38,17.39,3.59
WW,Bu,380,6,407,42,20,1,23.84615385,158,33.40,169,37.00,3.60
WW,Bu,524,1,440.5,43,20,1,24.91452991,100,30.20,111,33.80,3.60
WW,Bu,551,8,232,82.5,13,2,24.91452991,58,22.50,69,26.10,3.60
WW,Bu,576,1,357.5,87.5,20,1,17.00854701,55,25.10,66,28.70,3.60
WW,Bu,602,8,372,68,21,2,31.1965812,123,28.40,134,32.00,3.60
WW,Bu,648,13,343,113.5,28,2,30.64102564,50,22.40,58,26.00,3.60
WW,Bu,1815,24,147,59,20,1,27.86324786,28,14.90,39,18.50,3.60
SZ,Bu,2114,4,459.5,30,22,2,13.46534653,120,22.60,131,26.20,3.60
HEV,Bu,10242,4,349,92.5,25,2,24.95726496,53,11.40,64,15.00,3.60
HEV,Bu,10249,15,307.5,53,20,1,30.04273504,53,26.40,64,30.00,3.60
WW,Bu,437,8,180,85,28,2,14.44444444,48,19.10,59,22.73,3.63
WW,Bu,144,3,456.5,46,21,2,21.4957265,103,32.80,114,36.50,3.70
WW,Bu,166,3,328,56.5,28,2,6.196581197,58,24.30,69,28.00,3.70
WW,Bu,174,12,220,30,20,1,29.14529915,58,22.80,69,26.50,3.70
WW,Bu,648,14,245,112.5,28,2,30.64102564,50,21.80,58,25.50,3.70
WW,Bu,697,7,229,66,21,2,30.2991453,40,19.50,51,23.20,3.70
HEV,Bu,10205,5,249,47,20,1,22.73504274,63,23.30,74,27.00,3.70
WW,Bu,24,10,185,35,22,2,26.53846154,46,18.70,57,22.41,3.71
WW,Bu,556,9,76,43,20,1,5.47008547,30,11.00,41,14.74,3.74
HEV,Bu,10222,6,225,49,24,2,33.58974359,123,22.80,134,26.56,3.76
HEV,Bu,10200,4,446,75.5,21,2,28.8034188,122,28.20,133,31.99,3.79
WW,Bu,56,5,275,72.5,29,2,19.82905983,58,24.20,69,28.00,3.80
WW,Bu,116,3,208,67,22,2,19.82905983,55,23.70,66,27.50,3.80
WW,Bu,519,3,339.5,86.5,71,2,30.64102564,60,23.20,71,27.00,3.80
SZ,Bu,2106,9,318,19,20,1,41.4957265,100,33.50,111,37.30,3.80
SZ,Bu,2106,12,328.5,15.5,20,1,41.4957265,100,33.80,111,37.60,3.80
WW,Bu,355,3,77,3,28,2,5.555555556,35,8.20,30,12.00,3.80
WW,Bu,397,1,80,42,20,1,17.94871795,25,12.20,36,16.00,3.80
WW,Bu,397,3,95,62,20,1,17.94871795,25,12.20,36,16.00,3.80
SZ,Bu,2117,8,194,29,12,2,24.14012739,80,17.60,91,21.48,3.88
WW,Bu,60,3,188,55,20,1,16.83760684,43,19.10,54,23.00,3.90
WW,Bu,60,6,230,70,20,1,16.83760684,43,19.10,54,23.00,3.90
WW,Bu,542,3,260,59.5,20,1,31.70940171,60,25.00,71,28.90,3.90
WW,Bu,631,5,282,69.5,21,2,32.64957265,40,26.60,51,30.50,3.90
WW,Bu,631,6,349,53,21,2,32.64957265,40,26.10,51,30.00,3.90
WW,Bu,697,8,177,32,21,2,30.2991453,40,19.00,51,22.90,3.90
SZ,Bu,2113,7,502,64,29,2,26.51898734,120,28.00,131,31.90,3.90
WW,Bu,1815,14,113,51,20,1,27.86324786,28,13.30,39,17.20,3.90
WW,Bu,1813,10,505.5,56.5,20,1,40.42735043,110,32.10,121,36.00,3.90
WW,Bu,38,7,117,83,20,1,16.28205128,30,11.50,41,15.50,4.00
WW,Bu,61,7,299,75,28,2,23.76068376,43,21.50,54,25.50,4.00
WW,Bu,68,10,165,44,22,2,16.75213675,43,16.00,54,20.00,4.00
WW,Bu,148,1,430.5,60,21,2,10.55555556,78,26.00,89,30.00,4.00
WW,Bu,414,1,80,100,20,1,0.512820513,20,7.00,31,11.00,4.00
WW,Bu,571,6,343.5,70,24,2,33.37606838,55,26.00,66,30.00,4.00
WW,Bu,581,6,476,33.5,20,1,28.71794872,96,31.00,107,35.00,4.00
WW,Bu,596,7,341,105.5,33,2,21.79487179,44,23.00,55,27.00,4.00
WW,Bu,631,16,388.5,126.5,21,2,32.64957265,40,25.00,51,29.00,4.00
WW,Bu,1831,7,570.5,47.5,20,1,33.20512821,110,32.00,121,36.00,4.00
SZ,Bu,2106,13,385.5,18.5,20,1,41.4957265,100,35.30,111,39.30,4.00
HEV,Bu,10188,11,341,12.5,20,1,39.35897436,103,29.50,114,33.50,4.00
HEV,Bu,10219,7,475.5,30.5,20,1,27.17948718,123,34.80,134,38.80,4.00
HEV,Bu,10242,8,478.5,69,25,2,24.95726496,53,19.00,64,23.00,4.00
HEV,Bu,10249,14,264,13,20,1,30.04273504,53,26.30,64,30.32,4.02
WW,Bu,1871,12,123,22,87,2,34.31623932,28,14.70,39,18.73,4.03
WW,Bu,631,11,273,80.5,21,2,32.64957265,40,25.30,51,29.34,4.04
WW,Bu,1871,6,115,44,87,2,34.31623932,28,14.40,39,18.46,4.06
WW,Bu,571,9,310,62.5,24,2,33.37606838,55,26.50,66,30.56,4.06
WW,Bu,1871,18,125,49,87,2,34.31623932,28,14.80,39,18.89,4.09
WW,Bu,571,8,419.5,83.5,24,2,33.37606838,55,28.00,66,32.10,4.10
WW,Bu,574,4,374.5,107,21,2,27.60683761,55,24.70,66,28.80,4.10
WW,Bu,128,1,336.5,106,21,2,21.1965812,106,24.90,117,29.00,4.10
WW,Bu,1815,13,109,34,20,1,27.86324786,28,13.40,39,17.50,4.10
WW,Bu,1815,26,192,61,20,1,27.86324786,28,14.40,39,18.50,4.10
WW,Bu,1871,3,144,46,87,2,34.31623932,28,16.00,39,20.10,4.10
HEV,Bu,10249,1,373.5,73,20,1,30.04273504,53,28.90,64,33.00,4.10
WW,Bu,403,7,91,40,20,1,5.726495726,28,9.20,35,13.31,4.11
WW,Bu,340,2,142,16,14,2,30.2991453,93,17.60,60,21.71,4.11
WW,Bu,1719,12,248,48.5,28,2,31.23931624,42,20.50,53,24.63,4.13
WW,Bu,455,8,249,69,28,2,26.75213675,60,26.00,71,30.20,4.20
WW,Bu,62,12,195,95,20,1,20.64102564,40,15.30,70,19.50,4.20
HEV,Bu,10216,7,139,60,22,2,21.96581197,20,15.80,31,20.00,4.20
WW,Bu,177,5,344,44.5,21,2,36.62393162,108,23.30,119,27.50,4.20
WW,Bu,269,8,394.5,46.5,12,2,33.46153846,57,29.80,68,34.00,4.20
WW,Bu,593,5,223,126.5,88,2,13.16239316,44,20.80,55,25.00,4.20
HEV,Bu,10185,2,668.5,22,20,1,32.94871795,118,33.80,129,38.00,4.20
WW,Bu,61,13,218,89,28,2,23.76068376,43,20.40,54,24.63,4.23
WW,Bu,455,11,372,51,28,2,32.99145299,60,27.80,71,32.04,4.24
WW,Bu,11,16,121,17,20,1,17.77777778,28,12.10,39,16.35,4.25
WW,Bu,638,2,112,56,22,2,7.478632479,20,12.50,31,16.80,4.30
WW,Bu,25,5,217,19,22,2,8.760683761,46,20.70,60,25.00,4.30
WW,Bu,60,8,202,80,20,1,16.83760684,43,18.70,54,23.00,4.30
WW,Bu,269,1,371.5,59.5,12,2,33.46153846,57,29.20,68,33.50,4.30
WW,Bu,581,9,515.5,64,20,1,28.71794872,96,31.20,107,35.50,4.30
WW,Bu,648,7,295,69,28,2,30.64102564,50,21.70,58,26.00,4.30
WW,Bu,1808,13,211,63,20,1,25.76923077,45,19.70,56,24.00,4.30
WW,Bu,1815,25,143,75,20,1,27.86324786,28,14.10,39,18.40,4.30
SZ,Bu,2105,2,299,32.5,25,2,43.03418803,100,28.20,111,32.50,4.30
HEV,Bu,10185,3,508.5,22,20,1,32.94871795,118,33.70,129,38.00,4.30
HEV,Bu,10222,4,462,61,24,2,33.58974359,123,25.70,134,30.00,4.30
WW,Bu,1815,9,122,72,20,1,27.86324786,28,13.70,39,18.00,4.30
WW,Bu,562,8,380.5,70,18,2,35.47008547,88,28.40,99,32.70,4.30
SZ,Bu,2106,10,419,28.5,20,1,41.4957265,100,36.10,111,40.40,4.30
HEV,Bu,10249,9,231,29,20,1,30.04273504,53,25.50,64,29.84,4.34
HEV,Bu,10230,1,513,27,20,1,36.41025641,123,32.00,134,36.34,4.34
HEV,Bu,10216,15,85,28,22,2,21.96581197,20,12.80,31,17.14,4.34
SZ,Bu,2106,17,461,33.5,20,1,41.4957265,100,36.90,111,41.30,4.40
WW,Bu,68,9,210,62,22,2,16.75213675,43,15.60,54,20.00,4.40
WW,Bu,542,10,260,46.5,20,1,31.70940171,60,24.50,71,28.90,4.40
HEV,Bu,10210,16,160,69,28,2,30.68376068,35,16.10,46,20.50,4.40
HEV,Bu,10219,8,338.5,71.5,20,1,27.17948718,123,27.00,134,31.40,4.40
HEV,Bu,10249,6,343.5,74.5,20,1,30.04273504,53,27.60,64,32.00,4.40
WW,Bu,380,8,483.5,55,20,1,23.84615385,158,34.60,169,39.00,4.40
WW,Bu,658,5,337.5,40.5,21,2,22.60683761,123,23.80,134,28.20,4.40
WW,Bu,638,6,77,42,22,2,7.478632479,20,11.00,31,15.41,4.41
WW,Bu,437,2,241,127,28,2,14.44444444,48,19.90,59,24.31,4.41
WW,Bu,571,12,333.5,93.5,24,2,33.37606838,55,26.90,66,31.33,4.43
WW,Bu,455,6,245,80,28,2,26.75213675,60,25.90,71,30.35,4.45
WW,Bu,33,15,186,145,28,2,23.58974359,46,20.10,57,24.59,4.49
WW,Bu,291,12,496,80.5,21,2,35.34188034,98,29.10,109,33.60,4.50
WW,Bu,10,3,133,49,20,1,12.22222222,28,10.50,40,15.00,4.50
WW,Bu,10,6,89,69,20,1,12.22222222,28,10.50,40,15.00,4.50
WW,Bu,11,4,77,10,20,1,17.77777778,28,12.50,39,17.00,4.50
WW,Bu,61,1,169,33,28,2,23.76068376,43,19.00,54,23.50,4.50
WW,Bu,61,11,250,87.5,28,2,23.76068376,43,20.50,54,25.00,4.50
WW,Bu,340,9,236,31,14,2,30.2991453,93,21.00,60,25.50,4.50
WW,Bu,344,3,105,93,26,2,20.42735043,28,13.50,38,18.00,4.50
WW,Bu,397,6,171,69,20,1,17.94871795,25,11.50,36,16.00,4.50
WW,Bu,583,6,371.5,94,20,1,23.8034188,55,26.00,66,30.50,4.50
WW,Bu,608,5,347.5,87,21,2,23.76068376,103,26.50,114,31.00,4.50
WW,Bu,1815,2,122,51,20,1,27.86324786,28,13.00,39,17.50,4.50
WW,Bu,1815,10,120,78,20,1,27.86324786,28,13.50,39,18.00,4.50
SZ,Bu,2105,8,443.5,27.5,25,2,43.03418803,100,29.30,111,33.80,4.50
SZ,Bu,2106,11,421.5,35.5,20,1,41.4957265,100,36.10,111,40.60,4.50
HEV,Bu,10186,5,183,62,88,2,35.12820513,50,20.00,61,24.50,4.50
SZ,Bu,2107,8,234,6,12,2,16.56455142,50,24.40,61,28.94,4.54
WW,Bu,571,14,315,98.5,24,2,33.37606838,55,26.60,66,31.16,4.56
WW,Bu,1871,15,108,38,87,2,34.31623932,28,14.20,39,18.77,4.57
WW,Bu,60,7,175,73,20,1,16.83760684,43,18.40,54,23.00,4.60
WW,Bu,118,4,305,80,33,2,18.71794872,58,22.90,69,27.50,4.60
WW,Bu,281,10,483,31,20,1,32.90598291,103,27.40,114,32.00,4.60
WW,Bu,396,8,85,129,20,1,16.06837607,25,10.40,40,15.00,4.60
WW,Bu,498,2,357,45.5,20,1,25.68376068,88,24.90,99,29.50,4.60
WW,Bu,697,2,215,40,21,2,30.2991453,40,23.50,51,28.10,4.60
WW,Bu,1806,2,217,26,28,2,41.15384615,55,18.40,66,23.00,4.60
WW,Bu,1808,4,169,58,20,1,25.76923077,45,17.40,56,22.00,4.60
WW,Bu,556,1,78,38,20,1,5.47008547,30,10.00,41,14.60,4.60
WW,Bu,583,11,205,45,20,1,23.8034188,55,22.50,66,27.11,4.61
WW,Bu,556,11,91,37,20,1,13.54700855,30,10.50,41,15.11,4.61
WW,Bu,437,1,271,81.5,28,2,14.44444444,48,19.50,59,24.13,4.63
WW,Bu,530,10,418,49.5,12,2,50.98290598,123,33.10,134,37.75,4.65
WW,Bu,38,4,100,22,20,1,16.28205128,30,11.30,41,16.00,4.70
WW,Bu,69,9,220,56,20,1,15.76923077,43,20.30,54,25.00,4.70
WW,Bu,570,10,483.5,64.5,20,1,34.87179487,98,29.50,109,34.20,4.70
WW,Bu,605,7,376.5,50,20,1,31.58119658,78,29.30,89,34.00,4.70
HEV,Bu,10184,7,556.5,54,20,1,38.07692308,118,36.30,129,41.00,4.70
WW,Bu,2,6,205,169.5,21,2,25.25641026,123,24.50,135,29.21,4.71
WW,Bu,564,13,80,17,20,1,10.38461538,30,8.90,35,13.64,4.74
WW,Bu,557,2,130,16,28,2,13.54700855,30,8.60,41,13.37,4.77
WW,Bu,344,15,139,71,26,2,20.42735043,28,13.40,38,18.18,4.78
HEV,Bu,10216,12,81,23,22,2,21.96581197,20,12.20,31,16.99,4.79
WW,Bu,110,20,392.5,43,21,2,44.1025641,93,19.70,104,24.50,4.80
WW,Bu,166,1,281,92,28,2,6.196581197,58,19.20,69,24.00,4.80
WW,Bu,541,5,243,65.5,23,2,31.66666667,60,25.10,71,29.90,4.80
WW,Bu,576,6,231,64.5,20,1,17.00854701,55,23.00,66,27.80,4.80
WW,Bu,583,13,288,93,20,1,23.8034188,55,24.20,66,29.00,4.80
WW,Bu,591,14,285.5,67,21,2,33.71794872,168,20.20,179,25.00,4.80
WW,Bu,1813,3,488.5,53,20,1,40.42735043,110,32.20,121,37.00,4.80
SZ,Bu,2100,11,244,70.5,28,2,34.74358974,50,22.00,61,26.80,4.80
SZ,Bu,2105,4,234,42,25,2,43.03418803,100,27.70,111,32.50,4.80
WW,Bu,548,2,78,123,28,2,5.683760684,20,9.50,25,14.30,4.80
WW,Bu,291,9,502.5,57.5,21,2,35.34188034,98,28.60,109,33.40,4.80
HEV,Bu,10249,11,252,44.5,20,1,30.04273504,53,26.00,64,30.82,4.82
WW,Bu,583,12,261,56.5,20,1,23.8034188,55,23.90,66,28.77,4.87
WW,Bu,556,6,102,48,20,1,5.47008547,30,11.00,41,15.88,4.88
HEV,Bu,10216,10,181,79,22,2,21.96581197,20,16.00,31,20.90,4.90
WW,Bu,38,16,80,12,20,1,16.28205128,30,10.10,41,15.00,4.90
WW,Bu,106,1,201,52,21,2,25.21367521,93,23.10,104,28.00,4.90
WW,Bu,132,14,218,46,21,2,34.14529915,95,22.00,106,26.90,4.90
WW,Bu,377,9,295,125,20,1,16.92307692,43,21.10,40,26.00,4.90
WW,Bu,1719,3,262,94.5,28,2,31.23931624,42,21.10,53,26.00,4.90
WW,Bu,1871,8,148,51,87,2,34.31623932,28,14.60,39,19.50,4.90
WW,Bu,545,8,105,51,20,1,6.837606838,20,11.20,31,16.10,4.90
WW,Bu,581,8,530,48.5,20,1,28.71794872,96,32.30,107,37.20,4.90
WW,Bu,697,11,362.5,86.5,21,2,30.2991453,100,25.30,111,30.20,4.90
WW,Bu,698,9,515.5,84.5,17,2,18.76068376,80,29.00,91,33.90,4.90
WW,Bu,703,14,374,45.5,20,1,24.01709402,100,30.00,111,34.90,4.90
WW,Bu,1824,8,183,100,22,2,29.87179487,41,17.30,52,22.20,4.90
HEV,Bu,10219,4,609.5,45.5,20,1,27.17948718,123,33.30,134,38.23,4.93
WW,Bu,11,3,80,19,20,1,17.77777778,28,11.50,39,16.50,5.00
WW,Bu,44,3,74,68,20,1,1.282051282,25,7.00,36,12.00,5.00
WW,Bu,69,6,242,105,20,1,15.76923077,43,20.00,54,25.00,5.00
WW,Bu,69,8,230,63,20,1,15.76923077,43,20.00,54,25.00,5.00
WW,Bu,119,4,482.5,42.5,29,2,25.04273504,58,28.50,69,33.50,5.00
WW,Bu,137,1,334,58,20,1,18.07692308,103,22.00,114,27.00,5.00
WW,Bu,354,2,75,16,20,1,3.888888889,35,7.00,40,12.00,5.00
WW,Bu,380,5,493,25.5,20,1,23.84615385,158,34.00,169,39.00,5.00
WW,Bu,540,3,311,79.5,21,2,35.64102564,158,19.00,169,24.00,5.00
WW,Bu,586,1,518,34,22,2,34.23076923,55,32.00,66,37.00,5.00
WW,Bu,1806,16,363.5,52.5,28,2,41.15384615,55,28.00,66,33.00,5.00
WW,Bu,1842,9,493.5,40,12,2,55.85470085,110,33.00,121,38.00,5.00
SZ,Bu,2117,18,234,40,12,2,24.14012739,80,18.30,91,23.30,5.00
HEV,Bu,10187,10,518.5,20,25,2,26.79487179,103,29.00,114,34.00,5.00
WW,Bu,556,4,75,39,20,1,5.47008547,30,9.50,41,14.51,5.01
WW,Bu,1719,11,240,107,28,2,31.23931624,42,20.30,53,25.35,5.05
WW,Bu,1813,4,593.5,65.5,20,1,40.42735043,110,32.90,121,38.00,5.10
SZ,Bu,2106,16,500.5,34.5,20,1,41.4957265,100,39.50,111,44.60,5.10
HEV,Bu,10199,4,355.5,19,21,2,37.39316239,122,23.20,133,28.30,5.10
WW,Bu,11,15,98,25,20,1,17.77777778,28,11.40,38,16.50,5.10
WW,Bu,119,6,417,43,29,2,25.04273504,58,25.90,69,31.00,5.10
WW,Bu,396,7,74,136,20,1,16.06837607,25,9.90,40,15.00,5.10
WW,Bu,576,8,240,72,20,1,17.00854701,55,22.50,66,27.60,5.10
HEV,Bu,10216,13,111,39,22,2,21.96581197,20,13.70,31,18.84,5.14
WW,Bu,700,11,245,35,21,2,33.93162393,100,23.40,111,28.55,5.15
HEV,Bu,10243,2,100,30,12,2,24.05982906,83,16.00,94,21.17,5.17
SZ,Bu,2107,7,304.5,52.5,12,2,16.56455142,50,26.20,61,31.40,5.20
WW,Bu,69,10,225,67,20,1,15.76923077,43,19.80,54,25.00,5.20
WW,Bu,110,5,578.5,67.5,21,2,44.1025641,93,21.30,104,26.50,5.20
WW,Bu,116,2,217,45,22,2,19.82905983,55,22.80,66,28.00,5.20
WW,Bu,380,3,632.5,65.5,20,1,23.84615385,158,34.30,169,39.50,5.20
WW,Bu,586,15,240,40,22,2,34.23076923,55,23.80,66,29.00,5.20
WW,Bu,605,9,444.5,58.5,20,1,31.58119658,78,29.80,89,35.00,5.20
WW,Bu,344,2,103,98,26,2,20.42735043,28,12.80,38,18.02,5.22
WW,Bu,556,3,120,42,20,1,5.47008547,30,11.00,41,16.23,5.23
WW,Bu,453,24,114,74,50,2,6.452991453,19,11.20,30,16.45,5.25
WW,Bu,564,8,86,17,20,1,10.38461538,30,9.10,35,14.37,5.27
WW,Bu,180,7,308,21,23,2,58.37606838,108,21.21,119,26.50,5.29
WW,Bu,1813,8,194,81,20,1,40.42735043,110,23.50,121,28.80,5.30
HEV,Bu,10223,7,539,46,20,1,21.06837607,123,34.20,134,39.50,5.30
HEV,Bu,10254,5,310,69.5,28,2,21.96581197,58,25.70,69,31.00,5.30
WW,Bu,38,12,81,34,20,1,16.28205128,30,10.20,41,15.50,5.30
WW,Bu,556,7,80,58,20,1,5.47008547,30,10.50,41,15.80,5.30
SZ,Bu,2105,12,262,21,25,2,43.03418803,100,25.90,111,31.21,5.31
WW,Bu,1807,15,193,45,28,2,36.79487179,44,19.60,55,24.99,5.39
WW,Bu,180,1,349,119.5,23,2,58.37606838,108,20.60,119,26.00,5.40
WW,Bu,541,7,226,58,23,2,31.66666667,60,24.50,71,29.90,5.40
HEV,Bu,10249,12,321.5,78.5,20,1,30.04273504,53,25.60,64,31.00,5.40
WW,Bu,700,9,347,42,21,2,33.93162393,100,26.20,111,31.68,5.48
WW,Bu,271,6,326,69,25,2,23.11965812,57,23.50,68,29.00,5.50
WW,Bu,358,6,394.5,122.5,21,2,43.41880342,118,19.50,129,25.00,5.50
WW,Bu,556,2,112,66,20,1,5.47008547,30,11.00,41,16.50,5.50
WW,Bu,581,2,437.5,47.5,20,1,28.71794872,96,30.50,107,36.00,5.50
WW,Bu,583,4,328.5,91,20,1,23.8034188,55,24.50,66,30.00,5.50
WW,Bu,664,4,93,28,12,2,13.54700855,20,8.50,31,14.00,5.50
WW,Bu,700,7,374,14,21,2,33.93162393,100,26.50,111,32.00,5.50
WW,Bu,1719,4,193,97,28,2,31.23931624,42,19.50,53,25.00,5.50
WW,Bu,328,13,85,34,20,1,16.02564103,20,9.10,30,14.61,5.51
WW,Bu,403,9,80,108,20,1,5.726495726,28,9.50,40,15.03,5.53
WW,Bu,457,7,73,17,25,2,6.111111111,25,9.80,36,15.36,5.56
WW,Bu,1807,11,199,54,28,2,36.79487179,44,19.80,55,25.37,5.57
WW,Bu,11,6,125,65,20,1,17.77777778,28,12.20,39,17.79,5.59
WW,Bu,586,12,383,56,22,2,34.23076923,55,26.20,66,31.80,5.60
HEV,Bu,10243,7,173,16,12,2,24.05982906,83,20.20,94,25.80,5.60
WW,Bu,24,1,148,67,22,2,26.53846154,46,18.40,57,24.00,5.60
WW,Bu,43,10,100,52,52,2,17.09401709,25,8.40,36,14.00,5.60
WW,Bu,69,7,209,44,20,1,15.76923077,43,19.40,54,25.00,5.60
WW,Bu,172,8,239,37,20,1,29.23076923,103,24.40,114,30.00,5.60
WW,Bu,1719,8,258,83,28,2,31.23931624,42,20.40,53,26.00,5.60
WW,Bu,1850,4,149,41,23,2,18.11965812,50,18.40,61,24.00,5.60
SZ,Bu,2107,10,293,61,12,2,16.56455142,50,24.40,61,30.00,5.60
WW,Bu,463,1,86,59,28,2,5.811965812,25,7.50,45,13.11,5.61
WW,Bu,586,16,374.5,65.5,22,2,34.23076923,55,26.10,66,31.80,5.70
WW,Bu,16,2,96,79,20,1,17.73504274,28,14.30,39,20.00,5.70
SZ,Bu,2102,10,360.5,72,20,1,36.23931624,120,25.00,131,30.70,5.70
HEV,Bu,10224,4,505.5,40.5,20,1,39.01709402,123,36.30,134,42.00,5.70
SZ,Bu,2107,9,243,46,12,2,16.56455142,50,24.60,61,30.31,5.71
HEV,Bu,10227,2,203,45,20,1,20.12820513,113,23.80,124,29.53,5.73
HEV,Bu,10243,1,130,40,12,2,24.05982906,83,18.80,94,24.54,5.74
SZ,Bu,2105,21,222,34,25,2,43.03418803,100,24.30,111,30.05,5.75
WW,Bu,455,10,166,18,28,2,26.75213675,60,19.80,71,25.57,5.77
WW,Bu,60,5,160,27,20,1,16.83760684,43,17.20,54,23.00,5.80
WW,Bu,61,19,284,77.5,28,2,23.76068376,43,21.20,54,27.00,5.80
WW,Bu,631,3,246,89.5,21,2,32.64957265,40,23.70,51,29.50,5.80
WW,Bu,703,13,379.5,60.5,20,1,24.01709402,100,28.00,111,33.80,5.80
WW,Bu,10,5,105,43,20,1,12.22222222,28,9.20,40,15.00,5.80
WW,Bu,11,1,125,30,20,1,17.77777778,28,11.20,39,17.00,5.80
WW,Bu,11,20,87,65,20,1,17.77777778,28,11.00,39,16.81,5.81
WW,Bu,564,2,76,32,20,1,10.38461538,30,9.10,35,14.95,5.85
WW,Bu,455,7,371.5,59.5,28,2,26.75213675,60,26.30,71,32.15,5.85
WW,Bu,700,10,371.5,61,21,2,33.93162393,100,26.70,111,32.56,5.86
WW,Bu,545,7,87,45,20,1,6.837606838,20,11.00,31,16.89,5.89
WW,Bu,557,6,123,71,28,2,43.5042735,30,8.50,41,14.40,5.90
WW,Bu,10,10,86,86,20,1,12.22222222,28,9.10,40,15.00,5.90
WW,Bu,10,15,85,60,20,1,12.22222222,28,9.10,40,15.00,5.90
WW,Bu,354,3,204,46,20,1,3.888888889,35,10.10,55,16.00,5.90
WW,Bu,557,3,211,62,28,2,13.54700855,30,9.50,41,15.40,5.90
WW,Bu,629,11,85,117,22,2,10.47008547,25,12.10,54,18.00,5.90
SZ,Bu,2102,6,291,18.5,20,1,36.23931624,120,24.80,131,30.70,5.90
WW,Bu,328,12,83,46,20,1,16.02564103,20,9.00,30,14.94,5.94
WW,Bu,328,1,103,80,20,1,16.02564103,20,10.20,30,16.17,5.97
WW,Bu,2,1,209,157,21,2,25.25641026,123,23.00,135,29.00,6.00
WW,Bu,26,5,150,49,28,2,21.15384615,43,16.00,54,22.00,6.00
WW,Bu,43,1,82,28,52,2,17.09401709,25,8.00,25,14.00,6.00
WW,Bu,271,9,128,52,25,2,23.11965812,57,9.30,68,15.30,6.00
WW,Bu,396,3,80,93,20,1,16.06837607,25,9.00,35,15.00,6.00
WW,Bu,454,3,78,85,87,2,6.452991453,20,7.00,31,13.00,6.00
WW,Bu,583,3,277,62.5,20,1,23.8034188,55,24.00,66,30.00,6.00
SZ,Bu,2107,1,278,57,12,2,16.56455142,50,25.40,61,31.40,6.00
SZ,Bu,2108,4,179,31,28,2,15.65891473,50,19.40,61,25.44,6.04
WW,Bu,545,4,91,25,20,1,6.837606838,20,10.20,31,16.29,6.09
WW,Bu,1807,19,216,81,28,2,36.79487179,44,20.20,55,26.29,6.09
SZ,Bu,2102,8,311.5,36,20,1,36.23931624,120,23.94,131,30.04,6.10
WW,Bu,10,12,80,39,20,1,12.22222222,28,8.90,40,15.00,6.10
WW,Bu,10,13,81,97,20,1,12.22222222,28,8.90,40,15.00,6.10
WW,Bu,59,4,535,30,20,1,9.700854701,103,28.90,114,35.00,6.10
WW,Bu,324,3,150,10,20,1,23.84615385,56,13.90,67,20.00,6.10
WW,Bu,355,2,73,107,28,2,5.555555556,35,8.40,45,14.50,6.10
WW,Bu,328,3,93,101,20,1,16.02564103,20,10.20,30,16.34,6.14
WW,Bu,564,11,78,30,20,1,10.38461538,30,8.80,35,14.95,6.15
HEV,Bu,10216,16,164,93,22,2,21.96581197,20,14.70,31,20.86,6.16
WW,Bu,43,11,78,23,52,2,17.09401709,25,7.80,25,14.00,6.20
WW,Bu,69,2,224,92.5,20,1,15.76923077,43,17.80,54,24.00,6.20
WW,Bu,310,1,669,63.5,20,1,7.051282051,163,34.80,150,41.00,6.20
WW,Bu,555,8,314.5,140.5,28,2,5.47008547,55,19.50,66,25.70,6.20
WW,Bu,66,17,125,38,25,2,13.29059829,43,13.50,54,19.74,6.24
WW,Bu,583,9,326,123.5,20,1,23.8034188,55,25.70,66,32.00,6.30
SZ,Bu,2101,5,314.5,73.5,21,2,26.79487179,100,20.60,111,26.90,6.30
SZ,Bu,2102,15,222,46,20,1,36.23931624,120,20.91,131,27.26,6.34
WW,Bu,10,11,73,72,20,1,12.22222222,28,8.60,40,15.00,6.40
WW,Bu,24,16,127,187.5,22,2,26.53846154,46,16.60,57,23.00,6.40
WW,Bu,564,1,92,32,20,1,10.38461538,30,10.20,35,16.68,6.48
WW,Bu,10,9,105,78,20,1,12.22222222,28,8.50,40,15.00,6.50
WW,Bu,10,14,71,61,20,1,12.22222222,28,8.50,40,15.00,6.50
WW,Bu,16,1,85,20,20,1,17.73504274,28,13.50,39,20.00,6.50
WW,Bu,291,13,359,47,21,2,35.34188034,98,24.60,109,31.10,6.50
WW,Bu,547,1,100,58,20,1,2.136752137,20,7.00,31,13.50,6.50
WW,Bu,658,8,349,75,21,2,22.60683761,123,24.00,134,30.50,6.50
SZ,Bu,2101,8,184,56,21,2,26.79487179,100,18.30,111,24.80,6.50
SZ,Bu,2102,5,293,75.5,20,1,36.23931624,120,24.20,131,30.70,6.50
WW,Bu,345,5,115,35,26,2,12.09401709,28,12.00,38,18.56,6.56
WW,Bu,11,2,90,20,20,1,17.77777778,28,10.40,39,17.00,6.60
WW,Bu,119,10,604,61,29,2,25.04273504,58,27.90,69,34.50,6.60
SZ,Bu,2107,3,244,20,12,2,16.56455142,50,24.40,61,31.00,6.60
WW,Bu,11,21,77,85,20,1,17.77777778,28,10.50,39,17.11,6.61
SZ,Bu,2102,9,267,22,20,1,36.23931624,120,19.60,131,26.30,6.70
WW,Bu,540,1,514.5,87.5,21,2,35.64102564,158,22.00,169,28.70,6.70
SZ,Bu,2107,4,205,3,12,2,16.56455142,50,23.30,61,30.00,6.70
WW,Bu,459,1,229,87.5,53,2,31.15384615,38,16.20,49,23.00,6.80
WW,Bu,601,8,419.5,75.5,21,2,22.77777778,123,30.70,134,37.50,6.80
SZ,Bu,2101,6,212,31,21,2,26.79487179,100,19.00,111,25.80,6.80
WW,Bu,29,1,73,7,21,2,0.94017094,30,5.20,25,12.00,6.80
WW,Bu,30,20,84,5,20,1,15.21367521,30,11.20,40,18.00,6.80
WW,Bu,66,15,85,48,25,2,13.29059829,43,13.20,54,20.00,6.80
WW,Bu,546,2,75,23,20,1,1.666666667,20,9.00,31,15.86,6.86
WW,Bu,291,2,470,43,21,2,35.34188034,98,25.90,109,32.80,6.90
WW,Bu,557,1,123,150,28,2,13.54700855,30,8.50,41,15.40,6.90
WW,Bu,547,2,70,111,20,1,2.136752137,20,7.80,31,14.71,6.91
WW,Bu,545,6,96,41,20,1,6.837606838,20,10.10,31,17.06,6.96
WW,Bu,545,9,92,49,20,1,1.666666667,20,10.20,31,17.18,6.98
WW,Bu,66,13,200,88,25,2,13.29059829,43,15.00,54,22.00,7.00
WW,Bu,69,1,240,60.5,20,1,15.76923077,43,19.00,54,26.00,7.00
WW,Bu,355,8,90,70,28,2,5.555555556,35,8.00,45,15.00,7.00
WW,Bu,601,2,367.5,47.5,21,2,22.77777778,123,30.50,134,37.50,7.00
WW,Bu,700,2,376.5,68.5,21,2,33.93162393,100,25.00,111,32.00,7.00
SZ,Bu,2102,14,273,67,20,1,36.23931624,120,22.82,131,29.82,7.00
WW,Bu,545,1,92,10,20,1,6.837606838,20,8.50,31,15.64,7.14
SZ,Bu,2114,2,657,53,22,2,13.46534653,120,24.20,131,31.40,7.20
SZ,Bu,2100,17,376,49,28,2,34.74358974,50,25.20,61,32.40,7.20
WW,Bu,700,13,410,95,21,2,33.93162393,100,26.50,111,33.75,7.25
WW,Bu,573,4,182,38,64,2,31.06837607,38,13.00,49,20.30,7.30
HEV,Bu,10185,4,370.5,14,20,1,32.94871795,118,29.70,129,37.00,7.30
HEV,Bu,10249,4,289,50.5,20,1,30.04273504,53,25.70,64,33.00,7.30
WW,Bu,30,9,131,34,20,1,15.21367521,30,12.70,40,20.00,7.30
WW,Bu,547,5,85,64,20,1,5.683760684,20,6.80,31,14.11,7.31
WW,Bu,328,11,101,129,20,1,16.02564103,20,9.50,30,16.82,7.32
WW,Bu,30,21,118,77,20,1,15.21367521,30,12.60,45,20.00,7.40
WW,Bu,66,6,120,31,25,2,13.29059829,43,14.60,54,22.00,7.40
WW,Bu,69,3,200,47,20,1,15.76923077,43,17.60,54,25.00,7.40
WW,Bu,328,2,127,120,20,1,16.02564103,20,9.60,30,17.00,7.40
WW,Bu,423,2,215,116.5,10,2,14.18803419,18,12.60,29,20.00,7.40
WW,Bu,584,3,184,84,21,2,38.88888889,35,17.60,46,25.00,7.40
SZ,Bu,2106,8,417,22,20,1,41.4957265,100,36.60,111,44.00,7.40
WW,Bu,328,6,124,46,20,1,16.02564103,20,8.50,30,15.93,7.43
WW,Bu,545,5,91,61,20,1,6.837606838,20,10.00,31,17.50,7.50
WW,Bu,30,15,108,33,20,1,15.21367521,30,12.50,40,20.00,7.50
WW,Bu,172,7,214,37,20,1,29.23076923,103,21.40,114,28.90,7.50
WW,Bu,355,6,107,46,28,2,5.555555556,35,7.50,45,15.00,7.50
WW,Bu,378,2,116,37,20,1,7.777777778,25,9.50,35,17.00,7.50
WW,Bu,378,10,122,58,20,1,7.777777778,25,9.50,35,17.00,7.50
WW,Bu,409,2,339,103.5,14,2,25.17094017,103,21.50,114,29.00,7.50
WW,Bu,463,2,80,102,28,2,44.82905983,25,6.50,45,14.00,7.50
WW,Bu,601,5,316,89,21,2,22.77777778,123,27.00,134,34.50,7.50
HEV,Bu,10230,4,256,14,20,1,36.41025641,123,26.20,134,33.80,7.60
WW,Bu,658,2,456.5,91.5,21,2,22.60683761,123,26.60,134,34.20,7.60
SZ,Bu,2102,13,320.5,70.5,20,1,36.23931624,120,23.10,131,30.70,7.60
HEV,Bu,10242,7,481.5,92.5,25,2,24.95726496,53,19.00,64,26.60,7.60
SZ,Bu,2102,20,196,73,20,1,36.23931624,120,19.70,131,27.30,7.60
WW,Bu,344,5,92,115,26,2,20.42735043,28,10.50,38,18.13,7.63
WW,Bu,66,16,135,84,25,2,13.29059829,43,13.90,54,21.58,7.68
WW,Bu,355,7,102,56,28,2,5.555555556,35,7.30,45,15.00,7.70
WW,Bu,1838,10,279,26,20,1,40.04273504,105,20.80,116,28.50,7.70
WW,Bu,457,6,99,43,25,2,6.111111111,25,11.00,36,18.75,7.75
WW,Bu,30,2,96,74,20,1,15.21367521,30,12.20,40,20.00,7.80
WW,Bu,30,16,106,14,20,1,15.21367521,30,12.20,40,20.00,7.80
WW,Bu,30,22,107,28,20,1,15.21367521,30,12.20,40,20.00,7.80
WW,Bu,378,1,79,43,20,1,7.777777778,25,9.20,35,17.00,7.80
WW,Bu,378,5,85,35,20,1,7.777777778,25,9.20,35,17.00,7.80
WW,Bu,629,8,115,185,22,2,10.47008547,25,13.70,54,21.50,7.80
WW,Bu,38,2,104,73,20,1,16.28205128,30,11.60,41,19.50,7.90
WW,Bu,38,15,123,82,20,1,16.28205128,30,11.60,41,19.50,7.90
WW,Bu,66,3,200,65,25,2,13.29059829,43,15.10,54,23.00,7.90
WW,Bu,354,4,78,133,20,1,3.888888889,35,8.10,55,16.00,7.90
SZ,Bu,2106,7,322,20,20,1,41.4957265,100,36.10,111,44.00,7.90
WW,Bu,30,3,71,74,20,1,15.21367521,30,12.00,40,20.00,8.00
WW,Bu,30,11,101,49,20,1,15.21367521,30,12.00,40,20.00,8.00
WW,Bu,271,3,316,63.5,25,2,23.11965812,57,22.50,68,30.50,8.00
WW,Bu,378,4,72,66,20,1,7.777777778,25,9.00,35,17.00,8.00
HEV,Bu,10185,1,444.5,16,20,1,32.94871795,118,30.50,129,38.50,8.00
WW,Bu,697,3,344,94.5,21,2,30.2991453,100,24.50,111,32.60,8.10
SZ,Bu,2113,1,678.5,40.5,29,2,26.51898734,120,27.00,131,35.10,8.10
WW,Bu,38,14,100,100,20,1,16.28205128,30,10.90,41,19.00,8.10
WW,Bu,66,5,150,103,25,2,13.29059829,43,14.90,54,23.00,8.10
WW,Bu,547,4,73,84,20,1,2.136752137,20,7.00,31,15.10,8.10
SZ,Bu,2102,3,290,55,20,1,36.23931624,120,22.60,131,30.70,8.10
WW,Bu,378,7,88,2,20,1,7.777777778,25,8.80,35,17.00,8.20
WW,Bu,26,1,187,75,28,2,21.15384615,43,16.80,54,25.00,8.20
WW,Bu,586,3,415.5,61.5,22,2,34.23076923,55,25.80,66,34.00,8.20
HEV,Bu,10191,11,322,26,21,2,50.2991453,122,21.80,133,30.00,8.20
HEV,Bu,10232,4,320,154,21,2,21.53846154,123,23.80,130,32.00,8.20
WW,Bu,563,15,272,65,56,2,38.84615385,55,22.90,66,31.13,8.23
WW,Bu,564,7,77,51,20,1,10.38461538,30,8.80,35,17.08,8.28
WW,Bu,30,7,93,37,20,1,15.21367521,30,11.70,40,20.00,8.30
WW,Bu,38,5,97,108,20,1,16.28205128,30,11.20,41,19.50,8.30
WW,Bu,378,3,70,13,20,1,7.777777778,25,8.70,35,17.00,8.30
WW,Bu,328,8,85,58,20,1,16.02564103,20,7.00,30,15.33,8.33
HEV,Bu,10216,14,173,111,22,2,21.96581197,20,12.80,31,21.15,8.35
WW,Bu,457,4,163,23,25,2,6.111111111,25,12.10,36,20.45,8.35
WW,Bu,16,10,75,108,20,1,17.73504274,28,11.60,39,20.00,8.40
WW,Bu,291,4,347.5,47,21,2,35.34188034,98,22.50,109,30.90,8.40
WW,Bu,378,6,81,50,20,1,7.777777778,25,8.60,35,17.00,8.40
WW,Bu,354,6,78,84,20,1,3.888888889,35,7.50,45,16.00,8.50
WW,Bu,328,5,79,128,20,1,16.02564103,20,8.00,30,16.53,8.53
WW,Bu,271,4,364,110,25,2,23.11965812,57,23.30,68,31.90,8.60
WW,Bu,545,2,99,40,20,1,6.837606838,20,8.50,31,17.12,8.62
WW,Bu,404,8,100,73,21,2,12.73504274,28,9.10,30,17.73,8.63
WW,Bu,416,3,338,69,20,1,24.23076923,143,23.30,154,31.96,8.66
WW,Bu,30,19,85,90,20,1,15.21367521,30,11.30,40,20.00,8.70
WW,Bu,658,6,337.5,94,21,2,22.60683761,123,24.00,134,32.70,8.70
WW,Bu,545,3,126,117,20,1,6.837606838,20,12.00,31,20.80,8.80
WW,Bu,16,12,70,109,20,1,17.73504274,28,11.20,39,20.00,8.80
WW,Bu,30,18,83,32,20,1,15.21367521,30,11.20,40,20.00,8.80
WW,Bu,378,9,72,48,20,1,7.777777778,25,8.20,35,17.00,8.80
WW,Bu,43,15,92,113,52,2,17.09401709,25,8.20,36,17.05,8.85
WW,Bu,30,8,81,31,20,1,15.21367521,30,11.10,40,20.00,8.90
WW,Bu,38,8,80,123,20,1,16.28205128,30,10.10,41,19.00,8.90
WW,Bu,530,5,600,101,12,2,50.98290598,123,32.30,134,41.25,8.95
HEV,Bu,10209,8,333.5,56,21,2,42.09401709,153,20.90,164,29.85,8.95
HEV,Bu,10209,6,344.5,56.5,21,2,42.09401709,153,21.10,164,30.07,8.97
WW,Bu,64,8,103,45,21,2,6.153846154,20,9.00,31,18.00,9.00
SZ,Bu,2106,6,509.5,29.5,20,1,41.4957265,100,35.00,111,44.00,9.00
WW,Bu,30,14,77,93,20,1,15.21367521,30,10.90,40,20.00,9.10
WW,Bu,30,17,78,27,20,1,15.21367521,30,10.90,40,20.00,9.10
WW,Bu,30,23,76,136,20,1,15.21367521,30,10.80,45,20.00,9.20
WW,Bu,546,1,87,98,20,1,1.666666667,20,9.50,31,18.78,9.28
WW,Bu,30,10,74,68,20,1,15.21367521,30,10.70,40,20.00,9.30
WW,Bu,354,5,73,112,20,1,3.888888889,35,6.70,45,16.00,9.30
WW,Bu,328,10,71,135,20,1,16.02564103,20,7.20,30,16.52,9.32
HEV,Bu,10209,10,378.5,90.5,21,2,42.09401709,153,21.80,164,31.17,9.37
WW,Bu,404,1,117,113,21,2,12.73504274,28,9.50,40,18.90,9.40
WW,Bu,546,3,90,97,20,1,2.136752137,20,9.40,31,18.82,9.42
WW,Bu,540,8,362,55.5,21,2,31.66666667,158,19.50,169,29.05,9.55
WW,Bu,584,7,253,61,21,2,38.88888889,55,18.60,66,28.25,9.65
WW,Bu,457,8,106,54,25,2,21.06837607,25,9.80,36,19.53,9.73
WW,Bu,584,5,297,55,21,2,38.88888889,55,19.00,66,28.77,9.77
WW,Bu,564,3,111,32,20,1,10.38461538,30,8.70,35,18.49,9.79
WW,Bu,564,9,111,48,20,1,10.38461538,30,10.00,35,19.83,9.83
WW,Bu,30,1,72,38,20,1,15.21367521,30,10.00,40,20.00,10.00
WW,Bu,338,1,206,99.5,22,2,12.60683761,35,14.90,45,25.00,10.10
SZ,Bu,2108,2,244,33,28,2,15.65891473,50,21.00,61,31.30,10.30
HEV,Bu,10232,6,192,191,21,2,21.53846154,123,19.20,130,29.50,10.30
WW,Bu,291,5,417,58.5,21,2,35.34188034,98,21.70,109,32.30,10.60
WW,Bu,564,16,119,54,20,1,10.38461538,30,10.20,35,20.89,10.69
HEV,Bu,10227,4,253,50.5,20,1,20.12820513,113,21.30,124,32.00,10.70
WW,Bu,404,7,98,122,21,2,12.73504274,28,8.00,40,18.73,10.73
HEV,Bu,10249,5,232,59,20,1,30.04273504,53,26.80,64,38.00,11.20
WW,Bu,338,5,194,126.5,22,2,12.60683761,35,13.50,45,25.20,11.70
WW,Bu,584,1,173,58,21,2,38.88888889,35,17.20,46,29.00,11.80
HEV,Bu,10232,2,222,230,21,2,21.53846154,123,21.30,130,33.10,11.80
WW,Bu,564,14,81,100,20,1,10.38461538,30,8.90,35,21.45,12.55
WW,Bu,356,7,564.5,5.5,20,1,30.5982906,150,19.80,161,33.16,13.36
WW,Bu,449,7,526,58.5,20,1,26.02564103,103,17.80,114,31.94,14.14
WW,Bu,564,10,78,128,20,1,10.38461538,30,8.80,35,23.03,14.23
WW,Bu,564,12,93,130,20,1,10.38461538,30,9.40,35,23.98,14.58
WW,Bu,1830,5,398.5,53,20,1,19.65811966,100,28.40,111,50.00,21.60

--------------060302070603070400070109--


From pgilbert at bank-banque-canada.ca  Wed May 30 17:08:47 2007
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Wed, 30 May 2007 11:08:47 -0400
Subject: [Rd] S4 assignment \alias and \usage
In-Reply-To: <18013.34742.228595.528262@stat.math.ethz.ch>
References: <465D7BB2.3050405@bank-banque-canada.ca>
	<18013.34742.228595.528262@stat.math.ethz.ch>
Message-ID: <465D937F.80207@bank-banque-canada.ca>

Let me back up a bit, I may be making another mistake.  My code has

setGeneric("TSdoc<-",
    def= function(x, value) standardGeneric("TSdoc<-"),
    useAsDefault= function (x, value) {attr(x, "TSdoc") <- value ; x })

setGeneric("TSdoc",
    def= function(x) standardGeneric("TSdoc"),
    useAsDefault= function(x) attr(x, "TSdoc"))

In the Rd file I can document the generics with

\alias{TSdoc}
\alias{TSdoc<-}

and usage
    TSdoc(x)
    TSdoc(x) <- value

and these seems to work for the extraction method:

\alias{TSdoc,default-method}
and usage
\S4method{TSdoc}{default}(x)

but perhaps it is not correct.  My attempts to find an equivalent for 
the assignment method have not been successful.  Perhaps the first 
questions are whether this is the correct way to document the generic, 
and whether the extraction method documentation is only working by 
accident. The error that is being flagged by chechDocFiles is that there 
is \usage without a corresponding \alias.

Paul

Seth Falcon wrote:
....
 > If you have your own generic TSdoc<-, then I think you want:
 >
 > \alias{TSdoc<-}
 > \alias{TSdoc<-,someClass,anotherClass-method}
 >
 > You may not be allowed to specify usage, but I think the issue only
 > arises when setting methods for a generic documented elsewhere.
 >
 > + seth
 >

Martin Maechler wrote:
>>>>>> "PaulG" == Paul Gilbert <pgilbert at bank-banque-canada.ca>
>>>>>>     on Wed, 30 May 2007 09:27:14 -0400 writes:
> 
>     PaulG> What is the Rd file alias and usage syntax for an S4 assignment method? 
>     PaulG> I have been trying variations on
> 
> 
>     PaulG> \alias{TSdoc<-,default-method}
> 
> Do you really have a class called "default" ????
> 
> Using "<func>.default" is an S3 concept which in S4 is replaced
> by defining methods for "ANY".
> 
> 
> In Matrix, we have
> 
> \alias{dim<-,Matrix-method}
> 
> and that works fine
> -- though we don't have a \usage{.} there, since this really is in 
> Matrix-class.Rd
> 
> Martin Maechler
> 
>     PaulG> \usage{
>     PaulG> \S4method{TSdoc}{default}(x) <- value
> 
>     PaulG> but so far I have not got it right according to various codoc, etc, checks.
> 
>     PaulG> Paul Gilbert
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}


From sfalcon at fhcrc.org  Wed May 30 18:36:57 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 May 2007 09:36:57 -0700
Subject: [Rd] S4 assignment \alias and \usage
In-Reply-To: <465D937F.80207@bank-banque-canada.ca> (Paul Gilbert's message of
	"Wed, 30 May 2007 11:08:47 -0400")
References: <465D7BB2.3050405@bank-banque-canada.ca>
	<18013.34742.228595.528262@stat.math.ethz.ch>
	<465D937F.80207@bank-banque-canada.ca>
Message-ID: <m2abvmfety.fsf@ziti.local>

Paul Gilbert <pgilbert at bank-banque-canada.ca> writes:

> Let me back up a bit, I may be making another mistake.  My code has
>
> setGeneric("TSdoc<-",
>    def= function(x, value) standardGeneric("TSdoc<-"),
>    useAsDefault= function (x, value) {attr(x, "TSdoc") <- value ; x })
>
> setGeneric("TSdoc",
>    def= function(x) standardGeneric("TSdoc"),
>    useAsDefault= function(x) attr(x, "TSdoc"))

Aside:

It seems odd to me to define such defaults.  How do you know x is
going to have a TSdoc attribute?  

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From ripley at stats.ox.ac.uk  Wed May 30 19:06:43 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 May 2007 18:06:43 +0100 (BST)
Subject: [Rd] Possible changes to connections
Message-ID: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>

When I originally implemented connections in R 1.2.0, I followed the model 
in the 'Green Book' closely.  There were a number of features that forced 
a particular implementation, and one was getConnection() that allows one 
to recreate a connection object from a number.

I am wondering if anyone makes use of this, and if so for what?

It would seem closer to the R philosophy to have connection objects that 
get garbage collected when no R object refers to them.  This would allow 
for example

readLines(gzfile("foo.gz"))

which currently leaks a connection slot as the connection cannot be closed 
(except via closeAllConnections() or getConnection()) without an R object 
being returned.

The correct usage currently is

readLines(con <- gzfile("foo.gz")); close(con)

which is a little awkward but more importantly seems little understood.

Another issue is that the current connection objects can be saved and 
restored but refer to a global table that is session-specific so they lose 
their meaning (and perhaps gain an unintended one).

What I suspect is that very few users are aware of the Green Book 
description and so we have freedom to make some substantial changes
to the implementation.  Both issues suggest that connection objects should 
be based on external pointers (which did not exist way back in 1.2.0).

[I know there is a call to getConnection in package gtools, but the return 
value is unused!]

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From ripley at stats.ox.ac.uk  Wed May 30 19:35:42 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Wed, 30 May 2007 18:35:42 +0100 (BST)
Subject: [Rd] S4 assignment \alias and \usage
In-Reply-To: <m2abvmfety.fsf@ziti.local>
References: <465D7BB2.3050405@bank-banque-canada.ca>
	<18013.34742.228595.528262@stat.math.ethz.ch>
	<465D937F.80207@bank-banque-canada.ca> <m2abvmfety.fsf@ziti.local>
Message-ID: <Pine.LNX.4.64.0705301744450.11532@gannet.stats.ox.ac.uk>

On Wed, 30 May 2007, Seth Falcon wrote:

> Paul Gilbert <pgilbert at bank-banque-canada.ca> writes:
>
>> Let me back up a bit, I may be making another mistake.  My code has
>>
>> setGeneric("TSdoc<-",
>>    def= function(x, value) standardGeneric("TSdoc<-"),
>>    useAsDefault= function (x, value) {attr(x, "TSdoc") <- value ; x })
>>
>> setGeneric("TSdoc",
>>    def= function(x) standardGeneric("TSdoc"),
>>    useAsDefault= function(x) attr(x, "TSdoc"))
>
> Aside:
>
> It seems odd to me to define such defaults.  How do you know x is
> going to have a TSdoc attribute?

I don't think you do, but then you extract NULL if it does not do so.

This is just what names(), comment() ... would do if they were not 
internal functions and you converted them to S4 generics, so this seems 
fairly natural to me (at least if there are legacy objects about that 
need to be handled).

The issue of attributes on S4 objects is one that I consider still open: R 
and S4 differ in implementation but the issue seems undocumented in R.

-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


From pgilbert at bank-banque-canada.ca  Wed May 30 19:37:26 2007
From: pgilbert at bank-banque-canada.ca (Paul Gilbert)
Date: Wed, 30 May 2007 13:37:26 -0400
Subject: [Rd] S4 assignment \alias and \usage
In-Reply-To: <m2abvmfety.fsf@ziti.local>
References: <465D7BB2.3050405@bank-banque-canada.ca>	<18013.34742.228595.528262@stat.math.ethz.ch>	<465D937F.80207@bank-banque-canada.ca>
	<m2abvmfety.fsf@ziti.local>
Message-ID: <465DB656.8080104@bank-banque-canada.ca>



Seth Falcon wrote:
> Paul Gilbert <pgilbert at bank-banque-canada.ca> writes:
> 
>> Let me back up a bit, I may be making another mistake.  My code has
>>
>> setGeneric("TSdoc<-",
>>    def= function(x, value) standardGeneric("TSdoc<-"),
>>    useAsDefault= function (x, value) {attr(x, "TSdoc") <- value ; x })
>>
>> setGeneric("TSdoc",
>>    def= function(x) standardGeneric("TSdoc"),
>>    useAsDefault= function(x) attr(x, "TSdoc"))
> 
> Aside:
> 
> It seems odd to me to define such defaults.  How do you know x is
> going to have a TSdoc attribute?  

attr returns NULL if the attibute does not exist so, in my S3 way of 
thinking, it seems very natural. Now knowing only a very little about S4 
classes, I can see you might think it is odd.

Paul
====================================================================================

La version fran?aise suit le texte anglais.

------------------------------------------------------------------------------------

This email may contain privileged and/or confidential inform...{{dropped}}


From shiazy at gmail.com  Wed May 30 20:07:24 2007
From: shiazy at gmail.com (Shiazy Fuzzy)
Date: Wed, 30 May 2007 20:07:24 +0200
Subject: [Rd] Sort in ecdf
Message-ID: <9d3ef91d0705301107h39f396c8wbfe16df9903d441e@mail.gmail.com>

Hi!

I've noticed the ecdf() R code (R ver. 2.5.0) contains two call to sort:
--- [R-code] ---
ecdf <- function(x)
        x <- sort(x)
        n <- length(x)
        if (n < 1)
                stop("'x' must have 1 or more non-missing values")
        vals <- sort(unique(x))
        rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
        method = "constant", yleft = 0, yright = 1, f = 0, ties = "ordered")
        class(rval) <- c("ecdf", "stepfun", class(rval))
        attr(rval, "call") <- sys.call()
        rval
--- [/R-code] ---

I think one of the two calls to sort can be removed, improving the performance.

What do you think?

Sincerely,

-- Marco


From maechler at stat.math.ethz.ch  Wed May 30 21:39:32 2007
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 30 May 2007 21:39:32 +0200
Subject: [Rd] Sort in ecdf
In-Reply-To: <9d3ef91d0705301107h39f396c8wbfe16df9903d441e@mail.gmail.com>
References: <9d3ef91d0705301107h39f396c8wbfe16df9903d441e@mail.gmail.com>
Message-ID: <18013.54004.275777.751766@stat.math.ethz.ch>

>>>>> "Shiazy" == Shiazy Fuzzy <shiazy at gmail.com>
>>>>>     on Wed, 30 May 2007 20:07:24 +0200 writes:

    Shiazy> Hi!
    Shiazy> I've noticed the ecdf() R code (R ver. 2.5.0) contains two call to sort:
    Shiazy> --- [R-code] ---
    Shiazy> ecdf <- function(x)
    Shiazy> x <- sort(x)
    Shiazy> n <- length(x)
    Shiazy> if (n < 1)
    Shiazy> stop("'x' must have 1 or more non-missing values")
    Shiazy> vals <- sort(unique(x))
    Shiazy> rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
    Shiazy> method = "constant", yleft = 0, yright = 1, f = 0, ties = "ordered")
    Shiazy> class(rval) <- c("ecdf", "stepfun", class(rval))
    Shiazy> attr(rval, "call") <- sys.call()
    Shiazy> rval
    Shiazy> --- [/R-code] ---

    Shiazy> I think one of the two calls to sort can be removed, improving the performance.

    Shiazy> What do you think?

I agree, and I have removed the 2nd one.
Thank you for your note.

Martin

    Shiazy> Sincerely,

    Shiazy> -- Marco

    Shiazy> ______________________________________________
    Shiazy> R-devel at r-project.org mailing list
    Shiazy> https://stat.ethz.ch/mailman/listinfo/r-devel


From rdpeng at gmail.com  Wed May 30 22:28:19 2007
From: rdpeng at gmail.com (Roger Peng)
Date: Wed, 30 May 2007 16:28:19 -0400
Subject: [Rd] Possible changes to connections
In-Reply-To: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
References: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
Message-ID: <66f3bd910705301328o72cdb62cx29ea0abf3ab71312@mail.gmail.com>

In a previous version of the 'filehash' package, the 'filehashDB1'
class had a slot for an open connection corresponding to the database
file.  I quickly learned that if the R object ever got removed or
reassigned I was left hanging with an open file connection.

If I remember correctly, I resorted to creating an environment in the
R object which stored the connection number for the the database file
connection.  Then I registered a finalizer for that environment which
grabbed the connection via 'getConnection' and then closed the
connection.

I eventually abandoned this approach since it was error-prone and I
often ran into strange difficult-to-reproduce situations where the R
object representing the database had been removed but the file
connection was still open because garbage collection had not yet
occurred.  I would have very much preferred a system where the file
connection was automatically closed once any references to it were
gone.

-roger

On 5/30/07, Prof Brian Ripley <ripley at stats.ox.ac.uk> wrote:
> When I originally implemented connections in R 1.2.0, I followed the model
> in the 'Green Book' closely.  There were a number of features that forced
> a particular implementation, and one was getConnection() that allows one
> to recreate a connection object from a number.
>
> I am wondering if anyone makes use of this, and if so for what?
>
> It would seem closer to the R philosophy to have connection objects that
> get garbage collected when no R object refers to them.  This would allow
> for example
>
> readLines(gzfile("foo.gz"))
>
> which currently leaks a connection slot as the connection cannot be closed
> (except via closeAllConnections() or getConnection()) without an R object
> being returned.
>
> The correct usage currently is
>
> readLines(con <- gzfile("foo.gz")); close(con)
>
> which is a little awkward but more importantly seems little understood.
>
> Another issue is that the current connection objects can be saved and
> restored but refer to a global table that is session-specific so they lose
> their meaning (and perhaps gain an unintended one).
>
> What I suspect is that very few users are aware of the Green Book
> description and so we have freedom to make some substantial changes
> to the implementation.  Both issues suggest that connection objects should
> be based on external pointers (which did not exist way back in 1.2.0).
>
> [I know there is a call to getConnection in package gtools, but the return
> value is unused!]
>
> --
> Brian D. Ripley,                  ripley at stats.ox.ac.uk
> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
> University of Oxford,             Tel:  +44 1865 272861 (self)
> 1 South Parks Road,                     +44 1865 272866 (PA)
> Oxford OX1 3TG, UK                Fax:  +44 1865 272595
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Roger D. Peng  |  http://www.biostat.jhsph.edu/~rpeng/


From sfalcon at fhcrc.org  Wed May 30 22:51:52 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Wed, 30 May 2007 13:51:52 -0700
Subject: [Rd] Possible changes to connections
In-Reply-To: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk> (Brian
	Ripley's message of "Wed, 30 May 2007 18:06:43 +0100 (BST)")
References: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
Message-ID: <m2myzmc9w7.fsf@ziti.local>

Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:
> When I originally implemented connections in R 1.2.0, I followed the model 
> in the 'Green Book' closely.  There were a number of features that forced 
> a particular implementation, and one was getConnection() that allows one 
> to recreate a connection object from a number.
>
> I am wondering if anyone makes use of this, and if so for what?

I don't see any uses of it in the Bioconductor package sources.

> It would seem closer to the R philosophy to have connection objects that 
> get garbage collected when no R object refers to them.  This would allow 
> for example
>
> readLines(gzfile("foo.gz"))

I think this would be a nice improvement as it matches what many
people already assume happens as well as matches what some other
languages do (in particular, Python).

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From jeff.horner at vanderbilt.edu  Thu May 31 00:03:15 2007
From: jeff.horner at vanderbilt.edu (Jeffrey Horner)
Date: Wed, 30 May 2007 17:03:15 -0500
Subject: [Rd] Possible changes to connections
In-Reply-To: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
References: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
Message-ID: <465DF4A3.9000507@vanderbilt.edu>

Prof Brian Ripley wrote:
> When I originally implemented connections in R 1.2.0, I followed the model 
> in the 'Green Book' closely.  There were a number of features that forced 
> a particular implementation, and one was getConnection() that allows one 
> to recreate a connection object from a number.
[...]
> Another issue is that the current connection objects can be saved and 
> restored but refer to a global table that is session-specific so they lose 
> their meaning (and perhaps gain an unintended one).
> 
> What I suspect is that very few users are aware of the Green Book 
> description and so we have freedom to make some substantial changes
> to the implementation.  Both issues suggest that connection objects should 
> be based on external pointers (which did not exist way back in 1.2.0).

Sounds great! I would also like to see the following interface (all or 
in parts) added for working with connections from C. This is an update 
to the patch I created here:

http://wiki.r-project.org/rwiki/doku.php?id=developers:r_connections_api

/* Acting upon a connection */
void R_CloseConnection(SEXP);
int R_VfprintfConnection(SEXP, const char *format, va_list ap);
int R_FgetcConnection(SEXP);
double R_SeekConnection(SEXP, double where, int origin, int rw);
void R_TruncateConnection(SEXP);
int R_FlushConnection(SEXP);
size_t R_ReadConnection(SEXP, void *buf, size_t size, size_t n);
size_t R_WriteConnection(SEXP, const void *buf, size_t size, size_t n);

/* Querying a connection */
Rboolean R_ConnectionIsText(SEXP);
Rboolean R_ConnectionIsOpen(SEXP);
Rboolean R_ConnectionCanRead(SEXP);
Rboolean R_ConnectionCanWrite(SEXP);
Rboolean R_ConnectionCanSeek(SEXP);
Rboolean R_ConnectionIsBlocking(SEXP);

/* Prototypes for new connections created in C */
typedef Rboolean (*Rc_open)(void *private);
typedef void (*Rc_close)(void *private);
typedef void (*Rc_destroy)(void *private); /* when closing connection */
typedef int (*Rc_vfprintf)(void *private, const char *, va_list);
typedef int (*Rc_fgetc)(void *private);
typedef double (*Rc_seek)(void *private, double, int, int);
typedef void (*Rc_truncate)(void *private);
typedef int (*Rc_fflush)(void *private);
typedef size_t (*Rc_read)(void *, size_t, size_t, void *private);
typedef size_t (*Rc_write)(const void *, size_t, size_t, void *private);

/* Create a Connection */
SEXP R_NewConnection(char *class, char *description, char *mode, 
Rboolean blocking,
     Rc_open, Rc_close, Rc_destroy, Rc_vfprintf, Rc_fgetc, Rc_seek, 
Rc_truncate,
     Rc_fflush, Rc_read, Rc_write, void *private);


/* Swap out the standard C streams. More exotic, but it may clean up the
messy R_ConsoleFile, R_Outputfile, WriteConsole(), WriteConsoleEx(),
etc... confusion. */
Rboolean R_RegisterStdinConnection(SEXP scon);
Rboolean R_RegisterStdoutConnection(SEXP scon);
Rboolean R_RegisterStderrConnection(SEXP scon);

Jeff
-- 
http://biostat.mc.vanderbilt.edu/JeffreyHorner


From mel at altk.com  Thu May 31 09:36:43 2007
From: mel at altk.com (mel)
Date: Thu, 31 May 2007 09:36:43 +0200
Subject: [Rd] Possible changes to connections
In-Reply-To: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
References: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
Message-ID: <465E7B0B.2080005@altk.com>

Prof Brian Ripley a ?crit :

> When I originally implemented connections in R 1.2.0, I followed the model 
> in the 'Green Book' closely.  There were a number of features that forced 
> a particular implementation, and one was getConnection() that allows one 
> to recreate a connection object from a number.

I'm currently using connections (socketConnection(), etc)
and I first want to *thank you* for this nice work.
(imho, it's so much simpler than the underlying C/C++ stuff.)

> I am wondering if anyone makes use of this, and if so for what?

I use getConnection().
In the context in which I use it, the number of the connection is
known a priori.
So getConnection() is an easy way to access to the connection
for the functions which need to.
I do not however pretend this is the best way to proceed.

> It would seem closer to the R philosophy to have connection objects that 
> get garbage collected when no R object refers to them.  This would allow 
> for example
> ... readLines(con <- gzfile("foo.gz")); close(con)
> which is a little awkward but more importantly seems little understood.

There could be/was the same debate in C/C++.
That's may be just a matter of education about not forgetting
to close previously opened doors !

> What I suspect is that very few users are aware of the Green Book 
> description and so we have freedom to make some substantial changes
> to the implementation.  Both issues suggest that connection objects should 
> be based on external pointers (which did not exist way back in 1.2.0).

I'm not skilled enough for any advice here, but from a simple user
point of view, I just hope it could continue to be as simple and
practical as today.
And I renew my thanks for the existing tool (and also the rest !).


From ripley at stats.ox.ac.uk  Thu May 31 18:11:42 2007
From: ripley at stats.ox.ac.uk (Prof Brian Ripley)
Date: Thu, 31 May 2007 17:11:42 +0100 (BST)
Subject: [Rd] Possible changes to connections
In-Reply-To: <465E7B0B.2080005@altk.com>
References: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
	<465E7B0B.2080005@altk.com>
Message-ID: <Pine.LNX.4.64.0705311534280.27499@gannet.stats.ox.ac.uk>

On Thu, 31 May 2007, mel wrote:

> Prof Brian Ripley a ?crit :
>
>> When I originally implemented connections in R 1.2.0, I followed the model
>> in the 'Green Book' closely.  There were a number of features that forced
>> a particular implementation, and one was getConnection() that allows one
>> to recreate a connection object from a number.
>
> I'm currently using connections (socketConnection(), etc)
> and I first want to *thank you* for this nice work.
> (imho, it's so much simpler than the underlying C/C++ stuff.)
>
>> I am wondering if anyone makes use of this, and if so for what?
>
> I use getConnection().
> In the context in which I use it, the number of the connection is
> known a priori.

I don't see how you can know it 'a priori': it is an implementation detail
(and since R itself uses connections, those details could easily change).

> So getConnection() is an easy way to access to the connection
> for the functions which need to.
> I do not however pretend this is the best way to proceed.
>
>> It would seem closer to the R philosophy to have connection objects that
>> get garbage collected when no R object refers to them.  This would allow
>> for example
>> ... readLines(con <- gzfile("foo.gz")); close(con)
>> which is a little awkward but more importantly seems little understood.
>
> There could be/was the same debate in C/C++.
> That's may be just a matter of education about not forgetting
> to close previously opened doors !

When I ran some tests I found 7 packages on CRAN that in their tests were 
not closing connections.  Four of those are maintained by R-core members.
Even though none were by me, I think this is too easy to forget to do!


-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

From sfalcon at fhcrc.org  Thu May 31 19:11:13 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Thu, 31 May 2007 10:11:13 -0700
Subject: [Rd] Possible changes to connections
In-Reply-To: <Pine.LNX.4.64.0705311534280.27499@gannet.stats.ox.ac.uk> (Brian
	Ripley's message of "Thu, 31 May 2007 17:11:42 +0100 (BST)")
References: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
	<465E7B0B.2080005@altk.com>
	<Pine.LNX.4.64.0705311534280.27499@gannet.stats.ox.ac.uk>
Message-ID: <m24plssytq.fsf@ziti.local>


mel writes:
>> There could be/was the same debate in C/C++.
>> That's may be just a matter of education about not forgetting
>> to close previously opened doors !

R is not C/C++.  In general, one does not expect to explicitly handle
memory allocation and release when programming in R.  Treating
connections differently, when there is no longer any technical reason
to do so, is surprising.

Prof Brian Ripley <ripley at stats.ox.ac.uk> writes:
> When I ran some tests I found 7 packages on CRAN that in their tests
> were not closing connections.  Four of those are maintained by R-core
> members.
> Even though none were by me, I think this is too easy to forget to
> do!

I agree that it is easy to forget.  It is especially easy if one
creates so-called anonymous connection references like
readLines(file(path)) -- this anonymous idiom seems nature to me when
coding R and it would be nice to make it work for connections.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From john at johnmaddock.co.uk  Thu May 31 20:04:25 2007
From: john at johnmaddock.co.uk (John Maddock)
Date: Thu, 31 May 2007 19:04:25 +0100
Subject: [Rd] Problems when linking to R shared library
Message-ID: <007501c7a3ae$25c2f840$38540352@fuji>

Folks,

I'm fairly sure that I'm doing something stupid, but I'm getting a few
really strange results from *some* of the distributions, but by no means 
all,
when I link directly to the R shared library.

I've tried this on both Windows with the precompiled Mingw binary of R-2.5.0
(compiling my code with MinGW-3.4.2), and by building R-2.5.0 on Mandriva
Linux with gcc-3.4.4 and --enable-R-shlib.  The actual code is at the end of
the message, but the main cases are:

std::cout << pf(1.5, 2.0, 3.0, 1, 0) << std::endl;

Outputs 1, expect 0.646447

std::cout << pchisq(1.5, 2.0, 1, 0) << std::endl;

Outputs 1, expect 0.527633

std::cout << pgamma(1.5, 2.0, 3.0, 1, 0) << std::endl;

Outputs 1, expect 0.090204

std::cout << ppois(2.0, 5.0, 1, 0) << std::endl;

Outputs 0, expect 0.124652

std::cout << qchisq(0.5, 2.0, 1, 0) << std::endl;

Outputs -0.61379, expect 1.38629

std::cout << qgamma(0.5, 2.0, 3.0, 1, 0) << std::endl;

Outputs 0.0282703, expect 5.03504

I should stress that within the R environment, I *do* get the values I
expect: though sometimes the arguments need adjusting as the C functions
have slightly different argument lists from the R versions.

Also:

std::cout << qpois(0.5, 5.0, 1, 0) << std::endl;

Seems to go into an infinite loop inside qpois, while:

qbeta(0.1, 1e-5, 1e-5, 1, 0);

Raises an access violation inside R: although I should stress that all other
beta quantiles I've tested come out OK.

Anyway, hopefully you can just tell me what an idiot I am :-)

Thanks in advance for any help you can give,

John Maddock.

The complete source code is:

#include <iostream>
#include <iomanip>

extern "C" {
#include "Rmath.h"
}

int main(int argc, const char** argv)
{
  std::cout << pf(1.5, 2.0, 3.0, 1, 0) << std::endl;
  std::cout << pchisq(1.5, 2.0, 1, 0) << std::endl;
  std::cout << pgamma(1.5, 2.0, 3.0, 1, 0) << std::endl;
  std::cout << ppois(2.0, 5.0, 1, 0) << std::endl;
  std::cout << qchisq(0.5, 2.0, 1, 0) << std::endl;
  std::cout << qgamma(0.5, 2.0, 3.0, 1, 0) << std::endl;
  //std::cout << qpois(0.5, 5.0, 1, 0) << std::endl;
  return 0;
}


From deepayan.sarkar at gmail.com  Thu May 31 22:13:54 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Thu, 31 May 2007 13:13:54 -0700
Subject: [Rd] Calling R_PolledEvents from R_CheckUserInterrupt
Message-ID: <eb555e660705311313r75fce3acm4bf7adbdbbee114e@mail.gmail.com>

On 5/5/07, Luke Tierney <luke at stat.uiowa.edu> wrote:

[...]

> However, R_PolledEvents is only called from a limited set of places
> now (including the socket reading code to keep things responsive
> during blocking reads).  But it is not called from the interupt
> checking code, which means if a user does something equivalent to
>
>     while (TRUE) {}
>
> there is not point where events get looked at to see a user interrupt
> action. The current definition of R_CheckUserInterrupt is
>
> void R_CheckUserInterrupt(void)
> {
>      R_CheckStack();
>      /* This is the point where GUI systems need to do enough event
>         processing to determine whether there is a user interrupt event
>         pending.  Need to be careful not to do too much event
>         processing though: if event handlers written in R are allowed
>         to run at this point then we end up with concurrent R
>         evaluations and that can cause problems until we have proper
>         concurrency support. LT */
> #if  ( defined(HAVE_AQUA) || defined(Win32) )
>      R_ProcessEvents();
> #else
>      if (R_interrupts_pending)
>          onintr();
> #endif /* Win32 */
> }
>
> So only on Windows or Mac do we do event processing.  We could add a
> R_PolledEvents() call in the #else bit to support this, though the
> cautions in the comment do need to be kept in mind.

I have been using the following patch to src/main/errors.c for a while
without any obvious ill effects. Could we add this to r-devel (with
necessary changes for Windows, if any)?

-Deepayan

Index: errors.c
===================================================================
--- errors.c    (revision 41764)
+++ errors.c    (working copy)
@@ -39,6 +39,8 @@
 #include <R_ext/GraphicsEngine.h> /* for GEonExit */
 #include <Rmath.h> /* for imax2 */

+#include <R_ext/eventloop.h>
+
 #ifndef min
 #define min(a, b) (a<b?a:b)
 #endif
@@ -117,6 +119,8 @@
 #if  ( defined(HAVE_AQUA) || defined(Win32) )
     R_ProcessEvents();
 #else
+    R_PolledEvents();
     if (R_interrupts_pending)
        onintr();
 #endif /* Win32 */


From deepayan.sarkar at gmail.com  Thu May 31 22:54:44 2007
From: deepayan.sarkar at gmail.com (Deepayan Sarkar)
Date: Thu, 31 May 2007 13:54:44 -0700
Subject: [Rd] feature request for page() and options()
Message-ID: <eb555e660705311354v5648c82fj4c5aca2bf726747f@mail.gmail.com>

Hi,

I have been playing around with a Qt based pager. One of the things I
would like to be able to do is syntax highlighting for R code. This is
mostly relevant with the page function, e.g.

page(ls)

The problem in this case is that the pager has no way of knowing
whether the file it is showing contains R code (e.g. page(,
method="print") need not produce valid R code); the name of the file
is always produced by tempfile("Rpage."), so it looks like
"/tmp/RtmpQfmyH8/Rpage.4a43d33f".

A simple solution is to use an appropriate file extension. Here's a
trivial patch that implements this:

Index: src/library/utils/R/page.R
===================================================================
--- src/library/utils/R/page.R  (revision 41765)
+++ src/library/utils/R/page.R  (working copy)
@@ -19,10 +19,12 @@
     } else {
         subx <- deparse(substitute(x))
     }
-    file <- tempfile("Rpage.")
-    if(match.arg(method) == "dput")
+    if(match.arg(method) == "dput") {
+        file <- sprintf("%s.R", tempfile("Rpage."))
         local.dput(x, file, ...)
+    }
     else {
+        file <- sprintf("%s.txt", tempfile("Rpage."))
         sink(file)
         local.print(x, ...)
         sink()

Unless there is a downside (or a better solution), I would like to see
this feature added.


My second feature request is a bit more involved. options("pager") can
be a function, which is how I have implemented my pager. I would like
options("browser") and options("editor") to behave similarly, i.e. to
have them be settable to functions as well. This seems to allow more
flexibility, be consistent with S philosophy, and there shouldn't be
any incompatibility as the defaults do not change.

This needs changes in a few different places, but if the idea seems
acceptable, I am happy to supply a patch (I have a working
implementation).

-Deepayan


From sfalcon at fhcrc.org  Thu May 31 23:12:26 2007
From: sfalcon at fhcrc.org (Seth Falcon)
Date: Thu, 31 May 2007 14:12:26 -0700
Subject: [Rd] Possible changes to connections
In-Reply-To: <465DF4A3.9000507@vanderbilt.edu> (Jeffrey Horner's message of
	"Wed, 30 May 2007 17:03:15 -0500")
References: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
	<465DF4A3.9000507@vanderbilt.edu>
Message-ID: <m2tztspuit.fsf@ziti.local>

Hi,

One more comment on this thread...

Jeffrey Horner <jeff.horner at vanderbilt.edu> writes:

> Prof Brian Ripley wrote:
>> When I originally implemented connections in R 1.2.0, I followed the model 
>> in the 'Green Book' closely.  There were a number of features that forced 
>> a particular implementation, and one was getConnection() that allows one 
>> to recreate a connection object from a number.
> [...]
>> Another issue is that the current connection objects can be saved and 
>> restored but refer to a global table that is session-specific so they lose 
>> their meaning (and perhaps gain an unintended one).
>> 
>> What I suspect is that very few users are aware of the Green Book 
>> description and so we have freedom to make some substantial changes
>> to the implementation.  Both issues suggest that connection objects should 
>> be based on external pointers (which did not exist way back in 1.2.0).
>
> Sounds great! I would also like to see the following interface (all or 
> in parts) added for working with connections from C. This is an update 
> to the patch I created here:
>
> http://wiki.r-project.org/rwiki/doku.php?id=developers:r_connections_api

I wanted to voice a "me too" for wanting to see an interface added for
working with connections from C in package code.  There are a number
of places where this would be useful and provide cleaner solution than
what is possible today.

The proposed interface looks useful.

+ seth

-- 
Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
http://bioconductor.org


From byron.ellis at gmail.com  Thu May 31 23:43:42 2007
From: byron.ellis at gmail.com (Byron Ellis)
Date: Thu, 31 May 2007 14:43:42 -0700
Subject: [Rd] Possible changes to connections
In-Reply-To: <m2tztspuit.fsf@ziti.local>
References: <Pine.LNX.4.64.0705301726400.11532@gannet.stats.ox.ac.uk>
	<465DF4A3.9000507@vanderbilt.edu> <m2tztspuit.fsf@ziti.local>
Message-ID: <7098abec0705311443x39de1da9yd1ca1032f795f2f0@mail.gmail.com>

Also nice would be the ability to implement connection types from
packages (in much the same way as graphics devices).

On 5/31/07, Seth Falcon <sfalcon at fhcrc.org> wrote:
> Hi,
>
> One more comment on this thread...
>
> Jeffrey Horner <jeff.horner at vanderbilt.edu> writes:
>
> > Prof Brian Ripley wrote:
> >> When I originally implemented connections in R 1.2.0, I followed the model
> >> in the 'Green Book' closely.  There were a number of features that forced
> >> a particular implementation, and one was getConnection() that allows one
> >> to recreate a connection object from a number.
> > [...]
> >> Another issue is that the current connection objects can be saved and
> >> restored but refer to a global table that is session-specific so they lose
> >> their meaning (and perhaps gain an unintended one).
> >>
> >> What I suspect is that very few users are aware of the Green Book
> >> description and so we have freedom to make some substantial changes
> >> to the implementation.  Both issues suggest that connection objects should
> >> be based on external pointers (which did not exist way back in 1.2.0).
> >
> > Sounds great! I would also like to see the following interface (all or
> > in parts) added for working with connections from C. This is an update
> > to the patch I created here:
> >
> > http://wiki.r-project.org/rwiki/doku.php?id=developers:r_connections_api
>
> I wanted to voice a "me too" for wanting to see an interface added for
> working with connections from C in package code.  There are a number
> of places where this would be useful and provide cleaner solution than
> what is possible today.
>
> The proposed interface looks useful.
>
> + seth
>
> --
> Seth Falcon | Computational Biology | Fred Hutchinson Cancer Research Center
> http://bioconductor.org
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
Byron Ellis (byron.ellis at gmail.com)
"Oook" -- The Librarian


From rgentlem at fhcrc.org  Thu May 31 23:48:25 2007
From: rgentlem at fhcrc.org (Robert Gentleman)
Date: Thu, 31 May 2007 14:48:25 -0700
Subject: [Rd] Calling R_PolledEvents from R_CheckUserInterrupt
In-Reply-To: <eb555e660705311313r75fce3acm4bf7adbdbbee114e@mail.gmail.com>
References: <eb555e660705311313r75fce3acm4bf7adbdbbee114e@mail.gmail.com>
Message-ID: <465F42A9.2060807@fhcrc.org>

should be there shortly - I have no way of testing windows (right now, 
at least), so hopefully Duncan M will have time to take a look


Deepayan Sarkar wrote:
> On 5/5/07, Luke Tierney <luke at stat.uiowa.edu> wrote:
> 
> [...]
> 
>> However, R_PolledEvents is only called from a limited set of places
>> now (including the socket reading code to keep things responsive
>> during blocking reads).  But it is not called from the interupt
>> checking code, which means if a user does something equivalent to
>>
>>     while (TRUE) {}
>>
>> there is not point where events get looked at to see a user interrupt
>> action. The current definition of R_CheckUserInterrupt is
>>
>> void R_CheckUserInterrupt(void)
>> {
>>      R_CheckStack();
>>      /* This is the point where GUI systems need to do enough event
>>         processing to determine whether there is a user interrupt event
>>         pending.  Need to be careful not to do too much event
>>         processing though: if event handlers written in R are allowed
>>         to run at this point then we end up with concurrent R
>>         evaluations and that can cause problems until we have proper
>>         concurrency support. LT */
>> #if  ( defined(HAVE_AQUA) || defined(Win32) )
>>      R_ProcessEvents();
>> #else
>>      if (R_interrupts_pending)
>>          onintr();
>> #endif /* Win32 */
>> }
>>
>> So only on Windows or Mac do we do event processing.  We could add a
>> R_PolledEvents() call in the #else bit to support this, though the
>> cautions in the comment do need to be kept in mind.
> 
> I have been using the following patch to src/main/errors.c for a while
> without any obvious ill effects. Could we add this to r-devel (with
> necessary changes for Windows, if any)?
> 
> -Deepayan
> 
> Index: errors.c
> ===================================================================
> --- errors.c    (revision 41764)
> +++ errors.c    (working copy)
> @@ -39,6 +39,8 @@
>  #include <R_ext/GraphicsEngine.h> /* for GEonExit */
>  #include <Rmath.h> /* for imax2 */
> 
> +#include <R_ext/eventloop.h>
> +
>  #ifndef min
>  #define min(a, b) (a<b?a:b)
>  #endif
> @@ -117,6 +119,8 @@
>  #if  ( defined(HAVE_AQUA) || defined(Win32) )
>      R_ProcessEvents();
>  #else
> +    R_PolledEvents();
>      if (R_interrupts_pending)
>         onintr();
>  #endif /* Win32 */
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
> 

-- 
Robert Gentleman, PhD
Program in Computational Biology
Division of Public Health Sciences
Fred Hutchinson Cancer Research Center
1100 Fairview Ave. N, M2-B876
PO Box 19024
Seattle, Washington 98109-1024
206-667-7700
rgentlem at fhcrc.org


From jonathan at swintons.net  Thu May 31 19:16:10 2007
From: jonathan at swintons.net (Jonathan Swinton)
Date: Thu, 31 May 2007 17:16:10 +0000 (UTC)
Subject: [Rd] Problem  building R from source on Windows
Message-ID: <loom.20070531T173140-968@post.gmane.org>


I have a problem when building R from source on Windows XP.

When I get to 3.1.3 of the Installation and Administration manual and try
 make all recommended
from R_HOME it fails with 
 make: *** No rule to make target `all'.  Stop.

I am pretty sure there is an obvious and well documented thing I am missing,
but missing it I am. Any clues?

Is my problem that I have a Makefile.in but not a Makefile? Have I understood
section 3.1.3 correctly that no ./configure step is needed? Although my reading
of the I&A manual is that no ./configure step is needed under Windows, I did
wonder and tried running
 sh ./configure
but that failed with 
 chmod: not found
 chmod: not found
 chmod: not found
 configure: error: cannot create configure.lineno; rerun with a POSIX shell


make is GNU make 3.79.1; I don't know how to identify which sh it is but it is
the one in the Rtools\bin directory.

I having downloaded all the tools listed in Appendix E (save InnoSetup) and
installed them and set my path to be:

PATH=c:\Rtools\bin;C:\Perl\bin\;c:\Rtools\MinGW\bin;c:\progra~1\htmhe~1;C:\Progr
am Files\MiKTeX 2.6\miktex\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System3
2\Wbem;C:\Program Files\Subversion\bin


